#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RacePlayerController

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function BP_RacePlayerController.BP_RacePlayerController_C.ExecuteUbergraph_BP_RacePlayerController
// 0x07B0 (0x07B0 - 0x0000)
struct BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_14;                  // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_14;          // 0x0020(0x0020)(NoDestructor)
	struct FInputActionValue                      Temp_struct_Variable;                              // 0x0040(0x0020)(NoDestructor)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_13;                  // 0x0078(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_13;          // 0x0090(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_12;                  // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_12;          // 0x00C8(0x0020)(NoDestructor)
	struct FInputActionValue                      Temp_struct_Variable_2;                            // 0x00E8(0x0020)(NoDestructor)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0108(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_11;                  // 0x0120(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_11;          // 0x0138(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_10;                  // 0x0158(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_10;          // 0x0170(0x0020)(NoDestructor)
	struct FInputActionValue                      Temp_struct_Variable_4;                            // 0x0190(0x0020)(NoDestructor)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x01B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_9;                   // 0x01C8(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_9;           // 0x01E0(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_8;                   // 0x0200(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_8;           // 0x0218(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_7;                   // 0x0238(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_7;           // 0x0250(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_6;                   // 0x0270(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_6;           // 0x0288(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_5;                   // 0x02A8(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_5;           // 0x02C0(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_4;                   // 0x02E0(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_4;           // 0x02F8(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_3;                   // 0x0318(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_3;           // 0x0330(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_2;                   // 0x0350(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_2;           // 0x0368(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_1;                   // 0x0388(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_1;           // 0x03A0(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key;                     // 0x03C0(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue;             // 0x03D8(0x0020)(NoDestructor)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_15;                  // 0x0400(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_15;          // 0x0418(0x0020)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43A[0x6];                                      // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_6;                            // 0x0440(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_18;                  // 0x0460(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_18;          // 0x0478(0x0020)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxRaceCount_ReturnValue;              // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_1;            // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2[0x2];                                      // 0x04A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxRaceCount_ReturnValue_1;            // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      Temp_struct_Variable_7;                            // 0x04B0(0x0020)(NoDestructor)
	int32                                         CallFunc_GetMaxRaceCount_ReturnValue_2;            // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_16;                  // 0x04D8(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_16;          // 0x04F0(0x0020)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetLastHoveredObject_ReturnValue;         // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetRegisteredMenu_ReturnValue;            // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0558(0x0010)()
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0578(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAppControllerInputType                       CallFunc_GetCurrentInputType_ReturnValue;          // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x05D8(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x05E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x05F8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0640(0x0010)()
	ERacePlayerControllerSubMode                  CallFunc_GetSubMode_ReturnValue;                   // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0658(0x0048)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x06A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x06B8(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_17;                  // 0x06D0(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_17;          // 0x06E8(0x0020)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BT_IsLibraryInitialized_ReturnValue;      // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BT_IsLibraryInitialized_ReturnValue_1;    // 0x070A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x070B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x070C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x070D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x070E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70F[0x1];                                      // 0x070F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_19;                  // 0x0710(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_19;          // 0x0728(0x0020)(NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x074A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x074B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D[0x3];                                      // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_20;                  // 0x0750(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_20;          // 0x0768(0x0020)(NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_2;            // 0x078A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_3;            // 0x078B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_4;            // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_5;            // 0x078D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_6;            // 0x078E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x078F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDebugImportantLogSubsystem*            CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionDebugStringSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_7;            // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_8;            // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_9;            // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController");
static_assert(sizeof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController) == 0x0007B0, "Wrong size on BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, EntryPoint) == 0x000000, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_14) == 0x000008, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_14) == 0x000020, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_14' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable) == 0x000040, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_1) == 0x000060, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_13) == 0x000078, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_13) == 0x000090, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_13' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_12) == 0x0000B0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_12) == 0x0000C8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_12' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_2) == 0x0000E8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_3) == 0x000108, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_11) == 0x000120, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_11) == 0x000138, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_11' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_10) == 0x000158, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_10) == 0x000170, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_10' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_4) == 0x000190, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_5) == 0x0001B0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_9) == 0x0001C8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_9) == 0x0001E0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_9' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_8) == 0x000200, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_8) == 0x000218, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_8' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_7) == 0x000238, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_7) == 0x000250, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_7' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_6) == 0x000270, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_6) == 0x000288, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_6' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_5) == 0x0002A8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_5) == 0x0002C0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_4) == 0x0002E0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_4) == 0x0002F8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_3) == 0x000318, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_3) == 0x000330, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_2) == 0x000350, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_2) == 0x000368, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_1) == 0x000388, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_1) == 0x0003A0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key) == 0x0003C0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue) == 0x0003D8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue) == 0x0003F8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_15) == 0x000400, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_15) == 0x000418, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_15' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_bool_Variable) == 0x000438, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x000439, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_6) == 0x000440, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_bool_Variable_1) == 0x000458, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_18) == 0x000460, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_18' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_18) == 0x000478, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_18' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_1) == 0x000498, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetMaxRaceCount_ReturnValue) == 0x00049C, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetMaxRaceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_Event_EndPlayReason) == 0x0004A0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_1) == 0x0004A1, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetMaxRaceCount_ReturnValue_1) == 0x0004A4, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetMaxRaceCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Greater_IntInt_ReturnValue) == 0x0004A8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_struct_Variable_7) == 0x0004B0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetMaxRaceCount_ReturnValue_2) == 0x0004D0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetMaxRaceCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_16) == 0x0004D8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_16' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_16) == 0x0004F0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_16' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Subtract_IntInt_ReturnValue) == 0x000510, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsPlayInEditor_ReturnValue) == 0x000514, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetLastHoveredObject_ReturnValue) == 0x000518, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetLastHoveredObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsValid_ReturnValue) == 0x000520, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetObjectName_ReturnValue) == 0x000528, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetRegisteredMenu_ReturnValue) == 0x000538, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetRegisteredMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_SelectString_ReturnValue) == 0x000540, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsValid_ReturnValue_1) == 0x000550, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Conv_StringToText_ReturnValue) == 0x000558, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetObjectName_ReturnValue_1) == 0x000568, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_MakeStruct_FormatArgumentData) == 0x000578, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_SelectString_ReturnValue_1) == 0x0005C0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetCurrentInputType_ReturnValue) == 0x0005D0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0005D8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0005E8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_MakeStruct_FormatArgumentData_1) == 0x0005F8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000640, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetSubMode_ReturnValue) == 0x000650, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetSubMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_MakeStruct_FormatArgumentData_2) == 0x000658, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_SwitchEnum_CmpSuccess) == 0x0006A0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_MakeArray_Array) == 0x0006A8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Format_ReturnValue) == 0x0006B8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BooleanAND_ReturnValue) == 0x0006C8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_17) == 0x0006D0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_17' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_17) == 0x0006E8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_17' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BooleanAND_ReturnValue_1) == 0x000708, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BT_IsLibraryInitialized_ReturnValue) == 0x000709, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BT_IsLibraryInitialized_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BT_IsLibraryInitialized_ReturnValue_1) == 0x00070A, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BT_IsLibraryInitialized_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_bool_Variable_2) == 0x00070B, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BooleanAND_ReturnValue_2) == 0x00070C, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_2) == 0x00070D, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_3) == 0x00070E, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_19) == 0x000710, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_19' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_19) == 0x000728, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_19' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_bool_Variable_3) == 0x000748, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_bool_Variable_4) == 0x000749, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_4) == 0x00074A, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_5) == 0x00074B, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_6) == 0x00074C, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_Key_20) == 0x000750, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_Key_20' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, K2Node_InputDebugKeyEvent_ActionValue_20) == 0x000768, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::K2Node_InputDebugKeyEvent_ActionValue_20' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, Temp_bool_Variable_5) == 0x000788, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_Not_PreBool_ReturnValue_7) == 0x000789, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_2) == 0x00078A, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_3) == 0x00078B, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_4) == 0x00078C, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_5) == 0x00078D, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_6) == 0x00078E, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BooleanAND_ReturnValue_3) == 0x00078F, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BooleanAND_ReturnValue_4) == 0x000790, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_BooleanAND_ReturnValue_5) == 0x000791, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000798, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0007A0, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_7) == 0x0007A8, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_8) == 0x0007A9, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController, CallFunc_IsShippingBuild_ReturnValue_9) == 0x0007AA, "Member 'BP_RacePlayerController_C_ExecuteUbergraph_BP_RacePlayerController::CallFunc_IsShippingBuild_ReturnValue_9' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_0::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_B_K2Node_InputDebugKeyEvent_5
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_B_K2Node_InputDebugKeyEvent_5::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Ctrl_G_K2Node_InputDebugKeyEvent_1::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_F9_K2Node_InputDebugKeyEvent_10
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_10::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_F9_K2Node_InputDebugKeyEvent_11
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_F9_K2Node_InputDebugKeyEvent_11::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_F_K2Node_InputDebugKeyEvent_3
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_F_K2Node_InputDebugKeyEvent_3::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_G_K2Node_InputDebugKeyEvent_20
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_G_K2Node_InputDebugKeyEvent_20::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_16::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_17::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_14::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_15::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_12::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputDebugKeyEvent_13::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_LeftControl_K2Node_InputDebugKeyEvent_8::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_LeftShift_K2Node_InputDebugKeyEvent_9::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_M_K2Node_InputDebugKeyEvent_7
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_M_K2Node_InputDebugKeyEvent_7::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_N_K2Node_InputDebugKeyEvent_6
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_N_K2Node_InputDebugKeyEvent_6::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_P_K2Node_InputDebugKeyEvent_19
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_P_K2Node_InputDebugKeyEvent_19::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Period_K2Node_InputDebugKeyEvent_18
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Period_K2Node_InputDebugKeyEvent_18::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Shift_G_K2Node_InputDebugKeyEvent_2::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.InpActEvt_Six_K2Node_InputDebugKeyEvent_4
// 0x0038 (0x0038 - 0x0000)
struct BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4");
static_assert(sizeof(BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4) == 0x000038, "Wrong size on BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4, Key) == 0x000000, "Member 'BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4::Key' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4, ActionValue) == 0x000018, "Member 'BP_RacePlayerController_C_InpActEvt_Six_K2Node_InputDebugKeyEvent_4::ActionValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_RacePlayerController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RacePlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_RacePlayerController_C_ReceiveEndPlay");
static_assert(sizeof(BP_RacePlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_RacePlayerController_C_ReceiveEndPlay");
static_assert(offsetof(BP_RacePlayerController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_RacePlayerController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.IsFadeClear
// 0x0018 (0x0018 - 0x0000)
struct BP_RacePlayerController_C_IsFadeClear final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUITransitionManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingFade_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RacePlayerController_C_IsFadeClear) == 0x000008, "Wrong alignment on BP_RacePlayerController_C_IsFadeClear");
static_assert(sizeof(BP_RacePlayerController_C_IsFadeClear) == 0x000018, "Wrong size on BP_RacePlayerController_C_IsFadeClear");
static_assert(offsetof(BP_RacePlayerController_C_IsFadeClear, ReturnValue) == 0x000000, "Member 'BP_RacePlayerController_C_IsFadeClear::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_IsFadeClear, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_RacePlayerController_C_IsFadeClear::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_IsFadeClear, CallFunc_IsPlayingFade_ReturnValue) == 0x000010, "Member 'BP_RacePlayerController_C_IsFadeClear::CallFunc_IsPlayingFade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_IsFadeClear, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_RacePlayerController_C_IsFadeClear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_IsFadeClear, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_RacePlayerController_C_IsFadeClear::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.OnIsMenuInputEnabled
// 0x0002 (0x0002 - 0x0000)
struct BP_RacePlayerController_C_OnIsMenuInputEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeClear_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RacePlayerController_C_OnIsMenuInputEnabled) == 0x000001, "Wrong alignment on BP_RacePlayerController_C_OnIsMenuInputEnabled");
static_assert(sizeof(BP_RacePlayerController_C_OnIsMenuInputEnabled) == 0x000002, "Wrong size on BP_RacePlayerController_C_OnIsMenuInputEnabled");
static_assert(offsetof(BP_RacePlayerController_C_OnIsMenuInputEnabled, ReturnValue) == 0x000000, "Member 'BP_RacePlayerController_C_OnIsMenuInputEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_OnIsMenuInputEnabled, CallFunc_IsFadeClear_ReturnValue) == 0x000001, "Member 'BP_RacePlayerController_C_OnIsMenuInputEnabled::CallFunc_IsFadeClear_ReturnValue' has a wrong offset!");

// Function BP_RacePlayerController.BP_RacePlayerController_C.OnIsSubMenuInputEnabled
// 0x0002 (0x0002 - 0x0000)
struct BP_RacePlayerController_C_OnIsSubMenuInputEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeClear_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RacePlayerController_C_OnIsSubMenuInputEnabled) == 0x000001, "Wrong alignment on BP_RacePlayerController_C_OnIsSubMenuInputEnabled");
static_assert(sizeof(BP_RacePlayerController_C_OnIsSubMenuInputEnabled) == 0x000002, "Wrong size on BP_RacePlayerController_C_OnIsSubMenuInputEnabled");
static_assert(offsetof(BP_RacePlayerController_C_OnIsSubMenuInputEnabled, ReturnValue) == 0x000000, "Member 'BP_RacePlayerController_C_OnIsSubMenuInputEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RacePlayerController_C_OnIsSubMenuInputEnabled, CallFunc_IsFadeClear_ReturnValue) == 0x000001, "Member 'BP_RacePlayerController_C_OnIsSubMenuInputEnabled::CallFunc_IsFadeClear_ReturnValue' has a wrong offset!");

}

