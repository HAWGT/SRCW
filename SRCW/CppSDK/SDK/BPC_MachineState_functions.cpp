#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MachineState

#include "Basic.hpp"

#include "BPC_MachineState_classes.hpp"
#include "BPC_MachineState_parameters.hpp"


namespace SDK
{

// Function BPC_MachineState.BPC_MachineState_C.BindCharaMachineSelectWindow
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UCharaMachineSelectBase*          InWindow                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::BindCharaMachineSelectWindow(class UCharaMachineSelectBase* InWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "BindCharaMachineSelectWindow");

	Params::BPC_MachineState_C_BindCharaMachineSelectWindow Parms{};

	Parms.InWindow = InWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.BindColorWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_MachineCustom_Sub_PresetPaint_C*InColorWindow                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::BindColorWindow(class UWBP_MachineCustom_Sub_PresetPaint_C* InColorWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "BindColorWindow");

	Params::BPC_MachineState_C_BindColorWindow Parms{};

	Parms.InColorWindow = InColorWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.BindMachineTypeSelectWindow
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMachineTypeScrollControl*        InMachineTypeSelectWindow                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::BindMachineTypeSelectWindow(class UMachineTypeScrollControl* InMachineTypeSelectWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "BindMachineTypeSelectWindow");

	Params::BPC_MachineState_C_BindMachineTypeSelectWindow Parms{};

	Parms.InMachineTypeSelectWindow = InMachineTypeSelectWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_ColorDecisionButtonFocusEvent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_ColorDecisionButtonFocusEvent(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_ColorDecisionButtonFocusEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorCancelEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachineColorCancelEvent(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachineColorCancelEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorDecisionEvent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachineColorDecisionEvent(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachineColorDecisionEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorFocusEvent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_ColorPresetSelectPageItemData&ColorPreset                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachineColorFocusEvent(const struct FST_ColorPresetSelectPageItemData& ColorPreset, int32 PlayerIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachineColorFocusEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent Parms{};

	Parms.ColorPreset = std::move(ColorPreset);
	Parms.PlayerIndex = PlayerIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorSelectEvent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_ColorPresetSelectPageItemData&ColorPreset                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachineColorSelectEvent(const struct FST_ColorPresetSelectPageItemData& ColorPreset, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachineColorSelectEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent Parms{};

	Parms.ColorPreset = std::move(ColorPreset);
	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsCancelEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachinePartsCancelEvent(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachinePartsCancelEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsDecisionEvent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachinePartsDecisionEvent(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachinePartsDecisionEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsFocusEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              FrontPartsId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              RearPartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              TirePartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachinePartsFocusEvent(int32 PlayerIndex, EMachineId FrontPartsId, EMachineId RearPartsId, EMachineId TirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachinePartsFocusEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.FrontPartsId = FrontPartsId;
	Parms.RearPartsId = RearPartsId;
	Parms.TirePartsId = TirePartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsSelectEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              FrontPartsId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              RearPartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              TirePartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachinePartsSelectEvent(int32 PlayerIndex, EMachineId FrontPartsId, EMachineId RearPartsId, EMachineId TirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachinePartsSelectEvent");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.FrontPartsId = FrontPartsId;
	Parms.RearPartsId = RearPartsId;
	Parms.TirePartsId = TirePartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineSelectModeChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// UNION::EMachineSelectMode               Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::CharaMachineSelect_OnMachineSelectModeChanged(int32 PlayerIndex, UNION::EMachineSelectMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "CharaMachineSelect_OnMachineSelectModeChanged");

	Params::BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.DecideMachine
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::DecideMachine(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "DecideMachine");

	Params::BPC_MachineState_C_DecideMachine Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.ExecuteUbergraph_BPC_MachineState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::ExecuteUbergraph_BPC_MachineState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "ExecuteUbergraph_BPC_MachineState");

	Params::BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.OnExitState
// (Event, Public, BlueprintEvent)

void UBPC_MachineState_C::OnExitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "OnExitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineState.BPC_MachineState_C.OnInitState
// (Event, Public, BlueprintEvent)

void UBPC_MachineState_C::OnInitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "OnInitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeCancelCallback
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectedPlayerControllerIndex                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::OnMachineTypeCancelCallback(int32 SelectedPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "OnMachineTypeCancelCallback");

	Params::BPC_MachineState_C_OnMachineTypeCancelCallback Parms{};

	Parms.SelectedPlayerControllerIndex = SelectedPlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeDecideCallback
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectedPlayerControllerIndex                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType                          SelectedMachineType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              SelectedBaseMachineId                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::OnMachineTypeDecideCallback(int32 SelectedPlayerControllerIndex, ECarStatusType SelectedMachineType, EMachineId SelectedBaseMachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "OnMachineTypeDecideCallback");

	Params::BPC_MachineState_C_OnMachineTypeDecideCallback Parms{};

	Parms.SelectedPlayerControllerIndex = SelectedPlayerControllerIndex;
	Parms.SelectedMachineType = SelectedMachineType;
	Parms.SelectedBaseMachineId = SelectedBaseMachineId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeFocusEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::OnMachineTypeFocusEvent(class UUnionUIButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "OnMachineTypeFocusEvent");

	Params::BPC_MachineState_C_OnMachineTypeFocusEvent Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeScrollEndCallback
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectedPlayerControllerIndex                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType                          SelectedMachineType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              SelectedBaseMachineId                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::OnMachineTypeScrollEndCallback(int32 SelectedPlayerControllerIndex, ECarStatusType SelectedMachineType, EMachineId SelectedBaseMachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "OnMachineTypeScrollEndCallback");

	Params::BPC_MachineState_C_OnMachineTypeScrollEndCallback Parms{};

	Parms.SelectedPlayerControllerIndex = SelectedPlayerControllerIndex;
	Parms.SelectedMachineType = SelectedMachineType;
	Parms.SelectedBaseMachineId = SelectedBaseMachineId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "ReceiveTick");

	Params::BPC_MachineState_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.SetupMachineColorSelectWindow
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::SetupMachineColorSelectWindow(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "SetupMachineColorSelectWindow");

	Params::BPC_MachineState_C_SetupMachineColorSelectWindow Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.ShouldShowSimpleCustomizeTipsWindow
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bOutShouldShow                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::ShouldShowSimpleCustomizeTipsWindow(bool* bOutShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "ShouldShowSimpleCustomizeTipsWindow");

	Params::BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutShouldShow != nullptr)
		*bOutShouldShow = Parms.bOutShouldShow;
}


// Function BPC_MachineState.BPC_MachineState_C.ShowTipsWindow
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHintId                                 InHintId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::ShowTipsWindow(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "ShowTipsWindow");

	Params::BPC_MachineState_C_ShowTipsWindow Parms{};

	Parms.InHintId = InHintId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.TipsWindow_CloseEndDelegate
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineState_C::TipsWindow_CloseEndDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "TipsWindow_CloseEndDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineState.BPC_MachineState_C.UnbindCharaMachineSelectWindow
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UCharaMachineSelectBase*          InWindow                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::UnbindCharaMachineSelectWindow(class UCharaMachineSelectBase* InWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "UnbindCharaMachineSelectWindow");

	Params::BPC_MachineState_C_UnbindCharaMachineSelectWindow Parms{};

	Parms.InWindow = InWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.UnbindColorWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_MachineCustom_Sub_PresetPaint_C*InColorWindow                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::UnbindColorWindow(class UWBP_MachineCustom_Sub_PresetPaint_C* InColorWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "UnbindColorWindow");

	Params::BPC_MachineState_C_UnbindColorWindow Parms{};

	Parms.InColorWindow = InColorWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.UnbindMachineTypeSelectWindow
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMachineTypeScrollControl*        InMachineTypeSelectWindow                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::UnbindMachineTypeSelectWindow(class UMachineTypeScrollControl* InMachineTypeSelectWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "UnbindMachineTypeSelectWindow");

	Params::BPC_MachineState_C_UnbindMachineTypeSelectWindow Parms{};

	Parms.InMachineTypeSelectWindow = InMachineTypeSelectWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.UpdateNavigationSimpleCustomizeColor
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::UpdateNavigationSimpleCustomizeColor(int32 ButtonIndex, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "UpdateNavigationSimpleCustomizeColor");

	Params::BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor Parms{};

	Parms.ButtonIndex = ButtonIndex;
	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineState.BPC_MachineState_C.UpdateRemainTime
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineState_C::UpdateRemainTime(int32 InPlayerIndex, double InDeltaTime, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineState_C", "UpdateRemainTime");

	Params::BPC_MachineState_C_UpdateRemainTime Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

