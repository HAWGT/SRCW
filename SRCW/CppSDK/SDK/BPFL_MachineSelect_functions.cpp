#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_MachineSelect

#include "Basic.hpp"

#include "BPFL_MachineSelect_classes.hpp"
#include "BPFL_MachineSelect_parameters.hpp"


namespace SDK
{

// Function BPFL_MachineSelect.BPFL_MachineSelect_C.CalcMachineTypeByMachineId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachineId                              MachineId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ECarStatusType*                         StatusType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::CalcMachineTypeByMachineId(EMachineId MachineId, class UObject* __WorldContext, ECarStatusType* StatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "CalcMachineTypeByMachineId");

	Params::BPFL_MachineSelect_C_CalcMachineTypeByMachineId Parms{};

	Parms.MachineId = MachineId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (StatusType != nullptr)
		*StatusType = Parms.StatusType;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.CalcMachineTypeByRom1stMachineId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERom1stMachineId                        Rom1stMachineId                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ECarStatusType*                         StatusType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::CalcMachineTypeByRom1stMachineId(ERom1stMachineId Rom1stMachineId, class UObject* __WorldContext, ECarStatusType* StatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "CalcMachineTypeByRom1stMachineId");

	Params::BPFL_MachineSelect_C_CalcMachineTypeByRom1stMachineId Parms{};

	Parms.Rom1stMachineId = Rom1stMachineId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (StatusType != nullptr)
		*StatusType = Parms.StatusType;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.CanSelectCharaAndHover
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const EDriverId&                        InCheckDriverId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bCanUse                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bDontUsedHover                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::CanSelectCharaAndHover(const EDriverId& InCheckDriverId, class UObject* __WorldContext, bool* bCanUse, bool* bDontUsedHover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "CanSelectCharaAndHover");

	Params::BPFL_MachineSelect_C_CanSelectCharaAndHover Parms{};

	Parms.InCheckDriverId = InCheckDriverId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bCanUse != nullptr)
		*bCanUse = Parms.bCanUse;

	if (bDontUsedHover != nullptr)
		*bDontUsedHover = Parms.bDontUsedHover;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.ConvertRom1stTypeIndexToMachineId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECarStatusType                          machineType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TypeCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMachineId*                             MachineId                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::ConvertRom1stTypeIndexToMachineId(ECarStatusType machineType, int32 Index_0, int32 TypeCount, class UObject* __WorldContext, EMachineId* MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "ConvertRom1stTypeIndexToMachineId");

	Params::BPFL_MachineSelect_C_ConvertRom1stTypeIndexToMachineId Parms{};

	Parms.machineType = machineType;
	Parms.Index_0 = Index_0;
	Parms.TypeCount = TypeCount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MachineId != nullptr)
		*MachineId = Parms.MachineId;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.ConvertTypeIndexToMachineId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECarStatusType                          machineType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMachineId*                             MachineId                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::ConvertTypeIndexToMachineId(ECarStatusType machineType, int32 Index_0, class UObject* __WorldContext, EMachineId* MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "ConvertTypeIndexToMachineId");

	Params::BPFL_MachineSelect_C_ConvertTypeIndexToMachineId Parms{};

	Parms.machineType = machineType;
	Parms.Index_0 = Index_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MachineId != nullptr)
		*MachineId = Parms.MachineId;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.GetRom1stMachineCountPerType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECarStatusType                          StatusType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::GetRom1stMachineCountPerType(ECarStatusType StatusType, class UObject* __WorldContext, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "GetRom1stMachineCountPerType");

	Params::BPFL_MachineSelect_C_GetRom1stMachineCountPerType Parms{};

	Parms.StatusType = StatusType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.GetRom1stMachineIdByMachineId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachineId                              InMachineID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  OnestMAchineIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::GetRom1stMachineIdByMachineId(EMachineId InMachineID, class UObject* __WorldContext, int32* OnestMAchineIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "GetRom1stMachineIdByMachineId");

	Params::BPFL_MachineSelect_C_GetRom1stMachineIdByMachineId Parms{};

	Parms.InMachineID = InMachineID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OnestMAchineIndex != nullptr)
		*OnestMAchineIndex = Parms.OnestMAchineIndex;
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.GetRom1stMachineName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Rom1stIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            MachineNameText                                        (Parm, OutParm)

void UBPFL_MachineSelect_C::GetRom1stMachineName(int32 Rom1stIndex, class UObject* __WorldContext, class FText* MachineNameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "GetRom1stMachineName");

	Params::BPFL_MachineSelect_C_GetRom1stMachineName Parms{};

	Parms.Rom1stIndex = Rom1stIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MachineNameText != nullptr)
		*MachineNameText = std::move(Parms.MachineNameText);
}


// Function BPFL_MachineSelect.BPFL_MachineSelect_C.GetTypeIndexFromRom1stId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Rom1stId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  TypeIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_MachineSelect_C::GetTypeIndexFromRom1stId(int32 Rom1stId, class UObject* __WorldContext, int32* TypeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MachineSelect_C", "GetTypeIndexFromRom1stId");

	Params::BPFL_MachineSelect_C_GetTypeIndexFromRom1stId Parms{};

	Parms.Rom1stId = Rom1stId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TypeIndex != nullptr)
		*TypeIndex = Parms.TypeIndex;
}

}

