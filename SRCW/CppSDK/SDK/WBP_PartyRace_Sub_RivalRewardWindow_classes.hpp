#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PartyRace_Sub_RivalRewardWindow

#include "Basic.hpp"

#include "UNION_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PartyRace_Sub_RivalRewardWindow.WBP_PartyRace_Sub_RivalRewardWindow_C
// 0x00A8 (0x0410 - 0x0368)
class UWBP_PartyRace_Sub_RivalRewardWindow_C final : public UPartyRaceRivalResultProgressWidget
{
public:
	class UImage*                                 base;                                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Flag;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Reward;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Text;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Check;                                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_01;                                            // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_02;                                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_03;                                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_01;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_02;                                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_ClearConditions;                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_ClearReward;                                   // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_ConditionsDetail_01;                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      TXT_Num_Item;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WindowTitle;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_ItemIcon_C*                    WBP_CMN_ItemIcon;                                  // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PartyRace_Sub_RivalReward_Stamp_C* WBP_PartyRace_Sub_RivalReward_Stamp;               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PartyRace_Sub_RivalReward_Stamp_C* WBP_PartyRace_Sub_RivalReward_Stamp_1;             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PartyRace_Sub_RivalReward_Stamp_C* WBP_PartyRace_Sub_RivalReward_Stamp_01;            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PartyRace_Sub_RivalReward_Stamp_C* WBP_PartyRace_Sub_RivalReward_Stamp_02;            // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PartyRace_Sub_RivalReward_Stamp_C* WBP_PartyRace_Sub_RivalReward_Stamp_03;            // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PartyRace_Sub_RivalRewardWindow_C">();
	}
	static class UWBP_PartyRace_Sub_RivalRewardWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PartyRace_Sub_RivalRewardWindow_C>();
	}
};
static_assert(alignof(UWBP_PartyRace_Sub_RivalRewardWindow_C) == 0x000008, "Wrong alignment on UWBP_PartyRace_Sub_RivalRewardWindow_C");
static_assert(sizeof(UWBP_PartyRace_Sub_RivalRewardWindow_C) == 0x000410, "Wrong size on UWBP_PartyRace_Sub_RivalRewardWindow_C");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, base) == 0x000368, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Base_Flag) == 0x000370, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Base_Flag' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Base_Reward) == 0x000378, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Base_Reward' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Base_Text) == 0x000380, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Base_Text' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Check) == 0x000388, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Check' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Eff_01) == 0x000390, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Eff_01' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Eff_02) == 0x000398, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Eff_02' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Eff_03) == 0x0003A0, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Eff_03' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Line_01) == 0x0003A8, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Line_01' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, Line_02) == 0x0003B0, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::Line_02' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, TXT_ClearConditions) == 0x0003B8, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::TXT_ClearConditions' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, TXT_ClearReward) == 0x0003C0, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::TXT_ClearReward' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, TXT_ConditionsDetail_01) == 0x0003C8, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::TXT_ConditionsDetail_01' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, TXT_Num_Item) == 0x0003D0, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::TXT_Num_Item' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, TXT_WindowTitle) == 0x0003D8, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::TXT_WindowTitle' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, WBP_CMN_ItemIcon) == 0x0003E0, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::WBP_CMN_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, WBP_PartyRace_Sub_RivalReward_Stamp) == 0x0003E8, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::WBP_PartyRace_Sub_RivalReward_Stamp' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, WBP_PartyRace_Sub_RivalReward_Stamp_1) == 0x0003F0, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::WBP_PartyRace_Sub_RivalReward_Stamp_1' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, WBP_PartyRace_Sub_RivalReward_Stamp_01) == 0x0003F8, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::WBP_PartyRace_Sub_RivalReward_Stamp_01' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, WBP_PartyRace_Sub_RivalReward_Stamp_02) == 0x000400, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::WBP_PartyRace_Sub_RivalReward_Stamp_02' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalRewardWindow_C, WBP_PartyRace_Sub_RivalReward_Stamp_03) == 0x000408, "Member 'UWBP_PartyRace_Sub_RivalRewardWindow_C::WBP_PartyRace_Sub_RivalReward_Stamp_03' has a wrong offset!");

}

