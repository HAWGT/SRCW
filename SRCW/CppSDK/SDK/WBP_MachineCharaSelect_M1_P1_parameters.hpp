#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MachineCharaSelect_M1_P1

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.ColorWindowOverrideNavigationRule
// 0x0018 (0x0018 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule final
{
public:
	class UMachineColorSelectWindow*              CallFunc_GetColorWindow_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_ColorWindow_C*   K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule) == 0x000018, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule, CallFunc_GetColorWindow_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule::CallFunc_GetColorWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window) == 0x000008, "Member 'WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window' has a wrong offset!");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_MachineCharaSelect_M1_P1_C_ColorWindowOverrideNavigationRule::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.PlayAnimCharaSelect
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_PlayAnimCharaSelect::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.PlayAnimIn
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_PlayAnimIn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.PlayAnimLoop
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_PlayAnimLoop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.PlayAnimMachineType
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_PlayAnimMachineType::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.PlayAnimOut
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_PlayAnimOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1_P1.WBP_MachineCharaSelect_M1_P1_C.GetCharacterSkinWindow
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow final
{
public:
	class UWindowCharaChange*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow");
static_assert(sizeof(WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow");
static_assert(offsetof(WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow, ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_P1_C_GetCharacterSkinWindow::ReturnValue' has a wrong offset!");

}

