#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TitleSequence

#include "Basic.hpp"

#include "BP_TitleSequence_classes.hpp"
#include "BP_TitleSequence_parameters.hpp"


namespace SDK
{

// Function BP_TitleSequence.BP_TitleSequence_C.BindMouseClicked
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::BindMouseClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "BindMouseClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.BindMouseEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_TitleMenu_C*                 TitleMenu                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::BindMouseEvent(class UWBP_TitleMenu_C* TitleMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "BindMouseEvent");

	Params::BP_TitleSequence_C_BindMouseEvent Parms{};

	Parms.TitleMenu = TitleMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.CheckPlatform_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::CheckPlatform_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "CheckPlatform_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::CustomEvent(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "CustomEvent");

	Params::BP_TitleSequence_C_CustomEvent Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.DecisionStoreEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsAccept                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::DecisionStoreEvent(bool IsAccept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "DecisionStoreEvent");

	Params::BP_TitleSequence_C_DecisionStoreEvent Parms{};

	Parms.IsAccept = IsAccept;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.EnableInputPlayerController
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              Enable                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::EnableInputPlayerController(const bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "EnableInputPlayerController");

	Params::BP_TitleSequence_C_EnableInputPlayerController Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.EndCheckPlatform_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::EndCheckPlatform_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "EndCheckPlatform_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.EventFinishedFade
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::EventFinishedFade(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "EventFinishedFade");

	Params::BP_TitleSequence_C_EventFinishedFade Parms{};

	Parms.FadeDirection = FadeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.EventInputDisableEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::EventInputDisableEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "EventInputDisableEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.EventLeftStickAxis
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::EventLeftStickAxis(class UObject* Object, const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "EventLeftStickAxis");

	Params::BP_TitleSequence_C_EventLeftStickAxis Parms{};

	Parms.Object = Object;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.ExecuteUbergraph_BP_TitleSequence
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::ExecuteUbergraph_BP_TitleSequence(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "ExecuteUbergraph_BP_TitleSequence");

	Params::BP_TitleSequence_C_ExecuteUbergraph_BP_TitleSequence Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinalizeTitleSequence
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinalizeTitleSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinalizeTitleSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedInputTitleTop_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedInputTitleTop_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedInputTitleTop_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedLicenseOutAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedLicenseOutAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedLicenseOutAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedLogosOutAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedLogosOutAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedLogosOutAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedOnLoginResult_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableOnlinePlay                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRequestedSequenceBlock                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::FinishedOnLoginResult_Event(bool IsSuccess, bool IsEnableOnlinePlay, bool IsRequestedSequenceBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedOnLoginResult_Event");

	Params::BP_TitleSequence_C_FinishedOnLoginResult_Event Parms{};

	Parms.IsSuccess = IsSuccess;
	Parms.IsEnableOnlinePlay = IsEnableOnlinePlay;
	Parms.IsRequestedSequenceBlock = IsRequestedSequenceBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedTimerAgr
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedTimerAgr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedTimerAgr");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedTimerAutoSave
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedTimerAutoSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedTimerAutoSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.FinishedTitleUI_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::FinishedTitleUI_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "FinishedTitleUI_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.GetFooter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* ABP_TitleSequence_C::GetFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "GetFooter");

	Params::BP_TitleSequence_C_GetFooter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TitleSequence.BP_TitleSequence_C.GetOSSText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_TitleSequence_C::GetOSSText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "GetOSSText");

	Params::BP_TitleSequence_C_GetOSSText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_TitleSequence.BP_TitleSequence_C.GetOwnerMenuSequence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* ABP_TitleSequence_C::GetOwnerMenuSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "GetOwnerMenuSequence");

	Params::BP_TitleSequence_C_GetOwnerMenuSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TitleSequence.BP_TitleSequence_C.LoginSuccess
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::LoginSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "LoginSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.MismatchSaveDataVersion
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::MismatchSaveDataVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "MismatchSaveDataVersion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnAcceptKeyPressedTitle
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnAcceptKeyPressedTitle(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnAcceptKeyPressedTitle");

	Params::BP_TitleSequence_C_OnAcceptKeyPressedTitle Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnBackKeyPressedTitle
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnBackKeyPressedTitle(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnBackKeyPressedTitle");

	Params::BP_TitleSequence_C_OnBackKeyPressedTitle Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnDecisionEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnDecisionEvent(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnDecisionEvent");

	Params::BP_TitleSequence_C_OnDecisionEvent Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnExitStateCheckDefaultSaveDataForRom
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnExitStateCheckDefaultSaveDataForRom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnExitStateCheckDefaultSaveDataForRom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnExitStateConvertSaveData
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnExitStateConvertSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnExitStateConvertSaveData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnExitStateConvertSaveDataForDemo
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnExitStateConvertSaveDataForDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnExitStateConvertSaveDataForDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnExitStateDetachUnavailableContent
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnExitStateDetachUnavailableContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnExitStateDetachUnavailableContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnFaceButtonLeftPressedTitle
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnFaceButtonLeftPressedTitle(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnFaceButtonLeftPressedTitle");

	Params::BP_TitleSequence_C_OnFaceButtonLeftPressedTitle Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnFaceButtonTopPressedTitle
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnFaceButtonTopPressedTitle(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnFaceButtonTopPressedTitle");

	Params::BP_TitleSequence_C_OnFaceButtonTopPressedTitle Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnFinalize
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnFinished_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OnFinished_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnFinished_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnFinisshedFade
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnFinisshedFade(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnFinisshedFade");

	Params::BP_TitleSequence_C_OnFinisshedFade Parms{};

	Parms.FadeDirection = FadeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnFullScreenMouseClickEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OnFullScreenMouseClickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnFullScreenMouseClickEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitialize
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateAgreement
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateAgreement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateAgreement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateAutoSaveInformation
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateAutoSaveInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateAutoSaveInformation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateCheckDefaultSaveDataForRom
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateCheckDefaultSaveDataForRom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateCheckDefaultSaveDataForRom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateCheckPlatformPrivilege
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateCheckPlatformPrivilege()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateCheckPlatformPrivilege");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateConvertSaveData
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateConvertSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateConvertSaveData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateConvertSaveDataForDemo
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateConvertSaveDataForDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateConvertSaveDataForDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateCreateAndLoadSaveData
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateCreateAndLoadSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateCreateAndLoadSaveData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateDetachUnavailableContent
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateDetachUnavailableContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateDetachUnavailableContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateExit
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateLicense
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateLicense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateLicense");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateLogos
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateLogos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateLogos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateMovie
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateStore
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateStore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateTitleTop
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateTitleTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateTitleTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnInitStateWarning
// (Event, Protected, BlueprintEvent)

void ABP_TitleSequence_C::OnInitStateWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnInitStateWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnLicenseMouseButtonClicked
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OnLicenseMouseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnLicenseMouseButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnLoaded_41F8F0A44AFD06D1D263CDB6C8FE8CC3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnLoaded_41F8F0A44AFD06D1D263CDB6C8FE8CC3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnLoaded_41F8F0A44AFD06D1D263CDB6C8FE8CC3");

	Params::BP_TitleSequence_C_OnLoaded_41F8F0A44AFD06D1D263CDB6C8FE8CC3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnLoaded_41F8F0A44AFD06D1D263CDB6FB907F3C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnLoaded_41F8F0A44AFD06D1D263CDB6FB907F3C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnLoaded_41F8F0A44AFD06D1D263CDB6FB907F3C");

	Params::BP_TitleSequence_C_OnLoaded_41F8F0A44AFD06D1D263CDB6FB907F3C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnQuitGameMouseButton
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OnQuitGameMouseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnQuitGameMouseButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnSaveOntParticipantUser
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnSaveOntParticipantUser(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnSaveOntParticipantUser");

	Params::BP_TitleSequence_C_OnSaveOntParticipantUser Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnUpdateStateCheckDefaultSaveDataForRom
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnUpdateStateCheckDefaultSaveDataForRom(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnUpdateStateCheckDefaultSaveDataForRom");

	Params::BP_TitleSequence_C_OnUpdateStateCheckDefaultSaveDataForRom Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnUpdateStateConvertSaveData
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnUpdateStateConvertSaveData(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnUpdateStateConvertSaveData");

	Params::BP_TitleSequence_C_OnUpdateStateConvertSaveData Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnUpdateStateConvertSaveDataForDemo
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnUpdateStateConvertSaveDataForDemo(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnUpdateStateConvertSaveDataForDemo");

	Params::BP_TitleSequence_C_OnUpdateStateConvertSaveDataForDemo Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnUpdateStateDetachUnavailableContent
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnUpdateStateDetachUnavailableContent(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnUpdateStateDetachUnavailableContent");

	Params::BP_TitleSequence_C_OnUpdateStateDetachUnavailableContent Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OnUpdateStateTitleTop
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::OnUpdateStateTitleTop(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OnUpdateStateTitleTop");

	Params::BP_TitleSequence_C_OnUpdateStateTitleTop Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OutAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OutAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OutAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OutAnimationFinished2
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OutAnimationFinished2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OutAnimationFinished2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.OutAnimationFinished7
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::OutAnimationFinished7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "OutAnimationFinished7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.PatchUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::PatchUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "PatchUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.PopupGameQuit
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::PopupGameQuit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "PopupGameQuit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.QuitPress
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::QuitPress(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "QuitPress");

	Params::BP_TitleSequence_C_QuitPress Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SetMovieTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::SetMovieTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SetMovieTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SetNextMenuSequenceState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceMainState                  InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PrevSequence                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::SetNextMenuSequenceState(EMenuSequenceMainState InState, class UObject* PrevSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SetNextMenuSequenceState");

	Params::BP_TitleSequence_C_SetNextMenuSequenceState Parms{};

	Parms.InState = InState;
	Parms.PrevSequence = PrevSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SetNextSubMenuSequenceState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PrevSequence                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::SetNextSubMenuSequenceState(EMenuSequenceSubState InState, class UObject* PrevSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SetNextSubMenuSequenceState");

	Params::BP_TitleSequence_C_SetNextSubMenuSequenceState Parms{};

	Parms.InState = InState;
	Parms.PrevSequence = PrevSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SetNextTitleSequenceState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETitleSequenceState                     InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleSequence_C::SetNextTitleSequenceState(ETitleSequenceState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SetNextTitleSequenceState");

	Params::BP_TitleSequence_C_SetNextTitleSequenceState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SkipAgr
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::SkipAgr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SkipAgr");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SkipAoutSaveInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::SkipAoutSaveInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SkipAoutSaveInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.SkipWarn
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::SkipWarn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "SkipWarn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.StartCheckPlatform_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::StartCheckPlatform_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "StartCheckPlatform_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.StartLoginProcessor_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::StartLoginProcessor_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "StartLoginProcessor_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.TitleTop_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::TitleTop_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "TitleTop_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.ToTitleExit
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::ToTitleExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "ToTitleExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.UnbindMouseClicked
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::UnbindMouseClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "UnbindMouseClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleSequence.BP_TitleSequence_C.カスタムイベント
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleSequence_C::カスタムイベント()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleSequence_C", "カスタムイベント");

	UObject::ProcessEvent(Func, nullptr);
}

}

