#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RivalSelect

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_RivalSelect.WBP_RivalSelect_C.BeginGrandPrixBattleResult
// 0x0024 (0x0024 - 0x0000)
struct WBP_RivalSelect_C_BeginGrandPrixBattleResult final
{
public:
	bool                                          CallFunc_IsRivalLevelEnhanced_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     CallFunc_GetSelectedRivalDriverId_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_BeginGrandPrixBattleResult) == 0x000004, "Wrong alignment on WBP_RivalSelect_C_BeginGrandPrixBattleResult");
static_assert(sizeof(WBP_RivalSelect_C_BeginGrandPrixBattleResult) == 0x000024, "Wrong size on WBP_RivalSelect_C_BeginGrandPrixBattleResult");
static_assert(offsetof(WBP_RivalSelect_C_BeginGrandPrixBattleResult, CallFunc_IsRivalLevelEnhanced_ReturnValue) == 0x000000, "Member 'WBP_RivalSelect_C_BeginGrandPrixBattleResult::CallFunc_IsRivalLevelEnhanced_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_BeginGrandPrixBattleResult, CallFunc_GetSelectedRivalDriverId_ReturnValue) == 0x000001, "Member 'WBP_RivalSelect_C_BeginGrandPrixBattleResult::CallFunc_GetSelectedRivalDriverId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_BeginGrandPrixBattleResult, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_RivalSelect_C_BeginGrandPrixBattleResult::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_BeginGrandPrixBattleResult, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_RivalSelect_C_BeginGrandPrixBattleResult::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_RivalSelect.WBP_RivalSelect_C.ExecuteUbergraph_WBP_RivalSelect
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectableDriver_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0020(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     CallFunc_GetFocusDriverId_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              CallFunc_Array_Get_Item;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0084(0x0004)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex, int32 InCharaIndex)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex, int32 InCharaIndex)> K2Node_CreateDelegate_OutputDelegate_4; // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRivalLevelEnhanced_ReturnValue;         // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDodonpaEventCompleteFlag_ReturnValue;  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect) == 0x000008, "Wrong alignment on WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect");
static_assert(sizeof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect) == 0x0000E0, "Wrong size on WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, EntryPoint) == 0x000000, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_IsSelectableDriver_ReturnValue) == 0x000004, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_IsSelectableDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Format_ReturnValue) == 0x000020, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, Temp_bool_Variable) == 0x000040, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, Temp_byte_Variable) == 0x000041, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, Temp_byte_Variable_1) == 0x000042, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, Temp_int_Array_Index_Variable) == 0x000044, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result) == 0x000048, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue) == 0x000050, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_GetFocusDriverId_ReturnValue) == 0x000059, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_GetFocusDriverId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_GetAllChildren_ReturnValue) == 0x000060, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_SoundPlay_ReturnValue) == 0x000084, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_CreateDelegate_OutputDelegate_2) == 0x000098, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A8, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B8, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_Event_IsDesignTime) == 0x0000D4, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_IsRivalLevelEnhanced_ReturnValue) == 0x0000D5, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_IsRivalLevelEnhanced_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_SelectInt_ReturnValue) == 0x0000D8, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_GetDodonpaEventCompleteFlag_ReturnValue) == 0x0000DC, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_GetDodonpaEventCompleteFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, CallFunc_BooleanAND_ReturnValue) == 0x0000DD, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect, K2Node_Select_Default) == 0x0000DE, "Member 'WBP_RivalSelect_C_ExecuteUbergraph_WBP_RivalSelect::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RivalSelect.WBP_RivalSelect_C.GetStickerDataTable
// 0x0010 (0x0010 - 0x0000)
struct WBP_RivalSelect_C_GetStickerDataTable final
{
public:
	class UDataTable*                             Sticker_Data_Table;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_GetStickerDataTable) == 0x000008, "Wrong alignment on WBP_RivalSelect_C_GetStickerDataTable");
static_assert(sizeof(WBP_RivalSelect_C_GetStickerDataTable) == 0x000010, "Wrong size on WBP_RivalSelect_C_GetStickerDataTable");
static_assert(offsetof(WBP_RivalSelect_C_GetStickerDataTable, Sticker_Data_Table) == 0x000000, "Member 'WBP_RivalSelect_C_GetStickerDataTable::Sticker_Data_Table' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_GetStickerDataTable, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_RivalSelect_C_GetStickerDataTable::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_RivalSelect.WBP_RivalSelect_C.InitDefaultVisibility
// 0x0038 (0x0038 - 0x0000)
struct WBP_RivalSelect_C_InitDefaultVisibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_InitDefaultVisibility) == 0x000008, "Wrong alignment on WBP_RivalSelect_C_InitDefaultVisibility");
static_assert(sizeof(WBP_RivalSelect_C_InitDefaultVisibility) == 0x000038, "Wrong size on WBP_RivalSelect_C_InitDefaultVisibility");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_GetVisibility_ReturnValue) == 0x000031, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_InitDefaultVisibility, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'WBP_RivalSelect_C_InitDefaultVisibility::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_RivalSelect.WBP_RivalSelect_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_RivalSelect_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_RivalSelect_C_PreConstruct");
static_assert(sizeof(WBP_RivalSelect_C_PreConstruct) == 0x000001, "Wrong size on WBP_RivalSelect_C_PreConstruct");
static_assert(offsetof(WBP_RivalSelect_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_RivalSelect_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_RivalSelect.WBP_RivalSelect_C.SetChildrenOfHidden
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_RivalSelect_C_SetChildrenOfHidden final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_SetChildrenOfHidden) == 0x000008, "Wrong alignment on WBP_RivalSelect_C_SetChildrenOfHidden");
static_assert(sizeof(WBP_RivalSelect_C_SetChildrenOfHidden) == 0x0000C0, "Wrong size on WBP_RivalSelect_C_SetChildrenOfHidden");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetChildrenOfHidden, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_RivalSelect_C_SetChildrenOfHidden::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RivalSelect.WBP_RivalSelect_C.SetDebugFlags
// 0x0002 (0x0002 - 0x0000)
struct WBP_RivalSelect_C_SetDebugFlags final
{
public:
	bool                                          SetEnabled;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetPlayRivalIconMax;                               // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RivalSelect_C_SetDebugFlags) == 0x000001, "Wrong alignment on WBP_RivalSelect_C_SetDebugFlags");
static_assert(sizeof(WBP_RivalSelect_C_SetDebugFlags) == 0x000002, "Wrong size on WBP_RivalSelect_C_SetDebugFlags");
static_assert(offsetof(WBP_RivalSelect_C_SetDebugFlags, SetEnabled) == 0x000000, "Member 'WBP_RivalSelect_C_SetDebugFlags::SetEnabled' has a wrong offset!");
static_assert(offsetof(WBP_RivalSelect_C_SetDebugFlags, SetPlayRivalIconMax) == 0x000001, "Member 'WBP_RivalSelect_C_SetDebugFlags::SetPlayRivalIconMax' has a wrong offset!");

}

