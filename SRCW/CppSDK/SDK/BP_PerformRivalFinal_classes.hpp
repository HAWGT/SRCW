#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PerformRivalFinal

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PerformRivalFinal.BP_PerformRivalFinal_C
// 0x0088 (0x0328 - 0x02A0)
class ABP_PerformRivalFinal_C final : public APerformRivalFinal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ALevelSequenceActor*                    RivalLevelSequenceActor;                           // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   RivalLevelSequencePlayer;                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              PlaySceneEvent;                                    // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ASceneDriver*                           PlayerDriver;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASceneDriver*                           RivalDriver;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFinishedPlay;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_RaceBefore_RivalRacer_C*           IntroductionUI;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          StartSE;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_Movie_Subtitles_C*                 SubtitleUI;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFinishedScene;                                  // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFinishedVoice;                                  // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RivalStringTableId;                                // 0x0304(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RivalRacerIndex;                                   // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VoiceDelayAfterPlayback;                           // 0x0310(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             LipSyncMotions;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URaceSequenceStatePerformRival*         OwnerSequence;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ApplyRivalLevel();
	void CreateScene(class ASceneDriver* In_Player, class ASceneDriver* In_Rival, int32 In_RivalIndex);
	void ExecuteUbergraph_BP_PerformRivalFinal(int32 EntryPoint);
	void GetLevelSequenceReference(EDriverId In_DriverId, bool In_IsHover, EDriverId In_PlayerId, TSoftObjectPtr<class ULevelSequence>* Out_Asset);
	void IsVisibleSubtitle(class ASceneDriver* InDriver, bool* bVisible);
	void OnFinished_RivalScene();
	void OnFinished_RivalVoice();
	void OnPlayRivalIntroduction();
	void OnPlaySceneEvent();
	void PlayScene(class AActor* In_RivalRoot);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void SetSubtitle(const class FText& In_Subtitle);

	void GetMessageFromTable(EDriverId In_RivalDriverId, EPerformRivalOutcome In_RivalOutcome, class FText* Out_Text) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PerformRivalFinal_C">();
	}
	static class ABP_PerformRivalFinal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PerformRivalFinal_C>();
	}
};
static_assert(alignof(ABP_PerformRivalFinal_C) == 0x000008, "Wrong alignment on ABP_PerformRivalFinal_C");
static_assert(sizeof(ABP_PerformRivalFinal_C) == 0x000328, "Wrong size on ABP_PerformRivalFinal_C");
static_assert(offsetof(ABP_PerformRivalFinal_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_PerformRivalFinal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, RivalLevelSequenceActor) == 0x0002A8, "Member 'ABP_PerformRivalFinal_C::RivalLevelSequenceActor' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, RivalLevelSequencePlayer) == 0x0002B0, "Member 'ABP_PerformRivalFinal_C::RivalLevelSequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, PlaySceneEvent) == 0x0002B8, "Member 'ABP_PerformRivalFinal_C::PlaySceneEvent' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, PlayerDriver) == 0x0002C8, "Member 'ABP_PerformRivalFinal_C::PlayerDriver' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, RivalDriver) == 0x0002D0, "Member 'ABP_PerformRivalFinal_C::RivalDriver' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, OnFinishedPlay) == 0x0002D8, "Member 'ABP_PerformRivalFinal_C::OnFinishedPlay' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, IntroductionUI) == 0x0002E8, "Member 'ABP_PerformRivalFinal_C::IntroductionUI' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, StartSE) == 0x0002F0, "Member 'ABP_PerformRivalFinal_C::StartSE' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, SubtitleUI) == 0x0002F8, "Member 'ABP_PerformRivalFinal_C::SubtitleUI' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, bIsFinishedScene) == 0x000300, "Member 'ABP_PerformRivalFinal_C::bIsFinishedScene' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, bIsFinishedVoice) == 0x000301, "Member 'ABP_PerformRivalFinal_C::bIsFinishedVoice' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, RivalStringTableId) == 0x000304, "Member 'ABP_PerformRivalFinal_C::RivalStringTableId' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, RivalRacerIndex) == 0x00030C, "Member 'ABP_PerformRivalFinal_C::RivalRacerIndex' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, VoiceDelayAfterPlayback) == 0x000310, "Member 'ABP_PerformRivalFinal_C::VoiceDelayAfterPlayback' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, LipSyncMotions) == 0x000318, "Member 'ABP_PerformRivalFinal_C::LipSyncMotions' has a wrong offset!");
static_assert(offsetof(ABP_PerformRivalFinal_C, OwnerSequence) == 0x000320, "Member 'ABP_PerformRivalFinal_C::OwnerSequence' has a wrong offset!");

}

