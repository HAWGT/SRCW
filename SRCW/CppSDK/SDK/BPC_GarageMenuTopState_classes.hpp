#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_GarageMenuTopState

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_GarageMenuTopState.BPC_GarageMenuTopState_C
// 0x0018 (0x0140 - 0x0128)
class UBPC_GarageMenuTopState_C final : public UGarageMenuTopState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0128(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_GarageSequence_C*                   Sequence;                                          // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_Garage_MainMenu_C*                 TopWidget;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateRacer(EGarageChildSequenceId InChildSequenceId);
	void FinalizeTopWidget();
	void StartMachineCustomizeSequence();
	void StartGadgetCustomizeSequence();
	void TopWidget_OnInAnimationFinished();
	void TopWidget_OnCancel();
	void MachineCustomizeSequence_OnExit();
	void GadgetCustomizeSequence_OnExit();
	void GadgetCustomizeSequence_OnTurntableControlStateChanged(bool bInIsControllable);
	void GadgetCustomizeSequence_OnParamWindowControlStateChanged(bool bInIsControllable);
	void TopWidget_OnDecisionAnimFinished(EGarageChildSequenceId InChildSequenceId);
	void TopWidget_OnFocus(EGarageChildSequenceId InChildSequenceId);
	void MachineCustomizeSequence_OnMachineFocused(EMachineId InMachineID);
	void GadgetCustomizeSequence_OnMachinePartsFocused(EMachineId InMachineID, EMachinePartsType InMachinePartsType);
	void MachineCustomizeSequence_OnShortcutCustomizeStarted(EMachineId InMachineID, EMachinePartsType InMachinePartsType);
	void GadgetCustomizeSequence_OnShortcutCustomizeFinished();
	void TopWidget_OnDecision();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnInitState();
	void OnExitState();
	void ExecuteUbergraph_BPC_GarageMenuTopState(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_GarageMenuTopState_C">();
	}
	static class UBPC_GarageMenuTopState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_GarageMenuTopState_C>();
	}
};
static_assert(alignof(UBPC_GarageMenuTopState_C) == 0x000008, "Wrong alignment on UBPC_GarageMenuTopState_C");
static_assert(sizeof(UBPC_GarageMenuTopState_C) == 0x000140, "Wrong size on UBPC_GarageMenuTopState_C");
static_assert(offsetof(UBPC_GarageMenuTopState_C, UberGraphFrame) == 0x000128, "Member 'UBPC_GarageMenuTopState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_GarageMenuTopState_C, Sequence) == 0x000130, "Member 'UBPC_GarageMenuTopState_C::Sequence' has a wrong offset!");
static_assert(offsetof(UBPC_GarageMenuTopState_C, TopWidget) == 0x000138, "Member 'UBPC_GarageMenuTopState_C::TopWidget' has a wrong offset!");

}

