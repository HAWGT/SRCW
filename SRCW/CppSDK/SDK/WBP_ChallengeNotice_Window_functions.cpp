#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengeNotice_Window

#include "Basic.hpp"

#include "WBP_ChallengeNotice_Window_classes.hpp"
#include "WBP_ChallengeNotice_Window_parameters.hpp"


namespace SDK
{

// Function WBP_ChallengeNotice_Window.WBP_ChallengeNotice_Window_C.ExecuteUbergraph_WBP_ChallengeNotice_Window
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeNotice_Window_C::ExecuteUbergraph_WBP_ChallengeNotice_Window(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeNotice_Window_C", "ExecuteUbergraph_WBP_ChallengeNotice_Window");

	Params::WBP_ChallengeNotice_Window_C_ExecuteUbergraph_WBP_ChallengeNotice_Window Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeNotice_Window.WBP_ChallengeNotice_Window_C.SpawnChallengeNotice
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChallengeId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeNotice_Window_C::SpawnChallengeNotice(int32 ChallengeId, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeNotice_Window_C", "SpawnChallengeNotice");

	Params::WBP_ChallengeNotice_Window_C_SpawnChallengeNotice Parms{};

	Parms.ChallengeId = ChallengeId;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}

}

