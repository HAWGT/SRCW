#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Tutorial_Controller_Key

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Tutorial_Controller_Key.WBP_Tutorial_Controller_Key_C.ExecuteUbergraph_WBP_Tutorial_Controller_Key
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInverseFlyModeUpDown_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               Temp_byte_Variable_8;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               Temp_byte_Variable_9;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               Temp_byte_Variable_10;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               Temp_byte_Variable_11;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_9;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInverseFlyModeUpDown_ReturnValue_1;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_11;                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex_1;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InIndex;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x008C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_5;                           // 0x009C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_6;                           // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetRaceConfigKey_ReturnValue;             // 0x00B0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_1;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_7;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInverseFlyModeUpDown_ReturnValue_2;     // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               K2Node_Select_Default_10;                          // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key) == 0x000008, "Wrong alignment on WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key");
static_assert(sizeof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key) == 0x0000D8, "Wrong size on WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, EntryPoint) == 0x000000, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_IsInverseFlyModeUpDown_ReturnValue) == 0x000004, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_IsInverseFlyModeUpDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable) == 0x000005, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable) == 0x000008, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_2) == 0x00000C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_3) == 0x00000D, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_bool_Variable) == 0x00000E, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_1) == 0x000010, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_2) == 0x000014, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_3) == 0x000018, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_4) == 0x00001C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_5) == 0x000020, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_4) == 0x000024, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_5) == 0x000025, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_6) == 0x000028, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_6) == 0x00002C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_7) == 0x00002D, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_bool_Variable_1) == 0x00002E, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_8) == 0x00002F, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_9) == 0x000030, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_bool_Variable_2) == 0x000031, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_10) == 0x000032, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_byte_Variable_11) == 0x000033, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default) == 0x000034, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_7) == 0x000038, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_DynamicCast_AsApp_Player_Controller) == 0x000048, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_DynamicCast_AsApp_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_MakeLiteralName_ReturnValue) == 0x000054, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00005C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000064, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000065, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_8) == 0x000068, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00006C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_9) == 0x000070, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_10) == 0x000074, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_IsInverseFlyModeUpDown_ReturnValue_1) == 0x000078, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_IsInverseFlyModeUpDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, Temp_int_Variable_11) == 0x00007C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Event_InIndex_1) == 0x000080, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Event_InIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_SwitchInteger_CmpSuccess) == 0x000084, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Event_InIndex) == 0x000088, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Event_InIndex' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_1) == 0x00008C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_2) == 0x000094, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_3) == 0x000098, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_4) == 0x000099, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_5) == 0x00009C, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_InRange_IntInt_ReturnValue) == 0x0000A4, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_6) == 0x0000A8, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_GetRaceConfigKey_ReturnValue) == 0x0000B0, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_GetRaceConfigKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_InRange_IntInt_ReturnValue_1) == 0x0000C8, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_InRange_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000C9, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000CC, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_7) == 0x0000D0, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_8) == 0x0000D4, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_9) == 0x0000D5, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, CallFunc_IsInverseFlyModeUpDown_ReturnValue_2) == 0x0000D6, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::CallFunc_IsInverseFlyModeUpDown_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key, K2Node_Select_Default_10) == 0x0000D7, "Member 'WBP_Tutorial_Controller_Key_C_ExecuteUbergraph_WBP_Tutorial_Controller_Key::K2Node_Select_Default_10' has a wrong offset!");

// Function WBP_Tutorial_Controller_Key.WBP_Tutorial_Controller_Key_C.GetKeyWidgets
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Tutorial_Controller_Key_C_GetKeyWidgets final
{
public:
	ETutorialAction                               tutorialAction;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        KeyWidgets;                                        // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	ETutorialAction                               Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        Temp_object_Variable;                              // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        Temp_object_Variable_1;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        Temp_object_Variable_2;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        K2Node_MakeArray_Array_2;                          // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        K2Node_MakeArray_Array_3;                          // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        K2Node_Select_Default;                             // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets) == 0x000008, "Wrong alignment on WBP_Tutorial_Controller_Key_C_GetKeyWidgets");
static_assert(sizeof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets) == 0x0000A0, "Wrong size on WBP_Tutorial_Controller_Key_C_GetKeyWidgets");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, tutorialAction) == 0x000000, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::tutorialAction' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, KeyWidgets) == 0x000008, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::KeyWidgets' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, Temp_byte_Variable) == 0x000018, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, Temp_object_Variable) == 0x000020, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, Temp_object_Variable_1) == 0x000030, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, Temp_object_Variable_2) == 0x000040, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, K2Node_MakeArray_Array) == 0x000050, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, K2Node_MakeArray_Array_1) == 0x000060, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, K2Node_MakeArray_Array_2) == 0x000070, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, K2Node_MakeArray_Array_3) == 0x000080, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_GetKeyWidgets, K2Node_Select_Default) == 0x000090, "Member 'WBP_Tutorial_Controller_Key_C_GetKeyWidgets::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Tutorial_Controller_Key.WBP_Tutorial_Controller_Key_C.SetHintAction
// 0x0001 (0x0001 - 0x0000)
struct WBP_Tutorial_Controller_Key_C_SetHintAction final
{
public:
	EHintId                                       HintId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tutorial_Controller_Key_C_SetHintAction) == 0x000001, "Wrong alignment on WBP_Tutorial_Controller_Key_C_SetHintAction");
static_assert(sizeof(WBP_Tutorial_Controller_Key_C_SetHintAction) == 0x000001, "Wrong size on WBP_Tutorial_Controller_Key_C_SetHintAction");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetHintAction, HintId) == 0x000000, "Member 'WBP_Tutorial_Controller_Key_C_SetHintAction::HintId' has a wrong offset!");

// Function WBP_Tutorial_Controller_Key.WBP_Tutorial_Controller_Key_C.SetTutorialAction
// 0x0078 (0x0078 - 0x0000)
struct WBP_Tutorial_Controller_Key_C_SetTutorialAction final
{
public:
	ETutorialAction                               tutorialAction;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetTutorialKey_ReturnValue;               // 0x0030(0x0018)(ConstParm, HasGetValueTypeHash)
	TArray<class UWBP_Race_Sub_Btn_Key_C*>        CallFunc_GetKeyWidgets_KeyWidgets;                 // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_Race_Sub_Btn_Key_C*                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tutorial_Controller_Key_C_SetTutorialAction) == 0x000008, "Wrong alignment on WBP_Tutorial_Controller_Key_C_SetTutorialAction");
static_assert(sizeof(WBP_Tutorial_Controller_Key_C_SetTutorialAction) == 0x000078, "Wrong size on WBP_Tutorial_Controller_Key_C_SetTutorialAction");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, tutorialAction) == 0x000000, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::tutorialAction' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, Temp_object_Variable) == 0x000008, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, Temp_object_Variable_1) == 0x000010, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, Temp_object_Variable_2) == 0x000018, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, Temp_byte_Variable) == 0x00002C, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_GetTutorialKey_ReturnValue) == 0x000030, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_GetTutorialKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_GetKeyWidgets_KeyWidgets) == 0x000048, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_GetKeyWidgets_KeyWidgets' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, K2Node_Select_Default) == 0x000068, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_SetTutorialAction, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'WBP_Tutorial_Controller_Key_C_SetTutorialAction::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_Tutorial_Controller_Key.WBP_Tutorial_Controller_Key_C.UpdateHintIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Tutorial_Controller_Key_C_UpdateHintIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tutorial_Controller_Key_C_UpdateHintIndex) == 0x000004, "Wrong alignment on WBP_Tutorial_Controller_Key_C_UpdateHintIndex");
static_assert(sizeof(WBP_Tutorial_Controller_Key_C_UpdateHintIndex) == 0x000004, "Wrong size on WBP_Tutorial_Controller_Key_C_UpdateHintIndex");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_UpdateHintIndex, InIndex) == 0x000000, "Member 'WBP_Tutorial_Controller_Key_C_UpdateHintIndex::InIndex' has a wrong offset!");

// Function WBP_Tutorial_Controller_Key.WBP_Tutorial_Controller_Key_C.UpdateTutorialIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex) == 0x000004, "Wrong alignment on WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex");
static_assert(sizeof(WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex) == 0x000004, "Wrong size on WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex");
static_assert(offsetof(WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex, InIndex) == 0x000000, "Member 'WBP_Tutorial_Controller_Key_C_UpdateTutorialIndex::InIndex' has a wrong offset!");

}

