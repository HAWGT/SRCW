#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CMN_PlayerDetail

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.ChangeTab
// 0x0070 (0x0070 - 0x0000)
struct WBP_CMN_PlayerDetail_C_ChangeTab final
{
public:
	bool                                          Local_ActiveWidgetIndexFlag;                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	int32                                         CallFunc_GetNumWidgets_ReturnValue_1;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x006C(0x0004)()
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_ChangeTab) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_ChangeTab");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_ChangeTab) == 0x000070, "Wrong size on WBP_CMN_PlayerDetail_C_ChangeTab");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, Local_ActiveWidgetIndexFlag) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::Local_ActiveWidgetIndexFlag' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, Temp_int_Variable) == 0x000004, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_GetNumWidgets_ReturnValue) == 0x00000C, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000020, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_GetNumWidgets_ReturnValue_1) == 0x000060, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_GetNumWidgets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ChangeTab, CallFunc_SoundPlay_ReturnValue) == 0x00006C, "Member 'WBP_CMN_PlayerDetail_C_ChangeTab::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.CheckMachineType
// 0x0218 (0x0218 - 0x0000)
struct WBP_CMN_PlayerDetail_C_CheckMachineType final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Car_Status_Type;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMachinePartsData                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x01F8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_CheckMachineType) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_CheckMachineType");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_CheckMachineType) == 0x000218, "Wrong size on WBP_CMN_PlayerDetail_C_CheckMachineType");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_CheckMachineType, MachineId) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_CheckMachineType::MachineId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_CheckMachineType, Car_Status_Type) == 0x000001, "Member 'WBP_CMN_PlayerDetail_C_CheckMachineType::Car_Status_Type' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_CheckMachineType, CallFunc_GetEnumeratorName_ReturnValue) == 0x000004, "Member 'WBP_CMN_PlayerDetail_C_CheckMachineType::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_CheckMachineType, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_CheckMachineType::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_CheckMachineType, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'WBP_CMN_PlayerDetail_C_CheckMachineType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_CheckMachineType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000210, "Member 'WBP_CMN_PlayerDetail_C_CheckMachineType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.ExecuteUbergraph_WBP_CMN_PlayerDetail
// 0x0250 (0x0250 - 0x0000)
struct WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x0034(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x0044(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x0048(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x0050(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x0054(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_3;                              // 0x0058(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_2;                              // 0x0068(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_1;                              // 0x0098(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value;                                // 0x00A8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x00BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x00C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x00C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x00CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x00D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnce;                                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLobbyPlayerData                       K2Node_Event_InRacerData;                          // 0x00F0(0x00F8)(ConstParm)
	bool                                          K2Node_Event_bIsOwn;                               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             K2Node_Event_InBlockType;                          // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_DynamicCast_As__;                           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EGadgetId>                             K2Node_Event_InDisableGadgetList;                  // 0x0228(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0238(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail) == 0x000250, "Wrong size on WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, EntryPoint) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_27) == 0x000020, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_26) == 0x000024, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_25) == 0x000028, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_24) == 0x00002C, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_23) == 0x000030, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_22) == 0x000034, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_21) == 0x000038, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_20) == 0x00003C, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_19) == 0x000040, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_18) == 0x000044, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_17) == 0x000048, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_16) == 0x00004C, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_15) == 0x000050, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_14) == 0x000054, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_Value_3) == 0x000058, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_Value_2) == 0x000068, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_13) == 0x000078, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_12) == 0x00007C, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_11) == 0x000080, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_10) == 0x000084, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_9) == 0x000088, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_8) == 0x00008C, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_7) == 0x000090, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_Value_1) == 0x000098, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_Value) == 0x0000A8, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_6) == 0x0000B8, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_5) == 0x0000BC, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_4) == 0x0000C0, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_3) == 0x0000C4, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_2) == 0x0000C8, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex_1) == 0x0000CC, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_PlayerControllerIndex) == 0x0000D0, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_bOnce) == 0x0000D4, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_bOnce' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000D8, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000E0, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_InRacerData) == 0x0000F0, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_InRacerData' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_bIsOwn) == 0x0001E8, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_bIsOwn' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_InBlockType) == 0x0001E9, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_InBlockType' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_GetAllChildren_ReturnValue) == 0x0001F0, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_Array_Get_Item) == 0x000200, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_DynamicCast_As__) == 0x000210, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_DynamicCast_As__' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_Less_IntInt_ReturnValue) == 0x000219, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000220, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_Event_InDisableGadgetList) == 0x000228, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_Event_InDisableGadgetList' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, K2Node_CreateDelegate_OutputDelegate) == 0x000238, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000248, "Member 'WBP_CMN_PlayerDetail_C_ExecuteUbergraph_WBP_CMN_PlayerDetail::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.GetSoftObjectCharaIconTextures
// 0x0458 (0x0458 - 0x0000)
struct WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures final
{
public:
	TArray<struct FUsageCountChara>               InUsedCharas;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<TSoftObjectPtr<class UTexture2D>>      OutSoftObjectTextures;                             // 0x0010(0x0010)(Parm, OutParm)
	TArray<EDriverId>                             Local_UsedDriverId;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	EDriverId                                     Local_LastDriverId;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UTexture2D>>      Local_SoftobjectTextures;                          // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUsageCountChara                       CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(NoDestructor)
	bool                                          CallFunc_GetIsCharacterReleased_ReturnValue;       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UTexture2D>>      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUsageCountChara                       CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     K2Node_Select_Default;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures) == 0x000458, "Wrong size on WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, InUsedCharas) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::InUsedCharas' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, OutSoftObjectTextures) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::OutSoftObjectTextures' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Local_UsedDriverId) == 0x000020, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Local_UsedDriverId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Local_LastDriverId) == 0x000030, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Local_LastDriverId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Local_SoftobjectTextures) == 0x000038, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Local_SoftobjectTextures' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Array_Get_Item) == 0x00005C, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_GetIsCharacterReleased_ReturnValue) == 0x000064, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_GetIsCharacterReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Array_Contains_ReturnValue) == 0x00006C, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Conv_IntToByte_ReturnValue) == 0x000088, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_GetValidValue_ReturnValue) == 0x000089, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, Temp_bool_Variable) == 0x0000B1, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, K2Node_Select_Default) == 0x0000B2, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_GetEnumeratorName_ReturnValue) == 0x0000B4, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000450, "Member 'WBP_CMN_PlayerDetail_C_GetSoftObjectCharaIconTextures::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftStickAxis) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftStickAxis");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftStickAxis) == 0x000010, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftStickAxis");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftStickAxis, Value) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftStickAxis::Value' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightStickAxis) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightStickAxis");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightStickAxis) == 0x000010, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightStickAxis");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightStickAxis, Value) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightStickAxis::Value' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.SetDisableGadgetList
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_PlayerDetail_C_SetDisableGadgetList final
{
public:
	TArray<EGadgetId>                             InDisableGadgetList;                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_SetDisableGadgetList) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_SetDisableGadgetList");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_SetDisableGadgetList) == 0x000010, "Wrong size on WBP_CMN_PlayerDetail_C_SetDisableGadgetList");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetDisableGadgetList, InDisableGadgetList) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_SetDisableGadgetList::InDisableGadgetList' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.SetNiceCounts
// 0x0018 (0x0018 - 0x0000)
struct WBP_CMN_PlayerDetail_C_SetNiceCounts final
{
public:
	int32                                         Counts;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_SetNiceCounts) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_SetNiceCounts");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_SetNiceCounts) == 0x000018, "Wrong size on WBP_CMN_PlayerDetail_C_SetNiceCounts");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetNiceCounts, Counts) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_SetNiceCounts::Counts' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetNiceCounts, CallFunc_Min_ReturnValue) == 0x000004, "Member 'WBP_CMN_PlayerDetail_C_SetNiceCounts::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetNiceCounts, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_CMN_PlayerDetail_C_SetNiceCounts::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.SetPageIcon
// 0x0060 (0x0060 - 0x0000)
struct WBP_CMN_PlayerDetail_C_SetPageIcon final
{
public:
	int32                                         InPageIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_DynamicCast_As__;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_SetPageIcon) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_SetPageIcon");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_SetPageIcon) == 0x000060, "Wrong size on WBP_CMN_PlayerDetail_C_SetPageIcon");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, InPageIndex) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::InPageIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, K2Node_DynamicCast_As__) == 0x000040, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::K2Node_DynamicCast_As__' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000050, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetPageIcon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00005C, "Member 'WBP_CMN_PlayerDetail_C_SetPageIcon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.Setup
// 0x07C8 (0x07C8 - 0x0000)
struct WBP_CMN_PlayerDetail_C_Setup final
{
public:
	struct FLobbyPlayerData                       InRacerData;                                       // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsOwn;                                            // 0x00F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             BlockType;                                         // 0x00F9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCom;                                            // 0x00FA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOpenFriendList;                                 // 0x00FB(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        NewLocalVar;                                       // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    SetTireMachineId;                                  // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    SetRearMachineId;                                  // 0x0109(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    SetFrontMachineId;                                 // 0x010A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     SetDriverId;                                       // 0x010B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGadgetId>                             TempGadgetIds;                                     // 0x0110(0x0010)(Edit, BlueprintVisible)
	EMachineId                                    Temp_byte_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_1;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BMax_ReturnValue;                         // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_CheckMachineType_Car_Status_Type;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMachineReleased_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboardMachineId_ReturnValue;        // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboardMachineId_ReturnValue_1;      // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_CheckMachineType_Car_Status_Type_1;       // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMachineReleased_ReturnValue_1;       // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_CheckMachineType_Car_Status_Type_2;       // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMachineReleased_ReturnValue_2;       // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsCharacterReleased_ReturnValue;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             Temp_byte_Variable_2;                              // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0140(0x0010)(ConstParm)
	EBlockPlayerState                             Temp_byte_Variable_3;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppSupportedPlatform                         Temp_byte_Variable_4;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_5;                              // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_6;                              // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_7;                              // 0x0167(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_8;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_9;                              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_10;                             // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_11;                             // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            Temp_byte_Variable_12;                             // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            K2Node_Select_Default;                             // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default_1;                           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_19;                             // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUsageCountChara                       K2Node_MakeStruct_UsageCountChara;                 // 0x017C(0x0008)(NoDestructor)
	struct FUsageCountChara                       K2Node_MakeStruct_UsageCountChara_1;               // 0x0184(0x0008)(NoDestructor)
	struct FUsageCountChara                       K2Node_MakeStruct_UsageCountChara_2;               // 0x018C(0x0008)(NoDestructor)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUsageCountChara>               K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_6;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUsageCountChara>               K2Node_Select_Default_3;                           // 0x01B8(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UTexture2D>>      CallFunc_GetSoftObjectCharaIconTextures_OutSoftObjectTextures; // 0x01C8(0x0010)(ReferenceParm)
	EMachineId                                    Temp_byte_Variable_20;                             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_21;                             // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable_22;                             // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_4;                           // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_5;                           // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_23;                             // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_24;                             // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_25;                             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGadgetData                        CallFunc_Array_Get_Item;                           // 0x01E8(0x0008)(NoDestructor)
	EMachineId                                    Temp_byte_Variable_26;                             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_27;                             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0208(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable_28;                             // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_6;                           // 0x059B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_7;                           // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_29;                             // 0x059D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59E[0x2];                                      // 0x059E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachinePartsUIData                    CallFunc_LoadTirePartsById_OutTirePartsUIData;     // 0x05A0(0x0058)()
	struct FMachinePartsUIData                    CallFunc_LoadRearPartsById_OutRearPartsUIData;     // 0x05F8(0x0058)()
	int32                                         CallFunc_GetClampUserNameLength_ReturnValue;       // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachinePartsUIData                    CallFunc_LoadFrontPartsById_OutFrontPartsUIData;   // 0x0658(0x0058)()
	class FString                                 CallFunc_TruncateStringWithEllipsis_ReturnValue;   // 0x06B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x06C0(0x0010)()
	EMachineId                                    Temp_byte_Variable_30;                             // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_31;                             // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            CallFunc_GetPlatformGroup_ReturnValue;             // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x06D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default_8;                           // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default_9;                           // 0x06D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D6[0x2];                                      // 0x06D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x06E0(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x06F0(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0700(0x0010)()
	class FText                                   K2Node_Select_Default_10;                          // 0x0710(0x0010)(ConstParm)
	class FText                                   CallFunc_GetTerminologyTextByText_ReturnValue;     // 0x0720(0x0010)()
	int32                                         K2Node_Select_Default_11;                          // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_32;                             // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_12;                          // 0x0742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_33;                             // 0x0743(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable_34;                             // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_13;                          // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D[0x3];                                      // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0750(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0760(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0778(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0788(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x07A0(0x0010)()
	EMachineId                                    K2Node_Select_Default_14;                          // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_15;                          // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B2[0x2];                                      // 0x07B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_Setup) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_Setup");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_Setup) == 0x0007C8, "Wrong size on WBP_CMN_PlayerDetail_C_Setup");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, InRacerData) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_Setup::InRacerData' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, bIsOwn) == 0x0000F8, "Member 'WBP_CMN_PlayerDetail_C_Setup::bIsOwn' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, BlockType) == 0x0000F9, "Member 'WBP_CMN_PlayerDetail_C_Setup::BlockType' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, bIsCom) == 0x0000FA, "Member 'WBP_CMN_PlayerDetail_C_Setup::bIsCom' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, bIsOpenFriendList) == 0x0000FB, "Member 'WBP_CMN_PlayerDetail_C_Setup::bIsOpenFriendList' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, NewLocalVar) == 0x000100, "Member 'WBP_CMN_PlayerDetail_C_Setup::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, SetTireMachineId) == 0x000108, "Member 'WBP_CMN_PlayerDetail_C_Setup::SetTireMachineId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, SetRearMachineId) == 0x000109, "Member 'WBP_CMN_PlayerDetail_C_Setup::SetRearMachineId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, SetFrontMachineId) == 0x00010A, "Member 'WBP_CMN_PlayerDetail_C_Setup::SetFrontMachineId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, SetDriverId) == 0x00010B, "Member 'WBP_CMN_PlayerDetail_C_Setup::SetDriverId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, TempGadgetIds) == 0x000110, "Member 'WBP_CMN_PlayerDetail_C_Setup::TempGadgetIds' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable) == 0x000120, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_1) == 0x000121, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_SelectInt_ReturnValue) == 0x000124, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Array_IsEmpty_ReturnValue) == 0x000128, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_BMax_ReturnValue) == 0x000129, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_BMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetValidValue_ReturnValue) == 0x00012A, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x00012C, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_CheckMachineType_Car_Status_Type) == 0x000130, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_CheckMachineType_Car_Status_Type' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetIsMachineReleased_ReturnValue) == 0x000131, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetIsMachineReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_IsHoverboardMachineId_ReturnValue) == 0x000132, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_IsHoverboardMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_IsHoverboardMachineId_ReturnValue_1) == 0x000133, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_IsHoverboardMachineId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_CheckMachineType_Car_Status_Type_1) == 0x000134, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_CheckMachineType_Car_Status_Type_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetIsMachineReleased_ReturnValue_1) == 0x000135, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetIsMachineReleased_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_CheckMachineType_Car_Status_Type_2) == 0x000136, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_CheckMachineType_Car_Status_Type_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetIsMachineReleased_ReturnValue_2) == 0x000137, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetIsMachineReleased_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetIsCharacterReleased_ReturnValue) == 0x000138, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetIsCharacterReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_MakeLiteralByte_ReturnValue) == 0x000139, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable) == 0x00013A, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_1) == 0x00013B, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00013C, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_2) == 0x00013D, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_2) == 0x00013E, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_text_Variable) == 0x000140, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_3) == 0x000150, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_int_Variable) == 0x000154, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_int_Variable_1) == 0x000158, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_int_Variable_2) == 0x00015C, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_int_Variable_3) == 0x000160, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_4) == 0x000164, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_5) == 0x000165, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_6) == 0x000166, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_7) == 0x000167, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_8) == 0x000168, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_9) == 0x000169, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_10) == 0x00016A, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_11) == 0x00016B, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_12) == 0x00016C, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_3) == 0x00016D, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default) == 0x00016E, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_13) == 0x00016F, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000170, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_14) == 0x000171, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_1) == 0x000172, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_4) == 0x000173, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_2) == 0x000174, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_15) == 0x000175, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_16) == 0x000176, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_5) == 0x000177, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_17) == 0x000178, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_18) == 0x000179, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_19) == 0x00017A, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_MakeStruct_UsageCountChara) == 0x00017C, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_MakeStruct_UsageCountChara' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_MakeStruct_UsageCountChara_1) == 0x000184, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_MakeStruct_UsageCountChara_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_MakeStruct_UsageCountChara_2) == 0x00018C, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_MakeStruct_UsageCountChara_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000198, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_MakeArray_Array) == 0x0001A0, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_6) == 0x0001B0, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_3) == 0x0001B8, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetSoftObjectCharaIconTextures_OutSoftObjectTextures) == 0x0001C8, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetSoftObjectCharaIconTextures_OutSoftObjectTextures' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_20) == 0x0001D8, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_21) == 0x0001D9, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_22) == 0x0001DA, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_7) == 0x0001DB, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_4) == 0x0001DC, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_5) == 0x0001DD, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_23) == 0x0001DE, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_24) == 0x0001DF, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_int_Array_Index_Variable) == 0x0001E0, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_25) == 0x0001E4, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_26) == 0x0001F0, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Array_Add_ReturnValue) == 0x0001F4, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetEnumeratorName_ReturnValue) == 0x0001F8, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_27) == 0x000200, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetDataTableRowFromName_OutRow) == 0x000208, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000598, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_28) == 0x000599, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_8) == 0x00059A, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_6) == 0x00059B, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_7) == 0x00059C, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_29) == 0x00059D, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_LoadTirePartsById_OutTirePartsUIData) == 0x0005A0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_LoadTirePartsById_OutTirePartsUIData' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_LoadRearPartsById_OutRearPartsUIData) == 0x0005F8, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_LoadRearPartsById_OutRearPartsUIData' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetClampUserNameLength_ReturnValue) == 0x000650, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetClampUserNameLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_LoadFrontPartsById_OutFrontPartsUIData) == 0x000658, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_LoadFrontPartsById_OutFrontPartsUIData' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_TruncateStringWithEllipsis_ReturnValue) == 0x0006B0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_TruncateStringWithEllipsis_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Conv_StringToText_ReturnValue) == 0x0006C0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_30) == 0x0006D0, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_31) == 0x0006D1, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetPlatformGroup_ReturnValue) == 0x0006D2, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetPlatformGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0006D3, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_8) == 0x0006D4, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_9) == 0x0006D5, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x0006D8, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_MakeLiteralText_ReturnValue) == 0x0006E0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0006F0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000700, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_10) == 0x000710, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetTerminologyTextByText_ReturnValue) == 0x000720, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetTerminologyTextByText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_11) == 0x000730, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000738, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_32) == 0x000740, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000741, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_12) == 0x000742, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_33) == 0x000743, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_byte_Variable_34) == 0x000744, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x000748, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_13) == 0x00074C, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Conv_IntToString_ReturnValue) == 0x000750, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Concat_StrStr_ReturnValue) == 0x000760, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_GetNumWidgets_ReturnValue) == 0x000770, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000778, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000788, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_bool_Variable_9) == 0x000798, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0007A0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_14) == 0x0007B0, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, K2Node_Select_Default_15) == 0x0007B1, "Member 'WBP_CMN_PlayerDetail_C_Setup::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, Temp_int_Loop_Counter_Variable) == 0x0007B4, "Member 'WBP_CMN_PlayerDetail_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x0007B8, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_Add_IntInt_ReturnValue_1) == 0x0007BC, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0007C0, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_Setup, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0007C4, "Member 'WBP_CMN_PlayerDetail_C_Setup::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.SetUpData
// 0x0100 (0x0100 - 0x0000)
struct WBP_CMN_PlayerDetail_C_SetUpData final
{
public:
	struct FLobbyPlayerData                       InRacerData;                                       // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsOwn;                                            // 0x00F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             InBlockType;                                       // 0x00F9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_SetUpData) == 0x000008, "Wrong alignment on WBP_CMN_PlayerDetail_C_SetUpData");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_SetUpData) == 0x000100, "Wrong size on WBP_CMN_PlayerDetail_C_SetUpData");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetUpData, InRacerData) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_SetUpData::InRacerData' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetUpData, bIsOwn) == 0x0000F8, "Member 'WBP_CMN_PlayerDetail_C_SetUpData::bIsOwn' has a wrong offset!");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SetUpData, InBlockType) == 0x0000F9, "Member 'WBP_CMN_PlayerDetail_C_SetUpData::InBlockType' has a wrong offset!");

// Function WBP_CMN_PlayerDetail.WBP_CMN_PlayerDetail_C.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct WBP_CMN_PlayerDetail_C_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_PlayerDetail_C_SilentFocusReady) == 0x000001, "Wrong alignment on WBP_CMN_PlayerDetail_C_SilentFocusReady");
static_assert(sizeof(WBP_CMN_PlayerDetail_C_SilentFocusReady) == 0x000001, "Wrong size on WBP_CMN_PlayerDetail_C_SilentFocusReady");
static_assert(offsetof(WBP_CMN_PlayerDetail_C_SilentFocusReady, bOnce) == 0x000000, "Member 'WBP_CMN_PlayerDetail_C_SilentFocusReady::bOnce' has a wrong offset!");

}

