#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Advertise_Start

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Advertise_Start.WBP_Advertise_Start_C
// 0x0100 (0x04E0 - 0x03E0)
class UWBP_Advertise_Start_C final : public UAdvertiseWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out;                                               // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Adv_01;                                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Black;                                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Black_03;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Black_05;                                       // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Black_06;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Black_08;                                       // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_photosensitivity;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_SegaLogo;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_SegaLogo_US;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ESRB_Logo;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ESRB_Logo_1;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightsLogo;                                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Ad;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UE_Logo;                                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 USK_Logo;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 USK_Logo_1;                                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SonicLogo_Movie_C*                 WBP_SonicLogo_Movie;                               // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Rating;                             // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_Adv_Image;                                      // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ActiveWidgetIndex;                                 // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           WaitTimerLogoHandle;                               // 0x04A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              FinishedLogosOutAnimation;                         // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        LogosTimer;                                        // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WaitTimerDisableInputHandle;                       // 0x04C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SkipDisableTime;                                   // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrapTime;                                         // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimationIn();
	void AnimationInFinished();
	void AnimationOut();
	void Construct();
	void CustomEvent_1();
	void ExecuteUbergraph_WBP_Advertise_Start(int32 EntryPoint);
	void FinishedDisableInputTimer();
	void FinishedOutAnimation();
	void FinishedTimerLogo();
	void GetAnimationOut(class UWidgetAnimation** OutAnimation);
	void GetSwitcherIndex(EAdvertiseState* OutState);
	void IsEndLogos(bool* LogosEnd);
	void PauseAllAdvAnimation();
	void SetLogosTime(double InTime);
	void SetNextLogoState();
	void SetSEGALogoTexture();
	void SetSensitivityTexture();
	void SetSwitcherIndex(EAdvertiseState AdvertiseState);
	void SkipAdvertiseLogo();
	void SkipSonicLogoMovie();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Advertise_Start_C">();
	}
	static class UWBP_Advertise_Start_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Advertise_Start_C>();
	}
};
static_assert(alignof(UWBP_Advertise_Start_C) == 0x000008, "Wrong alignment on UWBP_Advertise_Start_C");
static_assert(sizeof(UWBP_Advertise_Start_C) == 0x0004E0, "Wrong size on UWBP_Advertise_Start_C");
static_assert(offsetof(UWBP_Advertise_Start_C, UberGraphFrame) == 0x0003E0, "Member 'UWBP_Advertise_Start_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, Out) == 0x0003E8, "Member 'UWBP_Advertise_Start_C::Out' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, Loop) == 0x0003F0, "Member 'UWBP_Advertise_Start_C::Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, In) == 0x0003F8, "Member 'UWBP_Advertise_Start_C::In' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, Adv_01) == 0x000400, "Member 'UWBP_Advertise_Start_C::Adv_01' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, BG_Black) == 0x000408, "Member 'UWBP_Advertise_Start_C::BG_Black' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, BG_Black_03) == 0x000410, "Member 'UWBP_Advertise_Start_C::BG_Black_03' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, BG_Black_05) == 0x000418, "Member 'UWBP_Advertise_Start_C::BG_Black_05' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, BG_Black_06) == 0x000420, "Member 'UWBP_Advertise_Start_C::BG_Black_06' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, BG_Black_08) == 0x000428, "Member 'UWBP_Advertise_Start_C::BG_Black_08' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, CanvasPanel) == 0x000430, "Member 'UWBP_Advertise_Start_C::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, DMY_photosensitivity) == 0x000438, "Member 'UWBP_Advertise_Start_C::DMY_photosensitivity' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, DMY_SegaLogo) == 0x000440, "Member 'UWBP_Advertise_Start_C::DMY_SegaLogo' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, DMY_SegaLogo_US) == 0x000448, "Member 'UWBP_Advertise_Start_C::DMY_SegaLogo_US' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, ESRB_Logo) == 0x000450, "Member 'UWBP_Advertise_Start_C::ESRB_Logo' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, ESRB_Logo_1) == 0x000458, "Member 'UWBP_Advertise_Start_C::ESRB_Logo_1' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, RightsLogo) == 0x000460, "Member 'UWBP_Advertise_Start_C::RightsLogo' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, TXT_Ad) == 0x000468, "Member 'UWBP_Advertise_Start_C::TXT_Ad' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, UE_Logo) == 0x000470, "Member 'UWBP_Advertise_Start_C::UE_Logo' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, USK_Logo) == 0x000478, "Member 'UWBP_Advertise_Start_C::USK_Logo' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, USK_Logo_1) == 0x000480, "Member 'UWBP_Advertise_Start_C::USK_Logo_1' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, WBP_SonicLogo_Movie) == 0x000488, "Member 'UWBP_Advertise_Start_C::WBP_SonicLogo_Movie' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, WidgetSwitcher_Rating) == 0x000490, "Member 'UWBP_Advertise_Start_C::WidgetSwitcher_Rating' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, WS_Adv_Image) == 0x000498, "Member 'UWBP_Advertise_Start_C::WS_Adv_Image' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, ActiveWidgetIndex) == 0x0004A0, "Member 'UWBP_Advertise_Start_C::ActiveWidgetIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, WaitTimerLogoHandle) == 0x0004A8, "Member 'UWBP_Advertise_Start_C::WaitTimerLogoHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, FinishedLogosOutAnimation) == 0x0004B0, "Member 'UWBP_Advertise_Start_C::FinishedLogosOutAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, LogosTimer) == 0x0004C0, "Member 'UWBP_Advertise_Start_C::LogosTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, WaitTimerDisableInputHandle) == 0x0004C8, "Member 'UWBP_Advertise_Start_C::WaitTimerDisableInputHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, SkipDisableTime) == 0x0004D0, "Member 'UWBP_Advertise_Start_C::SkipDisableTime' has a wrong offset!");
static_assert(offsetof(UWBP_Advertise_Start_C, StrapTime) == 0x0004D8, "Member 'UWBP_Advertise_Start_C::StrapTime' has a wrong offset!");

}

