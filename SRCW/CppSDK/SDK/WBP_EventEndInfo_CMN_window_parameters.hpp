#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventEndInfo_CMN_window

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.ExecuteUbergraph_WBP_EventEndInfo_CMN_window
// 0x0148 (0x0148 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x0034(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x0044(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x0048(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x0050(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_3;                              // 0x0058(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_2;                              // 0x0068(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_1;                              // 0x0098(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value;                                // 0x00A8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x00BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x00C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x00C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x00CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x00D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnce;                                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller;        // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window) == 0x000148, "Wrong size on WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, EntryPoint) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_27) == 0x00001C, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_26) == 0x000020, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_25) == 0x000024, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_24) == 0x000028, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_23) == 0x00002C, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_22) == 0x000030, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_21) == 0x000034, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_20) == 0x000038, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_19) == 0x00003C, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_18) == 0x000040, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_17) == 0x000044, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_16) == 0x000048, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_15) == 0x00004C, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_14) == 0x000050, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_Value_3) == 0x000058, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_Value_2) == 0x000068, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_13) == 0x000078, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_12) == 0x00007C, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_11) == 0x000080, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_10) == 0x000084, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_9) == 0x000088, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_8) == 0x00008C, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_7) == 0x000090, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_Value_1) == 0x000098, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_Value) == 0x0000A8, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_6) == 0x0000B8, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_5) == 0x0000BC, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_4) == 0x0000C0, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_3) == 0x0000C4, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_2) == 0x0000C8, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex_1) == 0x0000CC, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_PlayerControllerIndex) == 0x0000D0, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_Event_bOnce) == 0x0000D4, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_Event_bOnce' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000D8, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_CreateDelegate_OutputDelegate) == 0x0000E0, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F0, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_CreateDelegate_OutputDelegate_2) == 0x000100, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000110, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_CreateDelegate_OutputDelegate_3) == 0x000114, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000128, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_DynamicCast_AsApp_Player_Controller) == 0x000138, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_DynamicCast_AsApp_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'WBP_EventEndInfo_CMN_window_C_ExecuteUbergraph_WBP_EventEndInfo_CMN_window::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.GetDateString
// 0x0038 (0x0038 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_GetDateString final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   DateText;                                          // 0x0008(0x0010)(Parm, OutParm)
	class FString                                 CallFunc_FormatDateTime_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_GetDateString) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_GetDateString");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_GetDateString) == 0x000038, "Wrong size on WBP_EventEndInfo_CMN_window_C_GetDateString");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_GetDateString, DateTime) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_GetDateString::DateTime' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_GetDateString, DateText) == 0x000008, "Member 'WBP_EventEndInfo_CMN_window_C_GetDateString::DateText' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_GetDateString, CallFunc_FormatDateTime_ReturnValue) == 0x000018, "Member 'WBP_EventEndInfo_CMN_window_C_GetDateString::CallFunc_FormatDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_GetDateString, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_EventEndInfo_CMN_window_C_GetDateString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis) == 0x000010, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis, Value) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftStickAxis::Value' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxis) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightStickAxis");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxis) == 0x000010, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightStickAxis");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxis, Value) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightStickAxis::Value' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SetFestaName
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SetFestaName final
{
public:
	class FText                                   FestaName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SetFestaName) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SetFestaName");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SetFestaName) == 0x000010, "Wrong size on WBP_EventEndInfo_CMN_window_C_SetFestaName");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetFestaName, FestaName) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SetFestaName::FestaName' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SetRankingLabelText
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SetRankingLabelText final
{
public:
	class FText                                   RankingLavelText;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SetRankingLabelText) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SetRankingLabelText");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SetRankingLabelText) == 0x000010, "Wrong size on WBP_EventEndInfo_CMN_window_C_SetRankingLabelText");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetRankingLabelText, RankingLavelText) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SetRankingLabelText::RankingLavelText' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SetRankingTitleText
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SetRankingTitleText final
{
public:
	class FText                                   TitleName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SetRankingTitleText) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SetRankingTitleText");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SetRankingTitleText) == 0x000010, "Wrong size on WBP_EventEndInfo_CMN_window_C_SetRankingTitleText");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetRankingTitleText, TitleName) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SetRankingTitleText::TitleName' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SetResult
// 0x0008 (0x0008 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SetResult final
{
public:
	int32                                         Ranking_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Point_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SetResult) == 0x000004, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SetResult");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SetResult) == 0x000008, "Wrong size on WBP_EventEndInfo_CMN_window_C_SetResult");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetResult, Ranking_0) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SetResult::Ranking_0' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetResult, Point_0) == 0x000004, "Member 'WBP_EventEndInfo_CMN_window_C_SetResult::Point_0' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SetSchedule
// 0x0040 (0x0040 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SetSchedule final
{
public:
	struct FDateTime                              StartTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              endTime;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0020(0x0010)()
	class FText                                   CallFunc_LocalizeDateTimePlaceholder_ReturnValue;  // 0x0030(0x0010)()
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SetSchedule) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SetSchedule");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SetSchedule) == 0x000040, "Wrong size on WBP_EventEndInfo_CMN_window_C_SetSchedule");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetSchedule, StartTime) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SetSchedule::StartTime' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetSchedule, endTime) == 0x000008, "Member 'WBP_EventEndInfo_CMN_window_C_SetSchedule::endTime' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetSchedule, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_EventEndInfo_CMN_window_C_SetSchedule::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetSchedule, CallFunc_Format_ReturnValue) == 0x000020, "Member 'WBP_EventEndInfo_CMN_window_C_SetSchedule::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetSchedule, CallFunc_LocalizeDateTimePlaceholder_ReturnValue) == 0x000030, "Member 'WBP_EventEndInfo_CMN_window_C_SetSchedule::CallFunc_LocalizeDateTimePlaceholder_ReturnValue' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SetTextureBG
// 0x0008 (0x0008 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SetTextureBG final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SetTextureBG) == 0x000008, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SetTextureBG");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SetTextureBG) == 0x000008, "Wrong size on WBP_EventEndInfo_CMN_window_C_SetTextureBG");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SetTextureBG, Texture) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SetTextureBG::Texture' has a wrong offset!");

// Function WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct WBP_EventEndInfo_CMN_window_C_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventEndInfo_CMN_window_C_SilentFocusReady) == 0x000001, "Wrong alignment on WBP_EventEndInfo_CMN_window_C_SilentFocusReady");
static_assert(sizeof(WBP_EventEndInfo_CMN_window_C_SilentFocusReady) == 0x000001, "Wrong size on WBP_EventEndInfo_CMN_window_C_SilentFocusReady");
static_assert(offsetof(WBP_EventEndInfo_CMN_window_C_SilentFocusReady, bOnce) == 0x000000, "Member 'WBP_EventEndInfo_CMN_window_C_SilentFocusReady::bOnce' has a wrong offset!");

}

