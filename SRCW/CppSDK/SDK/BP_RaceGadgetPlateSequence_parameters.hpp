#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaceGadgetPlateSequence

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function BP_RaceGadgetPlateSequence.BP_RaceGadgetPlateSequence_C.ExecuteUbergraph_BP_RaceGadgetPlateSequence
// 0x01D0 (0x01D0 - 0x0000)
struct BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EndMenu_GudgetLv_Window_C*         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERaceLoadTestMode                             CallFunc_GetRaceLoadTestMode_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARacePlayerController*                  K2Node_DynamicCast_AsRace_Player_Controller;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetPlateFromState                         CallFunc_GetGadgetFromState_ReturnValue;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateData                       CallFunc_GetGadgetPlateData_OutGadgetPlateData;    // 0x0050(0x0030)()
	int32                                         CallFunc_GetBeforePlayerRaceCount_ReturnValue;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetPlateId                                CallFunc_GetGadgetPlateId_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaxLevelGadgetPlateId_ReturnValue;      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerAddRaceCount_ReturnValue;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateData                       CallFunc_GetGadgetPlateData_OutGadgetPlateData_1;  // 0x0098(0x0030)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0010)()
	class UWBP_ItemGet_Window_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGadgetPlateId                                CallFunc_GetNextGadgetPlateId_ReturnValue;         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUITransitionManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGadgetPlateGaugeBaseValue_ReturnValue; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGadgetSlotMax_PlateId_Result;           // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7[0x1];                                      // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetPlateId                                CallFunc_GetNextGadgetPlateId_ReturnValue_1;       // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaxLevelGadgetPlateId_ReturnValue_1;    // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetPlateId                                CallFunc_GetNextGadgetPlateId_ReturnValue_2;       // 0x01BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResetGadgetRankGauge_InGaugeAddFixed_ImplicitCast; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResetGadgetRankGauge_InGaugeNext_ImplicitCast; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResetGadgetRankGauge_InGaugeBase_ImplicitCast; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence) == 0x000008, "Wrong alignment on BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence");
static_assert(sizeof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence) == 0x0001D0, "Wrong size on BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, EntryPoint) == 0x000000, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetPlayerController_ReturnValue_2) == 0x000030, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetRaceLoadTestMode_ReturnValue) == 0x000038, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetRaceLoadTestMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_DynamicCast_AsRace_Player_Controller) == 0x000040, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_DynamicCast_AsRace_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetGadgetFromState_ReturnValue) == 0x00004A, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetGadgetFromState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004B, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetGadgetPlateData_OutGadgetPlateData) == 0x000050, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetGadgetPlateData_OutGadgetPlateData' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetBeforePlayerRaceCount_ReturnValue) == 0x000080, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetBeforePlayerRaceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetGadgetPlateId_ReturnValue) == 0x000084, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetGadgetPlateId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000085, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000088, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_IsMaxLevelGadgetPlateId_ReturnValue) == 0x00008C, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_IsMaxLevelGadgetPlateId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Not_PreBool_ReturnValue) == 0x00008D, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetPlayerAddRaceCount_ReturnValue) == 0x000090, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetPlayerAddRaceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetGadgetPlateData_OutGadgetPlateData_1) == 0x000098, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetGadgetPlateData_OutGadgetPlateData_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_CreateDelegate_OutputDelegate) == 0x0000C8, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000E0, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Create_ReturnValue_1) == 0x000150, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_CreateDelegate_OutputDelegate_1) == 0x000158, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, K2Node_CreateDelegate_OutputDelegate_2) == 0x000168, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetNextGadgetPlateId_ReturnValue) == 0x000178, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetNextGadgetPlateId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000180, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000188, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Add_IntInt_ReturnValue) == 0x000190, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000198, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001A4, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0001A8, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetGadgetPlateGaugeBaseValue_ReturnValue) == 0x0001B0, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetGadgetPlateGaugeBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_IsGadgetSlotMax_PlateId_Result) == 0x0001B4, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_IsGadgetSlotMax_PlateId_Result' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_IsValid_ReturnValue) == 0x0001B5, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_IsValid_ReturnValue_1) == 0x0001B6, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0001B8, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0001BC, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetNextGadgetPlateId_ReturnValue_1) == 0x0001BD, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetNextGadgetPlateId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_IsMaxLevelGadgetPlateId_ReturnValue_1) == 0x0001BE, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_IsMaxLevelGadgetPlateId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_GetNextGadgetPlateId_ReturnValue_2) == 0x0001BF, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_GetNextGadgetPlateId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_Max_ReturnValue) == 0x0001C0, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_ResetGadgetRankGauge_InGaugeAddFixed_ImplicitCast) == 0x0001C4, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_ResetGadgetRankGauge_InGaugeAddFixed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_ResetGadgetRankGauge_InGaugeNext_ImplicitCast) == 0x0001C8, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_ResetGadgetRankGauge_InGaugeNext_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence, CallFunc_ResetGadgetRankGauge_InGaugeBase_ImplicitCast) == 0x0001CC, "Member 'BP_RaceGadgetPlateSequence_C_ExecuteUbergraph_BP_RaceGadgetPlateSequence::CallFunc_ResetGadgetRankGauge_InGaugeBase_ImplicitCast' has a wrong offset!");

// Function BP_RaceGadgetPlateSequence.BP_RaceGadgetPlateSequence_C.IsGadgetSlotMax
// 0x0048 (0x0048 - 0x0000)
struct BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax final
{
public:
	int32                                         TotalCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          newParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxGadgetNum_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetPlateId                                CallFunc_GetGadgetPlateId_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateData                       CallFunc_GetGadgetPlateData_OutGadgetPlateData;    // 0x0010(0x0030)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax) == 0x000008, "Wrong alignment on BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax");
static_assert(sizeof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax) == 0x000048, "Wrong size on BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax, TotalCount) == 0x000000, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax::TotalCount' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax, newParam) == 0x000004, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax::newParam' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax, CallFunc_GetMaxGadgetNum_ReturnValue) == 0x000008, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax::CallFunc_GetMaxGadgetNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax, CallFunc_GetGadgetPlateId_ReturnValue) == 0x00000C, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax::CallFunc_GetGadgetPlateId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax, CallFunc_GetGadgetPlateData_OutGadgetPlateData) == 0x000010, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax::CallFunc_GetGadgetPlateData_OutGadgetPlateData' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RaceGadgetPlateSequence.BP_RaceGadgetPlateSequence_C.IsGadgetSlotMax_PlateId
// 0x0040 (0x0040 - 0x0000)
struct BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId final
{
public:
	EGadgetPlateId                                InGadgetPlateId;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxGadgetNum_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGadgetPlateData                       CallFunc_GetGadgetPlateData_OutGadgetPlateData;    // 0x0008(0x0030)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId) == 0x000008, "Wrong alignment on BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId");
static_assert(sizeof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId) == 0x000040, "Wrong size on BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId, InGadgetPlateId) == 0x000000, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId::InGadgetPlateId' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId, Result) == 0x000001, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId::Result' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId, CallFunc_GetMaxGadgetNum_ReturnValue) == 0x000004, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId::CallFunc_GetMaxGadgetNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId, CallFunc_GetGadgetPlateData_OutGadgetPlateData) == 0x000008, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId::CallFunc_GetGadgetPlateData_OutGadgetPlateData' has a wrong offset!");
static_assert(offsetof(BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_RaceGadgetPlateSequence_C_IsGadgetSlotMax_PlateId::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

