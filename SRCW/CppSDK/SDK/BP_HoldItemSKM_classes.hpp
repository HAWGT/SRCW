#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HoldItemSKM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HoldItemSKM.BP_HoldItemSKM_C
// 0x00D0 (0x0390 - 0x02C0)
class ABP_HoldItemSKM_C final : public AHoldItemSKM
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUnionSkeletalMeshComponent*            UnionSkeletalMesh;                                 // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<EItemId, class USkeletalMesh*>           SkeletalMeshs;                                     // 0x02D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EItemId, class UClass*>                  AnimInstances;                                     // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsPreGenerated;                                   // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHoldItemCreateParam                   HoldItemParam;                                     // 0x0374(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      RareItemEffect;                                    // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Create(const struct FHoldItemCreateParam& Param);
	void CreateItem(const struct FHoldItemCreateParam& In_Param);
	void DestroyItem();
	void ExecuteUbergraph_BP_HoldItemSKM(int32 EntryPoint);
	void PlayGetEffect();
	void PlayLuckyItemEffect();
	void PlayRareItemEffect();
	void PlayUseEffect();
	void PreCreate(const struct FHoldItemCreateParam& Param);
	void PreCreateItem(EItemId In_ItemId);
	void ReceiveBeginPlay();
	void Reset();
	void SetLightChannels(bool Channel0, bool Channel1, bool Channel2);
	void Use();
	void UserConstructionScript();

	class UMeshComponent* GetMeshComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HoldItemSKM_C">();
	}
	static class ABP_HoldItemSKM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HoldItemSKM_C>();
	}
};
static_assert(alignof(ABP_HoldItemSKM_C) == 0x000008, "Wrong alignment on ABP_HoldItemSKM_C");
static_assert(sizeof(ABP_HoldItemSKM_C) == 0x000390, "Wrong size on ABP_HoldItemSKM_C");
static_assert(offsetof(ABP_HoldItemSKM_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_HoldItemSKM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HoldItemSKM_C, UnionSkeletalMesh) == 0x0002C8, "Member 'ABP_HoldItemSKM_C::UnionSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_HoldItemSKM_C, SkeletalMeshs) == 0x0002D0, "Member 'ABP_HoldItemSKM_C::SkeletalMeshs' has a wrong offset!");
static_assert(offsetof(ABP_HoldItemSKM_C, AnimInstances) == 0x000320, "Member 'ABP_HoldItemSKM_C::AnimInstances' has a wrong offset!");
static_assert(offsetof(ABP_HoldItemSKM_C, bIsPreGenerated) == 0x000370, "Member 'ABP_HoldItemSKM_C::bIsPreGenerated' has a wrong offset!");
static_assert(offsetof(ABP_HoldItemSKM_C, HoldItemParam) == 0x000374, "Member 'ABP_HoldItemSKM_C::HoldItemParam' has a wrong offset!");
static_assert(offsetof(ABP_HoldItemSKM_C, RareItemEffect) == 0x000388, "Member 'ABP_HoldItemSKM_C::RareItemEffect' has a wrong offset!");

}

