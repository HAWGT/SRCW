#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Festa_PointReward_FestaPointTable

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"


namespace SDK::Params
{

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.AddPoint
// 0x000C (0x000C - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_AddPoint final
{
public:
	int32                                         Add;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextAdd;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextTotal;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_AddPoint) == 0x000004, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_AddPoint");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_AddPoint) == 0x00000C, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_AddPoint");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_AddPoint, Add) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_AddPoint::Add' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_AddPoint, NextAdd) == 0x000004, "Member 'WBP_Festa_PointReward_FestaPointTable_C_AddPoint::NextAdd' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_AddPoint, NextTotal) == 0x000008, "Member 'WBP_Festa_PointReward_FestaPointTable_C_AddPoint::NextTotal' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.CloseReward
// 0x0001 (0x0001 - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_CloseReward final
{
public:
	bool                                          bIsBonus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_CloseReward) == 0x000001, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_CloseReward");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_CloseReward) == 0x000001, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_CloseReward");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_CloseReward, bIsBonus) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_CloseReward::bIsBonus' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Point_1;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFestaPointText_ReturnValue;            // 0x0010(0x0010)()
	int32                                         K2Node_CustomEvent_Point;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFestaPointText_ReturnValue_1;          // 0x0028(0x0010)()
	int32                                         K2Node_CustomEvent_Add;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NextAdd;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NextTotal;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaResultRewardData                 K2Node_CustomEvent_ResultData;                     // 0x0048(0x0020)()
	int32                                         K2Node_CustomEvent_Ratio;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFestaChanceUpRatioText_ReturnValue;    // 0x0070(0x0010)()
	bool                                          K2Node_CustomEvent_IsBonus;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NowPoint;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NextPoint;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x008C(0x0004)()
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsBonus;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable) == 0x000008, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable) == 0x0000B8, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, EntryPoint) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, Temp_bool_Variable) == 0x000004, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_Event_IsDesignTime) == 0x000006, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_Point_1) == 0x000008, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_Point_1' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, CallFunc_GetFestaPointText_ReturnValue) == 0x000010, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::CallFunc_GetFestaPointText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_Point) == 0x000020, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_Point' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, CallFunc_GetFestaPointText_ReturnValue_1) == 0x000028, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::CallFunc_GetFestaPointText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_Add) == 0x000038, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_Add' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_NextAdd) == 0x00003C, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_NextAdd' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_NextTotal) == 0x000040, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_NextTotal' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_ResultData) == 0x000048, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_ResultData' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_Ratio) == 0x000068, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_Ratio' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, CallFunc_GetFestaChanceUpRatioText_ReturnValue) == 0x000070, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::CallFunc_GetFestaChanceUpRatioText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_IsBonus) == 0x000080, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_IsBonus' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_NowPoint) == 0x000084, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_NowPoint' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_NextPoint) == 0x000088, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_NextPoint' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, CallFunc_SoundPlay_ReturnValue) == 0x00008C, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_Select_Default) == 0x000090, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_CustomEvent_bIsBonus) == 0x000098, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_CustomEvent_bIsBonus' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, CallFunc_PlayAnimation_ReturnValue) == 0x0000A0, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, K2Node_Select_Default_1) == 0x0000A8, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000B0, "Member 'WBP_Festa_PointReward_FestaPointTable_C_ExecuteUbergraph_WBP_Festa_PointReward_FestaPointTable::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.Open
// 0x000C (0x000C - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_Open final
{
public:
	bool                                          isBonus;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NowPoint;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextPoint;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_Open) == 0x000004, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_Open");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_Open) == 0x00000C, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_Open");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_Open, isBonus) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_Open::isBonus' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_Open, NowPoint) == 0x000004, "Member 'WBP_Festa_PointReward_FestaPointTable_C_Open::NowPoint' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_Open, NextPoint) == 0x000008, "Member 'WBP_Festa_PointReward_FestaPointTable_C_Open::NextPoint' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_PreConstruct");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_PreConstruct) == 0x000001, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_PreConstruct");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.SetPoint
// 0x0004 (0x0004 - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_SetPoint final
{
public:
	int32                                         Point_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_SetPoint) == 0x000004, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_SetPoint");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_SetPoint) == 0x000004, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_SetPoint");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_SetPoint, Point_0) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_SetPoint::Point_0' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.SetPoint2
// 0x0004 (0x0004 - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_SetPoint2 final
{
public:
	int32                                         Point_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_SetPoint2) == 0x000004, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_SetPoint2");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_SetPoint2) == 0x000004, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_SetPoint2");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_SetPoint2, Point_0) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_SetPoint2::Point_0' has a wrong offset!");

// Function WBP_Festa_PointReward_FestaPointTable.WBP_Festa_PointReward_FestaPointTable_C.SetResultReward
// 0x0028 (0x0028 - 0x0000)
struct WBP_Festa_PointReward_FestaPointTable_C_SetResultReward final
{
public:
	struct FFestaResultRewardData                 ResultData;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Ratio;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Festa_PointReward_FestaPointTable_C_SetResultReward) == 0x000008, "Wrong alignment on WBP_Festa_PointReward_FestaPointTable_C_SetResultReward");
static_assert(sizeof(WBP_Festa_PointReward_FestaPointTable_C_SetResultReward) == 0x000028, "Wrong size on WBP_Festa_PointReward_FestaPointTable_C_SetResultReward");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_SetResultReward, ResultData) == 0x000000, "Member 'WBP_Festa_PointReward_FestaPointTable_C_SetResultReward::ResultData' has a wrong offset!");
static_assert(offsetof(WBP_Festa_PointReward_FestaPointTable_C_SetResultReward, Ratio) == 0x000020, "Member 'WBP_Festa_PointReward_FestaPointTable_C_SetResultReward::Ratio' has a wrong offset!");

}

