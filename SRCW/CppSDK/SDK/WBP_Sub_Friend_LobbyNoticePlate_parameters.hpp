#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Sub_Friend_LobbyNoticePlate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_InIconTexture;                  // 0x0008(0x0028)(HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_InBgColor;                      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInNowPlaying;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_InValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InSwitcherIndex;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InButtonIndex;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInVisible;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppPlayerControllerSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetCurrentDeviceTexture_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FooterMenu_Sub_ControllerCross_C*  K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Cross; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FooterMenu_Sub_ControllerBtn_C*    K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Btn; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            K2Node_CustomEvent_InPlatformType;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x00A8(0x0010)()
	bool                                          K2Node_CustomEvent_IsRaceSequence;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            CallFunc_GetPlatformGroup_ReturnValue;             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMeterParam_Value_ImplicitCast;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate) == 0x000008, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate) == 0x0000E0, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, EntryPoint) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InIconTexture) == 0x000008, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InIconTexture' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InBgColor) == 0x000030, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InBgColor' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_bInNowPlaying) == 0x000040, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_bInNowPlaying' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InValue) == 0x000048, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InSwitcherIndex) == 0x000050, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InSwitcherIndex' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InButtonIndex) == 0x000054, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_bInVisible) == 0x000058, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_bInVisible' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_SwitchInteger_CmpSuccess) == 0x000059, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_MakeLiteralByte_ReturnValue) == 0x00005A, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_GetCurrentDeviceTexture_ReturnValue) == 0x000068, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_GetCurrentDeviceTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Cross) == 0x000078, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Cross' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Btn) == 0x000088, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Btn' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000098, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InPlatformType) == 0x0000A0, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InPlatformType' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, Temp_byte_Variable) == 0x0000A1, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A2, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_InText) == 0x0000A8, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_CustomEvent_IsRaceSequence) == 0x0000B8, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_CustomEvent_IsRaceSequence' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, Temp_byte_Variable_1) == 0x0000B9, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_GetPlatformGroup_ReturnValue) == 0x0000BA, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_GetPlatformGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000C0, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C8, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, Temp_bool_Variable) == 0x0000C9, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, K2Node_Select_Default) == 0x0000CA, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x0000D0, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_SetMeterParam_Value_ImplicitCast) == 0x0000D8, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_SetMeterParam_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000DC, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetControlGaugeValue
// 0x0008 (0x0008 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue) == 0x000008, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue) == 0x000008, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue, InValue) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetControlGaugeValue::InValue' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetControlIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon final
{
public:
	int32                                         InSwitcherIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InButtonIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon) == 0x000004, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon) == 0x000008, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon, InSwitcherIndex) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon::InSwitcherIndex' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon, InButtonIndex) == 0x000004, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetControlIcon::InButtonIndex' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetPlatformIcon
// 0x0001 (0x0001 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon final
{
public:
	ECrossplayPlatform                            InPlatformType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon) == 0x000001, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon) == 0x000001, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon, InPlatformType) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetPlatformIcon::InPlatformType' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetPlayerIcon
// 0x0040 (0x0040 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              InIconTexture;                                     // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FLinearColor                           InBgColor;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNowPlaying;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon) == 0x000008, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon) == 0x000040, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon, InIconTexture) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon::InIconTexture' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon, InBgColor) == 0x000028, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon::InBgColor' has a wrong offset!");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon, bInNowPlaying) == 0x000038, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIcon::bInNowPlaying' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetPlayerIconVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible) == 0x000001, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible) == 0x000001, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible, bInVisible) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerIconVisible::bInVisible' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetPlayerNameText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText) == 0x000008, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText) == 0x000010, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText, InText) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetPlayerNameText::InText' has a wrong offset!");

// Function WBP_Sub_Friend_LobbyNoticePlate.WBP_Sub_Friend_LobbyNoticePlate_C.SetRaceCustomVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility final
{
public:
	bool                                          IsRaceSequence;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility) == 0x000001, "Wrong alignment on WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility");
static_assert(sizeof(WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility) == 0x000001, "Wrong size on WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility");
static_assert(offsetof(WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility, IsRaceSequence) == 0x000000, "Member 'WBP_Sub_Friend_LobbyNoticePlate_C_SetRaceCustomVisibility::IsRaceSequence' has a wrong offset!");

}

