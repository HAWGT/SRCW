#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Popup_Window_Text_Scroll

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Popup_Window_Text_Scroll.WBP_Popup_Window_Text_Scroll_C
// 0x00D8 (0x04C8 - 0x03F0)
class UWBP_Popup_Window_Text_Scroll_C final : public UUnionUIPopupWindowBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Popup_Out;                                         // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Popup_Loop;                                        // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Popup_In;                                          // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcher*                        DSP_WS_HeaderText;                                 // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_Blue;                                       // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_JaggyOff_L02;                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone;                                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Info;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_MainTitle;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_MainTitle_Attention;                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Popup_Sub_Btn_Standard_C*          WBP_Popup_Sub_Btn_Standard_01;                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Popup_Sub_Btn_Standard_C*          WBP_Popup_Sub_Btn_Standard_02;                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WindowBase;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUnionUIButtonBase*>             Buttons;                                           // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	EPopupWindowType                              WindowType;                                        // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPopupWindowButtonType                        ButtonType;                                        // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonsPanel*                   ButtonPanel;                                       // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DecisionButtonIndex;                               // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              FinishedLicenseOutAnimation;                       // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          UpKeyInput;                                        // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DownKeyInput;                                      // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ScrollOffset;                                      // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Popup_Window_Text_Scroll(int32 EntryPoint);
	class UWidgetAnimation* GetAnimationIn();
	class UWidgetAnimation* GetAnimationLoop();
	class UWidgetAnimation* GetAnimationOut();
	void GetButton(int32 ButtonIndex, class UUnionUIButtonBase** OutButton);
	void GetNoButton(class UUnionUIButtonBase** NoButton);
	EPopupWindowButtonType GetPopupWindowButtonType();
	EPopupWindowType GetPopupWindowType();
	void GetYesButton(class UUnionUIButtonBase** YesButton);
	void InitParam(EPopupWindowButtonType ButtonType_0);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnAcceptKeyReleased();
	void OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnAnimationInFinished();
	void OnBackKeyPressed();
	void OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnBackKeyReleased();
	void OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnButtonDecision(class UUnionUIButtonBase* Button);
	void OnDownKeyPressed();
	void OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnDownKeyReleased();
	void OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnFaceButtonLeftPressed();
	void OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnFaceButtonLeftReleased();
	void OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnFaceButtonTopPressed();
	void OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnFaceButtonTopReleased();
	void OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnFinishedOutAnimation();
	void OnLeftKeyPressed();
	void OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnLeftKeyReleased();
	void OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnLeftShoulderPressed();
	void OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnLeftShoulderReleased();
	void OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnLeftStickAxis(const struct FVector2D& Value);
	void OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex_0);
	void OnLeftStickButtonPressed();
	void OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnLeftStickButtonReleased();
	void OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnPanelDecision_Impl(class UUnionUIButtonBase* Button, int32 ButtonIndex);
	void OnRightKeyPressed();
	void OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnRightKeyReleased();
	void OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnRightShoulderPressed();
	void OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnRightShoulderReleased();
	void OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnRightStickAxis(const struct FVector2D& Value);
	void OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex_0);
	void OnRightStickButtonPressed();
	void OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnRightStickButtonReleased();
	void OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnSpecialPressed();
	void OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnSpecialReleased();
	void OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnUpKeyPressed();
	void OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex_0);
	void OnUpKeyReleased();
	void OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex_0);
	void PlayAnimationIn();
	void SetButtonControlDelayTime(float InTime);
	void SetButtonText(const TArray<class FText>& BtnTextArray);
	void SetDisplayFooterButton(const bool InDisplay);
	void SetDonpaTicketCount(int32 CurrentCount, int32 AfterCount);
	void SetEnableInput(bool InEnable);
	void SetFooterMenuBtn(int32 BtnIconIndex, int32 BtnIconType, const class FText& BtnText);
	void SetImageButtonSelectText(const class FText& InText);
	void SetImageTexture(const class UTexture2D* Texture2D);
	void SetInitialFocusButtonIndex(const int32 InButtonIndex);
	void SetPopupInfoDisplayIndex(int32 Index_0);
	void SetPopupInfoMainMenuButtonIconIndex(int32 Btn01IconIndex, int32 Btn02IconIndex);
	void SetPopupWindowButtonType(EPopupWindowButtonType ButtonType_0);
	void SetPopupWindowType(EPopupWindowType WindowType_0);
	void SetTextMessege(const class FText& Text);
	void SetTextTitle(const class FText& Text, bool Attension);
	void SilentFocusReady(bool bOnce);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Popup_Window_Text_Scroll_C">();
	}
	static class UWBP_Popup_Window_Text_Scroll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Popup_Window_Text_Scroll_C>();
	}
};
static_assert(alignof(UWBP_Popup_Window_Text_Scroll_C) == 0x000008, "Wrong alignment on UWBP_Popup_Window_Text_Scroll_C");
static_assert(sizeof(UWBP_Popup_Window_Text_Scroll_C) == 0x0004C8, "Wrong size on UWBP_Popup_Window_Text_Scroll_C");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, UberGraphFrame) == 0x0003F0, "Member 'UWBP_Popup_Window_Text_Scroll_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, Popup_Out) == 0x0003F8, "Member 'UWBP_Popup_Window_Text_Scroll_C::Popup_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, Popup_Loop) == 0x000400, "Member 'UWBP_Popup_Window_Text_Scroll_C::Popup_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, Popup_In) == 0x000408, "Member 'UWBP_Popup_Window_Text_Scroll_C::Popup_In' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, DSP_WS_HeaderText) == 0x000410, "Member 'UWBP_Popup_Window_Text_Scroll_C::DSP_WS_HeaderText' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, Header_Blue) == 0x000418, "Member 'UWBP_Popup_Window_Text_Scroll_C::Header_Blue' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, RetainerBox) == 0x000420, "Member 'UWBP_Popup_Window_Text_Scroll_C::RetainerBox' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, RetainerBox_0) == 0x000428, "Member 'UWBP_Popup_Window_Text_Scroll_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, RetainerBox_JaggyOff_L02) == 0x000430, "Member 'UWBP_Popup_Window_Text_Scroll_C::RetainerBox_JaggyOff_L02' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, SafeZone) == 0x000438, "Member 'UWBP_Popup_Window_Text_Scroll_C::SafeZone' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, ScrollBox) == 0x000440, "Member 'UWBP_Popup_Window_Text_Scroll_C::ScrollBox' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, SizeBox) == 0x000448, "Member 'UWBP_Popup_Window_Text_Scroll_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, TXT_Info) == 0x000450, "Member 'UWBP_Popup_Window_Text_Scroll_C::TXT_Info' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, TXT_MainTitle) == 0x000458, "Member 'UWBP_Popup_Window_Text_Scroll_C::TXT_MainTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, TXT_MainTitle_Attention) == 0x000460, "Member 'UWBP_Popup_Window_Text_Scroll_C::TXT_MainTitle_Attention' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, WBP_Popup_Sub_Btn_Standard_01) == 0x000468, "Member 'UWBP_Popup_Window_Text_Scroll_C::WBP_Popup_Sub_Btn_Standard_01' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, WBP_Popup_Sub_Btn_Standard_02) == 0x000470, "Member 'UWBP_Popup_Window_Text_Scroll_C::WBP_Popup_Sub_Btn_Standard_02' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, WindowBase) == 0x000478, "Member 'UWBP_Popup_Window_Text_Scroll_C::WindowBase' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, Buttons) == 0x000480, "Member 'UWBP_Popup_Window_Text_Scroll_C::Buttons' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, WindowType) == 0x000490, "Member 'UWBP_Popup_Window_Text_Scroll_C::WindowType' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, ButtonType) == 0x000491, "Member 'UWBP_Popup_Window_Text_Scroll_C::ButtonType' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, ButtonPanel) == 0x000498, "Member 'UWBP_Popup_Window_Text_Scroll_C::ButtonPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, PlayerControllerIndex) == 0x0004A0, "Member 'UWBP_Popup_Window_Text_Scroll_C::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, DecisionButtonIndex) == 0x0004A4, "Member 'UWBP_Popup_Window_Text_Scroll_C::DecisionButtonIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, FinishedLicenseOutAnimation) == 0x0004A8, "Member 'UWBP_Popup_Window_Text_Scroll_C::FinishedLicenseOutAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, UpKeyInput) == 0x0004B8, "Member 'UWBP_Popup_Window_Text_Scroll_C::UpKeyInput' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, DownKeyInput) == 0x0004B9, "Member 'UWBP_Popup_Window_Text_Scroll_C::DownKeyInput' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Text_Scroll_C, ScrollOffset) == 0x0004C0, "Member 'UWBP_Popup_Window_Text_Scroll_C::ScrollOffset' has a wrong offset!");

}

