#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Movie_Subtitles

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Movie_Subtitles.WBP_Movie_Subtitles_C.ExecuteUbergraph_WBP_Movie_Subtitles
// 0x0020 (0x0020 - 0x0000)
struct WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As_____2D;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles) == 0x000008, "Wrong alignment on WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles");
static_assert(sizeof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles) == 0x000020, "Wrong size on WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles");
static_assert(offsetof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles, EntryPoint) == 0x000000, "Member 'WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000005, "Member 'WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles, K2Node_DynamicCast_As_____2D) == 0x000010, "Member 'WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles::K2Node_DynamicCast_As_____2D' has a wrong offset!");
static_assert(offsetof(WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Movie_Subtitles_C_ExecuteUbergraph_WBP_Movie_Subtitles::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Movie_Subtitles.WBP_Movie_Subtitles_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Movie_Subtitles_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Movie_Subtitles_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Movie_Subtitles_C_PreConstruct");
static_assert(sizeof(WBP_Movie_Subtitles_C_PreConstruct) == 0x000001, "Wrong size on WBP_Movie_Subtitles_C_PreConstruct");
static_assert(offsetof(WBP_Movie_Subtitles_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Movie_Subtitles_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Movie_Subtitles.WBP_Movie_Subtitles_C.SetVisibleForRivalRacerSubRivalRacerInfo
// 0x0001 (0x0001 - 0x0000)
struct WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo) == 0x000001, "Wrong alignment on WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo");
static_assert(sizeof(WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo) == 0x000001, "Wrong size on WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo");
static_assert(offsetof(WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo, InVisibility) == 0x000000, "Member 'WBP_Movie_Subtitles_C_SetVisibleForRivalRacerSubRivalRacerInfo::InVisibility' has a wrong offset!");

}

