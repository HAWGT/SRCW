#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Player01

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "InputCore_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.AddCourseMapActor
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Player01_C_AddCourseMapActor final
{
public:
	class AActor*                                 InAttackItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EItemId                                       InItemId;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_AddCourseMapActor) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_AddCourseMapActor");
static_assert(sizeof(WBP_Race_HUD_Player01_C_AddCourseMapActor) == 0x000010, "Wrong size on WBP_Race_HUD_Player01_C_AddCourseMapActor");
static_assert(offsetof(WBP_Race_HUD_Player01_C_AddCourseMapActor, InAttackItem) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_AddCourseMapActor::InAttackItem' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_AddCourseMapActor, InItemId) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_AddCourseMapActor::InItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.AddToHUDAttackInfoWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget final
{
public:
	TArray<class URaceUISubApproachWarning*>      InAttackWidget;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	EUnionAttackItemInfoType                      InItemType;                                        // 0x0010(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         InId;                                              // 0x0011(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget");
static_assert(sizeof(WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget) == 0x000018, "Wrong size on WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget");
static_assert(offsetof(WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget, InAttackWidget) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget::InAttackWidget' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget, InItemType) == 0x000010, "Member 'WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget::InItemType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget, InId) == 0x000011, "Member 'WBP_Race_HUD_Player01_C_AddToHUDAttackInfoWidget::InId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.AfterFireManualAimingUI
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_AfterFireManualAimingUI final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_AfterFireManualAimingUI) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_AfterFireManualAimingUI");
static_assert(sizeof(WBP_Race_HUD_Player01_C_AfterFireManualAimingUI) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_AfterFireManualAimingUI");
static_assert(offsetof(WBP_Race_HUD_Player01_C_AfterFireManualAimingUI, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_AfterFireManualAimingUI::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.ApplyBoost
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_ApplyBoost final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_ApplyBoost) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_ApplyBoost");
static_assert(sizeof(WBP_Race_HUD_Player01_C_ApplyBoost) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_ApplyBoost");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ApplyBoost, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_ApplyBoost::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.ApplyJustBoost
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_ApplyJustBoost final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_ApplyJustBoost) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_ApplyJustBoost");
static_assert(sizeof(WBP_Race_HUD_Player01_C_ApplyJustBoost) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_ApplyJustBoost");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ApplyJustBoost, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_ApplyJustBoost::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ApplyJustBoost, Level) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_ApplyJustBoost::Level' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.ChangeRingBoostGaugeToBoost
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost");
static_assert(sizeof(WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToBoost::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.ChangeRingBoostGaugeToNormal
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal");
static_assert(sizeof(WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_ChangeRingBoostGaugeToNormal::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.CheckRivalInScreen
// 0x0050 (0x0050 - 0x0000)
struct WBP_Race_HUD_Player01_C_CheckRivalInScreen final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                RivalStatusObj;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible_0;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRearView_IsRearView;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInScreen_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInScreen_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_CheckRivalInScreen) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_CheckRivalInScreen");
static_assert(sizeof(WBP_Race_HUD_Player01_C_CheckRivalInScreen) == 0x000050, "Wrong size on WBP_Race_HUD_Player01_C_CheckRivalInScreen");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, RivalStatusObj) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::RivalStatusObj' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, IsVisible_0) == 0x000010, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::IsVisible_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_IsRearView_IsRearView) == 0x000040, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_IsRearView_IsRearView' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_IsInScreen_ReturnValue) == 0x000041, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_IsInScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_IsInScreen_ReturnValue_1) == 0x000042, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_IsInScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CheckRivalInScreen, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000048, "Member 'WBP_Race_HUD_Player01_C_CheckRivalInScreen::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.CreateTimeTrialLapWidget
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget final
{
public:
	int32                                         LapNo;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget");
static_assert(sizeof(WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget");
static_assert(offsetof(WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget, LapNo) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_CreateTimeTrialLapWidget::LapNo' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DebugUpdate
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_DebugUpdate final
{
public:
	double                                        DebugElapsedTime_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DebugUpdate) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_DebugUpdate");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DebugUpdate) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_DebugUpdate");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DebugUpdate, DebugElapsedTime_0) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DebugUpdate::DebugElapsedTime_0' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DecideLotteryItem
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_DecideLotteryItem final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InItemId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DecideLotteryItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DecideLotteryItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DecideLotteryItem) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_DecideLotteryItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DecideLotteryItem, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DecideLotteryItem::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DecideLotteryItem, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_DecideLotteryItem::ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DecideLotteryItem, InItemId) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_DecideLotteryItem::InItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOffControlGuideFlight
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOffControlGuideFlight final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOffControlGuideFlight) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOffControlGuideFlight");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOffControlGuideFlight) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_DispOffControlGuideFlight");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOffControlGuideFlight, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOffControlGuideFlight::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOffControlItemUse
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOffControlItemUse final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOffControlItemUse) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOffControlItemUse");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOffControlItemUse) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_DispOffControlItemUse");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOffControlItemUse, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOffControlItemUse::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOffControlReleaseItemEffect
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOffControlReleaseItemEffect::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOffRaceActionTutorial
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOffRaceActionTutorial::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOnControlGuideFlight
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOnControlGuideFlight final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuggestUpInput;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOnControlGuideFlight) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOnControlGuideFlight");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOnControlGuideFlight) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_DispOnControlGuideFlight");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlGuideFlight, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOnControlGuideFlight::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlGuideFlight, bSuggestUpInput) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_DispOnControlGuideFlight::bSuggestUpInput' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOnControlItemUse
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOnControlItemUse final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       ItemId;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFever;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOnControlItemUse) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOnControlItemUse");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOnControlItemUse) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_DispOnControlItemUse");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlItemUse, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOnControlItemUse::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlItemUse, ItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_DispOnControlItemUse::ItemId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlItemUse, bIsFever) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_DispOnControlItemUse::bIsFever' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOnControlReleaseItemEffect
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       ItemId;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect, ItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_DispOnControlReleaseItemEffect::ItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOnInterimReport
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOnInterimReport final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOnInterimReport) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOnInterimReport");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOnInterimReport) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_DispOnInterimReport");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnInterimReport, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOnInterimReport::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispOnRaceActionTutorial
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               tutorialAction_0;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial, tutorialAction_0) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_DispOnRaceActionTutorial::tutorialAction_0' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.DispTimeTrialLapDiff
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff final
{
public:
	int32                                         LapNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff");
static_assert(sizeof(WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff");
static_assert(offsetof(WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff, LapNum) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_DispTimeTrialLapDiff::LapNum' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.ExecuteUbergraph_WBP_Race_HUD_Player01
// 0x1920 (0x1920 - 0x0000)
struct WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFireAttackItemInfo                    K2Node_Event_Info;                                 // 0x0008(0x0030)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerIndex_OutRacerIndex;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsViewGhostReplay_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserGadgetPresetData                  CallFunc_GetTimeTiralGadgetPresetData_ReturnValue; // 0x0048(0x0010)()
	bool                                          CallFunc_IsViewGhostReplay_ReturnValue_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0060(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0070(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_DebugElapsedTime;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsViewGhostReplay_ReturnValue_2;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_2;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_3;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_2;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_66;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InItemId_6;                           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_65;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InMinutes;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InSecondes;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InMilliSec;                           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_64;             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InRankIndex;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_63;             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InItemId_5;                           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AttackToPlayerControllerIndex;        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_InLoadedPrimaryTextureAsset;    // 0x01B0(0x0028)(HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_InOrthoRatePerCourse;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_Event_CourseTexture;                        // 0x01E0(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	float                                         K2Node_Event_OrthoRate;                            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Angle;                                // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Offset;                               // 0x0210(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RacerIndex_6;                         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_62;             // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InRacerIndex_1;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsLocalPlayer;                        // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_61;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_60;             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ChangeAmount;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_59;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_28;                          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGhostOnline_ReturnValue;                // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27B[0x1];                                      // 0x027B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_58;             // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InItemId_4;                           // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_57;             // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_GaugeRate_1;                          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionRaceStartUI*>              K2Node_MakeArray_Array;                            // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         K2Node_Event_StartCount;                           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* WidgetRef)>     K2Node_CreateDelegate_OutputDelegate;              // 0x02AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_56;             // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_7;                       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_55;             // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_6;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSilent;                            // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URaceUISubApproachWarning*>      K2Node_Event_InAttackWidget_1;                     // 0x02D0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	EUnionAttackItemInfoType                      K2Node_Event_InItemType;                           // 0x02E0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InId;                                 // 0x02E1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URaceUISubApproachWarning*              CallFunc_Array_Get_Item;                           // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_ItemWarning_C*        K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Item_Warning; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0318(0x0010)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchorData                            CallFunc_GetLayout_ReturnValue;                    // 0x0340(0x0040)(NoDestructor)
	bool                                          K2Node_Event_bIn;                                  // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_Event_OnAnimationEndEvent;                  // 0x0384(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_TimeTrial_Time_C*     K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Time_Trial_Time; // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPause;                               // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x03B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_ItemWarning_C*        K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Item_Warning_1; // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_54;             // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_5;                       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewRate;                              // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_27;                          // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x2];                                      // 0x03F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_RacerIndex_5;                         // 0x03F4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       K2Node_Event_InItemId_3;                           // 0x03F8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_RacerIndex_4;                         // 0x03FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMinimapIconType                              K2Node_Event_InMinimapIconType;                    // 0x0400(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_53;             // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_RankAfterIndex;                       // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_26;                          // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A[0x6];                                      // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InAttackItem_1;                       // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EItemId                                       K2Node_Event_InItemId_2;                           // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InAttackItem;                         // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_52;             // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable_1;                            // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0430(0x0004)()
	int32                                         K2Node_Event_PlayerControllerIndex_51;             // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bActive_1;                            // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue;                  // 0x043C(0x0004)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_50;             // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_EventId;                              // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x044E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F[0x1];                                      // 0x044F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_456[0x2];                                      // 0x0456(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARacePlayerController*                  K2Node_DynamicCast_AsRace_Player_Controller;       // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x046C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetMappableKeyByMappingName_ReturnValue;  // 0x0478(0x0018)(HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue;               // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerIndexByPlayerID_ReturnValue;      // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x04A0(0x0004)()
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue_1;                // 0x04A4(0x0004)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_4;          // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EUnionRaceHUDItemIconsState>           K2Node_MakeArray_Array_1;                          // 0x04C8(0x0010)(ReferenceParm)
	TArray<class UCanvasPanelSlot*>               K2Node_MakeArray_Array_2;                          // 0x04D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         K2Node_Event_PlayerControllerIndex_49;             // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable_2;                             // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE[0x2];                                      // 0x04EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ScreenIndex_4;                        // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_48;             // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_ScreenPosition_1;                     // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_name;                                 // 0x0508(0x0010)(ConstParm)
	bool                                          K2Node_Event_bIsView_1;                            // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ScreenIndex_3;                        // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_47;             // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_ScreenPosition;                       // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsView;                              // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A[0x2];                                      // 0x053A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ScreenIndex_2;                        // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERacerReactionWindow                          K2Node_Event_WindowId;                             // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_TextId;                               // 0x0548(0x0010)(ConstParm)
	int32                                         K2Node_Event_DriverId;                             // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array_3;                          // 0x0560(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_46;             // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_GaugeRate;                            // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_45;             // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Pivot;                                // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Range;                                // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_44;             // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_25;                          // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x058D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E[0x2];                                      // 0x058E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_43;             // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetId                                     K2Node_Event_Gadget;                               // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bActive;                              // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x0596(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_597[0x1];                                      // 0x0597(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URaceUISubAirTrickInfo*>         K2Node_MakeArray_Array_4;                          // 0x0598(0x0010)(ReferenceParm, ContainsInstancedReference)
	ERaceSettingSpecialGadgetUsing                CallFunc_GetRaceSettingGadgetUsing_ReturnValue;    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ScreenIndex_1;                        // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRacerReactionVoice                    K2Node_Event_SerifUIData;                          // 0x05B0(0x00A0)(ConstParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_42;             // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_24;                          // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659[0x3];                                      // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_41;             // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_23;                          // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x3];                                      // 0x0661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_40;             // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_22;                          // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x3];                                      // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_39;             // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_PlayerLocation;                       // 0x0670(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x3];                                      // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_38;             // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_1;             // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F2[0x2];                                      // 0x06F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue; // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_37;             // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_4;                       // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_21;                          // 0x06FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FE[0x2];                                      // 0x06FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_17;         // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_TimeTrial_LAP_Time_C* CallFunc_Array_Get_Item_2;                         // 0x0718(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_5;                          // 0x0720(0x0010)(ReferenceParm)
	class UWBP_Race_HUD_Sub_TimeTrial_LAP_Time_C* CallFunc_Array_Get_Item_3;                         // 0x0730(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_2;                  // 0x0738(0x0004)()
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue_2;                // 0x073C(0x0004)()
	int32                                         K2Node_Event_ScreenIndex;                          // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_36;             // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            K2Node_Event_InPlatform;                           // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x3];                                      // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_35;             // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                K2Node_Event_RivalStatusObj;                       // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class URaceUISubPlayerName*>           K2Node_MakeArray_Array_6;                          // 0x0758(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsRivalPowerful_ReturnValue;              // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUnionRaceHUDPlayerNameUI              K2Node_MakeStruct_UnionRaceHUDPlayerNameUI;        // 0x0770(0x0010)(ContainsInstancedReference)
	TArray<struct FUnionRaceHUDPlayerNameUI>      K2Node_MakeArray_Array_7;                          // 0x0780(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRacerName_ReturnValue;                 // 0x0798(0x0010)()
	bool                                          CallFunc_CheckRivalInScreen_IsVisible;             // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0808(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0820(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1; // 0x0848(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_1; // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_859[0x7];                                      // 0x0859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x0860(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x0870(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0878(0x0010)()
	TArray<class URaceUISubPlayerName*>           K2Node_MakeArray_Array_8;                          // 0x0888(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x3];                                      // 0x0899(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InRacerIndex;                         // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_2;             // 0x08A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPubCameraPlayRace_ReturnValue;          // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A9[0x3];                                      // 0x08A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue; // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_18;         // 0x08B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x08B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B3[0x1];                                      // 0x08B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_34;             // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SpeedKMPH;                            // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_19;         // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x08BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BE[0x2];                                      // 0x08BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_33;             // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable_1;                             // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C5[0x3];                                      // 0x08C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_32;             // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_level_1;                              // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_rate;                                 // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_20;         // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_21;         // 0x08D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D6[0x2];                                      // 0x08D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_31;             // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_level;                                // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_22;         // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_30;             // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_23;         // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_29;             // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable;                               // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_24;         // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x2];                                      // 0x08F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_28;             // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Percent_2;                            // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_25;         // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FD[0x3];                                      // 0x08FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_26;         // 0x0904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_905[0x3];                                      // 0x0905(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_27;         // 0x090C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90D[0x3];                                      // 0x090D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Percent_1;                            // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_28;         // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_919[0x3];                                      // 0x0919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       K2Node_Event_ItemId_2;                             // 0x0924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_925[0x3];                                      // 0x0925(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_29;         // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_30;         // 0x092D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92E[0x2];                                      // 0x092E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_20;                          // 0x0934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_935[0x3];                                      // 0x0935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Scale;                                // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsScaleKeepInHoming;                  // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93D[0x3];                                      // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_944[0x4];                                      // 0x0944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0948(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatrix                                K2Node_Event_Rotation;                             // 0x0960(0x0080)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector4                               CallFunc_Matrix_TransformVector_ReturnValue;       // 0x09E0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_X;                           // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y;                           // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z;                           // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W;                           // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRearView_IsRearView;                    // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLockOn;                            // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4D[0x3];                                      // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0A50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceSettingSpecialGadgetUsing                CallFunc_GetRaceSettingGadgetUsing_ReturnValue_1;  // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x3];                                      // 0x0A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0A78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_3;                  // 0x0A80(0x0004)()
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0A88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue_3;                // 0x0A90(0x0004)()
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       K2Node_Event_ItemId_1;                             // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFever;                             // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9A[0x2];                                      // 0x0A9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_31;         // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_32;         // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA2[0xE];                                      // 0x0AA2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAppRaceConfigData                     CallFunc_GetAppRaceConfigData_OutData;             // 0x0AB0(0x0490)()
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F41[0x7];                                      // 0x0F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As_____2D;                      // 0x0F50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0F58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F59[0x3];                                      // 0x0F59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_RacerIndex_3;                         // 0x0F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       K2Node_Event_ItemId;                               // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_3;                       // 0x0F61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F62[0x2];                                      // 0x0F62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_LostItemCount;                        // 0x0F64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InRingNum;                            // 0x0F6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_33;         // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F71[0x3];                                      // 0x0F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x0F74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RingIndex;                            // 0x0F78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x0F7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RacerIndex_2;                         // 0x0F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_34;         // 0x0F84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0F85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F86[0x2];                                      // 0x0F86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_2;                       // 0x0F8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8D[0x3];                                      // 0x0F8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InItemId_1;                           // 0x0F90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0F94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_35;         // 0x0F95(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_36;         // 0x0F96(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F97[0x1];                                      // 0x0F97(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x0F98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType_1;                       // 0x0F9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9D[0x3];                                      // 0x0F9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InItemId;                             // 0x0FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_37;         // 0x0FA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0FA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0FA6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0FA7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RacerIndex_1;                         // 0x0FA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemSet                               K2Node_Event_PrevItemSet;                          // 0x0FAC(0x0003)(ConstParm, NoDestructor)
	struct FItemSet                               K2Node_Event_NewItemSet;                           // 0x0FAF(0x0003)(ConstParm, NoDestructor)
	uint8                                         Pad_FB2[0x2];                                      // 0x0FB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_RacerIndex;                           // 0x0FB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGroupRace_ReturnValue;                  // 0x0FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0FB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGroupRace_ReturnValue_1;                // 0x0FBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0FBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0FBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FBD[0x3];                                      // 0x0FBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0FC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x0FC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               K2Node_Event_TutorialAction_1;                     // 0x0FCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FCD[0x3];                                      // 0x0FCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUnionVehicleRaceObjectInterface> K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface; // 0x0FD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_38;         // 0x0FE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0FE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE3[0x5];                                      // 0x0FE3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetButtonWidget_ReturnValue;              // 0x0FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 K2Node_Event_ItemInfoType;                         // 0x0FF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0FF5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF6[0x2];                                      // 0x0FF6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_39;         // 0x0FFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFD[0x3];                                      // 0x0FFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x1000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1005[0x3];                                     // 0x1005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x100C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserGadgetData                        CallFunc_Array_Get_Item_4;                         // 0x1010(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x1018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x1019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x101A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x101B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x101C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_40;         // 0x1020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1021[0x7];                                     // 0x1021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_StartDash_Sub_ArcGauge_C*     K2Node_DynamicCast_AsWBP_Race_Start_Dash_Sub_Arc_Gauge; // 0x1028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x1030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1031[0x7];                                     // 0x1031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_3;             // 0x1038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue_1; // 0x1040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_41;         // 0x1044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1045[0x3];                                     // 0x1045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x1048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1051[0x7];                                     // 0x1051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URaceUISubBoost*>                K2Node_MakeArray_Array_9;                          // 0x1058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_Event_bVisible_19;                          // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_18;                          // 0x1069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106A[0x6];                                     // 0x106A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_StartUI;                        // 0x1070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_17;                          // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_16;                          // 0x1079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_15;                          // 0x107A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_14;                          // 0x107B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceInfoStateType                            K2Node_Event_InNewState;                           // 0x107C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceInfoStateType                            K2Node_Event_InOldState;                           // 0x107D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_13;                          // 0x107E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_107F[0x1];                                     // 0x107F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InNewValue;                           // 0x1080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InOldValue;                           // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x108C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x108D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_12;                          // 0x108E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108F[0x1];                                     // 0x108F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x1090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFlagOnly;                            // 0x1094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsViewGhostReplay_ReturnValue_3;          // 0x1095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_11;                          // 0x1096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_10;                          // 0x1097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_9;                           // 0x1098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_8;                           // 0x1099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109A[0x2];                                     // 0x109A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x109C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class URaceUISubApproachWarning*        K2Node_Event_InAttackWidget;                       // 0x10A0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_42;         // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A9[0x7];                                     // 0x10A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x10B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_7;                           // 0x10B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_6;                           // 0x10B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_5;                           // 0x10BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x10BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_4;                           // 0x10BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_3;                           // 0x10BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGuideButtonHidden_ReturnValue;     // 0x10BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceType                                     CallFunc_GetSelectedRaceType_ReturnValue;          // 0x10BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x10C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x10C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x10C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LapNum;                         // 0x10C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x10C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x10C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CA[0x2];                                     // 0x10CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LapNo;                          // 0x10CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x10D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x10D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x10D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x10D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D7[0x1];                                     // 0x10D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x10DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               K2Node_Event_TutorialAction;                       // 0x10E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_43;         // 0x10E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E2[0x2];                                     // 0x10E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x10E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_5;                         // 0x10E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E9[0x7];                                     // 0x10E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_TimeTrial_LAP_Time_C* CallFunc_Array_Get_Item_6;                         // 0x10F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_TimeTrial_LAP_Time_C* CallFunc_Array_Get_Item_7;                         // 0x10F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x1100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x1110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x1111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x1112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x1113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x1114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x1115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x1116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1117[0x1];                                     // 0x1117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x1118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x1120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x112C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuggestUpInput;                      // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_44;         // 0x1131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_45;         // 0x1132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1133[0x5];                                     // 0x1133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_ItemIcon_C*           CallFunc_GetItemIcon_ItemIcon;                     // 0x1138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_ItemIcon_C*           CallFunc_GetItemIconByItemInfoType_ItemIcon;       // 0x1140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_ItemIcon_Simple_C*    CallFunc_GetItemIconByItemInfoTypeSimple_NewParam; // 0x1148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UURaceUISubItemIconSet*>         K2Node_MakeArray_Array_10;                         // 0x1150(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_Race_HUD_Sub_ItemIcon_C*           CallFunc_GetItemIcon_ItemIcon_1;                   // 0x1160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMenuSpeedClassId                             CallFunc_GetSelectedMenuSpeedClassId_ReturnValue;  // 0x1168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1169[0x7];                                     // 0x1169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UURaceUISubItemIconSet*>         K2Node_MakeArray_Array_11;                         // 0x1170(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1181[0x7];                                     // 0x1181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_GetRedStarRingAcquisitionPerStage_ReturnValue; // 0x1188(0x0010)(ReferenceParm)
	uint8                                         Pad_1198[0x8];                                     // 0x1198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAppRaceConfigData                     CallFunc_GetAppRaceConfigData_OutData_1;           // 0x11A0(0x0490)()
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x1630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x1634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x1635(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateLapTime_IsBestLap;                  // 0x1636(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1637[0x1];                                     // 0x1637(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRaceUITimeTrialTime                   CallFunc_UpdateLapTime_ReturnValue;                // 0x1638(0x0020)(NoDestructor)
	TArray<class URaceUISubLap*>                  K2Node_MakeArray_Array_12;                         // 0x1658(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x1668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InLapCountNow;                        // 0x166C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InLapCountMax;                        // 0x1670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x1674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_46;         // 0x1675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1676[0x2];                                     // 0x1676(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_4;                  // 0x1678(0x0004)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x167C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_167D[0x3];                                     // 0x167D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue_4;                // 0x1680(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_5;                  // 0x1684(0x0004)()
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue_5;                // 0x1688(0x0004)()
	uint8                                         Pad_168C[0x4];                                     // 0x168C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x1690(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169A[0x2];                                     // 0x169A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x169C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_47;         // 0x16A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A1[0x3];                                     // 0x16A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x16A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_2;                           // 0x16A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x16A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16AA[0x6];                                     // 0x16AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URaceUISubTeamHUD*>              K2Node_MakeArray_Array_13;                         // 0x16B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_3;                              // 0x16C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C1[0x7];                                     // 0x16C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array_14;                         // 0x16C8(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default_3;                           // 0x16D8(0x0010)(ConstParm)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x16E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x16E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16EA[0x6];                                     // 0x16EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_TimeTrial_Time_C*     K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Time_Trial_Time_1; // 0x16F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x16F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDispGroupHUD_IsDisp;                    // 0x16F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x16FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x16FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x16FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Percent;                              // 0x1700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x1704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x1705(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_48;         // 0x1706(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible_1;                           // 0x1707(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x1708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x1709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x170A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x170B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x170C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x170D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_170E[0x2];                                     // 0x170E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URaceUISubAiming*>               K2Node_MakeArray_Array_15;                         // 0x1710(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_GetViewportScale_ReturnValue_2;           // 0x1720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1724[0x4];                                     // 0x1724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x1728(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_7;           // 0x1738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x1740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_2; // 0x1748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_2; // 0x1758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1759[0x7];                                     // 0x1759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_2;    // 0x1760(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_Stop_ReturnValue;                         // 0x1770(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x1774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x1775(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1776[0x2];                                     // 0x1776(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_Stop_ReturnValue_1;                       // 0x1778(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x177C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_177D[0x3];                                     // 0x177D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_4;             // 0x1780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue_2; // 0x1788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_49;         // 0x178C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178D[0x3];                                     // 0x178D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_StartDash_Sub_ArcGauge_C*     K2Node_DynamicCast_AsWBP_Race_Start_Dash_Sub_Arc_Gauge_1; // 0x1790(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsViewGhostReplay_ReturnValue_4;          // 0x1799(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x179A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x179B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x179C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugBoostHidden_ReturnValue;           // 0x179D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x179E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_6;                              // 0x179F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_2;              // 0x17A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x17A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x17A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A3[0x5];                                     // 0x17A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Normal_Gauge_Percent_GaugePercent;    // 0x17A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x17B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_7;                              // 0x17B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B2[0x2];                                     // 0x17B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRacerIndexByPlayerID_ReturnValue_1;    // 0x17B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_8;                              // 0x17B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x17B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17BA[0x6];                                     // 0x17BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Normal_Gauge_Percent_GaugePercent_1;  // 0x17C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_9;                              // 0x17C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x17C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_10;                             // 0x17CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuSpeedClassId                             Temp_byte_Variable_11;                             // 0x17CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17CC[0x4];                                     // 0x17CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Normal_Gauge_Percent_GaugePercent_2;  // 0x17D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 K2Node_Select_Default_5;                           // 0x17D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTimeTrialRaceData_bOutIsGhostValid;    // 0x17D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17DA[0x6];                                     // 0x17DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserTimeTrialRaceData                 CallFunc_GetTimeTrialRaceData_ReturnValue;         // 0x17E0(0x0050)()
	ESpeedClassId                                 Temp_byte_Variable_12;                             // 0x1830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_13;                             // 0x1831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_14;                             // 0x1832(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1833[0x1];                                     // 0x1833(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x1834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_15;                             // 0x1838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 Temp_byte_Variable_16;                             // 0x1839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_50;         // 0x183A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsOnlineGameMode_ReturnValue;          // 0x183B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x183C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x1840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuSpeedClassId                             Temp_byte_Variable_17;                             // 0x1844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1845[0x3];                                     // 0x1845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_8;                         // 0x1848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x184C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpeedClassId                                 K2Node_Select_Default_6;                           // 0x1850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1851[0x3];                                     // 0x1851(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTimeTrialTargetTime_ReturnValue;       // 0x1854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGroupIndex_ReturnValue;                // 0x1858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_51;         // 0x185C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185D[0x3];                                     // 0x185D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRacerIndex_OutRacerIndex_1;            // 0x1860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            CallFunc_GetPlatformType_ReturnValue;              // 0x1864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1865[0x3];                                     // 0x1865(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerControllerIndex_OutPlayerControllerIndex; // 0x1868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x186C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x186D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRivalPowerful_ReturnValue_1;            // 0x186E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRivalCom_ReturnValue;                   // 0x186F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x1870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGroupRace_ReturnValue_2;                // 0x1874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1875[0x3];                                     // 0x1875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast; // 0x1878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1; // 0x187C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_2; // 0x1880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1884[0x4];                                     // 0x1884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetLifeTime_NewRate_ImplicitCast;         // 0x1888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitItemEnemyApproachSetting_InMaxScale_ImplicitCast; // 0x1890(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1894[0x4];                                     // 0x1894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x1898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x18A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast_1;            // 0x18A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast_1;            // 0x18B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ChargeGaugePer_ImplicitCast;    // 0x18B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x18C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetBoostGaugePercent_Percent_ImplicitCast; // 0x18C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ManualAimingScale_ImplicitCast; // 0x18D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast; // 0x18D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18DC[0x4];                                     // 0x18DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetNormalGaugePercent_Percent_ImplicitCast; // 0x18E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x18E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast_2;            // 0x18F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast_2;            // 0x18F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_1; // 0x1900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_2; // 0x1904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_3; // 0x1908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast; // 0x190C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_1; // 0x1910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_2; // 0x1914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_3; // 0x1918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01) == 0x000010, "Wrong alignment on WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01");
static_assert(sizeof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01) == 0x001920, "Wrong size on WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, EntryPoint) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Info) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Info' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerIndex_OutRacerIndex) == 0x00003C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerIndex_OutRacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsViewGhostReplay_ReturnValue) == 0x000040, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsViewGhostReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetTimeTiralGadgetPresetData_ReturnValue) == 0x000048, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetTimeTiralGadgetPresetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsViewGhostReplay_ReturnValue_1) == 0x000058, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsViewGhostReplay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralText_ReturnValue) == 0x000060, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000070, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CustomEvent_DebugElapsedTime) == 0x000088, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CustomEvent_DebugElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector2D_X) == 0x000090, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SelectInt_ReturnValue) == 0x0000A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0000A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_FClamp_ReturnValue) == 0x0000E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsViewGhostReplay_ReturnValue_2) == 0x000108, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsViewGhostReplay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue) == 0x000109, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomFloatInRange_ReturnValue) == 0x000110, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000118, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_1) == 0x00011C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000120, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000128, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsVisible_ReturnValue) == 0x000130, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralDouble_ReturnValue_2) == 0x000138, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SelectFloat_ReturnValue) == 0x000140, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000148, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000150, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000158, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralDouble_ReturnValue_3) == 0x000160, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomBoolWithWeight_ReturnValue_2) == 0x000168, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomBoolWithWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x00016C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue) == 0x000170, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_IsDesignTime) == 0x000171, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_66) == 0x000174, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_66' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId_6) == 0x000178, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00017C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_65) == 0x000180, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_65' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InMinutes) == 0x000184, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InMinutes' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InSecondes) == 0x000188, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InSecondes' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InMilliSec) == 0x00018C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InMilliSec' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_64) == 0x000190, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_64' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InRankIndex) == 0x000194, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InRankIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000198, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000199, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_63) == 0x00019C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_63' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId_5) == 0x0001A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_AttackToPlayerControllerIndex) == 0x0001A4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_AttackToPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_IntToByte_ReturnValue) == 0x0001A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0001A9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CustomEvent_InLoadedPrimaryTextureAsset) == 0x0001B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CustomEvent_InLoadedPrimaryTextureAsset' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CustomEvent_InOrthoRatePerCourse) == 0x0001D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CustomEvent_InOrthoRatePerCourse' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_CourseTexture) == 0x0001E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_CourseTexture' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_OrthoRate) == 0x000208, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_OrthoRate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Angle) == 0x00020C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Offset) == 0x000210, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Offset' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex_6) == 0x000228, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_62) == 0x00022C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_62' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InRacerIndex_1) == 0x000230, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InRacerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_IsLocalPlayer) == 0x000234, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_IsLocalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_61) == 0x000238, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_61' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00023C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000240, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetSize_ReturnValue) == 0x000248, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_60) == 0x000258, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_60' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ChangeAmount) == 0x00025C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ChangeAmount' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000260, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Loop_Counter_Variable) == 0x000264, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Array_Index_Variable) == 0x000268, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Less_IntInt_ReturnValue_1) == 0x00026C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_IntInt_ReturnValue) == 0x000270, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_59) == 0x000274, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_59' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_28) == 0x000278, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_28' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000279, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsGhostOnline_ReturnValue) == 0x00027A, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsGhostOnline_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_58) == 0x00027C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_58' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId_4) == 0x000280, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000284, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_57) == 0x000288, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_57' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_GaugeRate_1) == 0x00028C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_GaugeRate_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000290, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array) == 0x000298, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_StartCount) == 0x0002A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_StartCount' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CreateDelegate_OutputDelegate) == 0x0002AC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_56) == 0x0002BC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_56' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_7) == 0x0002C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_55) == 0x0002C4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_55' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_6) == 0x0002C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bIsSilent) == 0x0002C9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bIsSilent' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0002CA, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x0002CB, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Loop_Counter_Variable_1) == 0x0002CC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InAttackWidget_1) == 0x0002D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InAttackWidget_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemType) == 0x0002E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InId) == 0x0002E1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item) == 0x0002E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Item_Warning) == 0x0002F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Item_Warning' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000308, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_IntInt_ReturnValue_1) == 0x000310, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000318, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000328, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPosition_ReturnValue) == 0x000330, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetLayout_ReturnValue) == 0x000340, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetLayout_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bIn) == 0x000380, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bIn' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_OnAnimationEndEvent) == 0x000384, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_OnAnimationEndEvent' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_PlayAnimation_ReturnValue) == 0x000398, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_PlayAnimation_ReturnValue_1) == 0x0003A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Time_Trial_Time) == 0x0003A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Time_Trial_Time' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_1) == 0x0003B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bPause) == 0x0003B1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bPause' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetAllChildren_ReturnValue) == 0x0003B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_1) == 0x0003C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Item_Warning_1) == 0x0003D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Item_Warning_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_2) == 0x0003D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Length_ReturnValue_2) == 0x0003DC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_54) == 0x0003E4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_54' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_5) == 0x0003E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_NewRate) == 0x0003EC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_NewRate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0003F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_27) == 0x0003F1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_27' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex_5) == 0x0003F4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId_3) == 0x0003F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex_4) == 0x0003FC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InMinimapIconType) == 0x000400, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InMinimapIconType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_53) == 0x000404, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_53' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RankAfterIndex) == 0x000408, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RankAfterIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_26) == 0x000409, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_26' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InAttackItem_1) == 0x000410, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InAttackItem_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId_2) == 0x000418, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InAttackItem) == 0x000420, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InAttackItem' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_52) == 0x000428, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_52' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bEnable_1) == 0x00042C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bEnable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SoundPlay_ReturnValue) == 0x000430, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_51) == 0x000434, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_51' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bActive_1) == 0x000438, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bActive_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetPanSplit_ReturnValue) == 0x00043C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetPanSplit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x000440, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_50) == 0x000444, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_50' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_EventId) == 0x000448, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_EventId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00044C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x00044D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetValidValue_ReturnValue) == 0x00044E, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralInt_ReturnValue) == 0x000450, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_2) == 0x000454, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000455, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerController_ReturnValue) == 0x000458, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsRace_Player_Controller) == 0x000460, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsRace_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_3) == 0x000468, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralName_ReturnValue) == 0x00046C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetMappableKeyByMappingName_ReturnValue) == 0x000478, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetMappableKeyByMappingName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetUnionRacers_ReturnValue) == 0x000490, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetUnionRacers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Length_ReturnValue_3) == 0x000498, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerIndexByPlayerID_ReturnValue) == 0x00049C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerIndexByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SoundPlay_ReturnValue_1) == 0x0004A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetPanSplit_ReturnValue_1) == 0x0004A4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetPanSplit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralBool_ReturnValue) == 0x0004A9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralDouble_ReturnValue_4) == 0x0004B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Add_ReturnValue) == 0x0004B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0004C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_1) == 0x0004C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_2) == 0x0004D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_49) == 0x0004E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_49' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Enable_2) == 0x0004EC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Enable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x0004ED, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenIndex_4) == 0x0004F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_48) == 0x0004F4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_48' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenPosition_1) == 0x0004F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenPosition_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_name) == 0x000508, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bIsView_1) == 0x000518, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bIsView_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenIndex_3) == 0x00051C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_47) == 0x000520, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_47' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenPosition) == 0x000528, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bIsView) == 0x000538, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bIsView' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable) == 0x000539, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenIndex_2) == 0x00053C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_WindowId) == 0x000540, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_WindowId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_TextId) == 0x000548, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_TextId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_DriverId) == 0x000558, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_DriverId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_3) == 0x000560, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_SwitchInteger_CmpSuccess) == 0x000570, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_46) == 0x000574, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_46' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_GaugeRate) == 0x000578, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_GaugeRate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_45) == 0x00057C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_45' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Pivot) == 0x000580, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Pivot' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Range) == 0x000584, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Range' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_44) == 0x000588, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_44' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_25) == 0x00058C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_25' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_1) == 0x00058D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_43) == 0x000590, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_43' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Gadget) == 0x000594, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Gadget' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bActive) == 0x000595, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bActive' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x000596, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_4) == 0x000598, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRaceSettingGadgetUsing_ReturnValue) == 0x0005A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRaceSettingGadgetUsing_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0005A9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenIndex_1) == 0x0005AC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_SerifUIData) == 0x0005B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_SerifUIData' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_SwitchInteger_CmpSuccess_1) == 0x000650, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_42) == 0x000654, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_42' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_24) == 0x000658, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_24' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_41) == 0x00065C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_41' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_23) == 0x000660, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_23' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_40) == 0x000664, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_40' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_22) == 0x000668, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_22' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_39) == 0x00066C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_39' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerLocation) == 0x000670, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerLocation' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetViewportScale_ReturnValue) == 0x000688, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_ReturnValue_1) == 0x000690, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x0006A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_Variable) == 0x0006A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerController_ReturnValue_1) == 0x0006B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x0006B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x0006C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default) == 0x0006C9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0006D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0006E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_38) == 0x0006E4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_38' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetUnionRacers_ReturnValue_1) == 0x0006E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetUnionRacers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x0006F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsValid_ReturnValue) == 0x0006F1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue) == 0x0006F4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_37) == 0x0006F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_37' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_4) == 0x0006FC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_21) == 0x0006FD, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_21' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000700, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_17) == 0x000708, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsValid_ReturnValue_1) == 0x000709, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000710, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_2) == 0x000718, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_5) == 0x000720, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_3) == 0x000730, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SoundPlay_ReturnValue_2) == 0x000738, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SoundPlay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetPanSplit_ReturnValue_2) == 0x00073C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetPanSplit_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ScreenIndex) == 0x000740, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ScreenIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_36) == 0x000744, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_36' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InPlatform) == 0x000748, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InPlatform' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_35) == 0x00074C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_35' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RivalStatusObj) == 0x000750, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RivalStatusObj' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_6) == 0x000758, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsRivalPowerful_ReturnValue) == 0x000768, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsRivalPowerful_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeStruct_UnionRaceHUDPlayerNameUI) == 0x000770, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeStruct_UnionRaceHUDPlayerNameUI' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_7) == 0x000780, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_IntInt_ReturnValue_2) == 0x000790, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerName_ReturnValue) == 0x000798, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_CheckRivalInScreen_IsVisible) == 0x0007A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_CheckRivalInScreen_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0007B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerController_ReturnValue_2) == 0x0007C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_VectorVector_ReturnValue) == 0x0007D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetActorUpVector_ReturnValue) == 0x0007E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetViewportScale_ReturnValue_1) == 0x000800, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000808, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_ReturnValue_2) == 0x000820, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000830, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1) == 0x000848, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_ProjectWorldLocationToScreen_ReturnValue_1) == 0x000858, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_ProjectWorldLocationToScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x000860, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x000870, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000878, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_8) == 0x000888, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsPlayingReplay_ReturnValue) == 0x000898, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InRacerIndex) == 0x00089C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InRacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetUnionRacers_ReturnValue_2) == 0x0008A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetUnionRacers_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsPubCameraPlayRace_ReturnValue) == 0x0008A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsPubCameraPlayRace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue) == 0x0008AC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_1) == 0x0008B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_18) == 0x0008B1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_4) == 0x0008B2, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_34) == 0x0008B4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_34' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_SpeedKMPH) == 0x0008B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_SpeedKMPH' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_19) == 0x0008BC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsValid_ReturnValue_2) == 0x0008BD, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_33) == 0x0008C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_33' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Enable_1) == 0x0008C4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Enable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_32) == 0x0008C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_32' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_level_1) == 0x0008CC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_level_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_rate) == 0x0008D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_rate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_20) == 0x0008D4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_21) == 0x0008D5, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_31) == 0x0008D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_31' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_level) == 0x0008DC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_level' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_22) == 0x0008E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_30) == 0x0008E4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_30' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_23) == 0x0008E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_29) == 0x0008EC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_29' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Enable) == 0x0008F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_24) == 0x0008F1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_28) == 0x0008F4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_28' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Percent_2) == 0x0008F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Percent_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_25) == 0x0008FC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_27) == 0x000900, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_26) == 0x000904, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_26) == 0x000908, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_27) == 0x00090C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_25) == 0x000910, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Percent_1) == 0x000914, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Percent_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_28) == 0x000918, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_24) == 0x00091C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_23) == 0x000920, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemId_2) == 0x000924, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemId_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_22) == 0x000928, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_29) == 0x00092C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_30) == 0x00092D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_21) == 0x000930, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_20) == 0x000934, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_20' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Scale) == 0x000938, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Scale' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_IsScaleKeepInHoming) == 0x00093C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_IsScaleKeepInHoming' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_20) == 0x000940, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Location) == 0x000948, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Rotation) == 0x000960, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Matrix_TransformVector_ReturnValue) == 0x0009E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Matrix_TransformVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector4_X) == 0x000A00, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector4_Y) == 0x000A08, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector4_Z) == 0x000A10, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BreakVector4_W) == 0x000A18, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsRearView_IsRearView) == 0x000A20, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsRearView_IsRearView' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000A28, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector_ReturnValue) == 0x000A30, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_19) == 0x000A48, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bIsLockOn) == 0x000A4C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bIsLockOn' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000A50, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRaceSettingGadgetUsing_ReturnValue_1) == 0x000A68, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRaceSettingGadgetUsing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_18) == 0x000A6C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A70, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000A78, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SoundPlay_ReturnValue_3) == 0x000A80, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SoundPlay_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000A88, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetPanSplit_ReturnValue_3) == 0x000A90, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetPanSplit_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_17) == 0x000A94, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemId_1) == 0x000A98, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemId_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bIsFever) == 0x000A99, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bIsFever' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_16) == 0x000A9C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_31) == 0x000AA0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_32) == 0x000AA1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetAppRaceConfigData_OutData) == 0x000AB0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetAppRaceConfigData_OutData' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000F40, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000F48, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_As_____2D) == 0x000F50, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_As_____2D' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_4) == 0x000F58, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex_3) == 0x000F5C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemId) == 0x000F60, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_3) == 0x000F61, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_LostItemCount) == 0x000F64, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_LostItemCount' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_15) == 0x000F68, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InRingNum) == 0x000F6C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InRingNum' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_33) == 0x000F70, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_14) == 0x000F74, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RingIndex) == 0x000F78, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RingIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_13) == 0x000F7C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex_2) == 0x000F80, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_34) == 0x000F84, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bEnable) == 0x000F85, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_12) == 0x000F88, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_2) == 0x000F8C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId_1) == 0x000F90, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_SwitchEnum_CmpSuccess) == 0x000F94, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_35) == 0x000F95, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_36) == 0x000F96, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_11) == 0x000F98, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType_1) == 0x000F9C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InItemId) == 0x000FA0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InItemId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_37) == 0x000FA4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetVisibility_ReturnValue) == 0x000FA5, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000FA6, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue) == 0x000FA7, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex_1) == 0x000FA8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PrevItemSet) == 0x000FAC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PrevItemSet' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_NewItemSet) == 0x000FAF, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_NewItemSet' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_RacerIndex) == 0x000FB4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_RacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsGroupRace_ReturnValue) == 0x000FB8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsGroupRace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_5) == 0x000FB9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsGroupRace_ReturnValue_1) == 0x000FBA, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsGroupRace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_2) == 0x000FBB, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_1) == 0x000FBC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerPawn_ReturnValue) == 0x000FC0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_10) == 0x000FC8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_TutorialAction_1) == 0x000FCC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_TutorialAction_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface) == 0x000FD0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_5) == 0x000FE0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_38) == 0x000FE1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsValid_ReturnValue_3) == 0x000FE2, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetButtonWidget_ReturnValue) == 0x000FE8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetButtonWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_9) == 0x000FF0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_ItemInfoType) == 0x000FF4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_SwitchEnum_CmpSuccess_1) == 0x000FF5, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000FF8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_39) == 0x000FFC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Loop_Counter_Variable_2) == 0x001000, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Less_IntInt_ReturnValue_3) == 0x001004, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_IntInt_ReturnValue_3) == 0x001008, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Array_Index_Variable_1) == 0x00100C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_4) == 0x001010, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x001018, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x001019, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00101A, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_3) == 0x00101B, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_8) == 0x00101C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_40) == 0x001020, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsWBP_Race_Start_Dash_Sub_Arc_Gauge) == 0x001028, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsWBP_Race_Start_Dash_Sub_Arc_Gauge' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_6) == 0x001030, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetUnionRacers_ReturnValue_3) == 0x001038, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetUnionRacers_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue_1) == 0x001040, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_41) == 0x001044, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_PlayAnimation_ReturnValue_2) == 0x001048, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_2) == 0x001050, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_9) == 0x001058, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_19) == 0x001068, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_19' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_18) == 0x001069, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_18' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CustomEvent_StartUI) == 0x001070, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CustomEvent_StartUI' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_17) == 0x001078, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_17' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_16) == 0x001079, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_16' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_15) == 0x00107A, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_15' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_14) == 0x00107B, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_14' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InNewState) == 0x00107C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InNewState' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InOldState) == 0x00107D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InOldState' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_13) == 0x00107E, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_13' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InNewValue) == 0x001080, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InNewValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InOldValue) == 0x001084, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InOldValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Subtract_IntInt_ReturnValue) == 0x001088, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_SwitchInteger_CmpSuccess_2) == 0x00108C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_3) == 0x00108D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_12) == 0x00108E, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_12' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_7) == 0x001090, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bFlagOnly) == 0x001094, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bFlagOnly' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsViewGhostReplay_ReturnValue_3) == 0x001095, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsViewGhostReplay_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_11) == 0x001096, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_11' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_10) == 0x001097, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_9) == 0x001098, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_8) == 0x001099, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_6) == 0x00109C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InAttackWidget) == 0x0010A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InAttackWidget' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_42) == 0x0010A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_AddChildToCanvas_ReturnValue) == 0x0010B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_7) == 0x0010B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_6) == 0x0010B9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_5) == 0x0010BA, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_Variable_1) == 0x0010BB, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_4) == 0x0010BC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_3) == 0x0010BD, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsDebugGuideButtonHidden_ReturnValue) == 0x0010BE, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsDebugGuideButtonHidden_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetSelectedRaceType_ReturnValue) == 0x0010BF, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetSelectedRaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0010C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0010C1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_4) == 0x0010C2, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0010C3, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CustomEvent_LapNum) == 0x0010C4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CustomEvent_LapNum' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_SwitchInteger_CmpSuccess_3) == 0x0010C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_5) == 0x0010C9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CustomEvent_LapNo) == 0x0010CC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CustomEvent_LapNo' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Loop_Counter_Variable_3) == 0x0010D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsValid_ReturnValue_4) == 0x0010D4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetVisibility_ReturnValue_1) == 0x0010D5, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Less_IntInt_ReturnValue_4) == 0x0010D6, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Add_IntInt_ReturnValue_4) == 0x0010D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_5) == 0x0010DC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_TutorialAction) == 0x0010E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_TutorialAction' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_43) == 0x0010E1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Array_Index_Variable_2) == 0x0010E4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_5) == 0x0010E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_6) == 0x0010F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_7) == 0x0010F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_CreateDelegate_OutputDelegate_1) == 0x001100, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_6) == 0x001110, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_6) == 0x001111, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_7) == 0x001112, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_2) == 0x001113, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_Variable_2) == 0x001114, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default_1) == 0x001115, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x001116, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default_2) == 0x001118, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_PlayAnimation_ReturnValue_3) == 0x001120, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_4) == 0x001128, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_3) == 0x00112C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bSuggestUpInput) == 0x001130, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bSuggestUpInput' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_44) == 0x001131, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_45) == 0x001132, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetItemIcon_ItemIcon) == 0x001138, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetItemIcon_ItemIcon' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetItemIconByItemInfoType_ItemIcon) == 0x001140, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetItemIconByItemInfoType_ItemIcon' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetItemIconByItemInfoTypeSimple_NewParam) == 0x001148, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetItemIconByItemInfoTypeSimple_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_10) == 0x001150, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetItemIcon_ItemIcon_1) == 0x001160, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetItemIcon_ItemIcon_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetSelectedMenuSpeedClassId_ReturnValue) == 0x001168, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetSelectedMenuSpeedClassId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_11) == 0x001170, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x001180, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRedStarRingAcquisitionPerStage_ReturnValue) == 0x001188, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRedStarRingAcquisitionPerStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetAppRaceConfigData_OutData_1) == 0x0011A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetAppRaceConfigData_OutData_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_LastIndex_ReturnValue) == 0x001630, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_Has_Been_Initd_Variable) == 0x001634, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_IsClosed_Variable) == 0x001635, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_UpdateLapTime_IsBestLap) == 0x001636, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_UpdateLapTime_IsBestLap' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_UpdateLapTime_ReturnValue) == 0x001638, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_UpdateLapTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_12) == 0x001658, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_12' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_2) == 0x001668, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InLapCountNow) == 0x00166C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InLapCountNow' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_InLapCountMax) == 0x001670, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_InLapCountMax' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_IntInt_ReturnValue) == 0x001674, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_46) == 0x001675, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SoundPlay_ReturnValue_4) == 0x001678, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SoundPlay_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_7) == 0x00167C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetPanSplit_ReturnValue_4) == 0x001680, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetPanSplit_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SoundPlay_ReturnValue_5) == 0x001684, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SoundPlay_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetPanSplit_ReturnValue_5) == 0x001688, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetPanSplit_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x001690, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralByte_ReturnValue) == 0x001698, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_3) == 0x001699, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00169C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_47) == 0x0016A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex_1) == 0x0016A4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_2) == 0x0016A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_4) == 0x0016A9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_13) == 0x0016B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_13' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_Variable_3) == 0x0016C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_14) == 0x0016C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_14' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default_3) == 0x0016D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0016E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_5) == 0x0016E9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Time_Trial_Time_1) == 0x0016F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsWBP_Race_HUD_Sub_Time_Trial_Time_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_7) == 0x0016F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsDispGroupHUD_IsDisp) == 0x0016F9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsDispGroupHUD_IsDisp' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_8) == 0x0016FA, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0016FB, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_PlayerControllerIndex) == 0x0016FC, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_Percent) == 0x001700, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_Percent' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x001704, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x001705, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_48) == 0x001706, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible_1) == 0x001707, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Not_PreBool_ReturnValue_9) == 0x001708, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_8) == 0x001709, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_6) == 0x00170A, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_4) == 0x00170B, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_9) == 0x00170C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanOR_ReturnValue_10) == 0x00170D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_MakeArray_Array_15) == 0x001710, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_MakeArray_Array_15' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetViewportScale_ReturnValue_2) == 0x001720, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetViewportScale_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_ReturnValue_3) == 0x001728, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SlotAsCanvasSlot_ReturnValue_7) == 0x001738, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SlotAsCanvasSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerController_ReturnValue_3) == 0x001740, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_2) == 0x001748, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_ProjectWorldLocationToScreen_ReturnValue_2) == 0x001758, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_ProjectWorldLocationToScreen_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Divide_Vector2DVector2D_ReturnValue_2) == 0x001760, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Divide_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Stop_ReturnValue) == 0x001770, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsPlaying_ReturnValue) == 0x001774, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_5) == 0x001775, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Stop_ReturnValue_1) == 0x001778, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Stop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsPlaying_ReturnValue_1) == 0x00177C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetUnionRacers_ReturnValue_4) == 0x001780, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetUnionRacers_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue_2) == 0x001788, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerControllerIndexByRacerIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_49) == 0x00178C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_AsWBP_Race_Start_Dash_Sub_Arc_Gauge_1) == 0x001790, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_AsWBP_Race_Start_Dash_Sub_Arc_Gauge_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_DynamicCast_bSuccess_8) == 0x001798, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsViewGhostReplay_ReturnValue_4) == 0x001799, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsViewGhostReplay_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_bool_Variable_4) == 0x00179A, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00179B, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default_4) == 0x00179C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsDebugBoostHidden_ReturnValue) == 0x00179D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsDebugBoostHidden_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Event_bVisible) == 0x00179E, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_6) == 0x00179F, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetVisibility_ReturnValue_2) == 0x0017A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetVisibility_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0017A1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_BooleanAND_ReturnValue_7) == 0x0017A2, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Get_Normal_Gauge_Percent_GaugePercent) == 0x0017A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Get_Normal_Gauge_Percent_GaugePercent' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0017B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_7) == 0x0017B1, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerIndexByPlayerID_ReturnValue_1) == 0x0017B4, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerIndexByPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_8) == 0x0017B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0017B9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Get_Normal_Gauge_Percent_GaugePercent_1) == 0x0017C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Get_Normal_Gauge_Percent_GaugePercent_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_9) == 0x0017C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0017C9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_10) == 0x0017CA, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_11) == 0x0017CB, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Get_Normal_Gauge_Percent_GaugePercent_2) == 0x0017D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Get_Normal_Gauge_Percent_GaugePercent_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default_5) == 0x0017D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetTimeTrialRaceData_bOutIsGhostValid) == 0x0017D9, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetTimeTrialRaceData_bOutIsGhostValid' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetTimeTrialRaceData_ReturnValue) == 0x0017E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetTimeTrialRaceData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_12) == 0x001830, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_13) == 0x001831, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_14) == 0x001832, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Length_ReturnValue_4) == 0x001834, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_15) == 0x001838, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_16) == 0x001839, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_50) == 0x00183A, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetIsOnlineGameMode_ReturnValue) == 0x00183B, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetIsOnlineGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SelectInt_ReturnValue_1) == 0x00183C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_int_Array_Index_Variable_3) == 0x001840, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, Temp_byte_Variable_17) == 0x001844, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_Get_Item_8) == 0x001848, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Array_AddUnique_ReturnValue) == 0x00184C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_Select_Default_6) == 0x001850, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetTimeTrialTargetTime_ReturnValue) == 0x001854, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetTimeTrialTargetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetGroupIndex_ReturnValue) == 0x001858, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetGroupIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_IntInt_ReturnValue_51) == 0x00185C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_IntInt_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetRacerIndex_OutRacerIndex_1) == 0x001860, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetRacerIndex_OutRacerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlatformType_ReturnValue) == 0x001864, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlatformType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_GetPlayerControllerIndex_OutPlayerControllerIndex) == 0x001868, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_GetPlayerControllerIndex_OutPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsLocalPlayer_ReturnValue) == 0x00186C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00186D, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsRivalPowerful_ReturnValue_1) == 0x00186E, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsRivalPowerful_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsRivalCom_ReturnValue) == 0x00186F, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsRivalCom_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x001870, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_IsGroupRace_ReturnValue_2) == 0x001874, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_IsGroupRace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast) == 0x001878, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1) == 0x00187C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_2) == 0x001880, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetLifeTime_NewRate_ImplicitCast) == 0x001888, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetLifeTime_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_InitItemEnemyApproachSetting_InMaxScale_ImplicitCast) == 0x001890, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_InitItemEnemyApproachSetting_InMaxScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_X_ImplicitCast) == 0x001898, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0018A0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_X_ImplicitCast_1) == 0x0018A8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_Y_ImplicitCast_1) == 0x0018B0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_VariableSet_ChargeGaugePer_ImplicitCast) == 0x0018B8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_VariableSet_ChargeGaugePer_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0018C0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetBoostGaugePercent_Percent_ImplicitCast) == 0x0018C8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetBoostGaugePercent_Percent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, K2Node_VariableSet_ManualAimingScale_ImplicitCast) == 0x0018D0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::K2Node_VariableSet_ManualAimingScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast) == 0x0018D8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_SetNormalGaugePercent_Percent_ImplicitCast) == 0x0018E0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_SetNormalGaugePercent_Percent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0018E8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_X_ImplicitCast_2) == 0x0018F0, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_X_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_MakeVector2D_Y_ImplicitCast_2) == 0x0018F8, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_MakeVector2D_Y_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_1) == 0x001900, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_2) == 0x001904, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_3) == 0x001908, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_LocalChargeRate_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast) == 0x00190C, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_1) == 0x001910, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_2) == 0x001914, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01, CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_3) == 0x001918, "Member 'WBP_Race_HUD_Player01_C_ExecuteUbergraph_WBP_Race_HUD_Player01::CallFunc_DbgDrawTeamGaugeRate_GaugePercent_ImplicitCast_3' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.FireAttackItemHitInfo_New
// 0x0030 (0x0030 - 0x0000)
struct WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New final
{
public:
	struct FFireAttackItemInfo                    Info;                                              // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New");
static_assert(sizeof(WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New) == 0x000030, "Wrong size on WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New, Info) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_FireAttackItemHitInfo_New::Info' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.FireFinishText
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_FireFinishText final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_FireFinishText) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_FireFinishText");
static_assert(sizeof(WBP_Race_HUD_Player01_C_FireFinishText) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_FireFinishText");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireFinishText, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_FireFinishText::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.FireInOutAnim
// 0x0014 (0x0014 - 0x0000)
struct WBP_Race_HUD_Player01_C_FireInOutAnim final
{
public:
	bool                                          bin;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             OnAnimationEndEvent;                               // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_FireInOutAnim) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_FireInOutAnim");
static_assert(sizeof(WBP_Race_HUD_Player01_C_FireInOutAnim) == 0x000014, "Wrong size on WBP_Race_HUD_Player01_C_FireInOutAnim");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireInOutAnim, bin) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_FireInOutAnim::bin' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireInOutAnim, OnAnimationEndEvent) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_FireInOutAnim::OnAnimationEndEvent' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.FireItemHitInfo
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_FireItemHitInfo final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttackToPlayerControllerIndex;                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_FireItemHitInfo) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_FireItemHitInfo");
static_assert(sizeof(WBP_Race_HUD_Player01_C_FireItemHitInfo) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_FireItemHitInfo");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireItemHitInfo, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_FireItemHitInfo::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireItemHitInfo, InItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_FireItemHitInfo::InItemId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireItemHitInfo, AttackToPlayerControllerIndex) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_FireItemHitInfo::AttackToPlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.FireLotteryItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_FireLotteryItem final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSilent;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_FireLotteryItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_FireLotteryItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_FireLotteryItem) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_FireLotteryItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireLotteryItem, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_FireLotteryItem::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireLotteryItem, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_FireLotteryItem::ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_FireLotteryItem, bIsSilent) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_FireLotteryItem::bIsSilent' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.GetRedStarRings
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Player01_C_GetRedStarRings final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRaceUIResultRedStarRings*         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_GetRedStarRings) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_GetRedStarRings");
static_assert(sizeof(WBP_Race_HUD_Player01_C_GetRedStarRings) == 0x000010, "Wrong size on WBP_Race_HUD_Player01_C_GetRedStarRings");
static_assert(offsetof(WBP_Race_HUD_Player01_C_GetRedStarRings, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_GetRedStarRings::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_GetRedStarRings, ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_GetRedStarRings::ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.GetWarningBeltVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_GetWarningBeltVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_GetWarningBeltVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_GetWarningBeltVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_GetWarningBeltVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_GetWarningBeltVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_GetWarningBeltVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_GetWarningBeltVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_GetWarningBeltVisible, ReturnValue) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_GetWarningBeltVisible::ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.GroupInit
// 0x0002 (0x0002 - 0x0000)
struct WBP_Race_HUD_Player01_C_GroupInit final
{
public:
	bool                                          IsGroup;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isFesta;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_GroupInit) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_GroupInit");
static_assert(sizeof(WBP_Race_HUD_Player01_C_GroupInit) == 0x000002, "Wrong size on WBP_Race_HUD_Player01_C_GroupInit");
static_assert(offsetof(WBP_Race_HUD_Player01_C_GroupInit, IsGroup) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_GroupInit::IsGroup' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_GroupInit, isFesta) == 0x000001, "Member 'WBP_Race_HUD_Player01_C_GroupInit::isFesta' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.HideStartUI
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_HideStartUI final
{
public:
	class UWidget*                                StartUI;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_HideStartUI) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_HideStartUI");
static_assert(sizeof(WBP_Race_HUD_Player01_C_HideStartUI) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_HideStartUI");
static_assert(offsetof(WBP_Race_HUD_Player01_C_HideStartUI, StartUI) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_HideStartUI::StartUI' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.IsDispGroupHUD
// 0x0048 (0x0048 - 0x0000)
struct WBP_Race_HUD_Player01_C_IsDispGroupHUD final
{
public:
	bool                                          IsDisp;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTmpDisp;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGroupRace_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIntFromConfig_ConfigValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIntFromConfig_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_IsDispGroupHUD) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_IsDispGroupHUD");
static_assert(sizeof(WBP_Race_HUD_Player01_C_IsDispGroupHUD) == 0x000048, "Wrong size on WBP_Race_HUD_Player01_C_IsDispGroupHUD");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, IsDisp) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::IsDisp' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, IsTmpDisp) == 0x000001, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::IsTmpDisp' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_IsShippingBuild_ReturnValue) == 0x000002, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_MakeLiteralString_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_MakeLiteralString_ReturnValue_2) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_IsGroupRace_ReturnValue) == 0x000038, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_IsGroupRace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_GetIntFromConfig_ConfigValue) == 0x00003C, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_GetIntFromConfig_ConfigValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_GetIntFromConfig_ReturnValue) == 0x000040, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_GetIntFromConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsDispGroupHUD, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'WBP_Race_HUD_Player01_C_IsDispGroupHUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.IsRearView
// 0x0080 (0x0080 - 0x0000)
struct WBP_Race_HUD_Player01_C_IsRearView final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRearView_0;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacer*                            CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVehicleInRacePawn*                     K2Node_DynamicCast_AsVehicle_in_Race_Pawn;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUnionVehicleRaceInput                 CallFunc_GetVehicleInput_ReturnValue;              // 0x0038(0x0048)(NoDestructor)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_IsRearView) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_IsRearView");
static_assert(sizeof(WBP_Race_HUD_Player01_C_IsRearView) == 0x000080, "Wrong size on WBP_Race_HUD_Player01_C_IsRearView");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_IsRearView::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, IsRearView_0) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_IsRearView::IsRearView_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, CallFunc_GetUnionRacers_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_IsRearView::CallFunc_GetUnionRacers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue) == 0x000010, "Member 'WBP_Race_HUD_Player01_C_IsRearView::CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, CallFunc_Map_Find_Value) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_IsRearView::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_Race_HUD_Player01_C_IsRearView::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, K2Node_DynamicCast_AsVehicle_in_Race_Pawn) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_IsRearView::K2Node_DynamicCast_AsVehicle_in_Race_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_Race_HUD_Player01_C_IsRearView::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_IsRearView, CallFunc_GetVehicleInput_ReturnValue) == 0x000038, "Member 'WBP_Race_HUD_Player01_C_IsRearView::CallFunc_GetVehicleInput_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.LockOnManualAimingUI
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_LockOnManualAimingUI final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLockOn;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_LockOnManualAimingUI) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_LockOnManualAimingUI");
static_assert(sizeof(WBP_Race_HUD_Player01_C_LockOnManualAimingUI) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_LockOnManualAimingUI");
static_assert(offsetof(WBP_Race_HUD_Player01_C_LockOnManualAimingUI, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_LockOnManualAimingUI::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_LockOnManualAimingUI, bIsLockOn) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_LockOnManualAimingUI::bIsLockOn' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NoticeChangeCountDownEvent
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent final
{
public:
	int32                                         InNewValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InOldValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent, InNewValue) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent::InNewValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent, InOldValue) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_NoticeChangeCountDownEvent::InOldValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NoticeChangeRaceStateEvent
// 0x0002 (0x0002 - 0x0000)
struct WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent final
{
public:
	ERaceInfoStateType                            InNewState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceInfoStateType                            InOldState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent) == 0x000002, "Wrong size on WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent, InNewState) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent::InNewState' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent, InOldState) == 0x000001, "Member 'WBP_Race_HUD_Player01_C_NoticeChangeRaceStateEvent::InOldState' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NoticeItemStockTradeEvent
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemSet                               PrevItemSet;                                       // 0x0004(0x0003)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FItemSet                               NewItemSet;                                        // 0x0007(0x0003)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent::RacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent, PrevItemSet) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent::PrevItemSet' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent, NewItemSet) == 0x000007, "Member 'WBP_Race_HUD_Player01_C_NoticeItemStockTradeEvent::NewItemSet' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NoticeStartLostItemEvent
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       ItemId;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LostItemCount;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent::RacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent, ItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent::ItemId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent, ItemInfoType) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent::ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent, LostItemCount) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_NoticeStartLostItemEvent::LostItemCount' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NoticeStartShuffleItemEvent
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NoticeStartShuffleItemEvent::RacerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NotifyIrregularInfiniteItem
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem final
{
public:
	int32                                         InRacerIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem, InRacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NotifyIrregularInfiniteItem::InRacerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.NotifyItemCountDownBlink
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink");
static_assert(sizeof(WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_NotifyItemCountDownBlink::ItemInfoType' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.OpenSerifWindow
// 0x0020 (0x0020 - 0x0000)
struct WBP_Race_HUD_Player01_C_OpenSerifWindow final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERacerReactionWindow                          WindowId;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextId;                                            // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         DriverId;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_OpenSerifWindow) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_OpenSerifWindow");
static_assert(sizeof(WBP_Race_HUD_Player01_C_OpenSerifWindow) == 0x000020, "Wrong size on WBP_Race_HUD_Player01_C_OpenSerifWindow");
static_assert(offsetof(WBP_Race_HUD_Player01_C_OpenSerifWindow, ScreenIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_OpenSerifWindow::ScreenIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_OpenSerifWindow, WindowId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_OpenSerifWindow::WindowId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_OpenSerifWindow, TextId) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_OpenSerifWindow::TextId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_OpenSerifWindow, DriverId) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_OpenSerifWindow::DriverId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.OpenSerifWindowEx
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Race_HUD_Player01_C_OpenSerifWindowEx final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRacerReactionVoice                    SerifUIData;                                       // 0x0008(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_OpenSerifWindowEx) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_OpenSerifWindowEx");
static_assert(sizeof(WBP_Race_HUD_Player01_C_OpenSerifWindowEx) == 0x0000A8, "Wrong size on WBP_Race_HUD_Player01_C_OpenSerifWindowEx");
static_assert(offsetof(WBP_Race_HUD_Player01_C_OpenSerifWindowEx, ScreenIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_OpenSerifWindowEx::ScreenIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_OpenSerifWindowEx, SerifUIData) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_OpenSerifWindowEx::SerifUIData' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.PlayFestaIndividualChargeEffect
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RacerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect");
static_assert(sizeof(WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect");
static_assert(offsetof(WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect, RacerIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_PlayFestaIndividualChargeEffect::RacerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_PreConstruct");
static_assert(sizeof(WBP_Race_HUD_Player01_C_PreConstruct) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_PreConstruct");
static_assert(offsetof(WBP_Race_HUD_Player01_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.RaceActionTutorialSuccess
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialAction                               tutorialAction_0;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess");
static_assert(sizeof(WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess");
static_assert(offsetof(WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess, tutorialAction_0) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_RaceActionTutorialSuccess::tutorialAction_0' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.RemoveCourseMapActor
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_RemoveCourseMapActor final
{
public:
	class AActor*                                 InAttackItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_RemoveCourseMapActor) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_RemoveCourseMapActor");
static_assert(sizeof(WBP_Race_HUD_Player01_C_RemoveCourseMapActor) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_RemoveCourseMapActor");
static_assert(offsetof(WBP_Race_HUD_Player01_C_RemoveCourseMapActor, InAttackItem) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_RemoveCourseMapActor::InAttackItem' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.Set Seconds To Lap Time
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time");
static_assert(sizeof(WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time");
static_assert(offsetof(WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time, Value) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_Set_Seconds_To_Lap_Time::Value' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetAfterHomingAimTargetedUIVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetAfterHomingAimTargetedUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetAfterHomingAimUIVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetAfterHomingAimUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetAimingUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetAimingUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetAimingUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetAimingUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetAimingUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetAimingUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetAimingUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetAimingUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetAirTrickUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetAirTrickUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetAirTrickUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetAirTrickUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetAirTrickUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetAirTrickUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetAirTrickUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetAirTrickUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetBeforeHomingAimTargetedUIVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetBeforeHomingAimTargetedUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetBoostUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetBoostUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetBoostUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetBoostUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetBoostUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetBoostUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetBoostUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetBoostUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetCharaHeadUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetCharaHeadUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetCourseMapCharaSpin
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetCourseMapCharaSpin::RacerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetCourseMapUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetCourseMapUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetCourseMapUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetCourseMapUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetCourseMapUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetCourseMapUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseMapUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetCourseMapUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetCourseSetting
// 0x0048 (0x0048 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetCourseSetting final
{
public:
	TSoftObjectPtr<class UObject>                 CourseTexture;                                     // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	float                                         OrthoRate;                                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetCourseSetting) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetCourseSetting");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetCourseSetting) == 0x000048, "Wrong size on WBP_Race_HUD_Player01_C_SetCourseSetting");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseSetting, CourseTexture) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetCourseSetting::CourseTexture' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseSetting, OrthoRate) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_SetCourseSetting::OrthoRate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseSetting, Angle) == 0x00002C, "Member 'WBP_Race_HUD_Player01_C_SetCourseSetting::Angle' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseSetting, Offset) == 0x000030, "Member 'WBP_Race_HUD_Player01_C_SetCourseSetting::Offset' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetCourseTextureAndOrthoRate
// 0x0030 (0x0030 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate final
{
public:
	TSoftObjectPtr<class UObject>                 InLoadedPrimaryTextureAsset;                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        InOrthoRatePerCourse;                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate) == 0x000030, "Wrong size on WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate, InLoadedPrimaryTextureAsset) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate::InLoadedPrimaryTextureAsset' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate, InOrthoRatePerCourse) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_SetCourseTextureAndOrthoRate::InOrthoRatePerCourse' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetEachVisibility
// 0x0030 (0x0030 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetEachVisibility final
{
public:
	bool                                          ItemMain;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemSub;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitInfo;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          playerName;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Warning;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_ItemIcon_Simple_C*    CallFunc_GetItemIconSimple_NewParam;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_ItemIcon_C*           CallFunc_GetItemIcon_ItemIcon;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetEachVisibility) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetEachVisibility");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetEachVisibility) == 0x000030, "Wrong size on WBP_Race_HUD_Player01_C_SetEachVisibility");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, ItemMain) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::ItemMain' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, ItemSub) == 0x000001, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::ItemSub' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, HitInfo) == 0x000002, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::HitInfo' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, playerName) == 0x000003, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::playerName' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Warning) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Warning' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_bool_Variable) == 0x000006, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_bool_Variable_1) == 0x000009, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, K2Node_Select_Default) == 0x00000A, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_3) == 0x00000B, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_4) == 0x00000C, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_bool_Variable_2) == 0x00000D, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, K2Node_Select_Default_1) == 0x00000E, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_5) == 0x00000F, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_6) == 0x000010, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_bool_Variable_3) == 0x000011, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, K2Node_Select_Default_2) == 0x000012, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_7) == 0x000013, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_8) == 0x000014, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_byte_Variable_9) == 0x000015, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, K2Node_Select_Default_3) == 0x000016, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, CallFunc_GetItemIconSimple_NewParam) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::CallFunc_GetItemIconSimple_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, CallFunc_GetItemIcon_ItemIcon) == 0x000020, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::CallFunc_GetItemIcon_ItemIcon' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, Temp_bool_Variable_4) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEachVisibility, K2Node_Select_Default_4) == 0x000029, "Member 'WBP_Race_HUD_Player01_C_SetEachVisibility::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetEnableRedStarRing
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetEnableRedStarRing final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetEnableRedStarRing) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetEnableRedStarRing");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetEnableRedStarRing) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetEnableRedStarRing");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetEnableRedStarRing, bEnable) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetEnableRedStarRing::bEnable' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetGadgetIconActive
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetGadgetIconActive final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetId                                     gadget;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActive;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetGadgetIconActive) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetGadgetIconActive");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetGadgetIconActive) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetGadgetIconActive");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetGadgetIconActive, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetGadgetIconActive::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetGadgetIconActive, gadget) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetGadgetIconActive::gadget' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetGadgetIconActive, bActive) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_SetGadgetIconActive::bActive' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetGadgetIconUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetGadgetIconUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetGuideButtonUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetGuideButtonUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetHitInfoUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetHitInfoUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetHitInfoUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetHitInfoUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetHitInfoUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetHitInfoUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetHitInfoUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetHitInfoUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetHitInfoValue
// 0x0020 (0x0020 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetHitInfoValue final
{
public:
	uint8                                         InCharaIndex;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         InItemId;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RacerName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetHitInfoValue) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetHitInfoValue");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetHitInfoValue) == 0x000020, "Wrong size on WBP_Race_HUD_Player01_C_SetHitInfoValue");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetHitInfoValue, InCharaIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetHitInfoValue::InCharaIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetHitInfoValue, InItemId) == 0x000001, "Member 'WBP_Race_HUD_Player01_C_SetHitInfoValue::InItemId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetHitInfoValue, RacerName) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetHitInfoValue::RacerName' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetHitInfoValue, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_SetHitInfoValue::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetHitInfoValue, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00001C, "Member 'WBP_Race_HUD_Player01_C_SetHitInfoValue::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetIrregular
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetIrregular final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EventId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetIrregular) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetIrregular");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetIrregular) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetIrregular");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetIrregular, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetIrregular::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetIrregular, EventId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetIrregular::EventId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetIrregularInfiniteItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem::ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem, bVisible) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_SetIrregularInfiniteItem::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemIconUIVisible
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemIconUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerControllerIndex;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlagOnly;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemIconUIVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemIconUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemIconUIVisible) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetItemIconUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIconUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemIconUIVisible::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIconUIVisible, PlayerControllerIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetItemIconUIVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIconUIVisible, bFlagOnly) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetItemIconUIVisible::bFlagOnly' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemIconUIVisibleAll
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemIconUIVisibleAll::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemId
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InItemId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemId) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemId");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemId) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetItemId");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemId, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemId::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemId, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetItemId::ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemId, InItemId) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetItemId::InItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemIrregularEvent
// 0x0058 (0x0058 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemIrregularEvent final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_ItemIcon_C*           CallFunc_GetItemIconByItemInfoType_ItemIcon;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_ItemIcon_C*           CallFunc_GetItemIconByItemInfoType_ItemIcon_1;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemIrregular_New_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemIrregularEvent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent) == 0x000058, "Wrong size on WBP_Race_HUD_Player01_C_SetItemIrregularEvent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, PlayerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, Temp_int_Variable) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001B, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetItemIconByItemInfoType_ItemIcon) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetItemIconByItemInfoType_ItemIcon' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetItemIconByItemInfoType_ItemIcon_1) == 0x000030, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetItemIconByItemInfoType_ItemIcon_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetUnionRacers_ReturnValue) == 0x000038, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetUnionRacers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue) == 0x000040, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetRacerIndexByPlayerControllerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000048, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemIrregularEvent, CallFunc_IsItemIrregular_New_ReturnValue) == 0x000050, "Member 'WBP_Race_HUD_Player01_C_SetItemIrregularEvent::CallFunc_IsItemIrregular_New_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemLifeTimeRate
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemLifeTimeRate final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewRate;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemLifeTimeRate) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemLifeTimeRate");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemLifeTimeRate) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetItemLifeTimeRate");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemLifeTimeRate, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemLifeTimeRate::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemLifeTimeRate, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetItemLifeTimeRate::ItemInfoType' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemLifeTimeRate, NewRate) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetItemLifeTimeRate::NewRate' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemPanelActive
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemPanelActive final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActive;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemPanelActive) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemPanelActive");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemPanelActive) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetItemPanelActive");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemPanelActive, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemPanelActive::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemPanelActive, bActive) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetItemPanelActive::bActive' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemPanelVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemPanelVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemPanelVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemPanelVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemPanelVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetItemPanelVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemPanelVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemPanelVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemPanelVisible, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetItemPanelVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetItemWarningUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetItemWarningUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetItemWarningUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetItemWarningUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetItemWarningUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetItemWarningUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetItemWarningUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetItemWarningUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetLapTimeInfo
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetLapTimeInfo final
{
public:
	int32                                         Minutes;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MilliSec;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetLapTimeInfo) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetLapTimeInfo");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetLapTimeInfo) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetLapTimeInfo");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetLapTimeInfo, Minutes) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetLapTimeInfo::Minutes' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetLapTimeInfo, Seconds) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetLapTimeInfo::Seconds' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetLapTimeInfo, MilliSec) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetLapTimeInfo::MilliSec' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetLapUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetLapUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetLapUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetLapUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetLapUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetLapUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetLapUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetLapUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetLostItemInfo
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetLostItemInfo final
{
public:
	int32                                         RacerId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       ItemId;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetLostItemInfo) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetLostItemInfo");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetLostItemInfo) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetLostItemInfo");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetLostItemInfo, RacerId) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetLostItemInfo::RacerId' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetLostItemInfo, ItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetLostItemInfo::ItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetManualAimingUIVisible
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetManualAimingUIVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScaleKeepInHoming;                               // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetManualAimingUIVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetManualAimingUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetManualAimingUIVisible) == 0x000010, "Wrong size on WBP_Race_HUD_Player01_C_SetManualAimingUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetManualAimingUIVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetManualAimingUIVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetManualAimingUIVisible, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetManualAimingUIVisible::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetManualAimingUIVisible, Scale) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetManualAimingUIVisible::Scale' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetManualAimingUIVisible, IsScaleKeepInHoming) == 0x00000C, "Member 'WBP_Race_HUD_Player01_C_SetManualAimingUIVisible::IsScaleKeepInHoming' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetMinimapIconItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetMinimapIconItem final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemId                                       InItemId;                                          // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetMinimapIconItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetMinimapIconItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetMinimapIconItem) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetMinimapIconItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMinimapIconItem, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetMinimapIconItem::RacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMinimapIconItem, InItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetMinimapIconItem::InItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetMinimapIconType
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetMinimapIconType final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMinimapIconType                              InMinimapIconType;                                 // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetMinimapIconType) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetMinimapIconType");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetMinimapIconType) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetMinimapIconType");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMinimapIconType, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetMinimapIconType::RacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMinimapIconType, InMinimapIconType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetMinimapIconType::InMinimapIconType' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetMiniMapVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetMiniMapVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetMiniMapVisibility");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility) == 0x000005, "Wrong size on WBP_Race_HUD_Player01_C_SetMiniMapVisibility");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetMiniMapVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_Race_HUD_Player01_C_SetMiniMapVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_Race_HUD_Player01_C_SetMiniMapVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Race_HUD_Player01_C_SetMiniMapVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetMiniMapVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetMiniMapVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetPauseFlag
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetPauseFlag final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetPauseFlag) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetPauseFlag");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetPauseFlag) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetPauseFlag");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPauseFlag, bPause) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetPauseFlag::bPause' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetPlayerName
// 0x0030 (0x0030 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetPlayerName final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsView;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetPlayerName) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetPlayerName");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetPlayerName) == 0x000030, "Wrong size on WBP_Race_HUD_Player01_C_SetPlayerName");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerName, ScreenIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetPlayerName::ScreenIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerName, PlayerControllerIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetPlayerName::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerName, ScreenPosition) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetPlayerName::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerName, Name_0) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_SetPlayerName::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerName, bIsView) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_SetPlayerName::bIsView' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetPlayerNamePosition
// 0x0020 (0x0020 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetPlayerNamePosition final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsView;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetPlayerNamePosition) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetPlayerNamePosition");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetPlayerNamePosition) == 0x000020, "Wrong size on WBP_Race_HUD_Player01_C_SetPlayerNamePosition");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerNamePosition, ScreenIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetPlayerNamePosition::ScreenIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerNamePosition, PlayerControllerIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetPlayerNamePosition::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerNamePosition, ScreenPosition) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetPlayerNamePosition::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerNamePosition, bIsView) == 0x000018, "Member 'WBP_Race_HUD_Player01_C_SetPlayerNamePosition::bIsView' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetPlayerPlatformIcon
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            InPlatform;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon, ScreenIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon::ScreenIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon, PlayerControllerIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon, InPlatform) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetPlayerPlatformIcon::InPlatform' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetQuickDriftCharge
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetQuickDriftCharge final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetQuickDriftCharge) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetQuickDriftCharge");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetQuickDriftCharge) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetQuickDriftCharge");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetQuickDriftCharge, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetQuickDriftCharge::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetQuickDriftCharge, Enable) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetQuickDriftCharge::Enable' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRacerApproachInfoVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RankAfterIndex;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible, RankAfterIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible::RankAfterIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible, bVisible) == 0x000005, "Member 'WBP_Race_HUD_Player01_C_SetRacerApproachInfoVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRacerIndex
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRacerIndex final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InRacerIndex;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayer_0;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRacerIndex) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRacerIndex");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRacerIndex) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetRacerIndex");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRacerIndex, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRacerIndex::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRacerIndex, InRacerIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRacerIndex::InRacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRacerIndex, IsLocalPlayer_0) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetRacerIndex::IsLocalPlayer_0' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRaceUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRaceUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRaceUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRaceUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRaceUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetRaceUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRaceUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRaceUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRankIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRankIndex final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InRankIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRankIndex) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRankIndex");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRankIndex) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRankIndex");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRankIndex, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRankIndex::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRankIndex, InRankIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRankIndex::InRankIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRankUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRankUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRankUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRankUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRankUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetRankUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRankUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRankUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRedStarRingDisp
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRedStarRingDisp final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RingIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRedStarRingDisp) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRedStarRingDisp");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRedStarRingDisp) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRedStarRingDisp");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRedStarRingDisp, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRedStarRingDisp::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRedStarRingDisp, RingIndex) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRedStarRingDisp::RingIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRedStarRingUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRedStarRingUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetReturnDashSetting
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetReturnDashSetting final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pivot;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetReturnDashSetting) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetReturnDashSetting");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetReturnDashSetting) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetReturnDashSetting");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashSetting, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashSetting::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashSetting, Pivot) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashSetting::Pivot' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashSetting, Range) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashSetting::Range' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetReturnDashUIGaugeRate
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeRate;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate, GaugeRate) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashUIGaugeRate::GaugeRate' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetReturnDashUIVisibleWithAnim_Implementation
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetReturnDashUIVisibleWithAnim_Implementation::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRingBoostGaugeBoostPercent
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent, Percent) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRingBoostGaugeBoostPercent::Percent' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRingBoostGaugeNormalPercent
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent, Percent) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercent::Percent' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRingBoostGaugeNormalPercentDirect
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect, Percent) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRingBoostGaugeNormalPercentDirect::Percent' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRingNum
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRingNum final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InRingNum;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRingNum) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRingNum");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRingNum) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetRingNum");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingNum, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRingNum::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingNum, InRingNum) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetRingNum::InRingNum' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRingUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRingUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRingUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRingUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRingUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetRingUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRingUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRingUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetRivalStartUI
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetRivalStartUI final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                RivalStatusObj;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetRivalStartUI) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SetRivalStartUI");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetRivalStartUI) == 0x000010, "Wrong size on WBP_Race_HUD_Player01_C_SetRivalStartUI");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRivalStartUI, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetRivalStartUI::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetRivalStartUI, RivalStatusObj) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetRivalStartUI::RivalStatusObj' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetShuffleRacerIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetShuffleRacerIndex final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetShuffleRacerIndex) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetShuffleRacerIndex");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetShuffleRacerIndex) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetShuffleRacerIndex");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetShuffleRacerIndex, RacerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetShuffleRacerIndex::RacerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetShuffleRacerIndex, CallFunc_Array_AddUnique_ReturnValue) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetShuffleRacerIndex::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetSpeedNumUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetSpeedNumUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetStartUICountText
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetStartUICountText final
{
public:
	int32                                         StartCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetStartUICountText) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetStartUICountText");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetStartUICountText) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_SetStartUICountText");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetStartUICountText, StartCount) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetStartUICountText::StartCount' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetStartUIGaugeRate
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetStartUIGaugeRate final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeRate;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetStartUIGaugeRate) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetStartUIGaugeRate");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetStartUIGaugeRate) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetStartUIGaugeRate");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetStartUIGaugeRate, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetStartUIGaugeRate::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetStartUIGaugeRate, GaugeRate) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetStartUIGaugeRate::GaugeRate' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetTeamRankUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetTeamRankUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetTeamRankUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetTeamRankUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetTeamRankUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetTeamRankUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTeamRankUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetTeamRankUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetTextBalloonUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetTextBalloonUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetTimeInfo
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetTimeInfo final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMinutes;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSecondes;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMilliSec;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetTimeInfo) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetTimeInfo");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetTimeInfo) == 0x000010, "Wrong size on WBP_Race_HUD_Player01_C_SetTimeInfo");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeInfo, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetTimeInfo::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeInfo, InMinutes) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetTimeInfo::InMinutes' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeInfo, InSecondes) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetTimeInfo::InSecondes' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeInfo, InMilliSec) == 0x00000C, "Member 'WBP_Race_HUD_Player01_C_SetTimeInfo::InMilliSec' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetTimeTrialLapInfo
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InLapCountNow;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InLapCountMax;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo, InLapCountNow) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo::InLapCountNow' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo, InLapCountMax) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SetTimeTrialLapInfo::InLapCountMax' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetTimeUIVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetTimeUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetTimeUIVisible) == 0x000001, "Wrong alignment on WBP_Race_HUD_Player01_C_SetTimeUIVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetTimeUIVisible) == 0x000001, "Wrong size on WBP_Race_HUD_Player01_C_SetTimeUIVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetTimeUIVisible, bVisible) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetTimeUIVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SettingToHUDAttackInfoWidget
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class URaceUISubApproachWarning*        InAttackWidget;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget) == 0x000010, "Wrong size on WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget, InAttackWidget) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_SettingToHUDAttackInfoWidget::InAttackWidget' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetVisibilityCharge
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetVisibilityCharge final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetVisibilityCharge) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetVisibilityCharge");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetVisibilityCharge) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetVisibilityCharge");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetVisibilityCharge, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetVisibilityCharge::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetVisibilityCharge, Enable) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetVisibilityCharge::Enable' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetVisibilityRank
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetVisibilityRank final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetVisibilityRank) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetVisibilityRank");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetVisibilityRank) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetVisibilityRank");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetVisibilityRank, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetVisibilityRank::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetVisibilityRank, Enable) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetVisibilityRank::Enable' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetWarningBeltVisible
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetWarningBeltVisible final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetWarningBeltVisible) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetWarningBeltVisible");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetWarningBeltVisible) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetWarningBeltVisible");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetWarningBeltVisible, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetWarningBeltVisible::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetWarningBeltVisible, bVisible) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetWarningBeltVisible::bVisible' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetWarningItemId
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetWarningItemId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetWarningItemId) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetWarningItemId");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetWarningItemId) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetWarningItemId");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetWarningItemId, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetWarningItemId::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetWarningItemId, InItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetWarningItemId::InItemId' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.SetYellowDrillShortTimeSoundEnable
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable");
static_assert(sizeof(WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable, bEnable) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_SetYellowDrillShortTimeSoundEnable::bEnable' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.StopLotteryItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_StopLotteryItem final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInfoType                                 ItemInfoType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_StopLotteryItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_StopLotteryItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_StopLotteryItem) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_StopLotteryItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_StopLotteryItem, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_StopLotteryItem::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_StopLotteryItem, ItemInfoType) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_StopLotteryItem::ItemInfoType' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateAimUIScale
// 0x0090 (0x0090 - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateAimUIScale final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AimLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDist;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDist;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateAimUIScale) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateAimUIScale");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateAimUIScale) == 0x000090, "Wrong size on WBP_Race_HUD_Player01_C_UpdateAimUIScale");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, PlayerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::PlayerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, AimLocation) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::AimLocation' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, MinDist) == 0x000020, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::MinDist' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, MaxDist) == 0x000028, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::MaxDist' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_GetDistance_ReturnValue) == 0x000050, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_FClamp_ReturnValue_1) == 0x000070, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateAimUIScale, CallFunc_FClamp_Value_ImplicitCast) == 0x000088, "Member 'WBP_Race_HUD_Player01_C_UpdateAimUIScale::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateCharge
// 0x000C (0x000C - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateCharge final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateCharge) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateCharge");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateCharge) == 0x00000C, "Wrong size on WBP_Race_HUD_Player01_C_UpdateCharge");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateCharge, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateCharge::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateCharge, Level) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_UpdateCharge::Level' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateCharge, Rate) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_UpdateCharge::Rate' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateHomingAimTargetedLocation
// 0x0020 (0x0020 - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PlayerLocation;                                    // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation) == 0x000008, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation) == 0x000020, "Wrong size on WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation, PlayerLocation) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_UpdateHomingAimTargetedLocation::PlayerLocation' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateIrregularInfiniteItem
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem) == 0x000004, "Wrong size on WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateIrregularInfiniteItem::PlayerControllerIndex' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateManualAimingUILocation
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatrix                                Rotation;                                          // 0x0020(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation) == 0x000010, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation) == 0x0000A0, "Wrong size on WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation, Location) == 0x000008, "Member 'WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation::Location' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation, Rotation) == 0x000020, "Member 'WBP_Race_HUD_Player01_C_UpdateManualAimingUILocation::Rotation' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateRank
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateRank final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChangeAmount;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateRank) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateRank");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateRank) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_UpdateRank");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateRank, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateRank::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateRank, ChangeAmount) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_UpdateRank::ChangeAmount' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UpdateSpeed
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_UpdateSpeed final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpeedKMPH;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UpdateSpeed) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_UpdateSpeed");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UpdateSpeed) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_UpdateSpeed");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateSpeed, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UpdateSpeed::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UpdateSpeed, SpeedKMPH) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_UpdateSpeed::SpeedKMPH' has a wrong offset!");

// Function WBP_Race_HUD_Player01.WBP_Race_HUD_Player01_C.UseItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Player01_C_UseItem final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Player01_C_UseItem) == 0x000004, "Wrong alignment on WBP_Race_HUD_Player01_C_UseItem");
static_assert(sizeof(WBP_Race_HUD_Player01_C_UseItem) == 0x000008, "Wrong size on WBP_Race_HUD_Player01_C_UseItem");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UseItem, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_HUD_Player01_C_UseItem::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Player01_C_UseItem, InItemId) == 0x000004, "Member 'WBP_Race_HUD_Player01_C_UseItem::InItemId' has a wrong offset!");

}

