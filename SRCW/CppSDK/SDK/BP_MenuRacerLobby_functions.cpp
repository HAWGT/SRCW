#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuRacerLobby

#include "Basic.hpp"

#include "BP_MenuRacerLobby_classes.hpp"
#include "BP_MenuRacerLobby_parameters.hpp"


namespace SDK
{

// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.Attach Driver
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::Attach_Driver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "Attach Driver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.ChangeMachineColor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InGroupIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InEnableEffect                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::ChangeMachineColor(int32 InGroupIndex, bool InEnableEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "ChangeMachineColor");

	Params::BP_MenuRacerLobby_C_ChangeMachineColor Parms{};

	Parms.InGroupIndex = InGroupIndex;
	Parms.InEnableEffect = InEnableEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.ChangeVisibleCrownfromRacerVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::ChangeVisibleCrownfromRacerVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "ChangeVisibleCrownfromRacerVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.CheckChangeParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               Racer_Data_Driver_Id                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType                          Racer_Data_Vehicle_Type                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              Racer_Data_Front_Parts_Id                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              Racer_Data_Rear_Parts_Id                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              Racer_Data_Tire_Parts_Id                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ChangedDriverId                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ChangedVehicleType                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ChangedFrontPartsId                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ChangedRearPartsId                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ChangedTirePartsId                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::CheckChangeParam(EDriverId Racer_Data_Driver_Id, ECarStatusType Racer_Data_Vehicle_Type, EMachineId Racer_Data_Front_Parts_Id, EMachineId Racer_Data_Rear_Parts_Id, EMachineId Racer_Data_Tire_Parts_Id, bool* ChangedDriverId, bool* ChangedVehicleType, bool* ChangedFrontPartsId, bool* ChangedRearPartsId, bool* ChangedTirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "CheckChangeParam");

	Params::BP_MenuRacerLobby_C_CheckChangeParam Parms{};

	Parms.Racer_Data_Driver_Id = Racer_Data_Driver_Id;
	Parms.Racer_Data_Vehicle_Type = Racer_Data_Vehicle_Type;
	Parms.Racer_Data_Front_Parts_Id = Racer_Data_Front_Parts_Id;
	Parms.Racer_Data_Rear_Parts_Id = Racer_Data_Rear_Parts_Id;
	Parms.Racer_Data_Tire_Parts_Id = Racer_Data_Tire_Parts_Id;

	UObject::ProcessEvent(Func, &Parms);

	if (ChangedDriverId != nullptr)
		*ChangedDriverId = Parms.ChangedDriverId;

	if (ChangedVehicleType != nullptr)
		*ChangedVehicleType = Parms.ChangedVehicleType;

	if (ChangedFrontPartsId != nullptr)
		*ChangedFrontPartsId = Parms.ChangedFrontPartsId;

	if (ChangedRearPartsId != nullptr)
		*ChangedRearPartsId = Parms.ChangedRearPartsId;

	if (ChangedTirePartsId != nullptr)
		*ChangedTirePartsId = Parms.ChangedTirePartsId;
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.DestroyCrown
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::DestroyCrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "DestroyCrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.DestroyDriverActor
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::DestroyDriverActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "DestroyDriverActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.DestroyMachineComponet
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::DestroyMachineComponet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "DestroyMachineComponet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.ExecuteUbergraph_BP_MenuRacerLobby
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::ExecuteUbergraph_BP_MenuRacerLobby(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "ExecuteUbergraph_BP_MenuRacerLobby");

	Params::BP_MenuRacerLobby_C_ExecuteUbergraph_BP_MenuRacerLobby Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.GetDriver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EDriverId*                              DriverId_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::GetDriver(EDriverId* DriverId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "GetDriver");

	Params::BP_MenuRacerLobby_C_GetDriver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DriverId_0 != nullptr)
		*DriverId_0 = Parms.DriverId_0;
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.GetDriverData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EDriverId                               DriverId_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDriverData*                     DriverData                                             (Parm, OutParm)
// bool*                                   bFind                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::GetDriverData(EDriverId DriverId_0, struct FDriverData* DriverData, bool* bFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "GetDriverData");

	Params::BP_MenuRacerLobby_C_GetDriverData Parms{};

	Parms.DriverId_0 = DriverId_0;

	UObject::ProcessEvent(Func, &Parms);

	if (DriverData != nullptr)
		*DriverData = std::move(Parms.DriverData);

	if (bFind != nullptr)
		*bFind = Parms.bFind;
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.HiddenCrown
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::HiddenCrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "HiddenCrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.OnCreateAuraEffect
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachineAuraId                          InAuraID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::OnCreateAuraEffect(EMachineAuraId InAuraID, ECarStatusType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "OnCreateAuraEffect");

	Params::BP_MenuRacerLobby_C_OnCreateAuraEffect Parms{};

	Parms.InAuraID = InAuraID;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.PlayDriverAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StateId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::PlayDriverAnimation(int32 StateId, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "PlayDriverAnimation");

	Params::BP_MenuRacerLobby_C_PlayDriverAnimation Parms{};

	Parms.StateId = StateId;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.PlayDriverStampVoice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InButtonIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::PlayDriverStampVoice(int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "PlayDriverStampVoice");

	Params::BP_MenuRacerLobby_C_PlayDriverStampVoice Parms{};

	Parms.InButtonIndex = InButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.PlayVoice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const EDriverVoiceId                    InDriverVoiceId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const ESoundPan                         InSoundPan                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::PlayVoice(const EDriverVoiceId InDriverVoiceId, const ESoundPan InSoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "PlayVoice");

	Params::BP_MenuRacerLobby_C_PlayVoice Parms{};

	Parms.InDriverVoiceId = InDriverVoiceId;
	Parms.InSoundPan = InSoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.Polling Set Sticker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStickerBakerHandle*              StickerBakerHandle                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsCompleteSetSticker                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::Polling_Set_Sticker(class UStickerBakerHandle* StickerBakerHandle, bool* IsCompleteSetSticker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "Polling Set Sticker");

	Params::BP_MenuRacerLobby_C_Polling_Set_Sticker Parms{};

	Parms.StickerBakerHandle = StickerBakerHandle;

	UObject::ProcessEvent(Func, &Parms);

	if (IsCompleteSetSticker != nullptr)
		*IsCompleteSetSticker = Parms.IsCompleteSetSticker;
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MenuRacerLobby_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_MenuRacerLobby_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "ReceiveTick");

	Params::BP_MenuRacerLobby_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.RoomEntryAnimEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::RoomEntryAnimEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "RoomEntryAnimEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.RoomEntryAnimLooping
// (BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::RoomEntryAnimLooping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "RoomEntryAnimLooping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetAll
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FUserMachineCustomizeData& InCustomizeData                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bIsSpawnCrown                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetAll(EDriverId InDriverId, const struct FUserMachineCustomizeData& InCustomizeData, bool bIsSpawnCrown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetAll");

	Params::BP_MenuRacerLobby_C_SetAll Parms{};

	Parms.InDriverId = InDriverId;
	Parms.InCustomizeData = std::move(InCustomizeData);
	Parms.bIsSpawnCrown = bIsSpawnCrown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetBoneSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseBoneControl                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  NeckRotation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FRotator&                  SpineRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuRacerLobby_C::SetBoneSetting(bool UseBoneControl, const struct FRotator& NeckRotation, const struct FRotator& SpineRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetBoneSetting");

	Params::BP_MenuRacerLobby_C_SetBoneSetting Parms{};

	Parms.UseBoneControl = UseBoneControl;
	Parms.NeckRotation = std::move(NeckRotation);
	Parms.SpineRotation = std::move(SpineRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetDriver
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               DriverId_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetDriver(EDriverId DriverId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetDriver");

	Params::BP_MenuRacerLobby_C_SetDriver Parms{};

	Parms.DriverId_0 = DriverId_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetForcedLod
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewForcedLodModel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetForcedLod(int32 NewForcedLodModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetForcedLod");

	Params::BP_MenuRacerLobby_C_SetForcedLod Parms{};

	Parms.NewForcedLodModel = NewForcedLodModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetHornData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachineHornType                        InHornType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetHornData(EMachineHornType InHornType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetHornData");

	Params::BP_MenuRacerLobby_C_SetHornData Parms{};

	Parms.InHornType = InHornType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetLODLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Lod_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetLODLevel(int32 Lod_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetLODLevel");

	Params::BP_MenuRacerLobby_C_SetLODLevel Parms{};

	Parms.Lod_0 = Lod_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetupMeshComps
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUse                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Lod_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetupMeshComps(bool bUse, int32 Lod_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetupMeshComps");

	Params::BP_MenuRacerLobby_C_SetupMeshComps Parms{};

	Parms.bUse = bUse;
	Parms.Lod_0 = Lod_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SetVisibilityCrown
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SetVisibilityCrown(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SetVisibilityCrown");

	Params::BP_MenuRacerLobby_C_SetVisibilityCrown Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SpawnDriverActor
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::SpawnDriverActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SpawnDriverActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SpawnHoverboard
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::SpawnHoverboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SpawnHoverboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SpawnMachine
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::SpawnMachine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SpawnMachine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.SpawnOrVisibleCrown
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsNotSpawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::SpawnOrVisibleCrown(bool bIsNotSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "SpawnOrVisibleCrown");

	Params::BP_MenuRacerLobby_C_SpawnOrVisibleCrown Parms{};

	Parms.bIsNotSpawn = bIsNotSpawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.StartRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuRacerLobby_C::StartRotation(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "StartRotation");

	Params::BP_MenuRacerLobby_C_StartRotation Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.StopRotation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuRacerLobby_C::StopRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "StopRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuRacerLobby.BP_MenuRacerLobby_C.GetHornID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FST_RacerDataForPreview&   ST_RacerDataForPreview                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineHornType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EMachineHornType ABP_MenuRacerLobby_C::GetHornID(const struct FST_RacerDataForPreview& ST_RacerDataForPreview) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuRacerLobby_C", "GetHornID");

	Params::BP_MenuRacerLobby_C_GetHornID Parms{};

	Parms.ST_RacerDataForPreview = std::move(ST_RacerDataForPreview);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

