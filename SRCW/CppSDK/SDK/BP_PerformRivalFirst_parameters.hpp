#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PerformRivalFirst

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.Apply Rival Level
// 0x0050 (0x0050 - 0x0000)
struct BP_PerformRivalFirst_C_Apply_Rival_Level final
{
public:
	TArray<uint8>                                 CallFunc_GetRaceRivalBaseLevel_ReturnValue;        // 0x0000(0x0010)(ConstParm, ReferenceParm)
	uint8                                         CallFunc_GetMenuDataBaseRivalLevel_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERivalTeamId                                  CallFunc_GetSelectedRivalTeamId_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxRivalTeamLevel_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAdjustedRivalTeamLevelByID_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxRivalTeamLevel_ReturnValue_1;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 CallFunc_GetRaceRivalLevel_ReturnValue;            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_Apply_Rival_Level) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_Apply_Rival_Level");
static_assert(sizeof(BP_PerformRivalFirst_C_Apply_Rival_Level) == 0x000050, "Wrong size on BP_PerformRivalFirst_C_Apply_Rival_Level");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetRaceRivalBaseLevel_ReturnValue) == 0x000000, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetRaceRivalBaseLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetMenuDataBaseRivalLevel_ReturnValue) == 0x000010, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetMenuDataBaseRivalLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000018, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetSelectedRivalTeamId_ReturnValue) == 0x00001C, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetSelectedRivalTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetMaxRivalTeamLevel_ReturnValue) == 0x000020, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetMaxRivalTeamLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetAdjustedRivalTeamLevelByID_ReturnValue) == 0x000024, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetAdjustedRivalTeamLevelByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetSelectedGameModeId_ReturnValue) == 0x000028, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetSelectedGameModeId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetMaxRivalTeamLevel_ReturnValue_1) == 0x00002C, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetMaxRivalTeamLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_GetRaceRivalLevel_ReturnValue) == 0x000038, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_GetRaceRivalLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_Apply_Rival_Level, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000048, "Member 'BP_PerformRivalFirst_C_Apply_Rival_Level::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.CreateScene
// 0x0AE0 (0x0AE0 - 0x0000)
struct BP_PerformRivalFirst_C_CreateScene final
{
public:
	class ASceneDriver*                           In_Player;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASceneDriver*                           In_Rival;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         In_RivalIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIn_SoloMode;                                      // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneSequencePlaybackSettings    CommonSetting;                                     // 0x0018(0x0028)(Edit, BlueprintVisible, NoDestructor)
	struct FSoftObjectPath                        CallFunc_GetLipSyncAnimationPath_ReturnValue;      // 0x0040(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0060(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetLoadedObject_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_As____________;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_DynamicCast_As_____________1;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossibleUniquePerformRival_ReturnValue; // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERivalLipSyncType                             Temp_byte_Variable;                                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x045C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue; // 0x0468(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0488(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSoftObjectPath_PathString;           // 0x0820(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_1; // 0x0838(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSoftObjectPath_PathString_1;         // 0x0858(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0870(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0880(0x0010)()
	TScriptInterface<class ISceneDriverVoicePlayer> CallFunc_ActivateVoice_self_CastInput;           // 0x0890(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISceneDriverVoicePlayer> CallFunc_ActivateVoice_self_CastInput_1;         // 0x08A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRacerName_OutRacerName;                // 0x08B0(0x0010)()
	class UWBP_RaceBefore_RivalRacer_C*           CallFunc_Create_ReturnValue;                       // 0x08C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x08D0(0x0010)(ConstParm)
	ERivalLipSyncType                             Temp_byte_Variable_1;                              // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x08E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E3[0x5];                                      // 0x08E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          CallFunc_GetRivalLevelSequenceReference_Out_Asset; // 0x08E8(0x0028)(HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_2; // 0x0910(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_GetPlayerLevelSequenceReference_Out_Asset; // 0x0930(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_GetLoadedObject_ReturnValue_1;            // 0x0958(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_3; // 0x0960(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_As________;                     // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_989[0x7];                                      // 0x0989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetLoadedObject_ReturnValue_2;            // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_As_________1;                   // 0x09A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_1;     // 0x09B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_1;  // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x09C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CA[0x6];                                      // 0x09CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_As_________2;                   // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_As_________3;                   // 0x09F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_2;     // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_2;  // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_3;     // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_3;  // 0x0A18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_4;     // 0x0A28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_4;  // 0x0A30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERivalLipSyncType                             K2Node_Select_Default_1;                           // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_GetLipSyncAnimationPath_ReturnValue_1;    // 0x0A40(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x0A60(0x0028)(NoDestructor)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x0A88(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0AB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetLoadedObject_ReturnValue_3;            // 0x0AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_As_____________2;               // 0x0AC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x7];                                      // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_DynamicCast_As_____________3;               // 0x0AD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_CreateScene) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_CreateScene");
static_assert(sizeof(BP_PerformRivalFirst_C_CreateScene) == 0x000AE0, "Wrong size on BP_PerformRivalFirst_C_CreateScene");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, In_Player) == 0x000000, "Member 'BP_PerformRivalFirst_C_CreateScene::In_Player' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, In_Rival) == 0x000008, "Member 'BP_PerformRivalFirst_C_CreateScene::In_Rival' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, In_RivalIndex) == 0x000010, "Member 'BP_PerformRivalFirst_C_CreateScene::In_RivalIndex' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, bIn_SoloMode) == 0x000014, "Member 'BP_PerformRivalFirst_C_CreateScene::bIn_SoloMode' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CommonSetting) == 0x000018, "Member 'BP_PerformRivalFirst_C_CreateScene::CommonSetting' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetLipSyncAnimationPath_ReturnValue) == 0x000040, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetLipSyncAnimationPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000060, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetLoadedObject_ReturnValue) == 0x000088, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetLoadedObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000090, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As____________) == 0x000098, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As____________' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As_____________1) == 0x0000A8, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As_____________1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_IsPossibleUniquePerformRival_ReturnValue) == 0x0000B2, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_IsPossibleUniquePerformRival_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Not_PreBool_ReturnValue) == 0x0000B3, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_BooleanOR_ReturnValue) == 0x0000B4, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, Temp_byte_Variable) == 0x0000B5, "Member 'BP_PerformRivalFirst_C_CreateScene::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetEnumeratorName_ReturnValue) == 0x0000B8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, Temp_bool_Variable) == 0x0000C0, "Member 'BP_PerformRivalFirst_C_CreateScene::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000458, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x00045C, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue) == 0x000468, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000488, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000818, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_BreakSoftObjectPath_PathString) == 0x000820, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_BreakSoftObjectPath_PathString' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_StringToName_ReturnValue) == 0x000830, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_1) == 0x000838, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_BreakSoftObjectPath_PathString_1) == 0x000858, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_BreakSoftObjectPath_PathString_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000868, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_MakeArray_Array) == 0x000870, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Format_ReturnValue) == 0x000880, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_ActivateVoice_self_CastInput) == 0x000890, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_ActivateVoice_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_ActivateVoice_self_CastInput_1) == 0x0008A0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_ActivateVoice_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetRacerName_OutRacerName) == 0x0008B0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetRacerName_OutRacerName' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Create_ReturnValue) == 0x0008C0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_TextIsEmpty_ReturnValue) == 0x0008C8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_Select_Default) == 0x0008D0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, Temp_byte_Variable_1) == 0x0008E0, "Member 'BP_PerformRivalFirst_C_CreateScene::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0008E1, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0008E2, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetRivalLevelSequenceReference_Out_Asset) == 0x0008E8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetRivalLevelSequenceReference_Out_Asset' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_2) == 0x000910, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetPlayerLevelSequenceReference_Out_Asset) == 0x000930, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetPlayerLevelSequenceReference_Out_Asset' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetLoadedObject_ReturnValue_1) == 0x000958, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetLoadedObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_3) == 0x000960, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As________) == 0x000980, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As________' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_2) == 0x000988, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetLoadedObject_ReturnValue_2) == 0x000990, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetLoadedObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000998, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x0009A0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As_________1) == 0x0009A8, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As_________1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_3) == 0x0009B0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_OutActor_1) == 0x0009B8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_ReturnValue_1) == 0x0009C0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_IsValid_ReturnValue_1) == 0x0009C8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_IsValid_ReturnValue_2) == 0x0009C9, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0009D0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x0009D8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As_________2) == 0x0009E0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As_________2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_4) == 0x0009E8, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As_________3) == 0x0009F0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As_________3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_5) == 0x0009F8, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_OutActor_2) == 0x000A00, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_OutActor_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_ReturnValue_2) == 0x000A08, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_OutActor_3) == 0x000A10, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_OutActor_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_ReturnValue_3) == 0x000A18, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, Temp_bool_Variable_1) == 0x000A20, "Member 'BP_PerformRivalFirst_C_CreateScene::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_OutActor_4) == 0x000A28, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_OutActor_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_CreateLevelSequencePlayer_ReturnValue_4) == 0x000A30, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_CreateLevelSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_Select_Default_1) == 0x000A38, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetLipSyncAnimationPath_ReturnValue_1) == 0x000A40, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetLipSyncAnimationPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x000A60, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x000A88, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000AB0, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_GetLoadedObject_ReturnValue_3) == 0x000AB8, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_GetLoadedObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As_____________2) == 0x000AC0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As_____________2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_6) == 0x000AC8, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_As_____________3) == 0x000AD0, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_As_____________3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, K2Node_DynamicCast_bSuccess_7) == 0x000AD8, "Member 'BP_PerformRivalFirst_C_CreateScene::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_CreateScene, CallFunc_IsValid_ReturnValue_3) == 0x000AD9, "Member 'BP_PerformRivalFirst_C_CreateScene::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.ExecuteUbergraph_BP_PerformRivalFirst
// 0x0208 (0x0208 - 0x0000)
struct BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RaceBefore_RivalRacer_Cutin_C*     CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPostProcessToActiveCamera_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_FindNamedBinding_ReturnValue;             // 0x007C(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetBoundObjects_ReturnValue;              // 0x0098(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_As______________2D;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_As______________2D_1;           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTextureRenderTarget2D>  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0120(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	ERivalType                                    CallFunc_GetRivalTypesRacerIndex_ReturnValue;      // 0x0148(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPlayerMessageFromTable_Out_Text;       // 0x0150(0x0010)()
	class UWBP_Movie_Subtitles_C*                 CallFunc_Create_ReturnValue_1;                     // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERivalType                                    CallFunc_GetRivalTypesRacerIndex_ReturnValue_1;    // 0x019D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageId                                      CallFunc_GetStageId_Out_StageId;                   // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageId                                      CallFunc_GetStageId_Out_StageId_1;                 // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplySettingsSceneCaptureAll_OutResult;   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplySettingsCineCameraAll_OutResult;     // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplySettingsCineCameraAll_OutResult_1;   // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformRivalInteractionType                  CallFunc_GetRivalFirstInteractionType_ReturnValue; // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformRivalInteractionType                  CallFunc_GetPlayerLastInteractionType_ReturnValue; // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibleSubtitle_bVisible;               // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRivalMessageFromTable_Out_Text;        // 0x01A8(0x0010)()
	bool                                          CallFunc_IsVisibleSubtitle_bVisible_1;             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARaceSequence*                          CallFunc_GetActorOfClass_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTextureRenderTarget2D>  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x01D0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst");
static_assert(sizeof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst) == 0x000208, "Wrong size on BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, EntryPoint) == 0x000000, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_bool_True_if_break_was_hit_Variable) == 0x000005, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_Event_EndPlayReason) == 0x000008, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_SetPostProcessToActiveCamera_ReturnValue) == 0x000078, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_SetPostProcessToActiveCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_FindNamedBinding_ReturnValue) == 0x00007C, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_FindNamedBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetBoundObjects_ReturnValue) == 0x000098, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetBoundObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetCineCameraComponent_ReturnValue) == 0x0000C0, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000F0, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_DynamicCast_As______________2D) == 0x0000F8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_DynamicCast_As______________2D' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_bool_Has_Been_Initd_Variable_1) == 0x000101, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000108, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_DynamicCast_As______________2D_1) == 0x000110, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_DynamicCast_As______________2D_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000120, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetRivalTypesRacerIndex_ReturnValue) == 0x000148, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetRivalTypesRacerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetPlayerMessageFromTable_Out_Text) == 0x000150, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetPlayerMessageFromTable_Out_Text' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Create_ReturnValue_1) == 0x000160, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_BooleanAND_ReturnValue_1) == 0x000168, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_bool_IsClosed_Variable_1) == 0x000169, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_BooleanAND_ReturnValue_2) == 0x00016A, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, Temp_int_Array_Index_Variable) == 0x00016C, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_4) == 0x000170, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_DynamicCast_AsCine________) == 0x000180, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_DynamicCast_bSuccess_2) == 0x000188, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, K2Node_CreateDelegate_OutputDelegate_5) == 0x00018C, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_5) == 0x00019C, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetRivalTypesRacerIndex_ReturnValue_1) == 0x00019D, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetRivalTypesRacerIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetStageId_Out_StageId) == 0x00019E, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetStageId_Out_StageId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetStageId_Out_StageId_1) == 0x00019F, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetStageId_Out_StageId_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_ApplySettingsSceneCaptureAll_OutResult) == 0x0001A0, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_ApplySettingsSceneCaptureAll_OutResult' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_ApplySettingsCineCameraAll_OutResult) == 0x0001A1, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_ApplySettingsCineCameraAll_OutResult' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_ApplySettingsCineCameraAll_OutResult_1) == 0x0001A2, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_ApplySettingsCineCameraAll_OutResult_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetRivalFirstInteractionType_ReturnValue) == 0x0001A3, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetRivalFirstInteractionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetPlayerLastInteractionType_ReturnValue) == 0x0001A4, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetPlayerLastInteractionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_6) == 0x0001A5, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_7) == 0x0001A6, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsVisibleSubtitle_bVisible) == 0x0001A7, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsVisibleSubtitle_bVisible' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetRivalMessageFromTable_Out_Text) == 0x0001A8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetRivalMessageFromTable_Out_Text' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsVisibleSubtitle_bVisible_1) == 0x0001B8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsVisibleSubtitle_bVisible_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_GetActorOfClass_ReturnValue) == 0x0001C0, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_8) == 0x0001C8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x0001D0, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_9) == 0x0001F8, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_10) == 0x0001F9, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_IsValid_ReturnValue_11) == 0x0001FA, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Delay_Duration_ImplicitCast) == 0x0001FC, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000200, "Member 'BP_PerformRivalFirst_C_ExecuteUbergraph_BP_PerformRivalFirst::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.GetPlayerLevelSequenceReference
// 0x0490 (0x0490 - 0x0000)
struct BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference final
{
public:
	EDriverId                                     In_PlayerDriverId;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     In_RivalDriverId;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_IsHover;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          Out_Asset;                                         // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class ULevelSequence>>  Scenes;                                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Index_0;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformRivalInteractionType                  CallFunc_GetPlayerLastInteractionType_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformRivalInteractionType                  Temp_byte_Variable;                                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          CallFunc_Array_Get_Item;                           // 0x0400(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class ULevelSequence>>  K2Node_Select_Default_1;                           // 0x0428(0x0010)(ReferenceParm)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_Array_Get_Item_1;                         // 0x0438(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          K2Node_Select_Default_2;                           // 0x0468(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference");
static_assert(sizeof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference) == 0x000490, "Wrong size on BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, In_PlayerDriverId) == 0x000000, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::In_PlayerDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, In_RivalDriverId) == 0x000001, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::In_RivalDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, In_IsHover) == 0x000002, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::In_IsHover' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Out_Asset) == 0x000008, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Out_Asset' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Scenes) == 0x000030, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Scenes' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Index_0) == 0x000040, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Index_0' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_GetPlayerLastInteractionType_ReturnValue) == 0x000044, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_GetPlayerLastInteractionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_bool_Variable) == 0x000045, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_byte_Variable) == 0x000046, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_int_Variable) == 0x000048, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_int_Variable_1) == 0x00004C, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_int_Variable_2) == 0x000050, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_int_Variable_3) == 0x000054, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_int_Variable_4) == 0x000058, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, K2Node_Select_Default) == 0x00005C, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_GetEnumeratorName_ReturnValue) == 0x000060, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003F8, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, Temp_bool_Variable_1) == 0x0003F9, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_Array_Get_Item) == 0x000400, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, K2Node_Select_Default_1) == 0x000428, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_Array_Get_Item_1) == 0x000438, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000460, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference, K2Node_Select_Default_2) == 0x000468, "Member 'BP_PerformRivalFirst_C_GetPlayerLevelSequenceReference::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.GetRivalLevelSequenceReference
// 0x0490 (0x0490 - 0x0000)
struct BP_PerformRivalFirst_C_GetRivalLevelSequenceReference final
{
public:
	EDriverId                                     In_PlayerDriverId;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     In_RivalDriverId;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_IsHover;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          Out_Asset;                                         // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class ULevelSequence>>  Scenes;                                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Index_0;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformRivalInteractionType                  CallFunc_GetRivalFirstInteractionType_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformRivalInteractionType                  Temp_byte_Variable;                                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          CallFunc_Array_Get_Item;                           // 0x0400(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class ULevelSequence>>  K2Node_Select_Default_1;                           // 0x0428(0x0010)(ReferenceParm)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_Array_Get_Item_1;                         // 0x0438(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          K2Node_Select_Default_2;                           // 0x0468(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_GetRivalLevelSequenceReference");
static_assert(sizeof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference) == 0x000490, "Wrong size on BP_PerformRivalFirst_C_GetRivalLevelSequenceReference");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, In_PlayerDriverId) == 0x000000, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::In_PlayerDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, In_RivalDriverId) == 0x000001, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::In_RivalDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, In_IsHover) == 0x000002, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::In_IsHover' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Out_Asset) == 0x000008, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Out_Asset' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Scenes) == 0x000030, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Scenes' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Index_0) == 0x000040, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Index_0' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_GetRivalFirstInteractionType_ReturnValue) == 0x000044, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_GetRivalFirstInteractionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_bool_Variable) == 0x000045, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_byte_Variable) == 0x000046, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_int_Variable) == 0x000048, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_int_Variable_1) == 0x00004C, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_int_Variable_2) == 0x000050, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_int_Variable_3) == 0x000054, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_int_Variable_4) == 0x000058, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, K2Node_Select_Default) == 0x00005C, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_GetEnumeratorName_ReturnValue) == 0x000060, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003F8, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, Temp_bool_Variable_1) == 0x0003F9, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_Array_Get_Item) == 0x000400, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, K2Node_Select_Default_1) == 0x000428, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_Array_Get_Item_1) == 0x000438, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000460, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalLevelSequenceReference, K2Node_Select_Default_2) == 0x000468, "Member 'BP_PerformRivalFirst_C_GetRivalLevelSequenceReference::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.GetStageId
// 0x0018 (0x0018 - 0x0000)
struct BP_PerformRivalFirst_C_GetStageId final
{
public:
	EStageId                                      Out_StageId;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EStageId>                              CallFunc_GetSelectedStageIds_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_PerformRivalFirst_C_GetStageId) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_GetStageId");
static_assert(sizeof(BP_PerformRivalFirst_C_GetStageId) == 0x000018, "Wrong size on BP_PerformRivalFirst_C_GetStageId");
static_assert(offsetof(BP_PerformRivalFirst_C_GetStageId, Out_StageId) == 0x000000, "Member 'BP_PerformRivalFirst_C_GetStageId::Out_StageId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetStageId, CallFunc_GetSelectedStageIds_ReturnValue) == 0x000008, "Member 'BP_PerformRivalFirst_C_GetStageId::CallFunc_GetSelectedStageIds_ReturnValue' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.IsVisibleSubtitle
// 0x0010 (0x0010 - 0x0000)
struct BP_PerformRivalFirst_C_IsVisibleSubtitle final
{
public:
	class ASceneDriver*                           InDriver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECaptionVisible                               CallFunc_GetCaptionVisibility_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_IsVisibleSubtitle) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_IsVisibleSubtitle");
static_assert(sizeof(BP_PerformRivalFirst_C_IsVisibleSubtitle) == 0x000010, "Wrong size on BP_PerformRivalFirst_C_IsVisibleSubtitle");
static_assert(offsetof(BP_PerformRivalFirst_C_IsVisibleSubtitle, InDriver) == 0x000000, "Member 'BP_PerformRivalFirst_C_IsVisibleSubtitle::InDriver' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_IsVisibleSubtitle, bVisible) == 0x000008, "Member 'BP_PerformRivalFirst_C_IsVisibleSubtitle::bVisible' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_IsVisibleSubtitle, CallFunc_GetCaptionVisibility_ReturnValue) == 0x000009, "Member 'BP_PerformRivalFirst_C_IsVisibleSubtitle::CallFunc_GetCaptionVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_IsVisibleSubtitle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_PerformRivalFirst_C_IsVisibleSubtitle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_IsVisibleSubtitle, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_PerformRivalFirst_C_IsVisibleSubtitle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_IsVisibleSubtitle, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_PerformRivalFirst_C_IsVisibleSubtitle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.PlayScene
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PerformRivalFirst_C_PlayScene final
{
public:
	class AActor*                                 In_PlayerRoot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 In_RivalRoot;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_As______________2D;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASceneCapture2D*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_PlayScene) == 0x000010, "Wrong alignment on BP_PerformRivalFirst_C_PlayScene");
static_assert(sizeof(BP_PerformRivalFirst_C_PlayScene) == 0x0000C0, "Wrong size on BP_PerformRivalFirst_C_PlayScene");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, In_PlayerRoot) == 0x000000, "Member 'BP_PerformRivalFirst_C_PlayScene::In_PlayerRoot' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, In_RivalRoot) == 0x000008, "Member 'BP_PerformRivalFirst_C_PlayScene::In_RivalRoot' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_PerformRivalFirst_C_PlayScene::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, K2Node_DynamicCast_As______________2D) == 0x000018, "Member 'BP_PerformRivalFirst_C_PlayScene::K2Node_DynamicCast_As______________2D' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PerformRivalFirst_C_PlayScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_PerformRivalFirst_C_PlayScene::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_PerformRivalFirst_C_PlayScene::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A0, "Member 'BP_PerformRivalFirst_C_PlayScene::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'BP_PerformRivalFirst_C_PlayScene::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BP_PerformRivalFirst_C_PlayScene::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_PlayScene, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_PerformRivalFirst_C_PlayScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PerformRivalFirst_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PerformRivalFirst_C_ReceiveEndPlay");
static_assert(sizeof(BP_PerformRivalFirst_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PerformRivalFirst_C_ReceiveEndPlay");
static_assert(offsetof(BP_PerformRivalFirst_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PerformRivalFirst_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.SetSubtitle
// 0x0010 (0x0010 - 0x0000)
struct BP_PerformRivalFirst_C_SetSubtitle final
{
public:
	class FText                                   In_Subtitle;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PerformRivalFirst_C_SetSubtitle) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_SetSubtitle");
static_assert(sizeof(BP_PerformRivalFirst_C_SetSubtitle) == 0x000010, "Wrong size on BP_PerformRivalFirst_C_SetSubtitle");
static_assert(offsetof(BP_PerformRivalFirst_C_SetSubtitle, In_Subtitle) == 0x000000, "Member 'BP_PerformRivalFirst_C_SetSubtitle::In_Subtitle' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.GetPlayerMessageFromTable
// 0x0858 (0x0858 - 0x0000)
struct BP_PerformRivalFirst_C_GetPlayerMessageFromTable final
{
public:
	EDriverId                                     In_PlayerDriverId;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     In_RivalDriverId;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Out_Text;                                          // 0x0008(0x0010)(Parm, OutParm)
	class FName                                   PlayerShortName;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RivalShortName;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextFromStringTable_ReturnValue;          // 0x04A8(0x0010)()
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x04C0(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_GetPlayerMessageFromTable");
static_assert(sizeof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable) == 0x000858, "Wrong size on BP_PerformRivalFirst_C_GetPlayerMessageFromTable");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, In_PlayerDriverId) == 0x000000, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::In_PlayerDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, In_RivalDriverId) == 0x000001, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::In_RivalDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, Out_Text) == 0x000008, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::Out_Text' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, PlayerShortName) == 0x000018, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::PlayerShortName' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, RivalShortName) == 0x000020, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::RivalShortName' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000038, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_GetEnumeratorName_ReturnValue) == 0x0000E8, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000490, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_Conv_TextToString_ReturnValue) == 0x000498, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_TextFromStringTable_ReturnValue) == 0x0004A8, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_TextFromStringTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x0004B8, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0004C0, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetPlayerMessageFromTable, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000850, "Member 'BP_PerformRivalFirst_C_GetPlayerMessageFromTable::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function BP_PerformRivalFirst.BP_PerformRivalFirst_C.GetRivalMessageFromTable
// 0x08F0 (0x08F0 - 0x0000)
struct BP_PerformRivalFirst_C_GetRivalMessageFromTable final
{
public:
	EDriverId                                     In_PlayerDriverId;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     In_RivalDriverId;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_SoloMode;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Out_Text;                                          // 0x0008(0x0010)(Parm, OutParm)
	class FName                                   PlayerShortName;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RivalShortName;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x00F8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0170(0x0010)()
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0198(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextFromStringTable_ReturnValue;          // 0x0540(0x0010)()
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0558(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerformRivalFirst_C_GetRivalMessageFromTable) == 0x000008, "Wrong alignment on BP_PerformRivalFirst_C_GetRivalMessageFromTable");
static_assert(sizeof(BP_PerformRivalFirst_C_GetRivalMessageFromTable) == 0x0008F0, "Wrong size on BP_PerformRivalFirst_C_GetRivalMessageFromTable");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, In_PlayerDriverId) == 0x000000, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::In_PlayerDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, In_RivalDriverId) == 0x000001, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::In_RivalDriverId' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, In_SoloMode) == 0x000002, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::In_SoloMode' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, Out_Text) == 0x000008, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::Out_Text' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, PlayerShortName) == 0x000018, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::PlayerShortName' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, RivalShortName) == 0x000020, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::RivalShortName' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000038, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0000F8, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, K2Node_MakeArray_Array_1) == 0x000160, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Format_ReturnValue_1) == 0x000170, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_GetEnumeratorName_ReturnValue) == 0x000180, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000188, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000198, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000528, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, Temp_bool_Variable) == 0x000529, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, K2Node_Select_Default) == 0x000530, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_TextFromStringTable_ReturnValue) == 0x000540, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_TextFromStringTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x000550, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000558, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PerformRivalFirst_C_GetRivalMessageFromTable, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0008E8, "Member 'BP_PerformRivalFirst_C_GetRivalMessageFromTable::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

}

