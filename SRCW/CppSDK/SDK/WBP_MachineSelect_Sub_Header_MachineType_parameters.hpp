#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MachineSelect_Sub_Header_MachineType

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionRun_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_MachineSelect_Sub_Header_MachineType.WBP_MachineSelect_Sub_Header_MachineType_C.ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType) == 0x000004, "Wrong alignment on WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType");
static_assert(sizeof(WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType) == 0x000008, "Wrong size on WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType, EntryPoint) == 0x000000, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_ExecuteUbergraph_WBP_MachineSelect_Sub_Header_MachineType::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_MachineSelect_Sub_Header_MachineType.WBP_MachineSelect_Sub_Header_MachineType_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct");
static_assert(sizeof(WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct) == 0x000001, "Wrong size on WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MachineSelect_Sub_Header_MachineType.WBP_MachineSelect_Sub_Header_MachineType_C.SetGadgetCategory
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory final
{
public:
	EGadgetCategory                               GadgetCategory;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetCustomCategoryColor             TmpGadgetCustomCategoryData;                       // 0x0008(0x0050)(Edit, BlueprintVisible)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGadgetCustomCategoryColor             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0050)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory");
static_assert(sizeof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory) == 0x0000C8, "Wrong size on WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, GadgetCategory) == 0x000000, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::GadgetCategory' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, TmpGadgetCustomCategoryData) == 0x000008, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::TmpGadgetCustomCategoryData' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, CallFunc_GetEnumeratorName_ReturnValue) == 0x000058, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000C0, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetGadgetCategory::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_Header_MachineType.WBP_MachineSelect_Sub_Header_MachineType_C.SetMachineType
// 0x0080 (0x0080 - 0x0000)
struct WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType final
{
public:
	ECarStatusType                                Machine_Type_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0070(0x0010)()
};
static_assert(alignof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType");
static_assert(sizeof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType) == 0x000080, "Wrong size on WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Machine_Type_0) == 0x000000, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Machine_Type_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_byte_Variable) == 0x000001, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_struct_Variable) == 0x000004, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_struct_Variable_3) == 0x000034, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, Temp_struct_Variable_4) == 0x000044, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, K2Node_Select_Default) == 0x000054, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType, K2Node_Select_Default_1) == 0x000070, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetMachineType::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_MachineSelect_Sub_Header_MachineType.WBP_MachineSelect_Sub_Header_MachineType_C.SetupNewIcon
// 0x0005 (0x0005 - 0x0000)
struct WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NewMachinePartsExists_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon");
static_assert(sizeof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon) == 0x000005, "Wrong size on WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon, Temp_bool_Variable) == 0x000000, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon, Temp_byte_Variable) == 0x000001, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon, CallFunc_NewMachinePartsExists_ReturnValue) == 0x000003, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon::CallFunc_NewMachinePartsExists_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon, K2Node_Select_Default) == 0x000004, "Member 'WBP_MachineSelect_Sub_Header_MachineType_C_SetupNewIcon::K2Node_Select_Default' has a wrong offset!");

}

