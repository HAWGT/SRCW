#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StickerTest

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StickerTest.WBP_StickerTest_C
// 0x0040 (0x0320 - 0x02E0)
class UWBP_StickerTest_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       GuideOut;                                          // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GuideIn;                                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_62;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_UvPreview;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TextBlock_Warning;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsGuideOpen;                                       // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PlayGuideIn();
	void PlayGuideOut();
	void SetUvPreviewMid(class UMaterialInstanceDynamic* InUvPreviewMid, bool bInFlipUv);
	void SetWarningVisibility(bool InVisibility);
	void ToggleUvPreviewMid();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StickerTest_C">();
	}
	static class UWBP_StickerTest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StickerTest_C>();
	}
};
static_assert(alignof(UWBP_StickerTest_C) == 0x000008, "Wrong alignment on UWBP_StickerTest_C");
static_assert(sizeof(UWBP_StickerTest_C) == 0x000320, "Wrong size on UWBP_StickerTest_C");
static_assert(offsetof(UWBP_StickerTest_C, GuideOut) == 0x0002E0, "Member 'UWBP_StickerTest_C::GuideOut' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, GuideIn) == 0x0002E8, "Member 'UWBP_StickerTest_C::GuideIn' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, Image_62) == 0x0002F0, "Member 'UWBP_StickerTest_C::Image_62' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, Image_Background) == 0x0002F8, "Member 'UWBP_StickerTest_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, Image_UvPreview) == 0x000300, "Member 'UWBP_StickerTest_C::Image_UvPreview' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, SafeZone_0) == 0x000308, "Member 'UWBP_StickerTest_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, TextBlock_Warning) == 0x000310, "Member 'UWBP_StickerTest_C::TextBlock_Warning' has a wrong offset!");
static_assert(offsetof(UWBP_StickerTest_C, IsGuideOpen) == 0x000318, "Member 'UWBP_StickerTest_C::IsGuideOpen' has a wrong offset!");

}

