#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StartingLights

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StartingLights.BP_StartingLights_C
// 0x00E0 (0x0380 - 0x02A0)
class ABP_StartingLights_C final : public ARaceObjectSkeletal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAtomComponent*                         Atom;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DelayStarted_Rate_68AD9B2D45FF9BAE383C3A80276A4067; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DelayStarted__Direction_68AD9B2D45FF9BAE383C3A80276A4067; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DelayStarted;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Count3;                                            // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Count2;                                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Count1;                                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CountMaterials;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class USkeletalMesh>           SkelRef;                                           // 0x02E8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnStartDash;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bPlayerIndexZero;                                  // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Forward;                                           // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Up;                                                // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Left;                                              // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       TargetCamera;                                      // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_1;                                          // 0x0360(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Racer_Actor;                                       // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AutoModeStart();
	void BeginCountDown();
	void DelayStarted__FinishedFunc();
	void DelayStarted__UpdateFunc();
	void ExecuteUbergraph_BP_StartingLights(int32 EntryPoint);
	void NoticeChangeCountDownEvent(int32 InNewValue, int32 InOldValue);
	void NoticeChangeRaceStateEvent(ERaceInfoStateType InNewState, ERaceInfoStateType InOldState);
	void NoticeRaceFinishEvent();
	void OnStarted();
	void ReceiveBeginPlay();
	void ReplayWait();
	void SetCount(int32 NewCount);
	void SetCountAndSound(int32 NewCount, bool bSound);
	void SetPlayerIndex(int32 PlayerControllerIndex);
	void SetRaceInfo(class UUnionRaceInfo* InRaceInfo);
	void SetSignalMaterial(int32 ElementIndex, class UMaterialInterface* Material);
	void SetSignalMaterialU0(class UMaterialInstanceDynamic* Target, double Value);
	void SetSignalsMaterialU0(double Value);
	void StartFalling();
	void StartTransformFromCameraActor(class UCameraComponent* CameraActor);
	void SwitchCountMaterial(int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StartingLights_C">();
	}
	static class ABP_StartingLights_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StartingLights_C>();
	}
};
static_assert(alignof(ABP_StartingLights_C) == 0x000008, "Wrong alignment on ABP_StartingLights_C");
static_assert(sizeof(ABP_StartingLights_C) == 0x000380, "Wrong size on ABP_StartingLights_C");
static_assert(offsetof(ABP_StartingLights_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_StartingLights_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Atom) == 0x0002A8, "Member 'ABP_StartingLights_C::Atom' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, DelayStarted_Rate_68AD9B2D45FF9BAE383C3A80276A4067) == 0x0002B0, "Member 'ABP_StartingLights_C::DelayStarted_Rate_68AD9B2D45FF9BAE383C3A80276A4067' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, DelayStarted__Direction_68AD9B2D45FF9BAE383C3A80276A4067) == 0x0002B4, "Member 'ABP_StartingLights_C::DelayStarted__Direction_68AD9B2D45FF9BAE383C3A80276A4067' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, DelayStarted) == 0x0002B8, "Member 'ABP_StartingLights_C::DelayStarted' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Count3) == 0x0002C0, "Member 'ABP_StartingLights_C::Count3' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Count2) == 0x0002C8, "Member 'ABP_StartingLights_C::Count2' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Count1) == 0x0002D0, "Member 'ABP_StartingLights_C::Count1' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, CountMaterials) == 0x0002D8, "Member 'ABP_StartingLights_C::CountMaterials' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, SkelRef) == 0x0002E8, "Member 'ABP_StartingLights_C::SkelRef' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, OnStartDash) == 0x000310, "Member 'ABP_StartingLights_C::OnStartDash' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, bPlayerIndexZero) == 0x000320, "Member 'ABP_StartingLights_C::bPlayerIndexZero' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Forward) == 0x000328, "Member 'ABP_StartingLights_C::Forward' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Up) == 0x000330, "Member 'ABP_StartingLights_C::Up' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Left) == 0x000338, "Member 'ABP_StartingLights_C::Left' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, TargetCamera) == 0x000340, "Member 'ABP_StartingLights_C::TargetCamera' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, NewVar_0) == 0x000348, "Member 'ABP_StartingLights_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, NewVar_1) == 0x000360, "Member 'ABP_StartingLights_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(ABP_StartingLights_C, Racer_Actor) == 0x000378, "Member 'ABP_StartingLights_C::Racer_Actor' has a wrong offset!");

}

