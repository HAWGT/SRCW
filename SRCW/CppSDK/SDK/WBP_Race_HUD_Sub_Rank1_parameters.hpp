#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Rank1

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Sub_Rank1.WBP_Race_HUD_Sub_Rank1_C.ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1");
static_assert(sizeof(WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1) == 0x000010, "Wrong size on WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1, EntryPoint) == 0x000000, "Member 'WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Sub_Rank1_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Rank1::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Rank1.WBP_Race_HUD_Sub_Rank1_C.UpdateLocalizeTexture
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELanguage                                     CallFunc_GetTextLangFromSave_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_As_______;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLocalizeRuntimeImageArray             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0018)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Array_Get_Item;                           // 0x0058(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_As_____2D;                      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture");
static_assert(sizeof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture) == 0x0000A8, "Wrong size on WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_GetTextLangFromSave_ReturnValue) == 0x000010, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_GetTextLangFromSave_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_GetEnumeratorName_ReturnValue) == 0x000020, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, K2Node_DynamicCast_As_______) == 0x000028, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::K2Node_DynamicCast_As_______' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000088, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, K2Node_DynamicCast_As_____2D) == 0x000098, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::K2Node_DynamicCast_As_____2D' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'WBP_Race_HUD_Sub_Rank1_C_UpdateLocalizeTexture::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

