#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Dummy_Car

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Dummy_Car.BP_Dummy_Car_C
// 0x0058 (0x02E8 - 0x0290)
class ABP_Dummy_Car_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Speedcar_01_TireL_L1;                           // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Speedcar_01_TireL_L;                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Speedcar_01_TireR_L1;                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Speedcar_01_TireR_L;                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Speedcar_01_01_Side_L;                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Speedcar_01_Rear_L;                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Speedcar_01_Front_L;                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ST_Speedcar_00_SmallHandle_L;                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Sonic;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Speedcar_00_SmallCockpit_L;                     // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Dummy_Car_C">();
	}
	static class ABP_Dummy_Car_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Dummy_Car_C>();
	}
};
static_assert(alignof(ABP_Dummy_Car_C) == 0x000008, "Wrong alignment on ABP_Dummy_Car_C");
static_assert(sizeof(ABP_Dummy_Car_C) == 0x0002E8, "Wrong size on ABP_Dummy_Car_C");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_TireL_L1) == 0x000290, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_TireL_L1' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_TireL_L) == 0x000298, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_TireL_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_TireR_L1) == 0x0002A0, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_TireR_L1' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_TireR_L) == 0x0002A8, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_TireR_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_01_Side_L) == 0x0002B0, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_01_Side_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_Rear_L) == 0x0002B8, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_Rear_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SM_Speedcar_01_Front_L) == 0x0002C0, "Member 'ABP_Dummy_Car_C::SM_Speedcar_01_Front_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, ST_Speedcar_00_SmallHandle_L) == 0x0002C8, "Member 'ABP_Dummy_Car_C::ST_Speedcar_00_SmallHandle_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SK_Sonic) == 0x0002D0, "Member 'ABP_Dummy_Car_C::SK_Sonic' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, SK_Speedcar_00_SmallCockpit_L) == 0x0002D8, "Member 'ABP_Dummy_Car_C::SK_Speedcar_00_SmallCockpit_L' has a wrong offset!");
static_assert(offsetof(ABP_Dummy_Car_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_Dummy_Car_C::DefaultSceneRoot' has a wrong offset!");

}

