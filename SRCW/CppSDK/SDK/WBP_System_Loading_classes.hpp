#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_System_Loading

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UnionUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_System_Loading.WBP_System_Loading_C
// 0x00B8 (0x03A0 - 0x02E8)
class UWBP_System_Loading_C final : public UUnionLoadingGauge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Zero_to_100per;                                    // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BaseLeft;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BaseRight;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GoalFalg;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GoalLine;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_System_Sub_LoadingRing_C*          WBP_System_Sub_LoadingRing_01;                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_System_Sub_LoadingRing_C*          WBP_System_Sub_LoadingRing_02;                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_System_Sub_LoadingRing_C*          WBP_System_Sub_LoadingRing_03;                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_System_Sub_LoadingSonic_C*         WBP_System_Sub_LoadingSonic;                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXX_w_1800;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXX_w_2000;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         LoadingPhase;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetLoadingPhase;                                // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadingPhaseNum;                                   // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LoadingPhaseAnimTime;                              // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultAnimSpeed;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinAnimSpeed;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimationStopTime;                                 // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoadingProgressMode;                             // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnEndAnimFinished;                                 // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bProgressAnimationEnd;                             // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Check_Last_LoadingPhase(bool* OutLastPhase);
	void CheckLoadingEndAnimationPlay(bool* OutEndAnimationPlay);
	void Construct();
	void ExecuteUbergraph_WBP_System_Loading(int32 EntryPoint);
	void LoadingStart();
	void LoadingStartByLoadingPhase();
	void OnOutAnimFinished_Impl();
	void ProceedLoadingPhase();
	void ReachedDelimiter(EUnionLoadingGaugeState InState);
	void SequenceEvent__ENTRYPOINTWBP_System_Loading();
	void SequenceEvent__ENTRYPOINTWBP_System_Loading_0();
	void SequenceEvent__ENTRYPOINTWBP_System_Loading_1();
	void SequenceEvent__ENTRYPOINTWBP_System_Loading_2();
	void SequenceEvent__ENTRYPOINTWBP_System_Loading_3();
	void SetLoadingPhaseAnimSpeedMin(double InAnimSpeed);
	void SetLoadingPhaseNum(int32 LoadingPhaseNum_0);
	void SetLoadingProgress(double LoadingProgress);
	void SetLoadingProgressMode();
	void SkipNowState();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateAnimationSpeed();
	void UpdateAnimRate();
	void UpdateLoadingGaugeTargetState(EUnionLoadingGaugeState InTargetState);
	void UpdateLoadingPhase(int32 EndLoadingPhase);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_System_Loading_C">();
	}
	static class UWBP_System_Loading_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_System_Loading_C>();
	}
};
static_assert(alignof(UWBP_System_Loading_C) == 0x000008, "Wrong alignment on UWBP_System_Loading_C");
static_assert(sizeof(UWBP_System_Loading_C) == 0x0003A0, "Wrong size on UWBP_System_Loading_C");
static_assert(offsetof(UWBP_System_Loading_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_System_Loading_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, Zero_to_100per) == 0x0002F0, "Member 'UWBP_System_Loading_C::Zero_to_100per' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, BaseLeft) == 0x0002F8, "Member 'UWBP_System_Loading_C::BaseLeft' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, BaseRight) == 0x000300, "Member 'UWBP_System_Loading_C::BaseRight' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, GoalFalg) == 0x000308, "Member 'UWBP_System_Loading_C::GoalFalg' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, GoalLine) == 0x000310, "Member 'UWBP_System_Loading_C::GoalLine' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, Panel) == 0x000318, "Member 'UWBP_System_Loading_C::Panel' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, WBP_System_Sub_LoadingRing_01) == 0x000320, "Member 'UWBP_System_Loading_C::WBP_System_Sub_LoadingRing_01' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, WBP_System_Sub_LoadingRing_02) == 0x000328, "Member 'UWBP_System_Loading_C::WBP_System_Sub_LoadingRing_02' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, WBP_System_Sub_LoadingRing_03) == 0x000330, "Member 'UWBP_System_Loading_C::WBP_System_Sub_LoadingRing_03' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, WBP_System_Sub_LoadingSonic) == 0x000338, "Member 'UWBP_System_Loading_C::WBP_System_Sub_LoadingSonic' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, XXX_w_1800) == 0x000340, "Member 'UWBP_System_Loading_C::XXX_w_1800' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, XXX_w_2000) == 0x000348, "Member 'UWBP_System_Loading_C::XXX_w_2000' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, LoadingPhase) == 0x000350, "Member 'UWBP_System_Loading_C::LoadingPhase' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, TargetLoadingPhase) == 0x000354, "Member 'UWBP_System_Loading_C::TargetLoadingPhase' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, LoadingPhaseNum) == 0x000358, "Member 'UWBP_System_Loading_C::LoadingPhaseNum' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, LoadingPhaseAnimTime) == 0x000360, "Member 'UWBP_System_Loading_C::LoadingPhaseAnimTime' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, DefaultAnimSpeed) == 0x000368, "Member 'UWBP_System_Loading_C::DefaultAnimSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, MinAnimSpeed) == 0x000370, "Member 'UWBP_System_Loading_C::MinAnimSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, AnimationStopTime) == 0x000378, "Member 'UWBP_System_Loading_C::AnimationStopTime' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, IsLoadingProgressMode) == 0x000380, "Member 'UWBP_System_Loading_C::IsLoadingProgressMode' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, OnEndAnimFinished) == 0x000388, "Member 'UWBP_System_Loading_C::OnEndAnimFinished' has a wrong offset!");
static_assert(offsetof(UWBP_System_Loading_C, bProgressAnimationEnd) == 0x000398, "Member 'UWBP_System_Loading_C::bProgressAnimationEnd' has a wrong offset!");

}

