#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Cockpit_Tire

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "AnimationCore_structs.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CR_Cockpit_Tire.RigVMMemory_Work
// 0x0378 (0x03A0 - 0x0028)
class CR_Cockpit_Tire::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x01C0)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___ArrayGetAtIndex_Element;              // 0x01F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlRotator_CachedControlIndex; // 0x0208(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_ChildCache; // 0x0218(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_ParentCaches; // 0x0228(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___ArrayGetAtIndex_2_Element;            // 0x0238(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlRotator_2_CachedControlIndex; // 0x0250(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_2_ChildCache; // 0x0260(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_2_ParentCaches; // 0x0270(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___ArrayGetAtIndex_1_Element;            // 0x0280(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlRotator_1_CachedControlIndex; // 0x0298(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_1_ChildCache; // 0x02A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_1_ParentCaches; // 0x02B8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___ArrayGetAtIndex_1_2_Element;          // 0x02C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlRotator_1_2_CachedControlIndex; // 0x02E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_2_1_ChildCache; // 0x02F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_2_1_ParentCaches; // 0x0300(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___ArrayGetAtIndex_1_1_Element;          // 0x0310(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlRotator_1_1_CachedControlIndex; // 0x0328(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ChildCache; // 0x0338(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ParentCaches; // 0x0348(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___ArrayGetAtIndex_1_1_1_Element;        // 0x0358(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlRotator_1_1_1_CachedControlIndex; // 0x0370(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ChildCache; // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ParentCaches; // 0x0390(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_Cockpit_Tire.RigVMMemory_Work", true>();
	}
	static class CR_Cockpit_Tire::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_Cockpit_Tire::URigVMMemory_Work>();
	}
};
static_assert(alignof(CR_Cockpit_Tire::URigVMMemory_Work) == 0x000010, "Wrong alignment on CR_Cockpit_Tire::URigVMMemory_Work");
static_assert(sizeof(CR_Cockpit_Tire::URigVMMemory_Work) == 0x0003A0, "Wrong size on CR_Cockpit_Tire::URigVMMemory_Work");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_Element) == 0x0001F0, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___SetControlRotator_CachedControlIndex) == 0x000208, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___SetControlRotator_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_ChildCache) == 0x000218, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_ParentCaches) == 0x000228, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_2_Element) == 0x000238, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_2_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___SetControlRotator_2_CachedControlIndex) == 0x000250, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___SetControlRotator_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_2_ChildCache) == 0x000260, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_2_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_2_ParentCaches) == 0x000270, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_2_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_Element) == 0x000280, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___SetControlRotator_1_CachedControlIndex) == 0x000298, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___SetControlRotator_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_ChildCache) == 0x0002A8, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_ParentCaches) == 0x0002B8, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_2_Element) == 0x0002C8, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_2_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___SetControlRotator_1_2_CachedControlIndex) == 0x0002E0, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___SetControlRotator_1_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_2_1_ChildCache) == 0x0002F0, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_2_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_2_1_ParentCaches) == 0x000300, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_2_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_1_Element) == 0x000310, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_1_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___SetControlRotator_1_1_CachedControlIndex) == 0x000328, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___SetControlRotator_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ChildCache) == 0x000338, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ParentCaches) == 0x000348, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_1_1_Element) == 0x000358, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_1_1_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___SetControlRotator_1_1_1_CachedControlIndex) == 0x000370, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___SetControlRotator_1_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ChildCache) == 0x000380, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ParentCaches) == 0x000390, "Member 'CR_Cockpit_Tire::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ParentCaches' has a wrong offset!");

// ControlRigBlueprintGeneratedClass CR_Cockpit_Tire.CR_Cockpit_Tire_C
// 0x0018 (0x0AC0 - 0x0AA8)
class UCR_Cockpit_Tire_C final : public UControlRig
{
public:
	TArray<struct FRotator>                       WheelRot;                                          // 0x0AA8(0x0010)(Edit, BlueprintVisible)
	bool                                          IsEnableWheelUpdate;                               // 0x0AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Cockpit_Tire_C">();
	}
	static class UCR_Cockpit_Tire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Cockpit_Tire_C>();
	}
};
static_assert(alignof(UCR_Cockpit_Tire_C) == 0x000008, "Wrong alignment on UCR_Cockpit_Tire_C");
static_assert(sizeof(UCR_Cockpit_Tire_C) == 0x000AC0, "Wrong size on UCR_Cockpit_Tire_C");
static_assert(offsetof(UCR_Cockpit_Tire_C, WheelRot) == 0x000AA8, "Member 'UCR_Cockpit_Tire_C::WheelRot' has a wrong offset!");
static_assert(offsetof(UCR_Cockpit_Tire_C, IsEnableWheelUpdate) == 0x000AB8, "Member 'UCR_Cockpit_Tire_C::IsEnableWheelUpdate' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_Cockpit_Tire.RigVMMemory_Literal
// 0x0110 (0x0138 - 0x0028)
class CR_Cockpit_Tire::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	class FName                                   RigVMModel___SetControlRotator_Control__Const;     // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetControlRotator_Weight__Const;      // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_Index__Const;         // 0x0034(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___SetControlRotator_Space__Const;       // 0x0038(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_Child__Const; // 0x003C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___RotationConstraintLocalSpaceOffset_bMaintainOffset__Const : 1; // 0x0048(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	struct FFilterOptionPerAxis                   RigVMModel___RotationConstraintLocalSpaceOffset_Filter__Const; // 0x0049(0x0003)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_Parents__Const; // 0x0050(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_RotationConstraint_AdvancedSettings RigVMModel___RotationConstraintLocalSpaceOffset_AdvancedSettings__Const; // 0x0060(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___SetControlRotator_2_Control__Const;   // 0x0064(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_2_Child__Const; // 0x006C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FFilterOptionPerAxis                   RigVMModel___RotationConstraintLocalSpaceOffset_2_Filter__Const; // 0x0078(0x0003)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_2_Parents__Const; // 0x0080(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_RotationConstraint_AdvancedSettings RigVMModel___RotationConstraintLocalSpaceOffset_2_AdvancedSettings__Const; // 0x0090(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___SetControlRotator_1_Control__Const;   // 0x0094(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_1_Index__Const;       // 0x009C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_1_Child__Const; // 0x00A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_1_Parents__Const; // 0x00B0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SetControlRotator_1_2_Control__Const; // 0x00C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_2_1_Child__Const; // 0x00C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_2_1_Parents__Const; // 0x00D8(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SetControlRotator_1_1_Control__Const; // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_1_1_Index__Const;     // 0x00F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Child__Const; // 0x00F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Parents__Const; // 0x0100(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SetControlRotator_1_1_1_Control__Const; // 0x0110(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_1_1_1_Index__Const;   // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Child__Const; // 0x011C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Parents__Const; // 0x0128(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_Cockpit_Tire.RigVMMemory_Literal", true>();
	}
	static class CR_Cockpit_Tire::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_Cockpit_Tire::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CR_Cockpit_Tire::URigVMMemory_Literal) == 0x000008, "Wrong alignment on CR_Cockpit_Tire::URigVMMemory_Literal");
static_assert(sizeof(CR_Cockpit_Tire::URigVMMemory_Literal) == 0x000138, "Wrong size on CR_Cockpit_Tire::URigVMMemory_Literal");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_Control__Const) == 0x000028, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_Control__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_Weight__Const) == 0x000030, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_Weight__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_Index__Const) == 0x000034, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_Space__Const) == 0x000038, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_Space__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_Child__Const) == 0x00003C, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_Filter__Const) == 0x000049, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_Filter__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_Parents__Const) == 0x000050, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_AdvancedSettings__Const) == 0x000060, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_2_Control__Const) == 0x000064, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_2_Control__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_2_Child__Const) == 0x00006C, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_2_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_2_Filter__Const) == 0x000078, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_2_Filter__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_2_Parents__Const) == 0x000080, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_2_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_2_AdvancedSettings__Const) == 0x000090, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_2_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_1_Control__Const) == 0x000094, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_1_Index__Const) == 0x00009C, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_1_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_Child__Const) == 0x0000A0, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_Parents__Const) == 0x0000B0, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_1_2_Control__Const) == 0x0000C0, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_1_2_Control__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_2_1_Child__Const) == 0x0000C8, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_2_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_2_1_Parents__Const) == 0x0000D8, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_2_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_1_1_Control__Const) == 0x0000E8, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_1_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_1_1_Index__Const) == 0x0000F0, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_1_1_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Child__Const) == 0x0000F4, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Parents__Const) == 0x000100, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___SetControlRotator_1_1_1_Control__Const) == 0x000110, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___SetControlRotator_1_1_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_1_1_1_Index__Const) == 0x000118, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_1_1_1_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Child__Const) == 0x00011C, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Tire::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Parents__Const) == 0x000128, "Member 'CR_Cockpit_Tire::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Parents__Const' has a wrong offset!");

}

