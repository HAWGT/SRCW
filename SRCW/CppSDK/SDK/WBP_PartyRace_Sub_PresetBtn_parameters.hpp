#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PartyRace_Sub_PresetBtn

#include "Basic.hpp"

#include "UnionUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn
// 0x0060 (0x0060 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0004(0x0004)()
	TDelegate<void(class UUnionUIButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate;          // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBaseCore* Button)> K2Node_CreateDelegate_OutputDelegate_1;    // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x0028(0x0004)()
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     K2Node_CustomEvent_Button_1;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUnionUIButtonBaseCore*                 K2Node_CustomEvent_Button;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn) == 0x000008, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn) == 0x000060, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, EntryPoint) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, CallFunc_SoundPlay_ReturnValue) == 0x000004, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, CallFunc_SoundPlay_ReturnValue_1) == 0x000028, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000038, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_DynamicCast_AsApp_Player_Controller) == 0x000040, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_DynamicCast_AsApp_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_Event_IsDesignTime) == 0x000049, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_CustomEvent_Button_1) == 0x000050, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_CustomEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn, K2Node_CustomEvent_Button) == 0x000058, "Member 'WBP_PartyRace_Sub_PresetBtn_C_ExecuteUbergraph_WBP_PartyRace_Sub_PresetBtn::K2Node_CustomEvent_Button' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_PreConstruct");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_PreConstruct) == 0x000001, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_PreConstruct");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.SetButtonSelectable
// 0x0038 (0x0038 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable final
{
public:
	bool                                          Selectable;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonFocusType                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonFocusType                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonFocusType                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable) == 0x000004, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable) == 0x000038, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, Selectable) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::Selectable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, Temp_bool_Variable) == 0x000001, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, Temp_byte_Variable) == 0x000002, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, CallFunc_MakeColor_ReturnValue) == 0x000004, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, K2Node_Select_Default) == 0x000014, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, CallFunc_MakeColor_ReturnValue_1) == 0x000018, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable, CallFunc_SelectColor_ReturnValue) == 0x000028, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetButtonSelectable::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.SetEnableLockPreLounch
// 0x0001 (0x0001 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch final
{
public:
	bool                                          CallFunc_IsDisableDecisionInRaceParkMilestoneVersion_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch) == 0x000001, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch) == 0x000001, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch, CallFunc_IsDisableDecisionInRaceParkMilestoneVersion_ReturnValue) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetEnableLockPreLounch::CallFunc_IsDisableDecisionInRaceParkMilestoneVersion_ReturnValue' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.SetPresetMap
// 0x0050 (0x0050 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap final
{
public:
	TMap<EPartyRacePreset, struct FPartyRacePresetSetting> PresetName_Value_0;                       // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap) == 0x000008, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap) == 0x000050, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap, PresetName_Value_0) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_SetPresetMap::PresetName_Value_0' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.StartScroll
// 0x0008 (0x0008 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_StartScroll final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_StartScroll) == 0x000008, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_StartScroll");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_StartScroll) == 0x000008, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_StartScroll");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_StartScroll, Button) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_StartScroll::Button' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.StopScroll
// 0x0008 (0x0008 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_StopScroll final
{
public:
	class UUnionUIButtonBaseCore*                 Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_StopScroll) == 0x000008, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_StopScroll");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_StopScroll) == 0x000008, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_StopScroll");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_StopScroll, Button) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_StopScroll::Button' has a wrong offset!");

// Function WBP_PartyRace_Sub_PresetBtn.WBP_PartyRace_Sub_PresetBtn_C.UpdatePreset
// 0x0128 (0x0128 - 0x0000)
struct WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset final
{
public:
	float                                         Temp_real_Variable;                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_12;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_13;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_14;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_15;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_16;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_17;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetPreset_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetPreset_ReturnValue_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPartyRacePresetSetting                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x00B8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset) == 0x000008, "Wrong alignment on WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset");
static_assert(sizeof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset) == 0x000128, "Wrong size on WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable) == 0x000000, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_1) == 0x000004, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_2) == 0x000008, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_3) == 0x00000C, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_4) == 0x000010, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_5) == 0x000014, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_6) == 0x000018, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_7) == 0x00001C, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_8) == 0x000020, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_9) == 0x000024, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_10) == 0x000028, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_11) == 0x00002C, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_12) == 0x000030, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_13) == 0x000034, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_14) == 0x000038, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_15) == 0x00003C, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_16) == 0x000040, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_real_Variable_17) == 0x000044, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, Temp_byte_Variable) == 0x000048, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, CallFunc_GetPreset_ReturnValue) == 0x000049, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::CallFunc_GetPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000050, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, CallFunc_GetPreset_ReturnValue_1) == 0x000058, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::CallFunc_GetPreset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, K2Node_Select_Default) == 0x00005C, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, CallFunc_GetEnumeratorName_ReturnValue) == 0x000060, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'WBP_PartyRace_Sub_PresetBtn_C_UpdatePreset::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}

