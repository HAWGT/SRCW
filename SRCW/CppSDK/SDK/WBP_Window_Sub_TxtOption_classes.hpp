#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Window_Sub_TxtOption

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UnionUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Window_Sub_TxtOption.WBP_Window_Sub_TxtOption_C
// 0x0068 (0x04E8 - 0x0480)
class UWBP_Window_Sub_TxtOption_C final : public UUnionUIButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Select_Loop;                                       // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Active_Loop;                                       // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Shadow;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Btn_Cursor;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Cursor_Texture;                                // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    DSP_TXT_OptionType_Detail;                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MouseInteraction;                                  // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_OptionToggleBtn;                               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlagWave;                                      // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_OptionType_Title;                              // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          MouseDown;                                         // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayDecisionSe;                                   // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Friend_Sub_PlayerPlate_MouseInteraction_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_Friend_Sub_PlayerPlate_MouseInteraction_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void ChangePlayAnimation(class UWidgetAnimation* InStopAnimation, class UWidgetAnimation* InPlayAnimation);
	void Check_Release_Response_InputType(bool* bOutReleaseResponseInput);
	void Construct();
	void ExecuteUbergraph_WBP_Window_Sub_TxtOption(int32 EntryPoint);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedImpl();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnBackKeyPressed();
	void OnFocusAnimStart();
	void OnFocusImpl(class UUnionUIButtonBase* Button);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnUnFocusAnimStart();
	void SetButtonExplainText(const class FText& InText);
	void SetButtonExplainTextVisible(bool bInVisible);
	void SetButtonFocusType(EButtonFocusType InButtonFocusType);
	void SetButtonText(const class FText& InText);
	void SetCursorTextureVisible(bool bInVisible);
	void SetFocusAnimation(bool bInEnable);
	void SetFocusEnable(bool bInEnable);
	void SetMouseInteractionVisible(bool bInVisible);
	void SetPlayDecisionSe(bool bInEnable);
	void SetToggleButtonState(bool bInState);
	void SetToggleButtonVisible(bool bInVisible);
	void SetWidgetFocus(bool bInPlayFocusSound);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Window_Sub_TxtOption_C">();
	}
	static class UWBP_Window_Sub_TxtOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Window_Sub_TxtOption_C>();
	}
};
static_assert(alignof(UWBP_Window_Sub_TxtOption_C) == 0x000008, "Wrong alignment on UWBP_Window_Sub_TxtOption_C");
static_assert(sizeof(UWBP_Window_Sub_TxtOption_C) == 0x0004E8, "Wrong size on UWBP_Window_Sub_TxtOption_C");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, UberGraphFrame) == 0x000480, "Member 'UWBP_Window_Sub_TxtOption_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, Select_Loop) == 0x000488, "Member 'UWBP_Window_Sub_TxtOption_C::Select_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, Active_Loop) == 0x000490, "Member 'UWBP_Window_Sub_TxtOption_C::Active_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, base) == 0x000498, "Member 'UWBP_Window_Sub_TxtOption_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, Base_Shadow) == 0x0004A0, "Member 'UWBP_Window_Sub_TxtOption_C::Base_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, Btn_Cursor) == 0x0004A8, "Member 'UWBP_Window_Sub_TxtOption_C::Btn_Cursor' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, DSP_Cursor_Texture) == 0x0004B0, "Member 'UWBP_Window_Sub_TxtOption_C::DSP_Cursor_Texture' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, DSP_TXT_OptionType_Detail) == 0x0004B8, "Member 'UWBP_Window_Sub_TxtOption_C::DSP_TXT_OptionType_Detail' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, MouseInteraction) == 0x0004C0, "Member 'UWBP_Window_Sub_TxtOption_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, PAT_OptionToggleBtn) == 0x0004C8, "Member 'UWBP_Window_Sub_TxtOption_C::PAT_OptionToggleBtn' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, RaceFlagWave) == 0x0004D0, "Member 'UWBP_Window_Sub_TxtOption_C::RaceFlagWave' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, TXT_OptionType_Title) == 0x0004D8, "Member 'UWBP_Window_Sub_TxtOption_C::TXT_OptionType_Title' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, MouseDown) == 0x0004E0, "Member 'UWBP_Window_Sub_TxtOption_C::MouseDown' has a wrong offset!");
static_assert(offsetof(UWBP_Window_Sub_TxtOption_C, bPlayDecisionSe) == 0x0004E1, "Member 'UWBP_Window_Sub_TxtOption_C::bPlayDecisionSe' has a wrong offset!");

}

