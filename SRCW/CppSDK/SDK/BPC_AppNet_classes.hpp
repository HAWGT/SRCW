#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AppNet

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_AppNet.BPC_AppNet_C
// 0x0120 (0x03A8 - 0x0288)
class UBPC_AppNet_C final : public UAppNetComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 InviteUserIdString;                                // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bInvite;                                           // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         DebugInviteUserIdStrings;                          // 0x02A8(0x0010)(Edit, BlueprintVisible)
	class ULobbyJoinInfo*                         InviteInfo;                                        // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class ULobbyJoinInfo* InviteInfo, bool bSuccess)> OnRejectedInvitation; // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bInSuccess, const struct FLobbyOperationResult& InResult)> OnSendInvitationComplete; // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLobbyInvitationNoticeInfo             LobbyInvitationNoticeInfo;                         // 0x02E0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 InvitePlatformUserId;                              // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	class ULobbyJoinInfo*                         CurrentPopupWindow;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULobbyJoinInfo*                         CacheLobbyInfo;                                    // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CachePlatformDecide;                               // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttentionCreating;                               // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSendInvitationAfterCreatShortLobbyId;            // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BindOnReceiveInvite();
	void CallSendInvitationFailed();
	void CheckInvitationNoticeDisplay(class ULobbyJoinInfo* InLobbyJoinInfo, bool* bOutDisplay);
	void DisplayFinishEvent();
	void ExecuteUbergraph_BPC_AppNet(int32 EntryPoint);
	void GetFriendMatchLobbyContext(class UFriendMatchLobbyContext** FriendMatchLobbyContext);
	void GetInvitationNoticeAttentionType(ELobbyInvitationNoticeAttentionType* OutAttentionType);
	void GetSqueadContext(class UBP_SquadContext_C** SquadContext);
	void JoinFriendMatchLobby(bool* bInFriendMatchLobby);
	void OnAttentionCreateFinish();
	void OnAttentionCreateStart();
	void OnBindInvitationNoticeWidget();
	void OnBindInvitationNoticeWidgetWhenNotAvailable();
	void OnChangeSequenceType();
	void OnCompleteCreateSession(bool bSuccess);
	void OnCompleteCreateSquad(bool Successful);
	void OnCompletedSendInvitation(bool bSuccessful, const struct FLobbyOperationResult& Result);
	void OnCompleteGetUserSearch(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract);
	void OnCreatedPopupWindowEvent(EPopupWindowType CreatedWindowType);
	void OnCreateShortLobbyId();
	void OnCreateShortLobbyIdComplete(const class FString& ShortLobbyId);
	void OnGamerCardErrorCreatedEvent();
	void OnGamerCardErrorDestroyedEvent();
	void OnGenerateLobbyInviteNoticeWidget();
	void OnGetInviteUserData(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error);
	void OnInitialize();
	void OnLobbyInvitationNoticeDecide(bool bAccept);
	void OnLobbyInvitationNoticeDisplayEnd();
	void OnNoticeWidgetConfirmEnd(bool bResultYes);
	void OnNoticeWidgetConfirmStart();
	void OnReceiveInviteCallback(const struct FUniqueNetIdRepl& UserId, class ULobbyJoinInfo* Invite);
	void OnReceiveInviteWindowCallback(bool ResultIsYes);
	void OnrejectInvitation(bool bSuccessful, const struct FLobbyOperationResult& Result);
	void OnUnbindInvitationNoticeWidget();
	void RequestLobbyInviteUserData();
	void SendInvitationNoPlatform();
	void SendInvitationWithPlatform();
	void SendInvite();
	void SetInviteUserId(const class FString& UserIdString);
	void SetLobbyInvitationNoticeInfo();
	void ShowLobbyInfoEvent(const struct FLobbyInvitationNoticeInfo& LobbyInvitationNoticeInfo_0, class ULobbyJoinInfo* LobbyInfo);
	void SpawnProcessLobbyInvitationObject();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_AppNet_C">();
	}
	static class UBPC_AppNet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_AppNet_C>();
	}
};
static_assert(alignof(UBPC_AppNet_C) == 0x000008, "Wrong alignment on UBPC_AppNet_C");
static_assert(sizeof(UBPC_AppNet_C) == 0x0003A8, "Wrong size on UBPC_AppNet_C");
static_assert(offsetof(UBPC_AppNet_C, UberGraphFrame) == 0x000288, "Member 'UBPC_AppNet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, InviteUserIdString) == 0x000290, "Member 'UBPC_AppNet_C::InviteUserIdString' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, bInvite) == 0x0002A0, "Member 'UBPC_AppNet_C::bInvite' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, DebugInviteUserIdStrings) == 0x0002A8, "Member 'UBPC_AppNet_C::DebugInviteUserIdStrings' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, InviteInfo) == 0x0002B8, "Member 'UBPC_AppNet_C::InviteInfo' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, OnRejectedInvitation) == 0x0002C0, "Member 'UBPC_AppNet_C::OnRejectedInvitation' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, OnSendInvitationComplete) == 0x0002D0, "Member 'UBPC_AppNet_C::OnSendInvitationComplete' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, LobbyInvitationNoticeInfo) == 0x0002E0, "Member 'UBPC_AppNet_C::LobbyInvitationNoticeInfo' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, InvitePlatformUserId) == 0x000370, "Member 'UBPC_AppNet_C::InvitePlatformUserId' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, CurrentPopupWindow) == 0x000380, "Member 'UBPC_AppNet_C::CurrentPopupWindow' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, CacheLobbyInfo) == 0x000388, "Member 'UBPC_AppNet_C::CacheLobbyInfo' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, CachePlatformDecide) == 0x000390, "Member 'UBPC_AppNet_C::CachePlatformDecide' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, IsAttentionCreating) == 0x000391, "Member 'UBPC_AppNet_C::IsAttentionCreating' has a wrong offset!");
static_assert(offsetof(UBPC_AppNet_C, OnSendInvitationAfterCreatShortLobbyId) == 0x000398, "Member 'UBPC_AppNet_C::OnSendInvitationAfterCreatShortLobbyId' has a wrong offset!");

}

