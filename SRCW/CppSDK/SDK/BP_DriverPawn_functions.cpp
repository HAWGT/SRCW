#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DriverPawn

#include "Basic.hpp"

#include "BP_DriverPawn_classes.hpp"
#include "BP_DriverPawn_parameters.hpp"


namespace SDK
{

// Function BP_DriverPawn.BP_DriverPawn_C.BindCurvesMaterialPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveTable*                      In_CurveTable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ERacerMaterialAnimation                 In_Enum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::BindCurvesMaterialPlayer(class UCurveTable* In_CurveTable, ERacerMaterialAnimation In_Enum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "BindCurvesMaterialPlayer");

	Params::BP_DriverPawn_C_BindCurvesMaterialPlayer Parms{};

	Parms.In_CurveTable = In_CurveTable;
	Parms.In_Enum = In_Enum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.ClearItem
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DriverPawn_C::ClearItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "ClearItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DriverPawn.BP_DriverPawn_C.CreateDriver
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::CreateDriver(EDriverId ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "CreateDriver");

	Params::BP_DriverPawn_C_CreateDriver Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.ExecuteUbergraph_BP_DriverPawn
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::ExecuteUbergraph_BP_DriverPawn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "ExecuteUbergraph_BP_DriverPawn");

	Params::BP_DriverPawn_C_ExecuteUbergraph_BP_DriverPawn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.LoadSkeletalMesh
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               In_DriverId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::LoadSkeletalMesh(EDriverId In_DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "LoadSkeletalMesh");

	Params::BP_DriverPawn_C_LoadSkeletalMesh Parms{};

	Parms.In_DriverId = In_DriverId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.OnDestroyed_Driver
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::OnDestroyed_Driver(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "OnDestroyed_Driver");

	Params::BP_DriverPawn_C_OnDestroyed_Driver Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.PlayHoldItemDirectionEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemThrowDirection                     In_ItemThrowDirection                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::PlayHoldItemDirectionEffect(EItemThrowDirection In_ItemThrowDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "PlayHoldItemDirectionEffect");

	Params::BP_DriverPawn_C_PlayHoldItemDirectionEffect Parms{};

	Parms.In_ItemThrowDirection = In_ItemThrowDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DriverPawn_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DriverPawn.BP_DriverPawn_C.SetAnimClass
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UClass*                     NewClass                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::SetAnimClass(const class UClass* NewClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "SetAnimClass");

	Params::BP_DriverPawn_C_SetAnimClass Parms{};

	Parms.NewClass = NewClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.SetEnableGfur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::SetEnableGfur(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "SetEnableGfur");

	Params::BP_DriverPawn_C_SetEnableGfur Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.SetItemParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHoldItemCreateParam&      InHoldItemParam                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::SetItemParam(const struct FHoldItemCreateParam& InHoldItemParam, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "SetItemParam");

	Params::BP_DriverPawn_C_SetItemParam Parms{};

	Parms.InHoldItemParam = std::move(InHoldItemParam);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_DriverPawn.BP_DriverPawn_C.SetLightingChannels
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Channel0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Channel1                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Channel2                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::SetLightingChannels(bool Channel0, bool Channel1, bool Channel2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "SetLightingChannels");

	Params::BP_DriverPawn_C_SetLightingChannels Parms{};

	Parms.Channel0 = Channel0;
	Parms.Channel1 = Channel1;
	Parms.Channel2 = Channel2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.SetRideableStatusType
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECarStatusType                          StatusType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::SetRideableStatusType(ECarStatusType StatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "SetRideableStatusType");

	Params::BP_DriverPawn_C_SetRideableStatusType Parms{};

	Parms.StatusType = StatusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriverPawn.BP_DriverPawn_C.UseItem
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_DriverPawn_C::UseItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "UseItem");

	Params::BP_DriverPawn_C_UseItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DriverPawn.BP_DriverPawn_C.UseItemInDirection
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const EDriverDirection                  Direction                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_DriverPawn_C::UseItemInDirection(const EDriverDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "UseItemInDirection");

	Params::BP_DriverPawn_C_UseItemInDirection Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DriverPawn.BP_DriverPawn_C.UseItemWithoutAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_DriverPawn_C::UseItemWithoutAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "UseItemWithoutAnimation");

	Params::BP_DriverPawn_C_UseItemWithoutAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DriverPawn.BP_DriverPawn_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DriverPawn_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DriverPawn.BP_DriverPawn_C.GetRivalMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EDriverId                               In_DriverId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USkeletalMesh* ABP_DriverPawn_C::GetRivalMesh(EDriverId In_DriverId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "GetRivalMesh");

	Params::BP_DriverPawn_C_GetRivalMesh Parms{};

	Parms.In_DriverId = In_DriverId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DriverPawn.BP_DriverPawn_C.PlayVoice
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const EDriverVoiceId                    InDriverVoiceId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const ESoundPan                         InSoundPan                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriverPawn_C::PlayVoice(const EDriverVoiceId InDriverVoiceId, const ESoundPan InSoundPan) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriverPawn_C", "PlayVoice");

	Params::BP_DriverPawn_C_PlayVoice Parms{};

	Parms.InDriverVoiceId = InDriverVoiceId;
	Parms.InSoundPan = InSoundPan;

	UObject::ProcessEvent(Func, &Parms);
}

}

