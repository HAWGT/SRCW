#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_FairPlayPointWindow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.ExecuteUbergraph_WBP_Friend_FairPlayPointWindow
// 0x0120 (0x0120 - 0x0000)
struct WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
	int32                                         K2Node_Event_InFairPlayPoint;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInBan;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InPenaltyEndTime;                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
	bool                                          CallFunc_CheckEnableInput_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller;        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterSingleMenu_ReturnValue;         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow) == 0x000008, "Wrong alignment on WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow");
static_assert(sizeof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow) == 0x000120, "Wrong size on WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, EntryPoint) == 0x000000, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, Temp_int_Variable) == 0x000004, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, Temp_int_Variable_1) == 0x000008, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, Temp_bool_Variable) == 0x00000C, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_Event_InFairPlayPoint) == 0x000020, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_Event_InFairPlayPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_Event_bInBan) == 0x000024, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_Event_bInBan' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_Event_InPenaltyEndTime) == 0x000028, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_Event_InPenaltyEndTime' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_Select_Default) == 0x0000D8, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_MakeArray_Array) == 0x0000E0, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, CallFunc_CheckEnableInput_ReturnValue) == 0x000100, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::CallFunc_CheckEnableInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, CallFunc_GetOwningPlayer_ReturnValue) == 0x000108, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_DynamicCast_AsApp_Player_Controller) == 0x000110, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_DynamicCast_AsApp_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow, CallFunc_UnregisterSingleMenu_ReturnValue) == 0x000119, "Member 'WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow::CallFunc_UnregisterSingleMenu_ReturnValue' has a wrong offset!");

// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.OnFocusReceived
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_Friend_FairPlayPointWindow_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x00F8(0x00B8)()
	int32                                         CallFunc_GetUserIndexByFocusEvent_ReturnValue;     // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller;        // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_Friend_FairPlayPointWindow_C_OnFocusReceived");
static_assert(sizeof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived) == 0x0001D0, "Wrong size on WBP_Friend_FairPlayPointWindow_C_OnFocusReceived");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, K2Node_MakeStruct_EventReply) == 0x0000F8, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, CallFunc_GetUserIndexByFocusEvent_ReturnValue) == 0x0001B0, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::CallFunc_GetUserIndexByFocusEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, CallFunc_GetPlayerController_ReturnValue) == 0x0001B8, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, K2Node_DynamicCast_AsApp_Player_Controller) == 0x0001C0, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::K2Node_DynamicCast_AsApp_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_OnFocusReceived, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'WBP_Friend_FairPlayPointWindow_C_OnFocusReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.Setup
// 0x0018 (0x0018 - 0x0000)
struct WBP_Friend_FairPlayPointWindow_C_Setup final
{
public:
	int32                                         InFairPlayPoint;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInBan;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InPenaltyEndTime;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_FairPlayPointWindow_C_Setup) == 0x000008, "Wrong alignment on WBP_Friend_FairPlayPointWindow_C_Setup");
static_assert(sizeof(WBP_Friend_FairPlayPointWindow_C_Setup) == 0x000018, "Wrong size on WBP_Friend_FairPlayPointWindow_C_Setup");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_Setup, InFairPlayPoint) == 0x000000, "Member 'WBP_Friend_FairPlayPointWindow_C_Setup::InFairPlayPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_Setup, bInBan) == 0x000004, "Member 'WBP_Friend_FairPlayPointWindow_C_Setup::bInBan' has a wrong offset!");
static_assert(offsetof(WBP_Friend_FairPlayPointWindow_C_Setup, InPenaltyEndTime) == 0x000008, "Member 'WBP_Friend_FairPlayPointWindow_C_Setup::InPenaltyEndTime' has a wrong offset!");

}

