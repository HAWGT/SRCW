#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_PlayerNumber_RaceStart

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Sub_PlayerNumber_RaceStart.WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C.ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart) == 0x000010, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart, EntryPoint) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber_RaceStart::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_PlayerNumber_RaceStart.WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C.FireInAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_FireInAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_PlayerNumber_RaceStart.WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Race_HUD_Sub_PlayerNumber_RaceStart.WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C.SetBGColorInfo
// 0x01C0 (0x01C0 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGroup;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalMulti;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0110(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0120(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0130(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0140(0x0010)()
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0160(0x0010)()
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0010)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo) == 0x0001C0, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Index_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, IsGroup) == 0x000004, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::IsGroup' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, IsLocalMulti) == 0x000005, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::IsLocalMulti' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable) == 0x000008, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_1) == 0x000024, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_2) == 0x000034, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_3) == 0x000044, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_4) == 0x000054, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_5) == 0x000064, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_int_Variable) == 0x000074, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_6) == 0x000078, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_7) == 0x000088, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_8) == 0x000098, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_9) == 0x0000A8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_10) == 0x0000B8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_11) == 0x0000C8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_12) == 0x0000D8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_13) == 0x0000E8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_int_Variable_1) == 0x0000F8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, K2Node_Select_Default) == 0x0000FC, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_text_Variable) == 0x000110, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_text_Variable_1) == 0x000120, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_text_Variable_2) == 0x000130, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_text_Variable_3) == 0x000140, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_14) == 0x000150, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, K2Node_Select_Default_1) == 0x000160, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_struct_Variable_15) == 0x000170, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, Temp_int_Variable_2) == 0x000180, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, K2Node_MakeArray_Array) == 0x000188, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, K2Node_Select_Default_2) == 0x000198, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001B8, "Member 'WBP_Race_HUD_Sub_PlayerNumber_RaceStart_C_SetBGColorInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

