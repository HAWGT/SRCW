#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeaderMenu_Sub_Rule_TimeTable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable
// 0x0088 (0x0088 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxIndex_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMilestoneVersion                             CallFunc_GetMileStoneVersion_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionFontScroll*>               K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionRichTextBlock*>            K2Node_MakeArray_Array_2;                          // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                K2Node_Event_InFixedRule;                          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InVisibility_2;                       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InVisibility_1;                       // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InVisibility;                         // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InTimeTableIndex;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_Event_InTime;                               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                K2Node_Event_InGroupRaceRule;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InIsEnd;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InIsSpRule;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionFontScroll*                       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable) == 0x000008, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable) == 0x000088, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, EntryPoint) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_GetMaxIndex_ReturnValue) == 0x000004, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_GetMaxIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, Temp_byte_Variable) == 0x000008, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_GetMileStoneVersion_ReturnValue) == 0x000009, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_GetMileStoneVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, Temp_bool_Variable) == 0x00000C, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_MakeArray_Array_1) == 0x000020, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_MakeArray_Array_2) == 0x000038, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InFixedRule) == 0x00004C, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InFixedRule' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InVisibility_2) == 0x00004D, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InVisibility_2' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InVisibility_1) == 0x00004E, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InVisibility_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InVisibility) == 0x00004F, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000050, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Select_Default) == 0x000051, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InTimeTableIndex) == 0x000054, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InTimeTableIndex' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InTime) == 0x000058, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InTime' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InGroupRaceRule) == 0x000060, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InGroupRaceRule' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InIsEnd) == 0x000061, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InIsEnd' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, K2Node_Event_InIsSpRule) == 0x000062, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::K2Node_Event_InIsSpRule' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000071, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_ExecuteUbergraph_WBP_HeaderMenu_Sub_Rule_TimeTable::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.FixedDisplay
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay final
{
public:
	EGroupRaceRule                                FixedRule_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay) == 0x000001, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay) == 0x000001, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay, FixedRule_0) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedDisplay::FixedRule_0' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.FixedRule
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule final
{
public:
	EGroupRaceRule                                InFixedRule;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule) == 0x000001, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule) == 0x000001, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule, InFixedRule) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_FixedRule::InFixedRule' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.PlayInOutAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation final
{
public:
	bool                                          IsInAnim;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation) == 0x000008, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation) == 0x000018, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation, IsInAnim) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation::IsInAnim' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation, Temp_bool_Variable) == 0x000001, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation, K2Node_Select_Default) == 0x000008, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_PlayInOutAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.SetInnerVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible) == 0x000001, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible) == 0x000001, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible, bDisplay) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetInnerVisible::bDisplay' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.SetTimeTable
// 0x0018 (0x0018 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable final
{
public:
	int32                                         InTimetableIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              InTime;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                InGroupRaceRule;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsEnd;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsSpRule;                                        // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable) == 0x000008, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable) == 0x000018, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable, InTimetableIndex) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable::InTimetableIndex' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable, InTime) == 0x000008, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable::InTime' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable, InGroupRaceRule) == 0x000010, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable::InGroupRaceRule' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable, InIsEnd) == 0x000011, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable::InIsEnd' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable, InIsSpRule) == 0x000012, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetTimeTable::InIsSpRule' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.SetupInfo
// 0x0390 (0x0390 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                Rule;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                LocalRule;                                         // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsLast;                                       // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsSpecial;                                    // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuGroupRaceRuleData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x00E0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuGroupRaceRuleData                 CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0108(0x00E0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As_____2D;                      // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue_1;                      // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0288(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0298(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02A8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02F0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0338(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0348(0x0010)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0360(0x0010)()
	class UUnionFontScroll*                       CallFunc_Array_Get_Item_1;                         // 0x0370(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxIndex_ReturnValue;                  // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo) == 0x000008, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo) == 0x000390, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, TargetIndex) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::TargetIndex' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, Rule) == 0x000004, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::Rule' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, LocalRule) == 0x000005, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::LocalRule' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, LocalIsLast) == 0x000006, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::LocalIsLast' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, LocalIsSpecial) == 0x000007, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::LocalIsSpecial' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, LocalIndex) == 0x000008, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::LocalIndex' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetEnumeratorName_ReturnValue) == 0x00000C, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F8, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000F9, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000FA, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x0000FC, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000104, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000108, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001E8, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001F0, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, K2Node_DynamicCast_As_____2D) == 0x0001F8, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::K2Node_DynamicCast_As_____2D' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Year) == 0x000204, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Month) == 0x000208, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Day) == 0x00020C, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Hour) == 0x000210, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Minute) == 0x000214, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Second) == 0x000218, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BreakDateTime_Millisecond) == 0x00021C, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_Get_Item) == 0x000220, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x000228, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000238, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000248, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000258, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Right_ReturnValue) == 0x000268, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Right_ReturnValue_1) == 0x000278, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Right_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000288, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000298, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, K2Node_MakeStruct_FormatArgumentData) == 0x0002A8, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002F0, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, K2Node_MakeArray_Array) == 0x000338, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Format_ReturnValue) == 0x000348, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000358, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_MakeLiteralText_ReturnValue) == 0x000360, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_Get_Item_1) == 0x000370, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_Get_Item_2) == 0x000378, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_IsValid_ReturnValue) == 0x000380, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_GetMaxIndex_ReturnValue) == 0x000384, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_GetMaxIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000388, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000389, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x00038A, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo, CallFunc_BooleanAND_ReturnValue) == 0x00038B, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetupInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.SetVisibilityButtonIcon
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon) == 0x000001, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon) == 0x000001, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon, InVisibility) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityButtonIcon::InVisibility' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.SetVisibilityOpenWidget
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget) == 0x000001, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget) == 0x000001, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget, InVisibility) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityOpenWidget::InVisibility' has a wrong offset!");

// Function WBP_HeaderMenu_Sub_Rule_TimeTable.WBP_HeaderMenu_Sub_Rule_TimeTable_C.SetVisibilityRankCalcWidget
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget) == 0x000001, "Wrong alignment on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget");
static_assert(sizeof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget) == 0x000001, "Wrong size on WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget");
static_assert(offsetof(WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget, InVisibility) == 0x000000, "Member 'WBP_HeaderMenu_Sub_Rule_TimeTable_C_SetVisibilityRankCalcWidget::InVisibility' has a wrong offset!");

}

