#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CMN_Nice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CMN_Nice.WBP_CMN_Nice_C
// 0x0060 (0x0340 - 0x02E0)
class UWBP_CMN_Nice_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Nice_Select_Out;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Nice_Active_Loop;                                  // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButton*                         MouseInteractionNice;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Nice;                                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Nice_Anime;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Nice_Eff;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_ControllerBtn_C*               WBP_CMN_ControllerBtn;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Window;                                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnNicePressed;                                     // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_CMN_Nice_MouseInteractionNice_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_CMN_Nice(int32 EntryPoint);
	void InitButtonImages();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CMN_Nice_C">();
	}
	static class UWBP_CMN_Nice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CMN_Nice_C>();
	}
};
static_assert(alignof(UWBP_CMN_Nice_C) == 0x000008, "Wrong alignment on UWBP_CMN_Nice_C");
static_assert(sizeof(UWBP_CMN_Nice_C) == 0x000340, "Wrong size on UWBP_CMN_Nice_C");
static_assert(offsetof(UWBP_CMN_Nice_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_CMN_Nice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Nice_Select_Out) == 0x0002E8, "Member 'UWBP_CMN_Nice_C::Nice_Select_Out' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Nice_Active_Loop) == 0x0002F0, "Member 'UWBP_CMN_Nice_C::Nice_Active_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Arrow) == 0x0002F8, "Member 'UWBP_CMN_Nice_C::Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, MouseInteractionNice) == 0x000300, "Member 'UWBP_CMN_Nice_C::MouseInteractionNice' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Nice) == 0x000308, "Member 'UWBP_CMN_Nice_C::Nice' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Nice_Anime) == 0x000310, "Member 'UWBP_CMN_Nice_C::Nice_Anime' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Nice_Eff) == 0x000318, "Member 'UWBP_CMN_Nice_C::Nice_Eff' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, WBP_CMN_ControllerBtn) == 0x000320, "Member 'UWBP_CMN_Nice_C::WBP_CMN_ControllerBtn' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, Window) == 0x000328, "Member 'UWBP_CMN_Nice_C::Window' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_Nice_C, OnNicePressed) == 0x000330, "Member 'UWBP_CMN_Nice_C::OnNicePressed' has a wrong offset!");

}

