#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StasusInfo_Sub_RaceRuleDetail

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.CanWidgetClose
// 0x0002 (0x0002 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose) == 0x000001, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose) == 0x000002, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose, ReturnValue) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetClose::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.CanWidgetOpen
// 0x0003 (0x0003 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen) == 0x000001, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen) == 0x000003, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen, ReturnValue) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_CanWidgetOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail
// 0x0118 (0x0118 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaRuleInfomation                   K2Node_CustomEvent_RuleInfo;                       // 0x0030(0x0058)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaRuleInfomation                   K2Node_Event_InFestaFixedRule;                     // 0x0090(0x0058)(ConstParm)
	int32                                         Temp_int_Variable;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail) == 0x000118, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, EntryPoint) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000020, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, K2Node_CustomEvent_RuleInfo) == 0x000030, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::K2Node_CustomEvent_RuleInfo' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_BooleanAND_ReturnValue_1) == 0x000088, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, K2Node_Event_InFestaFixedRule) == 0x000090, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::K2Node_Event_InFestaFixedRule' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, Temp_int_Variable) == 0x0000E8, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, Temp_int_Variable_1) == 0x0000EC, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, Temp_bool_Variable) == 0x0000F0, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, K2Node_Select_Default) == 0x0000F4, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, K2Node_CreateDelegate_OutputDelegate) == 0x0000F8, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail, K2Node_CreateDelegate_OutputDelegate_1) == 0x000108, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_ExecuteUbergraph_WBP_StasusInfo_Sub_RaceRuleDetail::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetFixedRule
// 0x0058 (0x0058 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule final
{
public:
	struct FFestaRuleInfomation                   InFestaFixedRule;                                  // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule) == 0x000058, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule, InFestaFixedRule) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetFixedRule::InFestaFixedRule' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetGadget
// 0x0078 (0x0078 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget final
{
public:
	struct FUserGadgetPresetData                  GadgetPreset;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          isSp;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGadgetPresetData                  K2Node_MakeStruct_UserGadgetPresetData;            // 0x0018(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateUIData                     K2Node_MakeStruct_GadgetPlateUIData;               // 0x0030(0x0028)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0060(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget) == 0x000078, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, GadgetPreset) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::GadgetPreset' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, isSp) == 0x000010, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::isSp' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, Temp_byte_Variable) == 0x000011, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, K2Node_MakeStruct_UserGadgetPresetData) == 0x000018, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::K2Node_MakeStruct_UserGadgetPresetData' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, K2Node_MakeStruct_GadgetPlateUIData) == 0x000030, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::K2Node_MakeStruct_GadgetPlateUIData' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, Temp_byte_Variable_1) == 0x000059, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, Temp_bool_Variable) == 0x00005B, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, CallFunc_MakeLiteralText_ReturnValue) == 0x000060, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget, K2Node_Select_Default) == 0x000070, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetGadget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetRule
// 0x0058 (0x0058 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule final
{
public:
	struct FFestaRuleInfomation                   RuleInfo;                                          // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule) == 0x000058, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule, RuleInfo) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRule::RuleInfo' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetRuleBGTexture
// 0x0008 (0x0008 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture) == 0x000008, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture, Texture) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleBGTexture::Texture' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetRuleIconTexture
// 0x0008 (0x0008 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture) == 0x000008, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture, Texture) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetRuleIconTexture::Texture' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetTeamGageText
// 0x0020 (0x0020 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText) == 0x000020, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText, Text) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText::Text' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetTeamGageText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function WBP_StasusInfo_Sub_RaceRuleDetail.WBP_StasusInfo_Sub_RaceRuleDetail_C.SetVictoryPointBonusText
// 0x0020 (0x0020 - 0x0000)
struct WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
};
static_assert(alignof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText) == 0x000008, "Wrong alignment on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText");
static_assert(sizeof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText) == 0x000020, "Wrong size on WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText, Text) == 0x000000, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText::Text' has a wrong offset!");
static_assert(offsetof(WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'WBP_StasusInfo_Sub_RaceRuleDetail_C_SetVictoryPointBonusText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

}

