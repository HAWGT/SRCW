#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Aming

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.ExecuteUbergraph_WBP_Race_HUD_Sub_Aming
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming) == 0x000004, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming) == 0x000004, "Wrong size on WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming, EntryPoint) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Aming::EntryPoint' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.PlayAnimationHoming
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_PlayAnimationHoming::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.PlayAnimationLockOff
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOff::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.PlayAnimationLockOn
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_PlayAnimationLockOn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.PlayAnimManualKeep
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_PlayAnimManualKeep::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.Set Manual Aiming
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming, IsVisible_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_Set_Manual_Aiming::IsVisible_0' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.SetAfterHomingVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility, IsVisible_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_SetAfterHomingVisibility::IsVisible_0' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.SetBeforeHomingNotAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_SetBeforeHomingNotAnim::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Aming.WBP_Race_HUD_Sub_Aming_C.SetIconScale
// 0x0018 (0x0018 - 0x0000)
struct WBP_Race_HUD_Sub_Aming_C_SetIconScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Aming_C_SetIconScale) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Aming_C_SetIconScale");
static_assert(sizeof(WBP_Race_HUD_Sub_Aming_C_SetIconScale) == 0x000018, "Wrong size on WBP_Race_HUD_Sub_Aming_C_SetIconScale");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_SetIconScale, Scale) == 0x000000, "Member 'WBP_Race_HUD_Sub_Aming_C_SetIconScale::Scale' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Aming_C_SetIconScale, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Sub_Aming_C_SetIconScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

