#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_SmallWindow

#include "Basic.hpp"

#include "WBP_Friend_SmallWindow_classes.hpp"
#include "WBP_Friend_SmallWindow_parameters.hpp"


namespace SDK
{

// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.ExecuteUbergraph_WBP_Friend_SmallWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Friend_SmallWindow_C::ExecuteUbergraph_WBP_Friend_SmallWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "ExecuteUbergraph_WBP_Friend_SmallWindow");

	Params::WBP_Friend_SmallWindow_C_ExecuteUbergraph_WBP_Friend_SmallWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.InitializeButtons
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InButtonNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Friend_SmallWindow_C::InitializeButtons(int32 InButtonNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "InitializeButtons");

	Params::WBP_Friend_SmallWindow_C_InitializeButtons Parms{};

	Parms.InButtonNum = InButtonNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Friend_SmallWindow_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "OnFocusReceived");

	Params::WBP_Friend_SmallWindow_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.Set Button Navigation
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Friend_SmallWindow_C::Set_Button_Navigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "Set Button Navigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.SetButtonSelectable
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<bool>&                     bInSelectable                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Friend_SmallWindow_C::SetButtonSelectable(const TArray<bool>& bInSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "SetButtonSelectable");

	Params::WBP_Friend_SmallWindow_C_SetButtonSelectable Parms{};

	Parms.bInSelectable = std::move(bInSelectable);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.SetButtonsPanel
// (BlueprintCallable, BlueprintEvent)

void UWBP_Friend_SmallWindow_C::SetButtonsPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "SetButtonsPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.SetButtonText
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              InButtonText                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Friend_SmallWindow_C::SetButtonText(const TArray<class FText>& InButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "SetButtonText");

	Params::WBP_Friend_SmallWindow_C_SetButtonText Parms{};

	Parms.InButtonText = std::move(InButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.SetFocusButtonIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InButtonIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Friend_SmallWindow_C::SetFocusButtonIndex(int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "SetFocusButtonIndex");

	Params::WBP_Friend_SmallWindow_C_SetFocusButtonIndex Parms{};

	Parms.InButtonIndex = InButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Friend_SmallWindow.WBP_Friend_SmallWindow_C.Setup
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              InButtonText                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<bool>&                     bInButtonSelectable                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Friend_SmallWindow_C::Setup(const TArray<class FText>& InButtonText, const TArray<bool>& bInButtonSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_SmallWindow_C", "Setup");

	Params::WBP_Friend_SmallWindow_C_Setup Parms{};

	Parms.InButtonText = std::move(InButtonText);
	Parms.bInButtonSelectable = std::move(bInButtonSelectable);

	UObject::ProcessEvent(Func, &Parms);
}

}

