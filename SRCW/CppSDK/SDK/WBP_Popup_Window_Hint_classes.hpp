#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Popup_Window_Hint

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C
// 0x00D0 (0x0598 - 0x04C8)
class UWBP_Popup_Window_Hint_C final : public UHintPopupWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Popup_Out;                                         // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Popup_Loop;                                        // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Popup_In;                                          // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Popup_Sub_Omochao_C*               DSP_Popup_Omochao;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOutOfContentButton*                    OutOfContentButton;                                // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Tips;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel;                                             // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RihteArrow_01;                                     // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RihteArrow_02;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TextBase;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TipsImage;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_HintTitle;                                     // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Info;                                          // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_ScrollSnapPoint_C*             WBP_CMN_ScrollSnapPoint;                           // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FooterMenu_Sub_CommonBtn_C*        WBP_FooterMenu_Sub_CommonBtn;                      // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WindowBase;                                        // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EHintId                                       HintId;                                            // 0x0560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PageIndex;                                         // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PageNum;                                           // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     ImageWidgetTexture;                                // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bOpenAnimationEnd;                                 // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImageWidgetAnimationRequest;                      // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoEnableSubMenu;                                // 0x0582(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppControllerInputType                       InputType;                                         // 0x0583(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentText;                                       // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BindAnimationEvent();
	void ChangeInputTypeIF(EAppControllerInputType InNewControllerInputType);
	void CloseWindow();
	void Construct();
	void DelayInputEnable();
	void ExecuteUbergraph_WBP_Popup_Window_Hint(int32 EntryPoint);
	void Finished_4C6E859C40AEF81A6EFEC8815F6EBDF6();
	EHintId GetHintId();
	void IsMultiPage(bool* bOutIsMultiPage);
	void LoadImageWidgetTexture(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageWidgetTexture);
	void OnAcceptKeyPressed();
	void OnInAnimationFinishedEvent();
	void OnLeftShoulderPressed();
	void OnLoaded_6A2FCA554B5EA4E54410B982C2471768(class UObject* Loaded);
	void OnOutAnimationFinishedEvent();
	void OnRightShoulderPressed();
	void OpenWindow();
	void OpenWindowWithoutAnimation();
	void PreConstruct(bool IsDesignTime);
	void SetAutoEnableSubMenu(bool Enable);
	void SetBackgroundVisible(const bool bInVisible);
	void SetCharacterVisible(bool bInVisible);
	void SetCharacterVisibleByParameter(EHintCategory InCategory, int32 InTipsIndex);
	void SetEmptyDisplay();
	void SetExplanationText(const class FText& InText);
	void SetFooterParam(EUIButtonIconType InUIButtonIconType, int32 InButtonIndex);
	void SetFooterVisible(const bool bInVisible);
	void SetImageTexture(const TSoftObjectPtr<class UTexture2D>& InImageTexture);
	void SetImageWidget(const TSoftClassPtr<class UClass>& InImageWidget, float InAnimationInterval);
	void SetImageWidgetObjectTexture();
	void SetLRArrowVisible(bool bInLVisible, bool bInRVisible);
	void SetNextPageIndex(int32 InChangeValue);
	void SetPageDisplay(int32 InPageNum, int32 InCurrentPageIndex);
	void SetPageExplanationText(const TArray<class FText>& InTextArray);
	void SetPageImageTexture(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageTextureArray);
	void SetPageImageTextureAndWidget(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageTexture, const TArray<TSoftClassPtr<class UClass>>& InImageWidget, const TArray<double>& InImageWidgetAnimationInterval);
	void SetPageImageWidget(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageTexture, const TArray<TSoftClassPtr<class UClass>>& InImageWidgetArray, const TArray<double>& InAnimationInterval);
	void SetScrollBoxParam();
	void SetTestTextParam();
	void SetTitleText(const class FText& InText);
	void Setup(EHintId InHintId, bool bInDecisionClose);
	void UnBindAnimationEvent();
	void UpdateDisplay(EHintId InHintId);
	void UpdateFooter(bool bInIsTips);
	void UpdateInputType();

	EMainMenuRegistPriority GetRegistPriority() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Popup_Window_Hint_C">();
	}
	static class UWBP_Popup_Window_Hint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Popup_Window_Hint_C>();
	}
};
static_assert(alignof(UWBP_Popup_Window_Hint_C) == 0x000008, "Wrong alignment on UWBP_Popup_Window_Hint_C");
static_assert(sizeof(UWBP_Popup_Window_Hint_C) == 0x000598, "Wrong size on UWBP_Popup_Window_Hint_C");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_Popup_Window_Hint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, Popup_Out) == 0x0004D0, "Member 'UWBP_Popup_Window_Hint_C::Popup_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, Popup_Loop) == 0x0004D8, "Member 'UWBP_Popup_Window_Hint_C::Popup_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, Popup_In) == 0x0004E0, "Member 'UWBP_Popup_Window_Hint_C::Popup_In' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, BackgroundBlur) == 0x0004E8, "Member 'UWBP_Popup_Window_Hint_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, Border_0) == 0x0004F0, "Member 'UWBP_Popup_Window_Hint_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, DSP_Popup_Omochao) == 0x0004F8, "Member 'UWBP_Popup_Window_Hint_C::DSP_Popup_Omochao' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, OutOfContentButton) == 0x000500, "Member 'UWBP_Popup_Window_Hint_C::OutOfContentButton' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, Overlay_Tips) == 0x000508, "Member 'UWBP_Popup_Window_Hint_C::Overlay_Tips' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, Panel) == 0x000510, "Member 'UWBP_Popup_Window_Hint_C::Panel' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, RihteArrow_01) == 0x000518, "Member 'UWBP_Popup_Window_Hint_C::RihteArrow_01' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, RihteArrow_02) == 0x000520, "Member 'UWBP_Popup_Window_Hint_C::RihteArrow_02' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, TextBase) == 0x000528, "Member 'UWBP_Popup_Window_Hint_C::TextBase' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, TipsImage) == 0x000530, "Member 'UWBP_Popup_Window_Hint_C::TipsImage' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, TXT_HintTitle) == 0x000538, "Member 'UWBP_Popup_Window_Hint_C::TXT_HintTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, TXT_Info) == 0x000540, "Member 'UWBP_Popup_Window_Hint_C::TXT_Info' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, WBP_CMN_ScrollSnapPoint) == 0x000548, "Member 'UWBP_Popup_Window_Hint_C::WBP_CMN_ScrollSnapPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, WBP_FooterMenu_Sub_CommonBtn) == 0x000550, "Member 'UWBP_Popup_Window_Hint_C::WBP_FooterMenu_Sub_CommonBtn' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, WindowBase) == 0x000558, "Member 'UWBP_Popup_Window_Hint_C::WindowBase' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, HintId) == 0x000560, "Member 'UWBP_Popup_Window_Hint_C::HintId' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, PageIndex) == 0x000564, "Member 'UWBP_Popup_Window_Hint_C::PageIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, PageNum) == 0x000568, "Member 'UWBP_Popup_Window_Hint_C::PageNum' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, ImageWidgetTexture) == 0x000570, "Member 'UWBP_Popup_Window_Hint_C::ImageWidgetTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, bOpenAnimationEnd) == 0x000580, "Member 'UWBP_Popup_Window_Hint_C::bOpenAnimationEnd' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, bImageWidgetAnimationRequest) == 0x000581, "Member 'UWBP_Popup_Window_Hint_C::bImageWidgetAnimationRequest' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, bAutoEnableSubMenu) == 0x000582, "Member 'UWBP_Popup_Window_Hint_C::bAutoEnableSubMenu' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, InputType) == 0x000583, "Member 'UWBP_Popup_Window_Hint_C::InputType' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Hint_C, CurrentText) == 0x000588, "Member 'UWBP_Popup_Window_Hint_C::CurrentText' has a wrong offset!");

}

