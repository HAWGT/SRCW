#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Boost

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_Boost.WBP_Race_HUD_Sub_Boost_C
// 0x00B8 (0x0430 - 0x0378)
class UWBP_Race_HUD_Sub_Boost_C final : public URaceUISubBoost
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Level0_inLoop;                                     // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Irregular_inLoop;                                  // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Just_InOut;                                        // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BoostNum_Inout;                                    // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Boost_01;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Boost_02;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Boost_03;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Boost_04;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Eff_JustDrift;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_PAT_BoostNum;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Eff_Add_01;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Add_02;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Irregular;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Just_03;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MeterCover;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_Irregular_C*          WBP_Race_HUD_Sub_Irregular;                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         BoostLevel;                                        // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBoost;                                           // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         ChargeLevel;                                       // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevChargeLevel;                                   // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSinglePlayer;                                    // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Apply_Boost();
	void CheckGadget(int32 PlayerIndex_0, bool isSingle);
	void Construct();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_Boost(int32 EntryPoint);
	void OnBoost_Event();
	void PlayJustBoostAnimation(int32 Level);
	void PreConstruct(bool IsDesignTime);
	void SetChargeInfo(int32 ChargeLevel_0, double ChargeRate);
	void SetHUDVisivle(bool Visible);
	void SetQuickDriftCharge(bool IsFever);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_Boost_C">();
	}
	static class UWBP_Race_HUD_Sub_Boost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_Boost_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_Boost_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_Boost_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_Boost_C) == 0x000430, "Wrong size on UWBP_Race_HUD_Sub_Boost_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, UberGraphFrame) == 0x000378, "Member 'UWBP_Race_HUD_Sub_Boost_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Level0_inLoop) == 0x000380, "Member 'UWBP_Race_HUD_Sub_Boost_C::Level0_inLoop' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Irregular_inLoop) == 0x000388, "Member 'UWBP_Race_HUD_Sub_Boost_C::Irregular_inLoop' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Just_InOut) == 0x000390, "Member 'UWBP_Race_HUD_Sub_Boost_C::Just_InOut' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, BoostNum_Inout) == 0x000398, "Member 'UWBP_Race_HUD_Sub_Boost_C::BoostNum_Inout' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, base) == 0x0003A0, "Member 'UWBP_Race_HUD_Sub_Boost_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, DSP_Boost_01) == 0x0003A8, "Member 'UWBP_Race_HUD_Sub_Boost_C::DSP_Boost_01' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, DSP_Boost_02) == 0x0003B0, "Member 'UWBP_Race_HUD_Sub_Boost_C::DSP_Boost_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, DSP_Boost_03) == 0x0003B8, "Member 'UWBP_Race_HUD_Sub_Boost_C::DSP_Boost_03' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, DSP_Boost_04) == 0x0003C0, "Member 'UWBP_Race_HUD_Sub_Boost_C::DSP_Boost_04' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, DSP_Eff_JustDrift) == 0x0003C8, "Member 'UWBP_Race_HUD_Sub_Boost_C::DSP_Eff_JustDrift' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, DSP_PAT_BoostNum) == 0x0003D0, "Member 'UWBP_Race_HUD_Sub_Boost_C::DSP_PAT_BoostNum' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Eff_Add_01) == 0x0003D8, "Member 'UWBP_Race_HUD_Sub_Boost_C::Eff_Add_01' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Eff_Add_02) == 0x0003E0, "Member 'UWBP_Race_HUD_Sub_Boost_C::Eff_Add_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Eff_Irregular) == 0x0003E8, "Member 'UWBP_Race_HUD_Sub_Boost_C::Eff_Irregular' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, Eff_Just_03) == 0x0003F0, "Member 'UWBP_Race_HUD_Sub_Boost_C::Eff_Just_03' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, MeterCover) == 0x0003F8, "Member 'UWBP_Race_HUD_Sub_Boost_C::MeterCover' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, WBP_Race_HUD_Sub_Irregular) == 0x000400, "Member 'UWBP_Race_HUD_Sub_Boost_C::WBP_Race_HUD_Sub_Irregular' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, BoostLevel) == 0x000408, "Member 'UWBP_Race_HUD_Sub_Boost_C::BoostLevel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, OnBoost) == 0x000410, "Member 'UWBP_Race_HUD_Sub_Boost_C::OnBoost' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, ChargeLevel) == 0x000420, "Member 'UWBP_Race_HUD_Sub_Boost_C::ChargeLevel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, PrevChargeLevel) == 0x000424, "Member 'UWBP_Race_HUD_Sub_Boost_C::PrevChargeLevel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, PlayerIndex) == 0x000428, "Member 'UWBP_Race_HUD_Sub_Boost_C::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Boost_C, IsSinglePlayer) == 0x00042C, "Member 'UWBP_Race_HUD_Sub_Boost_C::IsSinglePlayer' has a wrong offset!");

}

