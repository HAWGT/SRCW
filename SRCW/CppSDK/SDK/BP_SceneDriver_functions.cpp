#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SceneDriver

#include "Basic.hpp"

#include "BP_SceneDriver_classes.hpp"
#include "BP_SceneDriver_parameters.hpp"


namespace SDK
{

// Function BP_SceneDriver.BP_SceneDriver_C.ExecuteUbergraph_BP_SceneDriver
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneDriver_C::ExecuteUbergraph_BP_SceneDriver(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "ExecuteUbergraph_BP_SceneDriver");

	Params::BP_SceneDriver_C_ExecuteUbergraph_BP_SceneDriver Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SceneDriver.BP_SceneDriver_C.OnAssetLoaded
// (BlueprintCallable, BlueprintEvent)

void ABP_SceneDriver_C::OnAssetLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "OnAssetLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneDriver.BP_SceneDriver_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SceneDriver_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneDriver.BP_SceneDriver_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneDriver_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "ReceiveTick");

	Params::BP_SceneDriver_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SceneDriver.BP_SceneDriver_C.SetEnableGfur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneDriver_C::SetEnableGfur(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "SetEnableGfur");

	Params::BP_SceneDriver_C_SetEnableGfur Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SceneDriver.BP_SceneDriver_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SceneDriver_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneDriver.BP_SceneDriver_C.GetRivalMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EDriverId                               In_DriverId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USkeletalMesh* ABP_SceneDriver_C::GetRivalMesh(EDriverId In_DriverId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneDriver_C", "GetRivalMesh");

	Params::BP_SceneDriver_C_GetRivalMesh Parms{};

	Parms.In_DriverId = In_DriverId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

