#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FooterMenu_Sub_ControllerCross

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C
// 0x0048 (0x0358 - 0x0310)
class UWBP_FooterMenu_Sub_ControllerCross_C final : public UCommonMenuControllerCross
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Btn_Active;                                        // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Btn_Push;                                          // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Btn_Cross;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         ButtonArr;                                         // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FText                                   Text;                                              // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Index_0;                                           // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross(int32 EntryPoint);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnAcceptKeyReleased();
	void OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyPressed();
	void OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyReleased();
	void OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyPressed();
	void OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyReleased();
	void OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftPressed();
	void OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftReleased();
	void OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopPressed();
	void OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopReleased();
	void OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyPressed();
	void OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyReleased();
	void OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderPressed();
	void OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderReleased();
	void OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickAxis(const struct FVector2D& Value);
	void OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnLeftStickButtonPressed();
	void OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickButtonReleased();
	void OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyPressed();
	void OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyReleased();
	void OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderPressed();
	void OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderReleased();
	void OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickAxis(const struct FVector2D& Value);
	void OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnRightStickButtonPressed();
	void OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickButtonReleased();
	void OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialPressed();
	void OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialReleased();
	void OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyPressed();
	void OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyReleased();
	void OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnVisibilityChanged_イベント(ESlateVisibility InVisibility);
	void PreConstruct(bool IsDesignTime);
	void PressButtonAnimation();
	void SetButtonImageIndex(int32 Param_Index_0);
	void SetPressAnimation();
	void SetText(const class FText& Text_0);
	void SilentFocusReady(bool bOnce);
	void UpdateButton();
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_FooterMenu_Sub_ControllerCross_C">();
	}
	static class UWBP_FooterMenu_Sub_ControllerCross_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_FooterMenu_Sub_ControllerCross_C>();
	}
};
static_assert(alignof(UWBP_FooterMenu_Sub_ControllerCross_C) == 0x000008, "Wrong alignment on UWBP_FooterMenu_Sub_ControllerCross_C");
static_assert(sizeof(UWBP_FooterMenu_Sub_ControllerCross_C) == 0x000358, "Wrong size on UWBP_FooterMenu_Sub_ControllerCross_C");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, UberGraphFrame) == 0x000310, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, Btn_Active) == 0x000318, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::Btn_Active' has a wrong offset!");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, Btn_Push) == 0x000320, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::Btn_Push' has a wrong offset!");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, Btn_Cross) == 0x000328, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::Btn_Cross' has a wrong offset!");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, ButtonArr) == 0x000330, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::ButtonArr' has a wrong offset!");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, Text) == 0x000340, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_FooterMenu_Sub_ControllerCross_C, Index_0) == 0x000350, "Member 'UWBP_FooterMenu_Sub_ControllerCross_C::Index_0' has a wrong offset!");

}

