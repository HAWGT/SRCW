#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RacePauseMenuSequence

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionUI_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RacePauseMenuSequence.BP_RacePauseMenuSequence_C
// 0x0078 (0x0440 - 0x03C8)
class ABP_RacePauseMenuSequence_C final : public ARacePauseMenuSequence
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_PauseMenu_C*                       PauseMenuWidget;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ARacePlayerController*                  RacePlayerController;                              // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ERacePauseMenuItem                            LastSelectedItem;                                  // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableTSR;                                        // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonRaceMenuContentId                      SelectedContentId;                                 // 0x03E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3[0x5];                                      // 0x03E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUISceneBase*                      PopupWidget;                                       // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMenuInputRecieveObject*>        InputRecieveObjects;                               // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnEnd;                                             // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_CMN_RaceMenu_Sub_Btn_C*            PrevFocusBtn;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCancelCancel;                                    // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ReadySequenceActor_C*               ReadySequenceActor;                                // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCreated;                                         // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RaceSequence_C*                     RaceSequence;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsReady;                                          // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPopupOpen;                                       // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClickedOptionBtn(class UWBP_PauseMenu_Sub_Option_Btn_03_C* InButton, int32 InIndex);
	void CloseInput();
	void CreateConfirmationPopup(EPopupWindowType WindowType, EPopupWindowButtonType ButtonType, bool Attention, class UUnionUISceneBase** WindowWidget);
	void CreateGadgetPlateReadyActor();
	void CreateInputRecieveObject();
	void ExecuteUbergraph_BP_RacePauseMenuSequence(int32 EntryPoint);
	void ForceCancel();
	void OnBacjKeyPressedWithPlayerId_InputRecieveObject(class UObject* Object, const int32& PlayerControllerIndex);
	void OnCancel(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void OnCloseGadgetPlateReady();
	void OnDecide(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void OnDecide_PopupWindow(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void OnExitFade(EUnionUIFadeDirection FadeDirection);
	void OnExitStateSelect();
	void OnFaceButtonLeftPressedWithPlayerId_InputRecieveObject(class UObject* Object, const int32& PlayerControllerIndex);
	void OnFaceButtonTopPressedWithPlayerId_InputRecieveObject(class UObject* Object, const int32& PlayerControllerIndex);
	void OnFinalize();
	void OnInitialize();
	void OnInitStateExit();
	void OnInitStateIdle();
	void OnInitStateSelect();
	void OnLeftShoulderPressedWithPlayerId_InputRecieveObject(class UObject* Object, const int32& PlayerControllerIndex);
	void OnRightShoulderPressedWithPlayerId_InputRecieveObject(class UObject* Object, const int32& PlayerControllerIndex);
	void OnSaveEnd(ESaveDataStatus Status);
	void OnSpecialPressedWithPlayerId_InputRecieveObject(class UObject* Object, const int32& PlayerControllerIndex);
	void OnUpdateStateSelect(float InDeltaTime);
	void PopupWindow_Cancel();
	void ReadyCancelEvent();
	void ReadyConfirmInitialize();
	void ReadyEndEvent();
	void ResetInput();
	void Set_Silence_Sound();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RacePauseMenuSequence_C">();
	}
	static class ABP_RacePauseMenuSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RacePauseMenuSequence_C>();
	}
};
static_assert(alignof(ABP_RacePauseMenuSequence_C) == 0x000008, "Wrong alignment on ABP_RacePauseMenuSequence_C");
static_assert(sizeof(ABP_RacePauseMenuSequence_C) == 0x000440, "Wrong size on ABP_RacePauseMenuSequence_C");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, UberGraphFrame) == 0x0003C8, "Member 'ABP_RacePauseMenuSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, PauseMenuWidget) == 0x0003D0, "Member 'ABP_RacePauseMenuSequence_C::PauseMenuWidget' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, RacePlayerController) == 0x0003D8, "Member 'ABP_RacePauseMenuSequence_C::RacePlayerController' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, LastSelectedItem) == 0x0003E0, "Member 'ABP_RacePauseMenuSequence_C::LastSelectedItem' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, bEnableTSR) == 0x0003E1, "Member 'ABP_RacePauseMenuSequence_C::bEnableTSR' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, SelectedContentId) == 0x0003E2, "Member 'ABP_RacePauseMenuSequence_C::SelectedContentId' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, PopupWidget) == 0x0003E8, "Member 'ABP_RacePauseMenuSequence_C::PopupWidget' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, InputRecieveObjects) == 0x0003F0, "Member 'ABP_RacePauseMenuSequence_C::InputRecieveObjects' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, OnEnd) == 0x000400, "Member 'ABP_RacePauseMenuSequence_C::OnEnd' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, PrevFocusBtn) == 0x000410, "Member 'ABP_RacePauseMenuSequence_C::PrevFocusBtn' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, IsCancelCancel) == 0x000418, "Member 'ABP_RacePauseMenuSequence_C::IsCancelCancel' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, ReadySequenceActor) == 0x000420, "Member 'ABP_RacePauseMenuSequence_C::ReadySequenceActor' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, IsCreated) == 0x000428, "Member 'ABP_RacePauseMenuSequence_C::IsCreated' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, RaceSequence) == 0x000430, "Member 'ABP_RacePauseMenuSequence_C::RaceSequence' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, bIsReady) == 0x000438, "Member 'ABP_RacePauseMenuSequence_C::bIsReady' has a wrong offset!");
static_assert(offsetof(ABP_RacePauseMenuSequence_C, IsPopupOpen) == 0x000439, "Member 'ABP_RacePauseMenuSequence_C::IsPopupOpen' has a wrong offset!");

}

