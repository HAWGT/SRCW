#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_StartText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_StartText.WBP_Race_StartText_C
// 0x0058 (0x0338 - 0x02E0)
class UWBP_Race_StartText_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Start_InOut;                                       // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Left;                                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Right;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_01;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_02;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_03;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_04;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Start;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFinish;                                          // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Race_StartText(int32 EntryPoint);
	void FireAnim();
	void OnAnimFinish();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_StartText_C">();
	}
	static class UWBP_Race_StartText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_StartText_C>();
	}
};
static_assert(alignof(UWBP_Race_StartText_C) == 0x000008, "Wrong alignment on UWBP_Race_StartText_C");
static_assert(sizeof(UWBP_Race_StartText_C) == 0x000338, "Wrong size on UWBP_Race_StartText_C");
static_assert(offsetof(UWBP_Race_StartText_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Race_StartText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Start_InOut) == 0x0002E8, "Member 'UWBP_Race_StartText_C::Start_InOut' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Left) == 0x0002F0, "Member 'UWBP_Race_StartText_C::Left' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Right) == 0x0002F8, "Member 'UWBP_Race_StartText_C::Right' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Small_Line_01) == 0x000300, "Member 'UWBP_Race_StartText_C::Small_Line_01' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Small_Line_02) == 0x000308, "Member 'UWBP_Race_StartText_C::Small_Line_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Small_Line_03) == 0x000310, "Member 'UWBP_Race_StartText_C::Small_Line_03' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, Small_Line_04) == 0x000318, "Member 'UWBP_Race_StartText_C::Small_Line_04' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, TXT_Start) == 0x000320, "Member 'UWBP_Race_StartText_C::TXT_Start' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartText_C, OnFinish) == 0x000328, "Member 'UWBP_Race_StartText_C::OnFinish' has a wrong offset!");

}

