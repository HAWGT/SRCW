#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_MedalSlot

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_TimeTrial_MedalSlot.WBP_TimeTrial_MedalSlot_C.ExecuteUbergraph_WBP_TimeTrial_MedalSlot
// 0x0080 (0x0080 - 0x0000)
struct WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_TimeTrial_MedalIcon_02_C*          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETimeTrialClearRankId>                 K2Node_CustomEvent_InTimeTrialClearRanks;          // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_CustomEvent_InIndex;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimeTrialClearRankId                         CallFunc_Array_Get_Item_1;                         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_TimeTrial_MedalIcon_02_C*          CallFunc_Array_Get_Item_2;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_TimeTrial_MedalIcon_02_C*          CallFunc_Array_Get_Item_3;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_TimeTrial_MedalIcon_02_C*>  K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot) == 0x000008, "Wrong alignment on WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot");
static_assert(sizeof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot) == 0x000080, "Wrong size on WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, EntryPoint) == 0x000000, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, K2Node_CustomEvent_InTimeTrialClearRanks) == 0x000028, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::K2Node_CustomEvent_InTimeTrialClearRanks' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, K2Node_CustomEvent_InIndex) == 0x000038, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::K2Node_CustomEvent_InIndex' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Get_Item_1) == 0x00003C, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003D, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00003E, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00003F, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Get_Item_2) == 0x000040, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Get_Item_3) == 0x000050, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005D, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, Temp_int_Loop_Counter_Variable_2) == 0x000064, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Less_IntInt_ReturnValue_2) == 0x000078, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'WBP_TimeTrial_MedalSlot_C_ExecuteUbergraph_WBP_TimeTrial_MedalSlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_TimeTrial_MedalSlot.WBP_TimeTrial_MedalSlot_C.SelectMedal
// 0x0004 (0x0004 - 0x0000)
struct WBP_TimeTrial_MedalSlot_C_SelectMedal final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_MedalSlot_C_SelectMedal) == 0x000004, "Wrong alignment on WBP_TimeTrial_MedalSlot_C_SelectMedal");
static_assert(sizeof(WBP_TimeTrial_MedalSlot_C_SelectMedal) == 0x000004, "Wrong size on WBP_TimeTrial_MedalSlot_C_SelectMedal");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_SelectMedal, InIndex) == 0x000000, "Member 'WBP_TimeTrial_MedalSlot_C_SelectMedal::InIndex' has a wrong offset!");

// Function WBP_TimeTrial_MedalSlot.WBP_TimeTrial_MedalSlot_C.SetupMedalSlot
// 0x0010 (0x0010 - 0x0000)
struct WBP_TimeTrial_MedalSlot_C_SetupMedalSlot final
{
public:
	TArray<ETimeTrialClearRankId>                 InTimeTrialClearRanks;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_TimeTrial_MedalSlot_C_SetupMedalSlot) == 0x000008, "Wrong alignment on WBP_TimeTrial_MedalSlot_C_SetupMedalSlot");
static_assert(sizeof(WBP_TimeTrial_MedalSlot_C_SetupMedalSlot) == 0x000010, "Wrong size on WBP_TimeTrial_MedalSlot_C_SetupMedalSlot");
static_assert(offsetof(WBP_TimeTrial_MedalSlot_C_SetupMedalSlot, InTimeTrialClearRanks) == 0x000000, "Member 'WBP_TimeTrial_MedalSlot_C_SetupMedalSlot::InTimeTrialClearRanks' has a wrong offset!");

}

