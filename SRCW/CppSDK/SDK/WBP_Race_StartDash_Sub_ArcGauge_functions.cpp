#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_StartDash_Sub_ArcGauge

#include "Basic.hpp"

#include "WBP_Race_StartDash_Sub_ArcGauge_classes.hpp"
#include "WBP_Race_StartDash_Sub_ArcGauge_parameters.hpp"


namespace SDK
{

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Race_StartDash_Sub_ArcGauge_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.GetButtonWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* UWBP_Race_StartDash_Sub_ArcGauge_C::GetButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "GetButtonWidget");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "PreConstruct");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetDashInputKey
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetDashInputKey(const struct FKey& Key, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetDashInputKey");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey Parms{};

	Parms.Key = std::move(Key);
	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetGaugePivotAndRange
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           ImageRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   PivotRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GaugeRateRange                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetGaugePivotAndRange(class UImage* ImageRef, float PivotRate, float GaugeRateRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetGaugePivotAndRange");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange Parms{};

	Parms.ImageRef = ImageRef;
	Parms.PivotRate = PivotRate;
	Parms.GaugeRateRange = GaugeRateRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetGhostViewMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGhostView                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetGhostViewMode(bool IsGhostView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetGhostViewMode");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode Parms{};

	Parms.IsGhostView = IsGhostView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   PlayerControllerIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetKey(const struct FKey& NewKey, int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetKey");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetKey Parms{};

	Parms.NewKey = std::move(NewKey);
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetParcentMyGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ZeroToOne_Max1_5                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetParcentMyGauge(double ZeroToOne_Max1_5)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetParcentMyGauge");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge Parms{};

	Parms.ZeroToOne_Max1_5 = ZeroToOne_Max1_5;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetPivotAndRange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ZeroToOne                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PivotParcent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetPivotAndRange(double ZeroToOne, double PivotParcent, class UImage* Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetPivotAndRange");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange Parms{};

	Parms.ZeroToOne = ZeroToOne;
	Parms.PivotParcent = PivotParcent;
	Parms.Image = Image;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetStartDashParamSetting
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FUnionRaceStartDashParam&  InStartDashParam                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetStartDashParamSetting(const struct FUnionRaceStartDashParam& InStartDashParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetStartDashParamSetting");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting Parms{};

	Parms.InStartDashParam = std::move(InStartDashParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetStartDashSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  LV3_PIVOT                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LV3_RANGE                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LV2_PIVOT                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LV2_RANGE                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NG1_PIVOT                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NG1_RANGE                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NG2_PIVOT                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NG2_RANGE                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_StartDash_Sub_ArcGauge_C::SetStartDashSettings(double LV3_PIVOT, double LV3_RANGE, double LV2_PIVOT, double LV2_RANGE, double NG1_PIVOT, double NG1_RANGE, double NG2_PIVOT, double NG2_RANGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_StartDash_Sub_ArcGauge_C", "SetStartDashSettings");

	Params::WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings Parms{};

	Parms.LV3_PIVOT = LV3_PIVOT;
	Parms.LV3_RANGE = LV3_RANGE;
	Parms.LV2_PIVOT = LV2_PIVOT;
	Parms.LV2_RANGE = LV2_RANGE;
	Parms.NG1_PIVOT = NG1_PIVOT;
	Parms.NG1_RANGE = NG1_RANGE;
	Parms.NG2_PIVOT = NG2_PIVOT;
	Parms.NG2_RANGE = NG2_RANGE;

	UObject::ProcessEvent(Func, &Parms);
}

}

