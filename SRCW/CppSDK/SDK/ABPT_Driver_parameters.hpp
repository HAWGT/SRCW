#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPT_Driver

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function ABPT_Driver.ABPT_Driver_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABPT_Driver_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_AnimGraph) == 0x000008, "Wrong alignment on ABPT_Driver_C_AnimGraph");
static_assert(sizeof(ABPT_Driver_C_AnimGraph) == 0x000010, "Wrong size on ABPT_Driver_C_AnimGraph");
static_assert(offsetof(ABPT_Driver_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABPT_Driver_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABPT_Driver_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABPT_Driver_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABPT_Driver_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABPT_Driver_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABPT_Driver_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABPT_Driver_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABPT_Driver_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.Boarder_ItemOrWispHoldingLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Boarder_ItemOrWispHoldingLayer_0;                  // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer");
static_assert(sizeof(ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer) == 0x000020, "Wrong size on ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer");
static_assert(offsetof(ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer, InPose_0) == 0x000000, "Member 'ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer::InPose_0' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer, Boarder_ItemOrWispHoldingLayer_0) == 0x000010, "Member 'ABPT_Driver_C_Boarder_ItemOrWispHoldingLayer::Boarder_ItemOrWispHoldingLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.BoatingLayer
// 0x0010 (0x0010 - 0x0000)
struct ABPT_Driver_C_BoatingLayer final
{
public:
	struct FPoseLink                              BoatingLayer_0;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_BoatingLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_BoatingLayer");
static_assert(sizeof(ABPT_Driver_C_BoatingLayer) == 0x000010, "Wrong size on ABPT_Driver_C_BoatingLayer");
static_assert(offsetof(ABPT_Driver_C_BoatingLayer, BoatingLayer_0) == 0x000000, "Member 'ABPT_Driver_C_BoatingLayer::BoatingLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.Driver_ItemOrWispHoldingLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_Driver_ItemOrWispHoldingLayer final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Driver_ItemOrWispHoldingLayer_0;                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_Driver_ItemOrWispHoldingLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_Driver_ItemOrWispHoldingLayer");
static_assert(sizeof(ABPT_Driver_C_Driver_ItemOrWispHoldingLayer) == 0x000020, "Wrong size on ABPT_Driver_C_Driver_ItemOrWispHoldingLayer");
static_assert(offsetof(ABPT_Driver_C_Driver_ItemOrWispHoldingLayer, InPose_0) == 0x000000, "Member 'ABPT_Driver_C_Driver_ItemOrWispHoldingLayer::InPose_0' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_Driver_ItemOrWispHoldingLayer, Driver_ItemOrWispHoldingLayer_0) == 0x000010, "Member 'ABPT_Driver_C_Driver_ItemOrWispHoldingLayer::Driver_ItemOrWispHoldingLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.DrivingLayer
// 0x0010 (0x0010 - 0x0000)
struct ABPT_Driver_C_DrivingLayer final
{
public:
	struct FPoseLink                              DrivingLayer_0;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_DrivingLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_DrivingLayer");
static_assert(sizeof(ABPT_Driver_C_DrivingLayer) == 0x000010, "Wrong size on ABPT_Driver_C_DrivingLayer");
static_assert(offsetof(ABPT_Driver_C_DrivingLayer, DrivingLayer_0) == 0x000000, "Member 'ABPT_Driver_C_DrivingLayer::DrivingLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.ExecuteUbergraph_ABPT_Driver
// 0x0378 (0x0378 - 0x0000)
struct ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetLinkedAnimClass_Out_AnimInstance;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimSyncTimeById_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_3;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_4;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_5;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            CallFunc_GetBlendSpaceAssetById_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_5;      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_6;      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_7;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_8;      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_9;      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_10;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_11;     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_12;     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRidingType_Out_RidingType;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_13;     // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_6;     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_6;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_7;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_7;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_14;     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_8;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_8;     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_9;                    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_10;                   // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_11;                   // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_9;     // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_12;                   // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_15;     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_13;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_14;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            CallFunc_GetBlendSpaceAssetById_ReturnValue_1;     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_7;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_16;     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_17;     // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_18;     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_19;     // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_20;     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_21;     // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            CallFunc_GetBlendSpaceAssetById_ReturnValue_2;     // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_22;     // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_15;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_10;    // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_8;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_11;    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleType                                  CallFunc_GetRideableType_ReturnValue;              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_16;                   // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_17;                   // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_18;                   // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_19;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleType                                  CallFunc_GetRideableType_ReturnValue_1;            // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_9;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_20;                   // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_21;                   // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_22;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_10;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleType                                  CallFunc_GetRideableType_ReturnValue_2;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_23;                   // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_23;     // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_24;     // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_25;     // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_26;     // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_27;     // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_28;     // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_11;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_12;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_29;     // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_30;     // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_31;     // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_32;     // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_33;     // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_34;     // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_35;     // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_36;     // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_37;     // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_13;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_14;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_24;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_25;                   // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9; // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_26;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_12;    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleType                                  CallFunc_GetRideableType_ReturnValue_3;            // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F[0x1];                                      // 0x025F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_15;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_38;     // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_27;                   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_39;     // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_40;     // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_41;     // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_28;                   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_29;                   // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_30;                   // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_31;                   // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_42;     // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_43;     // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_32;                   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_33;                   // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_34;                   // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_35;                   // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_36;                   // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF[0x1];                                      // 0x02AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_16;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_17;                  // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimationAssetById_ReturnValue_44;     // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_18;                  // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue_37;                   // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Hoverboarder_Form_bHoverboarderForm;   // 0x02C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3;  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4;  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5;  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6;  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7;  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8;  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9;  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_X_ImplicitCast;             // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12; // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver) == 0x000008, "Wrong alignment on ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver");
static_assert(sizeof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver) == 0x000378, "Wrong size on ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, EntryPoint) == 0x000000, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetLinkedAnimClass_Out_AnimInstance) == 0x000008, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetLinkedAnimClass_Out_AnimInstance' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue) == 0x000010, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000014, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue) == 0x000018, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000020, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimSyncTimeById_ReturnValue) == 0x000024, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimSyncTimeById_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue) == 0x000029, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x00002C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000031, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_1) == 0x000032, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000034, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000039, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_1) == 0x000040, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_2) == 0x000048, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x00004C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_2) == 0x000050, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x000051, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_2) == 0x000058, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_3) == 0x000060, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_4) == 0x000061, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_1) == 0x000064, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_3) == 0x000070, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_5) == 0x000078, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetBlendSpaceAssetById_ReturnValue) == 0x000080, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetBlendSpaceAssetById_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_2) == 0x000088, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_3) == 0x00008C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_4) == 0x000090, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_5) == 0x000098, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_6) == 0x0000A0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_7) == 0x0000A8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_8) == 0x0000B0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_9) == 0x0000B8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_10) == 0x0000C0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_11) == 0x0000C8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_12) == 0x0000D0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRidingType_Out_RidingType) == 0x0000D8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRidingType_Out_RidingType' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_13) == 0x0000E0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_4) == 0x0000E8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x0000EC, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x0000F0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_6) == 0x0000F1, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_6) == 0x0000F2, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000F3, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x0000F4, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_7) == 0x0000F8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_7) == 0x0000F9, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_14) == 0x000100, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_4) == 0x000108, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x00010C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_8) == 0x000110, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_8) == 0x000111, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_9) == 0x000112, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_10) == 0x000113, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_5) == 0x000114, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_11) == 0x000115, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue) == 0x000116, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7) == 0x000118, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_9) == 0x00011C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_12) == 0x00011D, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_15) == 0x000120, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_13) == 0x000128, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_5) == 0x00012C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_14) == 0x000130, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000131, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetBlendSpaceAssetById_ReturnValue_1) == 0x000138, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetBlendSpaceAssetById_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_6) == 0x000140, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_7) == 0x000144, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_16) == 0x000148, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_17) == 0x000150, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_18) == 0x000158, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_19) == 0x000160, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_20) == 0x000168, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_21) == 0x000170, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetBlendSpaceAssetById_ReturnValue_2) == 0x000178, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetBlendSpaceAssetById_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_22) == 0x000180, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8) == 0x000188, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_15) == 0x00018C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_10) == 0x00018D, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_6) == 0x00018E, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue) == 0x000190, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_8) == 0x000194, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_11) == 0x000198, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRideableType_ReturnValue) == 0x000199, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRideableType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00019A, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_16) == 0x00019B, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_17) == 0x00019C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_7) == 0x00019D, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_8) == 0x00019E, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_18) == 0x00019F, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_19) == 0x0001A0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_9) == 0x0001A1, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanAND_ReturnValue) == 0x0001A2, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRideableType_ReturnValue_1) == 0x0001A3, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRideableType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A4, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0001A5, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_9) == 0x0001A8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_1) == 0x0001AC, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001AD, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_20) == 0x0001AE, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_21) == 0x0001AF, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_22) == 0x0001B0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_10) == 0x0001B1, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_10) == 0x0001B4, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRideableType_ReturnValue_2) == 0x0001B8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRideableType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0001B9, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001BA, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_2) == 0x0001BB, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_23) == 0x0001BC, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanAND_ReturnValue_2) == 0x0001BD, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_23) == 0x0001C0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_24) == 0x0001C8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_25) == 0x0001D0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_26) == 0x0001D8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_27) == 0x0001E0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_28) == 0x0001E8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_11) == 0x0001F0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_12) == 0x0001F4, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_29) == 0x000200, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_30) == 0x000208, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_31) == 0x000210, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_32) == 0x000218, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_33) == 0x000220, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_34) == 0x000228, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_35) == 0x000230, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_36) == 0x000238, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_37) == 0x000240, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_13) == 0x000248, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_14) == 0x00024C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_24) == 0x000250, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_25) == 0x000251, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9) == 0x000254, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_26) == 0x000258, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_ReturnValue_12) == 0x000259, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Not_PreBool_ReturnValue_11) == 0x00025A, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetRideableType_ReturnValue_3) == 0x00025B, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetRideableType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_3) == 0x00025C, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00025D, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanAND_ReturnValue_3) == 0x00025E, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_15) == 0x000260, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000264, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanAND_ReturnValue_4) == 0x000265, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_38) == 0x000268, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_27) == 0x000270, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_39) == 0x000278, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_40) == 0x000280, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_41) == 0x000288, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_28) == 0x000290, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_29) == 0x000291, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_30) == 0x000292, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_4) == 0x000293, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_31) == 0x000294, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_5) == 0x000295, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_42) == 0x000298, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_43) == 0x0002A0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_32) == 0x0002A8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_33) == 0x0002A9, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_34) == 0x0002AA, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_6) == 0x0002AB, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_35) == 0x0002AC, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanOR_ReturnValue_7) == 0x0002AD, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_36) == 0x0002AE, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_16) == 0x0002B0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_17) == 0x0002B4, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetAnimationAssetById_ReturnValue_44) == 0x0002B8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetAnimationAssetById_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetParam_ReturnValue_18) == 0x0002C0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetParam_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0002C4, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GetFlag_ReturnValue_37) == 0x0002C5, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GetFlag_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_BooleanAND_ReturnValue_5) == 0x0002C6, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Is_Hoverboarder_Form_bHoverboarderForm) == 0x0002C7, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Is_Hoverboarder_Form_bHoverboarderForm' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, K2Node_Event_DeltaTimeX) == 0x0002C8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0002D0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x0002D8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x0002E0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3) == 0x0002E8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4) == 0x0002F0, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0002F8, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5) == 0x000300, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6) == 0x000308, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7) == 0x000310, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8) == 0x000318, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9) == 0x000320, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000328, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10) == 0x000330, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11) == 0x000338, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000340, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000348, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000350, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, K2Node_StructMemberSet_X_ImplicitCast) == 0x000358, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::K2Node_StructMemberSet_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12) == 0x000360, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000368, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2) == 0x000370, "Member 'ABPT_Driver_C_ExecuteUbergraph_ABPT_Driver::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.FacialAnimationLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_FacialAnimationLayer final
{
public:
	struct FPoseLink                              InPose_1;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              FacialAnimationLayer_0;                            // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_FacialAnimationLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_FacialAnimationLayer");
static_assert(sizeof(ABPT_Driver_C_FacialAnimationLayer) == 0x000020, "Wrong size on ABPT_Driver_C_FacialAnimationLayer");
static_assert(offsetof(ABPT_Driver_C_FacialAnimationLayer, InPose_1) == 0x000000, "Member 'ABPT_Driver_C_FacialAnimationLayer::InPose_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_FacialAnimationLayer, FacialAnimationLayer_0) == 0x000010, "Member 'ABPT_Driver_C_FacialAnimationLayer::FacialAnimationLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.GetLinkedAnimClass
// 0x0008 (0x0008 - 0x0000)
struct ABPT_Driver_C_GetLinkedAnimClass final
{
public:
	class UClass*                                 Out_AnimInstance;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABPT_Driver_C_GetLinkedAnimClass) == 0x000008, "Wrong alignment on ABPT_Driver_C_GetLinkedAnimClass");
static_assert(sizeof(ABPT_Driver_C_GetLinkedAnimClass) == 0x000008, "Wrong size on ABPT_Driver_C_GetLinkedAnimClass");
static_assert(offsetof(ABPT_Driver_C_GetLinkedAnimClass, Out_AnimInstance) == 0x000000, "Member 'ABPT_Driver_C_GetLinkedAnimClass::Out_AnimInstance' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.HoverboardControlRogLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_HoverboardControlRogLayer final
{
public:
	struct FPoseLink                              HoverboardPose;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              HoverboardControlRogLayer_0;                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_HoverboardControlRogLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_HoverboardControlRogLayer");
static_assert(sizeof(ABPT_Driver_C_HoverboardControlRogLayer) == 0x000020, "Wrong size on ABPT_Driver_C_HoverboardControlRogLayer");
static_assert(offsetof(ABPT_Driver_C_HoverboardControlRogLayer, HoverboardPose) == 0x000000, "Member 'ABPT_Driver_C_HoverboardControlRogLayer::HoverboardPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_HoverboardControlRogLayer, HoverboardControlRogLayer_0) == 0x000010, "Member 'ABPT_Driver_C_HoverboardControlRogLayer::HoverboardControlRogLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.HoverboardItemHoldBlendLeft
// 0x0030 (0x0030 - 0x0000)
struct ABPT_Driver_C_HoverboardItemHoldBlendLeft final
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LeftHoldPose;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              HoverboardItemHoldBlendLeft_0;                     // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_HoverboardItemHoldBlendLeft) == 0x000008, "Wrong alignment on ABPT_Driver_C_HoverboardItemHoldBlendLeft");
static_assert(sizeof(ABPT_Driver_C_HoverboardItemHoldBlendLeft) == 0x000030, "Wrong size on ABPT_Driver_C_HoverboardItemHoldBlendLeft");
static_assert(offsetof(ABPT_Driver_C_HoverboardItemHoldBlendLeft, BasePose) == 0x000000, "Member 'ABPT_Driver_C_HoverboardItemHoldBlendLeft::BasePose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_HoverboardItemHoldBlendLeft, LeftHoldPose) == 0x000010, "Member 'ABPT_Driver_C_HoverboardItemHoldBlendLeft::LeftHoldPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_HoverboardItemHoldBlendLeft, HoverboardItemHoldBlendLeft_0) == 0x000020, "Member 'ABPT_Driver_C_HoverboardItemHoldBlendLeft::HoverboardItemHoldBlendLeft_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.HoverboardItemHoldBlendRight
// 0x0030 (0x0030 - 0x0000)
struct ABPT_Driver_C_HoverboardItemHoldBlendRight final
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RightHoldPose;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              HoverboardItemHoldBlendRight_0;                    // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_HoverboardItemHoldBlendRight) == 0x000008, "Wrong alignment on ABPT_Driver_C_HoverboardItemHoldBlendRight");
static_assert(sizeof(ABPT_Driver_C_HoverboardItemHoldBlendRight) == 0x000030, "Wrong size on ABPT_Driver_C_HoverboardItemHoldBlendRight");
static_assert(offsetof(ABPT_Driver_C_HoverboardItemHoldBlendRight, BasePose) == 0x000000, "Member 'ABPT_Driver_C_HoverboardItemHoldBlendRight::BasePose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_HoverboardItemHoldBlendRight, RightHoldPose) == 0x000010, "Member 'ABPT_Driver_C_HoverboardItemHoldBlendRight::RightHoldPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_HoverboardItemHoldBlendRight, HoverboardItemHoldBlendRight_0) == 0x000020, "Member 'ABPT_Driver_C_HoverboardItemHoldBlendRight::HoverboardItemHoldBlendRight_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.Is Hoverboarder Form
// 0x000C (0x000C - 0x0000)
struct ABPT_Driver_C_Is_Hoverboarder_Form final
{
public:
	bool                                          bHoverboarderForm;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRidingType_Out_RidingType;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABPT_Driver_C_Is_Hoverboarder_Form) == 0x000004, "Wrong alignment on ABPT_Driver_C_Is_Hoverboarder_Form");
static_assert(sizeof(ABPT_Driver_C_Is_Hoverboarder_Form) == 0x00000C, "Wrong size on ABPT_Driver_C_Is_Hoverboarder_Form");
static_assert(offsetof(ABPT_Driver_C_Is_Hoverboarder_Form, bHoverboarderForm) == 0x000000, "Member 'ABPT_Driver_C_Is_Hoverboarder_Form::bHoverboarderForm' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_Is_Hoverboarder_Form, CallFunc_GetRidingType_Out_RidingType) == 0x000004, "Member 'ABPT_Driver_C_Is_Hoverboarder_Form::CallFunc_GetRidingType_Out_RidingType' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_Is_Hoverboarder_Form, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'ABPT_Driver_C_Is_Hoverboarder_Form::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.KawaiiPhysicsLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_KawaiiPhysicsLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              KawaiiPhysicsLayer_0;                              // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_KawaiiPhysicsLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_KawaiiPhysicsLayer");
static_assert(sizeof(ABPT_Driver_C_KawaiiPhysicsLayer) == 0x000020, "Wrong size on ABPT_Driver_C_KawaiiPhysicsLayer");
static_assert(offsetof(ABPT_Driver_C_KawaiiPhysicsLayer, InPose) == 0x000000, "Member 'ABPT_Driver_C_KawaiiPhysicsLayer::InPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_KawaiiPhysicsLayer, KawaiiPhysicsLayer_0) == 0x000010, "Member 'ABPT_Driver_C_KawaiiPhysicsLayer::KawaiiPhysicsLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.LipSyncAnimationLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_LipSyncAnimationLayer final
{
public:
	struct FPoseLink                              InPose_1;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LipSyncAnimationLayer_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_LipSyncAnimationLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_LipSyncAnimationLayer");
static_assert(sizeof(ABPT_Driver_C_LipSyncAnimationLayer) == 0x000020, "Wrong size on ABPT_Driver_C_LipSyncAnimationLayer");
static_assert(offsetof(ABPT_Driver_C_LipSyncAnimationLayer, InPose_1) == 0x000000, "Member 'ABPT_Driver_C_LipSyncAnimationLayer::InPose_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_LipSyncAnimationLayer, LipSyncAnimationLayer_0) == 0x000010, "Member 'ABPT_Driver_C_LipSyncAnimationLayer::LipSyncAnimationLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.MachineItemHoldBlendLeft
// 0x0030 (0x0030 - 0x0000)
struct ABPT_Driver_C_MachineItemHoldBlendLeft final
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LeftHoldPose;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MachineItemHoldBlendLeft_0;                        // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_MachineItemHoldBlendLeft) == 0x000008, "Wrong alignment on ABPT_Driver_C_MachineItemHoldBlendLeft");
static_assert(sizeof(ABPT_Driver_C_MachineItemHoldBlendLeft) == 0x000030, "Wrong size on ABPT_Driver_C_MachineItemHoldBlendLeft");
static_assert(offsetof(ABPT_Driver_C_MachineItemHoldBlendLeft, BasePose) == 0x000000, "Member 'ABPT_Driver_C_MachineItemHoldBlendLeft::BasePose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MachineItemHoldBlendLeft, LeftHoldPose) == 0x000010, "Member 'ABPT_Driver_C_MachineItemHoldBlendLeft::LeftHoldPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MachineItemHoldBlendLeft, MachineItemHoldBlendLeft_0) == 0x000020, "Member 'ABPT_Driver_C_MachineItemHoldBlendLeft::MachineItemHoldBlendLeft_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.MachineItemHoldBlendRight
// 0x0030 (0x0030 - 0x0000)
struct ABPT_Driver_C_MachineItemHoldBlendRight final
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LeftHoldPose;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MachineItemHoldBlendRight_0;                       // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_MachineItemHoldBlendRight) == 0x000008, "Wrong alignment on ABPT_Driver_C_MachineItemHoldBlendRight");
static_assert(sizeof(ABPT_Driver_C_MachineItemHoldBlendRight) == 0x000030, "Wrong size on ABPT_Driver_C_MachineItemHoldBlendRight");
static_assert(offsetof(ABPT_Driver_C_MachineItemHoldBlendRight, BasePose) == 0x000000, "Member 'ABPT_Driver_C_MachineItemHoldBlendRight::BasePose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MachineItemHoldBlendRight, LeftHoldPose) == 0x000010, "Member 'ABPT_Driver_C_MachineItemHoldBlendRight::LeftHoldPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MachineItemHoldBlendRight, MachineItemHoldBlendRight_0) == 0x000020, "Member 'ABPT_Driver_C_MachineItemHoldBlendRight::MachineItemHoldBlendRight_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.MenuFacialOverride
// 0x0048 (0x0048 - 0x0000)
struct ABPT_Driver_C_MenuFacialOverride final
{
public:
	struct FPoseLink                              MenuFinalPose;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          InPlayingMontage;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              MenuDefaltFace;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MenuOverrideFace;                                  // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MenuFacialOverride_0;                              // 0x0038(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_MenuFacialOverride) == 0x000008, "Wrong alignment on ABPT_Driver_C_MenuFacialOverride");
static_assert(sizeof(ABPT_Driver_C_MenuFacialOverride) == 0x000048, "Wrong size on ABPT_Driver_C_MenuFacialOverride");
static_assert(offsetof(ABPT_Driver_C_MenuFacialOverride, MenuFinalPose) == 0x000000, "Member 'ABPT_Driver_C_MenuFacialOverride::MenuFinalPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MenuFacialOverride, InPlayingMontage) == 0x000010, "Member 'ABPT_Driver_C_MenuFacialOverride::InPlayingMontage' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MenuFacialOverride, MenuDefaltFace) == 0x000018, "Member 'ABPT_Driver_C_MenuFacialOverride::MenuDefaltFace' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MenuFacialOverride, MenuOverrideFace) == 0x000028, "Member 'ABPT_Driver_C_MenuFacialOverride::MenuOverrideFace' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_MenuFacialOverride, MenuFacialOverride_0) == 0x000038, "Member 'ABPT_Driver_C_MenuFacialOverride::MenuFacialOverride_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.ScaleFaceLayer
// 0x0028 (0x0028 - 0x0000)
struct ABPT_Driver_C_ScaleFaceLayer final
{
public:
	struct FPoseLink                              InFaceOverride;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bPlayMontage;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoneScaleFaceType                            InStateMachineFaceType;                            // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoneScaleFaceType                            InMontageFaceType;                                 // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              ScaleFaceLayer_0;                                  // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_ScaleFaceLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_ScaleFaceLayer");
static_assert(sizeof(ABPT_Driver_C_ScaleFaceLayer) == 0x000028, "Wrong size on ABPT_Driver_C_ScaleFaceLayer");
static_assert(offsetof(ABPT_Driver_C_ScaleFaceLayer, InFaceOverride) == 0x000000, "Member 'ABPT_Driver_C_ScaleFaceLayer::InFaceOverride' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ScaleFaceLayer, bPlayMontage) == 0x000010, "Member 'ABPT_Driver_C_ScaleFaceLayer::bPlayMontage' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ScaleFaceLayer, InStateMachineFaceType) == 0x000011, "Member 'ABPT_Driver_C_ScaleFaceLayer::InStateMachineFaceType' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ScaleFaceLayer, InMontageFaceType) == 0x000012, "Member 'ABPT_Driver_C_ScaleFaceLayer::InMontageFaceType' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_ScaleFaceLayer, ScaleFaceLayer_0) == 0x000018, "Member 'ABPT_Driver_C_ScaleFaceLayer::ScaleFaceLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.StartingWheelSpinLayer
// 0x0020 (0x0020 - 0x0000)
struct ABPT_Driver_C_StartingWheelSpinLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              StartingWheelSpinLayer_0;                          // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABPT_Driver_C_StartingWheelSpinLayer) == 0x000008, "Wrong alignment on ABPT_Driver_C_StartingWheelSpinLayer");
static_assert(sizeof(ABPT_Driver_C_StartingWheelSpinLayer) == 0x000020, "Wrong size on ABPT_Driver_C_StartingWheelSpinLayer");
static_assert(offsetof(ABPT_Driver_C_StartingWheelSpinLayer, InPose) == 0x000000, "Member 'ABPT_Driver_C_StartingWheelSpinLayer::InPose' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_StartingWheelSpinLayer, StartingWheelSpinLayer_0) == 0x000010, "Member 'ABPT_Driver_C_StartingWheelSpinLayer::StartingWheelSpinLayer_0' has a wrong offset!");

// Function ABPT_Driver.ABPT_Driver_C.GetRidingType
// 0x000C (0x000C - 0x0000)
struct ABPT_Driver_C_GetRidingType final
{
public:
	int32                                         Out_RidingType;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleDisplayMode                           CallFunc_GetRideableDisplayMode_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetRideableStatusType_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleType                                  CallFunc_GetRideableType_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABPT_Driver_C_GetRidingType) == 0x000004, "Wrong alignment on ABPT_Driver_C_GetRidingType");
static_assert(sizeof(ABPT_Driver_C_GetRidingType) == 0x00000C, "Wrong size on ABPT_Driver_C_GetRidingType");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, Out_RidingType) == 0x000000, "Member 'ABPT_Driver_C_GetRidingType::Out_RidingType' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_GetRideableDisplayMode_ReturnValue) == 0x000004, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_GetRideableDisplayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_GetRideableStatusType_ReturnValue) == 0x000005, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_GetRideableStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_GetRideableType_ReturnValue) == 0x000008, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_GetRideableType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABPT_Driver_C_GetRidingType, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'ABPT_Driver_C_GetRidingType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

