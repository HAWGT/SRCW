#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GadgetCustomize2Sequence

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GadgetCustomize2Sequence.BP_GadgetCustomize2Sequence_C
// 0x0070 (0x03E8 - 0x0378)
class ABP_GadgetCustomize2Sequence_C final : public AGadgetCustomize2Sequence
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_GadgetCustomize2InitState_C*       BPC_GadgetCustomize2InitState;                     // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_GadgetCustomize2SelectState_C*     BPC_GadgetCustomize2SelectState;                   // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerNum;                                         // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetCustomizeSelectMode                    SelectMode;                                        // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMessageBarVisible;                              // 0x0395(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDirty;                                          // 0x0396(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397[0x1];                                      // 0x0397(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateUIData                     PrevSelectedGadgetPlateData;                       // 0x0398(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGadgetPlateUIData                     CurrentSelectedGadgetPlateData;                    // 0x03C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_GadgetCustomize2Sequence(int32 EntryPoint);
	void Exit();
	void GetPlayerNum(int32* OutPlayerNum);
	void GetSelectMode(EGadgetCustomizeSelectMode* OutSelectMode);
	void IsDirty(bool* bOutIsDirty);
	void IsMessageBarVisible(bool* bOutIsVisible);
	void OnFinalize();
	void OnInitialize();
	void SetDirty(bool bInIsDirty);
	void Setup(int32 InPlayerNum, EGadgetCustomizeSelectMode InSelectMode, bool bIsMessageBarVisible_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GadgetCustomize2Sequence_C">();
	}
	static class ABP_GadgetCustomize2Sequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GadgetCustomize2Sequence_C>();
	}
};
static_assert(alignof(ABP_GadgetCustomize2Sequence_C) == 0x000008, "Wrong alignment on ABP_GadgetCustomize2Sequence_C");
static_assert(sizeof(ABP_GadgetCustomize2Sequence_C) == 0x0003E8, "Wrong size on ABP_GadgetCustomize2Sequence_C");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, UberGraphFrame) == 0x000378, "Member 'ABP_GadgetCustomize2Sequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, BPC_GadgetCustomize2InitState) == 0x000380, "Member 'ABP_GadgetCustomize2Sequence_C::BPC_GadgetCustomize2InitState' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, BPC_GadgetCustomize2SelectState) == 0x000388, "Member 'ABP_GadgetCustomize2Sequence_C::BPC_GadgetCustomize2SelectState' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, PlayerNum) == 0x000390, "Member 'ABP_GadgetCustomize2Sequence_C::PlayerNum' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, SelectMode) == 0x000394, "Member 'ABP_GadgetCustomize2Sequence_C::SelectMode' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, bIsMessageBarVisible) == 0x000395, "Member 'ABP_GadgetCustomize2Sequence_C::bIsMessageBarVisible' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, bIsDirty) == 0x000396, "Member 'ABP_GadgetCustomize2Sequence_C::bIsDirty' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, PrevSelectedGadgetPlateData) == 0x000398, "Member 'ABP_GadgetCustomize2Sequence_C::PrevSelectedGadgetPlateData' has a wrong offset!");
static_assert(offsetof(ABP_GadgetCustomize2Sequence_C, CurrentSelectedGadgetPlateData) == 0x0003C0, "Member 'ABP_GadgetCustomize2Sequence_C::CurrentSelectedGadgetPlateData' has a wrong offset!");

}

