#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPT_MenuDriver

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "ABPT_MenuDriver_structs.hpp"
#include "UnionRun_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABPT_MenuDriver.ABPT_MenuDriver_C
// 0x2160 (0x25B0 - 0x0450)
#pragma pack(push, 0x1)
class alignas(0x10) UABPT_MenuDriver_C : public UMenuDriverAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABPT_MenuDriver::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;              // 0x0458(0x0004)(HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0460(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0468(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0470(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_13;                  // 0x0490(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x0548(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_12;                  // 0x0568(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x0620(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_11;                  // 0x0640(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x06F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_10;                  // 0x0718(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_9;                   // 0x07D0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0888(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_8;                   // 0x08A8(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x0960(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0A18(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x0A38(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x0AF0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0BA8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0BC8(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0C80(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0D38(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0D58(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0E10(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0EC8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0F80(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0FA0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0FC0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0FE0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1108(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1230(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1358(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x13A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x13C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x13F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1490(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x14B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x14E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1528(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1548(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1590(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x15B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x15F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1618(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1660(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1680(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x16C8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x16E8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x17B0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x18A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x18D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x18F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1948(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1970(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x19B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x19D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1A20(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1A40(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1A88(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1AA8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1AF0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1B10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1B58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1B78(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1C40(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1C88(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x1CB0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1D78(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1DF8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1E20(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1E68(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1E90(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1F10(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1F38(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1F60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1FA8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1FC8(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2090(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x20B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x20E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2108(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2130(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2158(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2180(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x21A8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x21D0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2218(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2238(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2280(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x22A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x22E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2308(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2350(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2370(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x23B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x23D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2420(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2440(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2508(0x0048)()
	bool                                          __CustomProperty_InPlayingMontage_E83F937849C9FE4F010A5CA7F7FA61C9; // 0x2550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBoneControl;                                    // 0x2551(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2552[0x6];                                     // 0x2552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NeckRotation;                                      // 0x2558(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SpineRotation;                                     // 0x2570(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EMenuDriverAnimationStateId                   StateId;                                           // 0x2588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2589[0x3];                                     // 0x2589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimIndex;                                         // 0x258C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlendRemainTime;                                   // 0x2590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableHoverCharaSelect;                          // 0x2598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDriveIdleLowLoop;                                // 0x2599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayFaceMontage;                                 // 0x259A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259B[0x1];                                     // 0x259B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendInTime;                                       // 0x259C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x25A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_CrownOff();
	void AnimNotify_CrownOn();
	void AnimNotify_OnBlendEndIdle();
	void AnimNotify_OnBlendStartIdle();
	void AnimNotify_OnStartIdle();
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void BlueprintLinkedAnimationLayersInitialized();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_BlendListByBool_5088D58A4E80CBC8CDB193BD89C5CC0C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_BlendListByBool_8C587C364C633026BE24D9A7A5A52A25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_02F607B8472A99669C3C1B9583D89E25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_14D008794C4705C58F32B99B778F20F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_277043BB40A21DD8D9448E96C8BC0CC0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_29E5A232495793ADF3DF5C89BA94DC8F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_2C3F23934933A3B1D3A93D859D9D37EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_313C62EF40E5A315ADF7CA9E3D2CC8DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_3668CBEE4029AD3DB93906B2043F1053();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_3AA5D5324C723DEEDE8ADD824EB66181();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_4EBE7456427B6FC718CE9BA587618118();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_50611E7542877B40F9D2EC91EE238792();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_53B3BAA8401BF281EA00E292EBA63B61();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_58CE2EF244C86C1FEE5FB881B9DA9D50();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_5AD8FB42493AFFB0CA79FBAF24B1C8F5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_A731667A4C868DE3E54C0A9341B5855E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_B428E3D44641D760FDAD1195C09A0C79();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_B68061454725C02F5F7632A6D2F72DCF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_SequencePlayer_E4E70CAB472FD32D9C394BB738197995();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_00E0F6F641E7D98B858BAD8A0EAC6B55();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_0B6629D145C6E21EFE9E7BBC78C37D3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_0F97B4094585BD61A06EE38FE557766C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_18FEA086492C23336BFA959DE44655DE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_2608800147CF8AAD58FA709D40A3A644();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_260967B144CF98076858C8A8140ADA7E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_36960FAD4DD53F40297898B5B37670D9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_44FFF7B3432B896C1B68F390646E4303();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_5007209C4821574CCC0C3AB7E349A1E7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_562D3707460CBCB6D121FDA527A086C9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_621079534C819E7ED9F5E8AED1CF058C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_77A7EE6C49BB53F0D2FFCCB42D587FAB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_7EA110F347AD9DC97F42FBBE76EE7DCB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_A9DA30B9445956158D270A83E5212E22();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_B49D6E7E4D52F69DA0FA3CBAED115E80();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_B7745F784D977B78A57A6088C9376F21();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_BF83C4C7479804AB9D5173BF5039CD33();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_D2ED97F4492D1A4D0A51C9B15E0B8AB2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_DAD964144BAA574C444113B7AEC752AC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_DF284DEE4E82C3BA078DD892F577F6D4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_F15275D14329E3076333B7A9999D015A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_F25F340E4BE1EB3E0D8B72B507FF511C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_FD3386794FD35EE9FFFDBA80E2237D8F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABPT_MenuDriver_AnimGraphNode_TransitionResult_FEC21A1E4CA89037893459BC38FD5F2F();
	void ExecuteUbergraph_ABPT_MenuDriver(int32 EntryPoint);
	void Get_Animation_State_Id(EMenuDriverAnimationStateId* StateId_0);
	void GetLinkedAnimLayerClass(class UClass** OutAnimInstance);
	void GetUseBoneControl(bool* Output_Get);
	void HoverboardControlRogLayer(const struct FPoseLink& HoverboardPose, struct FPoseLink* HoverboardControlRogLayer_0);
	void HoverboardItemHoldBlendLeft(const struct FPoseLink& BasePose, const struct FPoseLink& LeftHoldPose, struct FPoseLink* HoverboardItemHoldBlendLeft_0);
	void HoverboardItemHoldBlendRight(const struct FPoseLink& BasePose, const struct FPoseLink& RightHoldPose, struct FPoseLink* HoverboardItemHoldBlendRight_0);
	void Is_Hoverboarder_Form(bool* bHoverboarderForm);
	void KawaiiPhysicsLayer(const struct FPoseLink& InPose, struct FPoseLink* KawaiiPhysicsLayer_0);
	void MachineItemHoldBlendLeft(const struct FPoseLink& BasePose, const struct FPoseLink& LeftHoldPose, struct FPoseLink* MachineItemHoldBlendLeft_0);
	void MachineItemHoldBlendRight(const struct FPoseLink& BasePose, const struct FPoseLink& LeftHoldPose, struct FPoseLink* MachineItemHoldBlendRight_0);
	void MenuFacialOverride(const struct FPoseLink& MenuFinalPose, bool InPlayingMontage, const struct FPoseLink& MenuDefaltFace, const struct FPoseLink& MenuOverrideFace, struct FPoseLink* MenuFacialOverride_0);
	void Refresh();
	void ScaleFaceLayer(const struct FPoseLink& InFaceOverride, bool bPlayMontage, EBoneScaleFaceType InStateMachineFaceType, EBoneScaleFaceType InMontageFaceType, struct FPoseLink* ScaleFaceLayer_0);
	void Set_Animation_State_Id(EMenuDriverAnimationStateId StateId_0);
	void Set_Is_Drive_Idle_Low_Loop(bool IsDriveIdleLowLoop_0);
	void Set_Playing_Face_Montage(bool IsPlayingMontage);
	void SetAnimIndex(int32 AnimIndex_0);
	void SetBoneRotation(const struct FRotator& NeckRotation_0, const struct FRotator& SpineRotation_0);
	void SetUseBoneControl(bool UseBoneControl_0);

	void GetRidingType(int32* Out_RidingType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABPT_MenuDriver_C">();
	}
	static class UABPT_MenuDriver_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABPT_MenuDriver_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UABPT_MenuDriver_C) == 0x000010, "Wrong alignment on UABPT_MenuDriver_C");
static_assert(sizeof(UABPT_MenuDriver_C) == 0x0025B0, "Wrong size on UABPT_MenuDriver_C");
static_assert(offsetof(UABPT_MenuDriver_C, UberGraphFrame) == 0x000450, "Member 'UABPT_MenuDriver_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, __AnimBlueprintMutables) == 0x000458, "Member 'UABPT_MenuDriver_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimBlueprintExtension_PropertyAccess) == 0x000460, "Member 'UABPT_MenuDriver_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimBlueprintExtension_Base) == 0x000468, "Member 'UABPT_MenuDriver_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_8) == 0x000470, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_13) == 0x000490, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_13' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_7) == 0x000548, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_12) == 0x000568, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_12' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_6) == 0x000620, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_11) == 0x000640, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_11' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_5) == 0x0006F8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_10) == 0x000718, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_10' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_9) == 0x0007D0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_9' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_4) == 0x000888, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_8) == 0x0008A8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_8' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_7) == 0x000960, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_3) == 0x000A18, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_6) == 0x000A38, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_5) == 0x000AF0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_2) == 0x000BA8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_4) == 0x000BC8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_3) == 0x000C80, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root_1) == 0x000D38, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_2) == 0x000D58, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose_1) == 0x000E10, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedInputPose) == 0x000EC8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Root) == 0x000F80, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_ComponentToLocalSpace) == 0x000FA0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LocalToComponentSpace) == 0x000FC0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_ModifyBone_2) == 0x000FE0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_ModifyBone_1) == 0x001108, "Member 'UABPT_MenuDriver_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_ModifyBone) == 0x001230, "Member 'UABPT_MenuDriver_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_BlendListByBool_2) == 0x001358, "Member 'UABPT_MenuDriver_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_23) == 0x0013A0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_22) == 0x0013C8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_21) == 0x0013F0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_20) == 0x001418, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_19) == 0x001440, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_18) == 0x001468, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_17) == 0x001490, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_16) == 0x0014B8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_16) == 0x0014E0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_16) == 0x001528, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_15) == 0x001548, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_15) == 0x001590, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_14) == 0x0015B0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_14) == 0x0015F8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_13) == 0x001618, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_13) == 0x001660, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_12) == 0x001680, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_12) == 0x0016C8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateMachine_3) == 0x0016E8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SaveCachedPose_2) == 0x0017B0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_15) == 0x001830, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_14) == 0x001858, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_13) == 0x001880, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_12) == 0x0018A8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_11) == 0x0018D0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_10) == 0x0018F8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_9) == 0x001920, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_8) == 0x001948, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_11) == 0x001970, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_11) == 0x0019B8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_10) == 0x0019D8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_10) == 0x001A20, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_9) == 0x001A40, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_9) == 0x001A88, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_8) == 0x001AA8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_8) == 0x001AF0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_7) == 0x001B10, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_7) == 0x001B58, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateMachine_2) == 0x001B78, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_BlendListByBool_1) == 0x001C40, "Member 'UABPT_MenuDriver_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_UseCachedPose_4) == 0x001C88, "Member 'UABPT_MenuDriver_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_LinkedAnimLayer) == 0x001CB0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SaveCachedPose_1) == 0x001D78, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_UseCachedPose_3) == 0x001DF8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_Slot) == 0x001E20, "Member 'UABPT_MenuDriver_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_UseCachedPose_2) == 0x001E68, "Member 'UABPT_MenuDriver_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SaveCachedPose) == 0x001E90, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_UseCachedPose_1) == 0x001F10, "Member 'UABPT_MenuDriver_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_UseCachedPose) == 0x001F38, "Member 'UABPT_MenuDriver_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_6) == 0x001F60, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_6) == 0x001FA8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateMachine_1) == 0x001FC8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_7) == 0x002090, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_6) == 0x0020B8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_5) == 0x0020E0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_4) == 0x002108, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_3) == 0x002130, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_2) == 0x002158, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult_1) == 0x002180, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_TransitionResult) == 0x0021A8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_5) == 0x0021D0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_5) == 0x002218, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_4) == 0x002238, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_4) == 0x002280, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_3) == 0x0022A0, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_3) == 0x0022E8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_2) == 0x002308, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_2) == 0x002350, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer_1) == 0x002370, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult_1) == 0x0023B8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_SequencePlayer) == 0x0023D8, "Member 'UABPT_MenuDriver_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateResult) == 0x002420, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_StateMachine) == 0x002440, "Member 'UABPT_MenuDriver_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimGraphNode_BlendListByBool) == 0x002508, "Member 'UABPT_MenuDriver_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, __CustomProperty_InPlayingMontage_E83F937849C9FE4F010A5CA7F7FA61C9) == 0x002550, "Member 'UABPT_MenuDriver_C::__CustomProperty_InPlayingMontage_E83F937849C9FE4F010A5CA7F7FA61C9' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, UseBoneControl) == 0x002551, "Member 'UABPT_MenuDriver_C::UseBoneControl' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, NeckRotation) == 0x002558, "Member 'UABPT_MenuDriver_C::NeckRotation' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, SpineRotation) == 0x002570, "Member 'UABPT_MenuDriver_C::SpineRotation' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, StateId) == 0x002588, "Member 'UABPT_MenuDriver_C::StateId' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, AnimIndex) == 0x00258C, "Member 'UABPT_MenuDriver_C::AnimIndex' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, BlendRemainTime) == 0x002590, "Member 'UABPT_MenuDriver_C::BlendRemainTime' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, IsEnableHoverCharaSelect) == 0x002598, "Member 'UABPT_MenuDriver_C::IsEnableHoverCharaSelect' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, IsDriveIdleLowLoop) == 0x002599, "Member 'UABPT_MenuDriver_C::IsDriveIdleLowLoop' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, IsPlayFaceMontage) == 0x00259A, "Member 'UABPT_MenuDriver_C::IsPlayFaceMontage' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, BlendInTime) == 0x00259C, "Member 'UABPT_MenuDriver_C::BlendInTime' has a wrong offset!");
static_assert(offsetof(UABPT_MenuDriver_C, BlendOutTime) == 0x0025A0, "Member 'UABPT_MenuDriver_C::BlendOutTime' has a wrong offset!");

}

