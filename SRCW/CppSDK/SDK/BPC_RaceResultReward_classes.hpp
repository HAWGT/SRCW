#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RaceResultReward

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_RaceResultReward.BPC_RaceResultReward_C
// 0x0020 (0x0128 - 0x0108)
class UBPC_RaceResultReward_C final : public URaceResultSequenceStateReward
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0108(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_RaceResultSequence_C*               OwnerSeq;                                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_FestaResult_PointReward_C*         FestaResultFlow;                                   // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          NomalInited;                                       // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnExitState();
	void OnUpdateState(float InDeltaTime);
	void OnInitState();
	void ExecuteUbergraph_BPC_RaceResultReward(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_RaceResultReward_C">();
	}
	static class UBPC_RaceResultReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_RaceResultReward_C>();
	}
};
static_assert(alignof(UBPC_RaceResultReward_C) == 0x000008, "Wrong alignment on UBPC_RaceResultReward_C");
static_assert(sizeof(UBPC_RaceResultReward_C) == 0x000128, "Wrong size on UBPC_RaceResultReward_C");
static_assert(offsetof(UBPC_RaceResultReward_C, UberGraphFrame) == 0x000108, "Member 'UBPC_RaceResultReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_RaceResultReward_C, OwnerSeq) == 0x000110, "Member 'UBPC_RaceResultReward_C::OwnerSeq' has a wrong offset!");
static_assert(offsetof(UBPC_RaceResultReward_C, FestaResultFlow) == 0x000118, "Member 'UBPC_RaceResultReward_C::FestaResultFlow' has a wrong offset!");
static_assert(offsetof(UBPC_RaceResultReward_C, NomalInited) == 0x000120, "Member 'UBPC_RaceResultReward_C::NomalInited' has a wrong offset!");

}

