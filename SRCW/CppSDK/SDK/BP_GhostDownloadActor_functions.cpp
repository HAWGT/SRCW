#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GhostDownloadActor

#include "Basic.hpp"

#include "BP_GhostDownloadActor_classes.hpp"
#include "BP_GhostDownloadActor_parameters.hpp"


namespace SDK
{

// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.BindDownloadEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::BindDownloadEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "BindDownloadEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.CreateErrorWindow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InMessage                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GhostDownloadActor_C::CreateErrorWindow(const class FText& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "CreateErrorWindow");

	Params::BP_GhostDownloadActor_C_CreateErrorWindow Parms{};

	Parms.InMessage = std::move(InMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.CreateLoadingWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::CreateLoadingWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "CreateLoadingWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.CreateServerErrorWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::CreateServerErrorWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "CreateServerErrorWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.DownloadFinish
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::DownloadFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "DownloadFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.EndCancelEntry
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::EndCancelEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "EndCancelEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.ExecuteUbergraph_BP_GhostDownloadActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::ExecuteUbergraph_BP_GhostDownloadActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "ExecuteUbergraph_BP_GhostDownloadActor");

	Params::BP_GhostDownloadActor_C_ExecuteUbergraph_BP_GhostDownloadActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.FailedDownloadEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::FailedDownloadEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "FailedDownloadEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.FinishDownloadEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutIsError                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::FinishDownloadEvent(bool OutIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "FinishDownloadEvent");

	Params::BP_GhostDownloadActor_C_FinishDownloadEvent Parms{};

	Parms.OutIsError = OutIsError;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.OnCancelDownload
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::OnCancelDownload(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "OnCancelDownload");

	Params::BP_GhostDownloadActor_C_OnCancelDownload Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.OnDecideErrorWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::OnDecideErrorWindow(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "OnDecideErrorWindow");

	Params::BP_GhostDownloadActor_C_OnDecideErrorWindow Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "ReceiveEndPlay");

	Params::BP_GhostDownloadActor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "ReceiveTick");

	Params::BP_GhostDownloadActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.StartCancelEntry
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::StartCancelEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "StartCancelEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.StartGhostDownload
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    UserId                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const ESpeedClassId                     SpeedClass                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EStageId                          StageId                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DateTime                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RankingName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GhostDownloadActor_C::StartGhostDownload(const class FString& UserId, const ESpeedClassId SpeedClass, const EStageId StageId, const class FString& DateTime, const class FString& RankingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "StartGhostDownload");

	Params::BP_GhostDownloadActor_C_StartGhostDownload Parms{};

	Parms.UserId = std::move(UserId);
	Parms.SpeedClass = SpeedClass;
	Parms.StageId = StageId;
	Parms.DateTime = std::move(DateTime);
	Parms.RankingName = std::move(RankingName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostDownloadActor.BP_GhostDownloadActor_C.UnbindDownloadEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostDownloadActor_C::UnbindDownloadEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostDownloadActor_C", "UnbindDownloadEvent");

	UObject::ProcessEvent(Func, nullptr);
}

}

