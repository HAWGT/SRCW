#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_Sub_FairPlayGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Friend_Sub_FairPlayGauge.WBP_Friend_Sub_FairPlayGauge_C
// 0x00B0 (0x0390 - 0x02E0)
class UWBP_Friend_Sub_FairPlayGauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 base;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkBlue;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkRed_Base;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkRed_Blink;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkYellow_Base;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkYellow_Blink;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MLC_BarGauge;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      TXT_NumPoint;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      TXT_NumPoint_Now;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Mark;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   NumberSeparator;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           GaugeColorBlue;                                    // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GaugeColorYellow;                                  // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GaugeColorRed;                                     // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ColorBorderPoint;                                  // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge(int32 EntryPoint);
	void Get_Point_Color_Index(int32 InFairPlayPoint, int32* OutColorIndex);
	void SetGaugeColor(int32 InColorIndex);
	void Setup(int32 InPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Friend_Sub_FairPlayGauge_C">();
	}
	static class UWBP_Friend_Sub_FairPlayGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Friend_Sub_FairPlayGauge_C>();
	}
};
static_assert(alignof(UWBP_Friend_Sub_FairPlayGauge_C) == 0x000008, "Wrong alignment on UWBP_Friend_Sub_FairPlayGauge_C");
static_assert(sizeof(UWBP_Friend_Sub_FairPlayGauge_C) == 0x000390, "Wrong size on UWBP_Friend_Sub_FairPlayGauge_C");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, base) == 0x0002E8, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, Frame) == 0x0002F0, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::Frame' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, MarkBlue) == 0x0002F8, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::MarkBlue' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, MarkRed_Base) == 0x000300, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::MarkRed_Base' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, MarkRed_Blink) == 0x000308, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::MarkRed_Blink' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, MarkYellow_Base) == 0x000310, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::MarkYellow_Base' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, MarkYellow_Blink) == 0x000318, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::MarkYellow_Blink' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, MLC_BarGauge) == 0x000320, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::MLC_BarGauge' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, TXT_NumPoint) == 0x000328, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::TXT_NumPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, TXT_NumPoint_Now) == 0x000330, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::TXT_NumPoint_Now' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, WidgetSwitcher_Mark) == 0x000338, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::WidgetSwitcher_Mark' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, NumberSeparator) == 0x000340, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::NumberSeparator' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, GaugeColorBlue) == 0x000350, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::GaugeColorBlue' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, GaugeColorYellow) == 0x000360, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::GaugeColorYellow' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, GaugeColorRed) == 0x000370, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::GaugeColorRed' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_FairPlayGauge_C, ColorBorderPoint) == 0x000380, "Member 'UWBP_Friend_Sub_FairPlayGauge_C::ColorBorderPoint' has a wrong offset!");

}

