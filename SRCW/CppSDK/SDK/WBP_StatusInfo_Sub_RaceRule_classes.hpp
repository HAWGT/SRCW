#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatusInfo_Sub_RaceRule

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StatusInfo_Sub_RaceRule.WBP_StatusInfo_Sub_RaceRule_C
// 0x0060 (0x0340 - 0x02E0)
class UWBP_StatusInfo_Sub_RaceRule_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 base;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlag_Left;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlag_Right;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusInfo_Sub_RaceRuleTable_C*    WBP_StatusInfo_Sub_RaceRuleTable_01;               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusInfo_Sub_RaceRuleTable_C*    WBP_StatusInfo_Sub_RaceRuleTable_02;               // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusInfo_Sub_RaceRuleTable_C*    WBP_StatusInfo_Sub_RaceRuleTable_03;               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusInfo_Sub_RaceRuleTable_C*    WBP_StatusInfo_Sub_RaceRuleTable_04;               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 RuleIndex)> OnMouseHovered;                                  // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 RuleIndex)> OnMouseClicked;                                  // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Construct();
	void ExecuteUbergraph_WBP_StatusInfo_Sub_RaceRule(int32 EntryPoint);
	void OnClicked_Rule1();
	void OnClicked_Rule2();
	void OnClicked_Rule3();
	void OnClicked_Rule4();
	void OnHovered_Rule1();
	void OnHovered_Rule2();
	void OnHovered_Rule3();
	void OnHovered_Rule4();
	void SetSelect(int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StatusInfo_Sub_RaceRule_C">();
	}
	static class UWBP_StatusInfo_Sub_RaceRule_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StatusInfo_Sub_RaceRule_C>();
	}
};
static_assert(alignof(UWBP_StatusInfo_Sub_RaceRule_C) == 0x000008, "Wrong alignment on UWBP_StatusInfo_Sub_RaceRule_C");
static_assert(sizeof(UWBP_StatusInfo_Sub_RaceRule_C) == 0x000340, "Wrong size on UWBP_StatusInfo_Sub_RaceRule_C");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, base) == 0x0002E8, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, RaceFlag_Left) == 0x0002F0, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::RaceFlag_Left' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, RaceFlag_Right) == 0x0002F8, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::RaceFlag_Right' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, WBP_StatusInfo_Sub_RaceRuleTable_01) == 0x000300, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::WBP_StatusInfo_Sub_RaceRuleTable_01' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, WBP_StatusInfo_Sub_RaceRuleTable_02) == 0x000308, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::WBP_StatusInfo_Sub_RaceRuleTable_02' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, WBP_StatusInfo_Sub_RaceRuleTable_03) == 0x000310, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::WBP_StatusInfo_Sub_RaceRuleTable_03' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, WBP_StatusInfo_Sub_RaceRuleTable_04) == 0x000318, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::WBP_StatusInfo_Sub_RaceRuleTable_04' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, OnMouseHovered) == 0x000320, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::OnMouseHovered' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRule_C, OnMouseClicked) == 0x000330, "Member 'UWBP_StatusInfo_Sub_RaceRule_C::OnMouseClicked' has a wrong offset!");

}

