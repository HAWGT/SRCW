#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_SpeedNum

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_SpeedNum.WBP_Race_HUD_Sub_SpeedNum_C
// 0x0090 (0x0370 - 0x02E0)
class UWBP_Race_HUD_Sub_SpeedNum_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 base;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Eff;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_Eff;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Num_100;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NUM_001;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NUM_010;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Speed;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        SpeedometerScale_Normal;                           // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedometerScale_High;                             // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedometerScale_Sonic;                            // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedometerScale_SuperSonic;                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                SpeedometerScale;                                  // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSoundHandle>                   SoundHandle;                                       // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  SoundHandleFlag;                                   // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_SpeedNum(int32 EntryPoint);
	void PauseSound(bool IsPause);
	void SetIntNum(class UImage* Image, int32 Num);
	void SetRingNum(int32 RingNum);
	void SetSpeedKMPH(int32 SpeedKMPH);
	void SetSpeedScale(int32 Speed, int32* newParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_SpeedNum_C">();
	}
	static class UWBP_Race_HUD_Sub_SpeedNum_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_SpeedNum_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_SpeedNum_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_SpeedNum_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_SpeedNum_C) == 0x000370, "Wrong size on UWBP_Race_HUD_Sub_SpeedNum_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, base) == 0x0002E8, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, Base_Eff) == 0x0002F0, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::Base_Eff' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, CircularThrobber_Eff) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::CircularThrobber_Eff' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, Num_100) == 0x000300, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::Num_100' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, NUM_001) == 0x000308, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::NUM_001' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, NUM_010) == 0x000310, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::NUM_010' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, TXT_Speed) == 0x000318, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::TXT_Speed' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SpeedometerScale_Normal) == 0x000320, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SpeedometerScale_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SpeedometerScale_High) == 0x000328, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SpeedometerScale_High' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SpeedometerScale_Sonic) == 0x000330, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SpeedometerScale_Sonic' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SpeedometerScale_SuperSonic) == 0x000338, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SpeedometerScale_SuperSonic' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SpeedometerScale) == 0x000340, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SpeedometerScale' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SoundHandle) == 0x000350, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SoundHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_SpeedNum_C, SoundHandleFlag) == 0x000360, "Member 'UWBP_Race_HUD_Sub_SpeedNum_C::SoundHandleFlag' has a wrong offset!");

}

