#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_RuleCount

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_RuleCount.WBP_Race_HUD_Sub_RuleCount_C
// 0x0038 (0x0328 - 0x02F0)
class UWBP_Race_HUD_Sub_RuleCount_C final : public URaceUISubRuleCount
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 base;                                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_RuleIcon;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      NUM_Count;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_CountName;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   In_Text;                                           // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_RuleCount(int32 EntryPoint);
	void SetNewCount(int32 NewCuont);
	void SetNum(int32 NewNum);
	void SetupRule();
	void UpdateRuleCount(int32 RacerIndex);
	void UpdateRuleCountImpl(int32 RacerIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_RuleCount_C">();
	}
	static class UWBP_Race_HUD_Sub_RuleCount_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_RuleCount_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_RuleCount_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_RuleCount_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_RuleCount_C) == 0x000328, "Wrong size on UWBP_Race_HUD_Sub_RuleCount_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_RuleCount_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_Race_HUD_Sub_RuleCount_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_RuleCount_C, base) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_RuleCount_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_RuleCount_C, DSP_RuleIcon) == 0x000300, "Member 'UWBP_Race_HUD_Sub_RuleCount_C::DSP_RuleIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_RuleCount_C, NUM_Count) == 0x000308, "Member 'UWBP_Race_HUD_Sub_RuleCount_C::NUM_Count' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_RuleCount_C, TXT_CountName) == 0x000310, "Member 'UWBP_Race_HUD_Sub_RuleCount_C::TXT_CountName' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_RuleCount_C, In_Text) == 0x000318, "Member 'UWBP_Race_HUD_Sub_RuleCount_C::In_Text' has a wrong offset!");

}

