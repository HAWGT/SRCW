#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuSequence

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MenuSequence.BP_MenuSequence_C
// 0x0070 (0x0458 - 0x03E8)
class ABP_MenuSequence_C final : public AMenuSequence
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_MenuStateEnding_C*                 BPC_MenuStateEnding;                               // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStateInitialize_C*             BPC_MenuStateInitialize;                           // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_SaveAndLoadPlayLogState_C*         BPC_SaveAndLoadPlayLogState;                       // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_LoadAssets_C*                      BPC_LoadAssets;                                    // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_AppNet_C*                          BPC_AppNet;                                        // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStateTimeTrial_C*              BPC_MenuStateTimeTrial;                            // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStateTopMenu_C*                BPC_MenuStateTopMenu;                              // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStateOnline_C*                 BPC_MenuStateOnline;                               // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePatyRace_C*               BPC_MenuStatePatyRace;                             // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStateGrandPrix_C*              BPC_MenuStateGrandPrix;                            // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStateTitle_C*                  BPC_MenuStateTitle;                                // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AMenuPlayerController*                  MenuPlayerController;                              // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_FooterMenu_C*                      Footer;                                            // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MenuSequence(int32 EntryPoint);
	class UObject* GetFooter();
	void OnFinalize();
	void OnInitialize();
	void OnInviteConfirmWindowInEvent();
	void OnInviteConfirmWindowOutEvent(bool bResultYes);
	void OnReceiveInviteWindowCallback(bool ResultIsYes);
	void OnUpdate(float InDeltaTime);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuSequence_C">();
	}
	static class ABP_MenuSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MenuSequence_C>();
	}
};
static_assert(alignof(ABP_MenuSequence_C) == 0x000008, "Wrong alignment on ABP_MenuSequence_C");
static_assert(sizeof(ABP_MenuSequence_C) == 0x000458, "Wrong size on ABP_MenuSequence_C");
static_assert(offsetof(ABP_MenuSequence_C, UberGraphFrame) == 0x0003E8, "Member 'ABP_MenuSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateEnding) == 0x0003F0, "Member 'ABP_MenuSequence_C::BPC_MenuStateEnding' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateInitialize) == 0x0003F8, "Member 'ABP_MenuSequence_C::BPC_MenuStateInitialize' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_SaveAndLoadPlayLogState) == 0x000400, "Member 'ABP_MenuSequence_C::BPC_SaveAndLoadPlayLogState' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_LoadAssets) == 0x000408, "Member 'ABP_MenuSequence_C::BPC_LoadAssets' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_AppNet) == 0x000410, "Member 'ABP_MenuSequence_C::BPC_AppNet' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateTimeTrial) == 0x000418, "Member 'ABP_MenuSequence_C::BPC_MenuStateTimeTrial' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateTopMenu) == 0x000420, "Member 'ABP_MenuSequence_C::BPC_MenuStateTopMenu' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateOnline) == 0x000428, "Member 'ABP_MenuSequence_C::BPC_MenuStateOnline' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStatePatyRace) == 0x000430, "Member 'ABP_MenuSequence_C::BPC_MenuStatePatyRace' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateGrandPrix) == 0x000438, "Member 'ABP_MenuSequence_C::BPC_MenuStateGrandPrix' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, BPC_MenuStateTitle) == 0x000440, "Member 'ABP_MenuSequence_C::BPC_MenuStateTitle' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, MenuPlayerController) == 0x000448, "Member 'ABP_MenuSequence_C::MenuPlayerController' has a wrong offset!");
static_assert(offsetof(ABP_MenuSequence_C, Footer) == 0x000450, "Member 'ABP_MenuSequence_C::Footer' has a wrong offset!");

}

