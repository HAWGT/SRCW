#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ready_M1

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Ready_M1.WBP_Ready_M1_C.ExecuteUbergraph_WBP_Ready_M1
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsCheck;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0038(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_FooterMenu_Sub_ControllerCross_C*  K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Cross; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentGadgetIcon*                   CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GadgetIcon_C*                      K2Node_DynamicCast_AsWBP_Gadget_Icon;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_3;           // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentGadgetIcon*                   CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GadgetIcon_C*                      K2Node_DynamicCast_AsWBP_Gadget_Icon_1;            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1) == 0x000008, "Wrong alignment on WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1");
static_assert(sizeof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1) == 0x0000E8, "Wrong size on WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, EntryPoint) == 0x000000, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_Event_bIsCheck) == 0x000028, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_Event_bIsCheck' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_MakeLiteralText_ReturnValue) == 0x000038, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Cross) == 0x000068, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_DynamicCast_AsWBP_Footer_Menu_Sub_Controller_Cross' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_DynamicCast_AsWBP_Gadget_Icon) == 0x000088, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_DynamicCast_AsWBP_Gadget_Icon' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_CustomEvent_InVisibility) == 0x0000A0, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A4, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_DynamicCast_AsWBP_Gadget_Icon_1) == 0x0000D8, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_DynamicCast_AsWBP_Gadget_Icon_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E1, "Member 'WBP_Ready_M1_C_ExecuteUbergraph_WBP_Ready_M1::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.GadgetIconMouseEnable
// 0x0001 (0x0001 - 0x0000)
struct WBP_Ready_M1_C_GadgetIconMouseEnable final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_M1_C_GadgetIconMouseEnable) == 0x000001, "Wrong alignment on WBP_Ready_M1_C_GadgetIconMouseEnable");
static_assert(sizeof(WBP_Ready_M1_C_GadgetIconMouseEnable) == 0x000001, "Wrong size on WBP_Ready_M1_C_GadgetIconMouseEnable");
static_assert(offsetof(WBP_Ready_M1_C_GadgetIconMouseEnable, InVisibility) == 0x000000, "Member 'WBP_Ready_M1_C_GadgetIconMouseEnable::InVisibility' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Ready_M1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_M1_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Ready_M1_C_PreConstruct");
static_assert(sizeof(WBP_Ready_M1_C_PreConstruct) == 0x000001, "Wrong size on WBP_Ready_M1_C_PreConstruct");
static_assert(offsetof(WBP_Ready_M1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Ready_M1_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.SetReadyColor
// 0x0001 (0x0001 - 0x0000)
struct WBP_Ready_M1_C_SetReadyColor final
{
public:
	bool                                          bIsCheck;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_M1_C_SetReadyColor) == 0x000001, "Wrong alignment on WBP_Ready_M1_C_SetReadyColor");
static_assert(sizeof(WBP_Ready_M1_C_SetReadyColor) == 0x000001, "Wrong size on WBP_Ready_M1_C_SetReadyColor");
static_assert(offsetof(WBP_Ready_M1_C_SetReadyColor, bIsCheck) == 0x000000, "Member 'WBP_Ready_M1_C_SetReadyColor::bIsCheck' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.UpdateGadgetDetailWindowToSlotZero
// 0x0004 (0x0004 - 0x0000)
struct WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero) == 0x000004, "Wrong alignment on WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero");
static_assert(sizeof(WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero) == 0x000004, "Wrong size on WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero");
static_assert(offsetof(WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero, InPlayerIndex) == 0x000000, "Member 'WBP_Ready_M1_C_UpdateGadgetDetailWindowToSlotZero::InPlayerIndex' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.GetCharaMachineParamWindow
// 0x0020 (0x0020 - 0x0000)
struct WBP_Ready_M1_C_GetCharaMachineParamWindow final
{
public:
	TArray<class UCharaMachineParamWindow*>       OutCharaMachineParamWindows;                       // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UCharaMachineParamWindow*>       K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Ready_M1_C_GetCharaMachineParamWindow) == 0x000008, "Wrong alignment on WBP_Ready_M1_C_GetCharaMachineParamWindow");
static_assert(sizeof(WBP_Ready_M1_C_GetCharaMachineParamWindow) == 0x000020, "Wrong size on WBP_Ready_M1_C_GetCharaMachineParamWindow");
static_assert(offsetof(WBP_Ready_M1_C_GetCharaMachineParamWindow, OutCharaMachineParamWindows) == 0x000000, "Member 'WBP_Ready_M1_C_GetCharaMachineParamWindow::OutCharaMachineParamWindows' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_GetCharaMachineParamWindow, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_Ready_M1_C_GetCharaMachineParamWindow::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.GetGadgetPlateWindows
// 0x0020 (0x0020 - 0x0000)
struct WBP_Ready_M1_C_GetGadgetPlateWindows final
{
public:
	TArray<class UGadgetPlateWindow*>             OutGadgetPlateWindows;                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UGadgetPlateWindow*>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Ready_M1_C_GetGadgetPlateWindows) == 0x000008, "Wrong alignment on WBP_Ready_M1_C_GetGadgetPlateWindows");
static_assert(sizeof(WBP_Ready_M1_C_GetGadgetPlateWindows) == 0x000020, "Wrong size on WBP_Ready_M1_C_GetGadgetPlateWindows");
static_assert(offsetof(WBP_Ready_M1_C_GetGadgetPlateWindows, OutGadgetPlateWindows) == 0x000000, "Member 'WBP_Ready_M1_C_GetGadgetPlateWindows::OutGadgetPlateWindows' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_GetGadgetPlateWindows, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_Ready_M1_C_GetGadgetPlateWindows::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.GetReadyOptions
// 0x0020 (0x0020 - 0x0000)
struct WBP_Ready_M1_C_GetReadyOptions final
{
public:
	TArray<class UReadyOption*>                   OutReadyOptions;                                   // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UReadyOption*>                   K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Ready_M1_C_GetReadyOptions) == 0x000008, "Wrong alignment on WBP_Ready_M1_C_GetReadyOptions");
static_assert(sizeof(WBP_Ready_M1_C_GetReadyOptions) == 0x000020, "Wrong size on WBP_Ready_M1_C_GetReadyOptions");
static_assert(offsetof(WBP_Ready_M1_C_GetReadyOptions, OutReadyOptions) == 0x000000, "Member 'WBP_Ready_M1_C_GetReadyOptions::OutReadyOptions' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_GetReadyOptions, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_Ready_M1_C_GetReadyOptions::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_Ready_M1.WBP_Ready_M1_C.GetReadyWindowCharacterIcons
// 0x0020 (0x0020 - 0x0000)
struct WBP_Ready_M1_C_GetReadyWindowCharacterIcons final
{
public:
	TArray<class UReadyWindowCharacterIcon*>      OutReadyWindowCharacterIcons;                      // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UReadyWindowCharacterIcon*>      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Ready_M1_C_GetReadyWindowCharacterIcons) == 0x000008, "Wrong alignment on WBP_Ready_M1_C_GetReadyWindowCharacterIcons");
static_assert(sizeof(WBP_Ready_M1_C_GetReadyWindowCharacterIcons) == 0x000020, "Wrong size on WBP_Ready_M1_C_GetReadyWindowCharacterIcons");
static_assert(offsetof(WBP_Ready_M1_C_GetReadyWindowCharacterIcons, OutReadyWindowCharacterIcons) == 0x000000, "Member 'WBP_Ready_M1_C_GetReadyWindowCharacterIcons::OutReadyWindowCharacterIcons' has a wrong offset!");
static_assert(offsetof(WBP_Ready_M1_C_GetReadyWindowCharacterIcons, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_Ready_M1_C_GetReadyWindowCharacterIcons::K2Node_MakeArray_Array' has a wrong offset!");

}

