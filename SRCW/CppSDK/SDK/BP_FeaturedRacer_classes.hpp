#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FeaturedRacer

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"
#include "LevelSequence_classes.hpp"
#include "UnionLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FeaturedRacer.BP_FeaturedRacer_C
// 0x0040 (0x0378 - 0x0338)
class ABP_FeaturedRacer_C final : public ALevelSequenceActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FMovieSceneObjectBindingID             RacerBindingId;                                    // 0x0340(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFinishedPlay;                                    // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_RaceBefore_FeaturedRacer_C*        UI;                                                // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          StartSE;                                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_FeaturedRacer_SequencePlayer_K2Node_ComponentBoundEvent_0_OnMovieSceneSequencePlayerEvent__DelegateSignature();
	void ExecuteUbergraph_BP_FeaturedRacer(int32 EntryPoint);
	void Play(class ASceneDriver* In_SceneDriver, int32 In_RacerIndex);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FeaturedRacer_C">();
	}
	static class ABP_FeaturedRacer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FeaturedRacer_C>();
	}
};
static_assert(alignof(ABP_FeaturedRacer_C) == 0x000008, "Wrong alignment on ABP_FeaturedRacer_C");
static_assert(sizeof(ABP_FeaturedRacer_C) == 0x000378, "Wrong size on ABP_FeaturedRacer_C");
static_assert(offsetof(ABP_FeaturedRacer_C, UberGraphFrame) == 0x000338, "Member 'ABP_FeaturedRacer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FeaturedRacer_C, RacerBindingId) == 0x000340, "Member 'ABP_FeaturedRacer_C::RacerBindingId' has a wrong offset!");
static_assert(offsetof(ABP_FeaturedRacer_C, OnFinishedPlay) == 0x000358, "Member 'ABP_FeaturedRacer_C::OnFinishedPlay' has a wrong offset!");
static_assert(offsetof(ABP_FeaturedRacer_C, UI) == 0x000368, "Member 'ABP_FeaturedRacer_C::UI' has a wrong offset!");
static_assert(offsetof(ABP_FeaturedRacer_C, StartSE) == 0x000370, "Member 'ABP_FeaturedRacer_C::StartSE' has a wrong offset!");

}

