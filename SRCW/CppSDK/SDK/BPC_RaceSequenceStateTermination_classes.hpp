#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RaceSequenceStateTermination

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_RaceSequenceStateTermination.BPC_RaceSequenceStateTermination_C
// 0x0030 (0x0148 - 0x0118)
class UBPC_RaceSequenceStateTermination_C final : public URaceSequenceStateTermination
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0118(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnotherStageLotteryWheel*              NewVar;                                            // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<EStageId>                              New_Id;                                            // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUnionUILoadingDisplay*                 LoadingDisplay;                                    // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          In_End_Hide;                                       // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void NextCeremony();
	void BindOnLoadingEndAnimFinished();
	void SetSelectMode();
	void SetGrandPrixNextRaceSetting();
	void ConstructionScript();
	void StartOpenLevelToMenu();
	void StartMatchRace();
	void StartErrorHandling();
	void StartGrandPrix();
	void StartTimeTrial();
	void StartMiddleLoading(int32 InLoadingPhaseNum, bool bInLoadingProgressMode, bool bInEndHide);
	void StartParty();
	void OnInitState();
	void OnRaceTermination();
	void ExecuteUbergraph_BPC_RaceSequenceStateTermination(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_RaceSequenceStateTermination_C">();
	}
	static class UBPC_RaceSequenceStateTermination_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_RaceSequenceStateTermination_C>();
	}
};
static_assert(alignof(UBPC_RaceSequenceStateTermination_C) == 0x000008, "Wrong alignment on UBPC_RaceSequenceStateTermination_C");
static_assert(sizeof(UBPC_RaceSequenceStateTermination_C) == 0x000148, "Wrong size on UBPC_RaceSequenceStateTermination_C");
static_assert(offsetof(UBPC_RaceSequenceStateTermination_C, UberGraphFrame) == 0x000118, "Member 'UBPC_RaceSequenceStateTermination_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_RaceSequenceStateTermination_C, NewVar) == 0x000120, "Member 'UBPC_RaceSequenceStateTermination_C::NewVar' has a wrong offset!");
static_assert(offsetof(UBPC_RaceSequenceStateTermination_C, New_Id) == 0x000128, "Member 'UBPC_RaceSequenceStateTermination_C::New_Id' has a wrong offset!");
static_assert(offsetof(UBPC_RaceSequenceStateTermination_C, LoadingDisplay) == 0x000138, "Member 'UBPC_RaceSequenceStateTermination_C::LoadingDisplay' has a wrong offset!");
static_assert(offsetof(UBPC_RaceSequenceStateTermination_C, In_End_Hide) == 0x000140, "Member 'UBPC_RaceSequenceStateTermination_C::In_End_Hide' has a wrong offset!");

}

