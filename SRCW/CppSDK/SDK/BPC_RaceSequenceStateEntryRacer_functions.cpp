#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RaceSequenceStateEntryRacer

#include "Basic.hpp"

#include "BPC_RaceSequenceStateEntryRacer_classes.hpp"
#include "BPC_RaceSequenceStateEntryRacer_parameters.hpp"


namespace SDK
{

// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.CloseRaceRuleInfoUIForFriendMatch
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::CloseRaceRuleInfoUIForFriendMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "CloseRaceRuleInfoUIForFriendMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.GetOffsetTransformByStageId
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EStageId                                In_StageId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                In_Transform                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform*                      Out_Transform                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateEntryRacer_C::GetOffsetTransformByStageId(EStageId In_StageId, const struct FTransform& In_Transform, struct FTransform* Out_Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "GetOffsetTransformByStageId");

	Params::BPC_RaceSequenceStateEntryRacer_C_GetOffsetTransformByStageId Parms{};

	Parms.In_StageId = In_StageId;
	Parms.In_Transform = std::move(In_Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Transform != nullptr)
		*Out_Transform = std::move(Parms.Out_Transform);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnInitState
// (Event, Public, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnInitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnInitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnUpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateEntryRacer_C::OnUpdateState(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnUpdateState");

	Params::BPC_RaceSequenceStateEntryRacer_C_OnUpdateState Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnExitState
// (Event, Public, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnExitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnExitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnFinishedPlay_Sequence
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnFinishedPlay_Sequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnFinishedPlay_Sequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnChangeSequence
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnChangeSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnChangeSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnKeyPressed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBPC_RaceSequenceStateEntryRacer_C::OnKeyPressed_Event(const struct FKey& PressedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnKeyPressed_Event");

	Params::BPC_RaceSequenceStateEntryRacer_C_OnKeyPressed_Event Parms{};

	Parms.PressedKey = std::move(PressedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnScenePlayerFinishedUI
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnScenePlayerFinishedUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnScenePlayerFinishedUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnFullScreenMouseClick
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnFullScreenMouseClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnFullScreenMouseClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.OnEnabledSkip
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateEntryRacer_C::OnEnabledSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "OnEnabledSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateEntryRacer.BPC_RaceSequenceStateEntryRacer_C.ExecuteUbergraph_BPC_RaceSequenceStateEntryRacer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateEntryRacer_C::ExecuteUbergraph_BPC_RaceSequenceStateEntryRacer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateEntryRacer_C", "ExecuteUbergraph_BPC_RaceSequenceStateEntryRacer");

	Params::BPC_RaceSequenceStateEntryRacer_C_ExecuteUbergraph_BPC_RaceSequenceStateEntryRacer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

