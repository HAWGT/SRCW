#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemGet_WindowMini

#include "Basic.hpp"

#include "WBP_ItemGet_WindowMini_classes.hpp"
#include "WBP_ItemGet_WindowMini_parameters.hpp"


namespace SDK
{

// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.CloseWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::CloseWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "CloseWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.CreateItemCountWidget
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::CreateItemCountWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "CreateItemCountWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.ExecuteUbergraph_WBP_ItemGet_WindowMini
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::ExecuteUbergraph_WBP_ItemGet_WindowMini(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "ExecuteUbergraph_WBP_ItemGet_WindowMini");

	Params::WBP_ItemGet_WindowMini_C_ExecuteUbergraph_WBP_ItemGet_WindowMini Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.GetAnimationIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidgetAnimation**                OutAnimationIn                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::GetAnimationIn(class UWidgetAnimation** OutAnimationIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "GetAnimationIn");

	Params::WBP_ItemGet_WindowMini_C_GetAnimationIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimationIn != nullptr)
		*OutAnimationIn = Parms.OutAnimationIn;
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.GetAnimationOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidgetAnimation**                OutAnimationOut                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::GetAnimationOut(class UWidgetAnimation** OutAnimationOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "GetAnimationOut");

	Params::WBP_ItemGet_WindowMini_C_GetAnimationOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimationOut != nullptr)
		*OutAnimationOut = Parms.OutAnimationOut;
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.GetItemCountWidgetIconTexture
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRewardId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      OutIconTexture                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::GetItemCountWidgetIconTexture(ERewardType InRewardType, int32 InRewardId, class UTexture2D** OutIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "GetItemCountWidgetIconTexture");

	Params::WBP_ItemGet_WindowMini_C_GetItemCountWidgetIconTexture Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InRewardId = InRewardId;

	UObject::ProcessEvent(Func, &Parms);

	if (OutIconTexture != nullptr)
		*OutIconTexture = Parms.OutIconTexture;
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.GetItemIconImageWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage**                          OutImageWidget                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::GetItemIconImageWidget(ERewardType InRewardType, class UImage** OutImageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "GetItemIconImageWidget");

	Params::WBP_ItemGet_WindowMini_C_GetItemIconImageWidget Parms{};

	Parms.InRewardType = InRewardType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutImageWidget != nullptr)
		*OutImageWidget = Parms.OutImageWidget;
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.GetMachineTypeIconImage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UImage* UWBP_ItemGet_WindowMini_C::GetMachineTypeIconImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "GetMachineTypeIconImage");

	Params::WBP_ItemGet_WindowMini_C_GetMachineTypeIconImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.HideRewardItemInfo
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::HideRewardItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "HideRewardItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OnAcceptKeyPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OnAcceptKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OnAcceptKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OnAnimationOutFinished_Event
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OnAnimationOutFinished_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OnAnimationOutFinished_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OnOutAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OnOutAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OnOutAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OnRankOutAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OnRankOutAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OnRankOutAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OnWindowOpen
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OnWindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OnWindowOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OpenWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OpenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OpenWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.OutItemCountWidget
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::OutItemCountWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "OutItemCountWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.PlayDisplayStartSe
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::PlayDisplayStartSe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "PlayDisplayStartSe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.PrintInvalidRewardWarning
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRewardId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::PrintInvalidRewardWarning(ERewardType InRewardType, int32 InRewardId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "PrintInvalidRewardWarning");

	Params::WBP_ItemGet_WindowMini_C_PrintInvalidRewardWarning Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InRewardId = InRewardId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.RemoveAnimationDelegate
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::RemoveAnimationDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "RemoveAnimationDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini_0
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetAnimationDelegate
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::SetAnimationDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetAnimationDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetBaseDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRewardDisplay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetBaseDisplay(bool bRewardDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetBaseDisplay");

	Params::WBP_ItemGet_WindowMini_C_SetBaseDisplay Parms{};

	Parms.bRewardDisplay = bRewardDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetDisplayParam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FRewardGetWindowParam>&InDisplayParamArray                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   InWindowZOrder                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetDisplayParam(const TArray<struct FRewardGetWindowParam>& InDisplayParamArray, int32 InWindowZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetDisplayParam");

	Params::WBP_ItemGet_WindowMini_C_SetDisplayParam Parms{};

	Parms.InDisplayParamArray = std::move(InDisplayParamArray);
	Parms.InWindowZOrder = InWindowZOrder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetDisplayParams
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERateRank                               InRateRank                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<struct FRewardGetWindowParam>&InRewardParam                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   InWindowZOrder                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetDisplayParams(ERateRank InRateRank, const TArray<struct FRewardGetWindowParam>& InRewardParam, int32 InWindowZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetDisplayParams");

	Params::WBP_ItemGet_WindowMini_C_SetDisplayParams Parms{};

	Parms.InRateRank = InRateRank;
	Parms.InRewardParam = std::move(InRewardParam);
	Parms.InWindowZOrder = InWindowZOrder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetItemCountWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InItemNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemGetNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       InIconTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetItemCountWidget(int32 InItemNum, int32 InItemGetNum, ERewardType InRewardType, class UTexture2D* InIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetItemCountWidget");

	Params::WBP_ItemGet_WindowMini_C_SetItemCountWidget Parms{};

	Parms.InItemNum = InItemNum;
	Parms.InItemGetNum = InItemGetNum;
	Parms.InRewardType = InRewardType;
	Parms.InIconTexture = InIconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetItemCountWidgetVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetItemCountWidgetVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetItemCountWidgetVisible");

	Params::WBP_ItemGet_WindowMini_C_SetItemCountWidgetVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetItemIconActiveIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetItemIconActiveIndex(ERewardType InRewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetItemIconActiveIndex");

	Params::WBP_ItemGet_WindowMini_C_SetItemIconActiveIndex Parms{};

	Parms.InRewardType = InRewardType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetItemIconImageWidgetVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetItemIconImageWidgetVisible(ERewardType InRewardType, bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetItemIconImageWidgetVisible");

	Params::WBP_ItemGet_WindowMini_C_SetItemIconImageWidgetVisible Parms{};

	Parms.InRewardType = InRewardType;
	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetItemName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ItemGet_WindowMini_C::SetItemName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetItemName");

	Params::WBP_ItemGet_WindowMini_C_SetItemName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetMachineTypeIconByRewardParam
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRewardId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetMachineTypeIconByRewardParam(ERewardType InRewardType, int32 InRewardId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetMachineTypeIconByRewardParam");

	Params::WBP_ItemGet_WindowMini_C_SetMachineTypeIconByRewardParam Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InRewardId = InRewardId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetMachineTypeIconVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::SetMachineTypeIconVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetMachineTypeIconVisibility");

	Params::WBP_ItemGet_WindowMini_C_SetMachineTypeIconVisibility Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetModeTitleText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InRankTitleText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      InRewardTitleText                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ItemGet_WindowMini_C::SetModeTitleText(const class FText& InRankTitleText, const class FText& InRewardTitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetModeTitleText");

	Params::WBP_ItemGet_WindowMini_C_SetModeTitleText Parms{};

	Parms.InRankTitleText = std::move(InRankTitleText);
	Parms.InRewardTitleText = std::move(InRewardTitleText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.SetRewardTypeText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ItemGet_WindowMini_C::SetRewardTypeText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "SetRewardTypeText");

	Params::WBP_ItemGet_WindowMini_C_SetRewardTypeText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.StartNextDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::StartNextDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "StartNextDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.UpdateDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::UpdateDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "UpdateDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.UpdateRankDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::UpdateRankDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "UpdateRankDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.UpdateRewardDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::UpdateRewardDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "UpdateRewardDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.UpdateRewardItemInfoDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRewardId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRewardNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_WindowMini_C::UpdateRewardItemInfoDisplay(ERewardType InRewardType, int32 InRewardId, int32 InRewardNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "UpdateRewardItemInfoDisplay");

	Params::WBP_ItemGet_WindowMini_C_UpdateRewardItemInfoDisplay Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InRewardId = InRewardId;
	Parms.InRewardNum = InRewardNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C.UpdateTitleText
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_WindowMini_C::UpdateTitleText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_WindowMini_C", "UpdateTitleText");

	UObject::ProcessEvent(Func, nullptr);
}

}

