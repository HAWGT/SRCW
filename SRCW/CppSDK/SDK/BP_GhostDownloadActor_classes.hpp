#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GhostDownloadActor

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UnionSystem_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GhostDownloadActor.BP_GhostDownloadActor_C
// 0x0080 (0x0408 - 0x0388)
class ABP_GhostDownloadActor_C final : public AGhostDonwnloadController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool Success)>  OnFinishEvent;                                     // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UUnionUIPopupWindowBase*                PopupWindow;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PrivateMatch_Popup_C*              DownloadingWidget;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMenuInputRecieveObject*                SubInputReciever;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CountTime;                                         // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CancelEntryTime;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrentUserId;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	ESpeedClassId                                 CurrentSpeedClass;                                 // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageId                                      CurrentStageId;                                    // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentDateTime;                                   // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CurrentRankingName;                                // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BindDownloadEvent();
	void CreateErrorWindow(const class FText& InMessage);
	void CreateLoadingWidget();
	void CreateServerErrorWindow();
	void DownloadFinish();
	void EndCancelEntry();
	void ExecuteUbergraph_BP_GhostDownloadActor(int32 EntryPoint);
	void FailedDownloadEvent();
	void FinishDownloadEvent(bool OutIsError);
	void OnCancelDownload(class UObject* Object);
	void OnDecideErrorWindow(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void StartCancelEntry();
	void StartGhostDownload(const class FString& UserId, const ESpeedClassId SpeedClass, const EStageId StageId, const class FString& DateTime, const class FString& RankingName);
	void UnbindDownloadEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GhostDownloadActor_C">();
	}
	static class ABP_GhostDownloadActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GhostDownloadActor_C>();
	}
};
static_assert(alignof(ABP_GhostDownloadActor_C) == 0x000008, "Wrong alignment on ABP_GhostDownloadActor_C");
static_assert(sizeof(ABP_GhostDownloadActor_C) == 0x000408, "Wrong size on ABP_GhostDownloadActor_C");
static_assert(offsetof(ABP_GhostDownloadActor_C, UberGraphFrame) == 0x000388, "Member 'ABP_GhostDownloadActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, DefaultSceneRoot) == 0x000390, "Member 'ABP_GhostDownloadActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, OnFinishEvent) == 0x000398, "Member 'ABP_GhostDownloadActor_C::OnFinishEvent' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, PopupWindow) == 0x0003A8, "Member 'ABP_GhostDownloadActor_C::PopupWindow' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, DownloadingWidget) == 0x0003B0, "Member 'ABP_GhostDownloadActor_C::DownloadingWidget' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, SubInputReciever) == 0x0003B8, "Member 'ABP_GhostDownloadActor_C::SubInputReciever' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CountTime) == 0x0003C0, "Member 'ABP_GhostDownloadActor_C::CountTime' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CancelEntryTime) == 0x0003C8, "Member 'ABP_GhostDownloadActor_C::CancelEntryTime' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CurrentUserId) == 0x0003D0, "Member 'ABP_GhostDownloadActor_C::CurrentUserId' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CurrentSpeedClass) == 0x0003E0, "Member 'ABP_GhostDownloadActor_C::CurrentSpeedClass' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CurrentStageId) == 0x0003E1, "Member 'ABP_GhostDownloadActor_C::CurrentStageId' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CurrentDateTime) == 0x0003E8, "Member 'ABP_GhostDownloadActor_C::CurrentDateTime' has a wrong offset!");
static_assert(offsetof(ABP_GhostDownloadActor_C, CurrentRankingName) == 0x0003F8, "Member 'ABP_GhostDownloadActor_C::CurrentRankingName' has a wrong offset!");

}

