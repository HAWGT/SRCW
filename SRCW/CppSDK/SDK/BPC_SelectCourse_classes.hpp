#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_SelectCourse

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_SelectCourse.BPC_SelectCourse_C
// 0x0178 (0x03C0 - 0x0248)
class UBPC_SelectCourse_C final : public USelectGrandPrixAndCourseState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftClassPtr<class UClass>                   CourseSelectWidgetClassRef;                        // 0x0250(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UUserWidget*                            LastRegisterd;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnotherStageLotteryWheel*              AnotherStageLotteryWheel;                          // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMenuInputRecieveObject*                SubInputReciever;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightShoulderPressed;                             // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftShoulderPressed;                              // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentDebugLevel;                                 // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, double>                           Level_Persent;                                     // 0x0298(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UCommonMenuFooterMenu*                  Footer;                                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<EStageId>                              NewVar_0;                                          // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bStartPressed;                                     // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TimeTrial_Sub_ModeSelect_C*        TimeTrialSubModeSelect;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   RivalCutinWidgetClass;                             // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UWBP_CourseSelect_Sub_RivalCutin_C*     RivalCutinWidget;                                  // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlankIconHidden;                                   // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRivalChoice;                                      // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     RivalDriverId_Normal;                              // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     RivalDriverId_HighLevel;                           // 0x034A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B[0x5];                                      // 0x034B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ReadySequenceActor_C*               ReadySequenceActor;                                // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_Popup_Window_Hint_C*               TipsWindow;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHintId                                       OpenTipsId;                                        // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        LastRegisterdSubMenus;                             // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          GotoClassSelect;                                   // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitClassSelect;                                   // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CourseLotCache;                                    // 0x037A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOpenReadyTips;                                  // 0x037B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOpenGroupRaceTips;                              // 0x037C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPreloadedMainStage;                             // 0x037D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CourseSelectPrevVisibility;                        // 0x037E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CantFindStage;                                     // 0x037F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   IncompleteCollaboGPVictoryPopupTitleText;          // 0x0380(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class FText                                   IncompleteCollaboGPVictoryPopupMessageText;        // 0x0390(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class FText                                   IncompleteCollaboGPSelectedPopupTitleText;         // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   IncompleteCollaboGPSelectedPopupMessageText;       // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnNonCompletedCollaboGPVictoryPopupClosed();
	void StartNotification();
	void OnStoreDialogCompletedBP();
	void OnStoreRequested(bool GrandPrixSelecting);
	TArray<EStageId> GetSelectedAndLotResultStageIds(EStageId SelectedStageId);
	void FooterParkCourseRandomVisible(bool Visible);
	void IsOpenGadgetPlateTipsWindow(bool* bEnableOpenWindow);
	void ShowTipsWindow(EHintId InHintId);
	void SetupRivalUIData();
	void StartSelectCourse();
	void SetupFooter();
	void FocusMenu();
	void OnNextSequence();
	void OnLoaded_99724AAD4EFC2C7FB829649C42872529(TSubclassOf<class UObject> Loaded);
	void OnLoaded_82463C994F26B013C01679803F739D82(TSubclassOf<class UObject> Loaded);
	void OnLoaded_13BB227F48EE9660C7C676A641A62861(TSubclassOf<class UObject> Loaded);
	void InitSubCommand();
	void OnRightShoulderReleasedEvent_Event(class UObject* Object);
	void OnRightShoulderPressedEvent_Event(class UObject* Object);
	void OnLeftShoulderPressedEvent_Event(class UObject* Object);
	void OnLeftShoulderReleasedEvent_Event(class UObject* Object);
	void ShoulderButtonCheck();
	void _OnSpecialPressedEvent_Event(class UObject* Object);
	void CustomEvent_0(class UObject* Object);
	void OnInitState();
	void OnExitState();
	void OnDecideStageId_Event_0(EStageId SelectedCourseStageId);
	void OnDecideGrandprixId_Event_0(EGrandPrixId SelectedGrandprixId_0, EStageId FirstCourseStageId);
	void OnCourseSelectGrandprixCancel_Event_0(class UCourseSelectSubCategoryIcon* SelectedGrandprixButton);
	void StartReadyConfirmWB();
	void OnDecideRivalSelect();
	void SetupEachGameMode();
	void OnCourseSelectBackToClassSelect_Event(class UCourseSelectSubCategoryIcon* SelectedGrandprixButton);
	void LotAnotherCourse();
	void ResetRivalData();
	void OnCourseSelectGadgetCustomSelected(class UCourseSelectSubCategoryIcon* SelectedGrandprixButton);
	void ReadyCancelEvent();
	void ReadyEndEvent();
	void TipsWindow_CloseEndDelegate();
	void StartOpenTipsWindow();
	void EventSetupRivalCutin();
	void OnRivalCutinFinished();
	void OnRivalChoiceFinished();
	void OnFadeFinished(EUnionUIFadeDirection FadeDirection);
	void OnTimeTrialSelected_Event(class UCourseSelectSubCategoryIcon* SelectedGrandprixButton);
	void OnFadeoutFinished_ToTimeTrial(EUnionUIFadeDirection FadeDirection);
	void PartyRaceRuleTips();
	void Finished_SequenceStart_FadeOut(EUnionUIFadeDirection FadeDirection);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnIncompleteCollaboGPSelectedPopupClosed();
	void OnFadeInFinished(EUnionUIFadeDirection FadeDirection);
	void ExecuteUbergraph_BPC_SelectCourse(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_SelectCourse_C">();
	}
	static class UBPC_SelectCourse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_SelectCourse_C>();
	}
};
static_assert(alignof(UBPC_SelectCourse_C) == 0x000008, "Wrong alignment on UBPC_SelectCourse_C");
static_assert(sizeof(UBPC_SelectCourse_C) == 0x0003C0, "Wrong size on UBPC_SelectCourse_C");
static_assert(offsetof(UBPC_SelectCourse_C, UberGraphFrame) == 0x000248, "Member 'UBPC_SelectCourse_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, CourseSelectWidgetClassRef) == 0x000250, "Member 'UBPC_SelectCourse_C::CourseSelectWidgetClassRef' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, LastRegisterd) == 0x000278, "Member 'UBPC_SelectCourse_C::LastRegisterd' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, AnotherStageLotteryWheel) == 0x000280, "Member 'UBPC_SelectCourse_C::AnotherStageLotteryWheel' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, SubInputReciever) == 0x000288, "Member 'UBPC_SelectCourse_C::SubInputReciever' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bRightShoulderPressed) == 0x000290, "Member 'UBPC_SelectCourse_C::bRightShoulderPressed' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bLeftShoulderPressed) == 0x000291, "Member 'UBPC_SelectCourse_C::bLeftShoulderPressed' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, CurrentDebugLevel) == 0x000294, "Member 'UBPC_SelectCourse_C::CurrentDebugLevel' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, Level_Persent) == 0x000298, "Member 'UBPC_SelectCourse_C::Level_Persent' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, Footer) == 0x0002E8, "Member 'UBPC_SelectCourse_C::Footer' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, NewVar_0) == 0x0002F0, "Member 'UBPC_SelectCourse_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bStartPressed) == 0x000300, "Member 'UBPC_SelectCourse_C::bStartPressed' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, TimeTrialSubModeSelect) == 0x000308, "Member 'UBPC_SelectCourse_C::TimeTrialSubModeSelect' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, RivalCutinWidgetClass) == 0x000310, "Member 'UBPC_SelectCourse_C::RivalCutinWidgetClass' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, RivalCutinWidget) == 0x000338, "Member 'UBPC_SelectCourse_C::RivalCutinWidget' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, Selected) == 0x000340, "Member 'UBPC_SelectCourse_C::Selected' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, BlankIconHidden) == 0x000344, "Member 'UBPC_SelectCourse_C::BlankIconHidden' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bRivalChoice) == 0x000348, "Member 'UBPC_SelectCourse_C::bRivalChoice' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, RivalDriverId_Normal) == 0x000349, "Member 'UBPC_SelectCourse_C::RivalDriverId_Normal' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, RivalDriverId_HighLevel) == 0x00034A, "Member 'UBPC_SelectCourse_C::RivalDriverId_HighLevel' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, ReadySequenceActor) == 0x000350, "Member 'UBPC_SelectCourse_C::ReadySequenceActor' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, TipsWindow) == 0x000358, "Member 'UBPC_SelectCourse_C::TipsWindow' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, OpenTipsId) == 0x000360, "Member 'UBPC_SelectCourse_C::OpenTipsId' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, LastRegisterdSubMenus) == 0x000368, "Member 'UBPC_SelectCourse_C::LastRegisterdSubMenus' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, GotoClassSelect) == 0x000378, "Member 'UBPC_SelectCourse_C::GotoClassSelect' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, WaitClassSelect) == 0x000379, "Member 'UBPC_SelectCourse_C::WaitClassSelect' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, CourseLotCache) == 0x00037A, "Member 'UBPC_SelectCourse_C::CourseLotCache' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bIsOpenReadyTips) == 0x00037B, "Member 'UBPC_SelectCourse_C::bIsOpenReadyTips' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bIsOpenGroupRaceTips) == 0x00037C, "Member 'UBPC_SelectCourse_C::bIsOpenGroupRaceTips' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, bIsPreloadedMainStage) == 0x00037D, "Member 'UBPC_SelectCourse_C::bIsPreloadedMainStage' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, CourseSelectPrevVisibility) == 0x00037E, "Member 'UBPC_SelectCourse_C::CourseSelectPrevVisibility' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, CantFindStage) == 0x00037F, "Member 'UBPC_SelectCourse_C::CantFindStage' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, IncompleteCollaboGPVictoryPopupTitleText) == 0x000380, "Member 'UBPC_SelectCourse_C::IncompleteCollaboGPVictoryPopupTitleText' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, IncompleteCollaboGPVictoryPopupMessageText) == 0x000390, "Member 'UBPC_SelectCourse_C::IncompleteCollaboGPVictoryPopupMessageText' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, IncompleteCollaboGPSelectedPopupTitleText) == 0x0003A0, "Member 'UBPC_SelectCourse_C::IncompleteCollaboGPSelectedPopupTitleText' has a wrong offset!");
static_assert(offsetof(UBPC_SelectCourse_C, IncompleteCollaboGPSelectedPopupMessageText) == 0x0003B0, "Member 'UBPC_SelectCourse_C::IncompleteCollaboGPSelectedPopupMessageText' has a wrong offset!");

}

