#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Charahead_CPU

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C
// 0x00B0 (0x0398 - 0x02E8)
class UWBP_Race_HUD_Sub_Charahead_CPU_C final : public URaceUISubPlayerName
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Line;                                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MLC_PAT_CharaHead_CPU;                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_CharaHead_CPU;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_NUM_Main;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PAT_NUM_Outline;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_MLC_Rank;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Rank_TextColor_Index;                              // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PATMaterial;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RankMat_Body;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RankMat_Outline;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FUIColorInfo>              ColorMap;                                          // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Group_Index;                                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRivalNow;                                        // 0x0395(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_Charahead_CPU(int32 EntryPoint);
	void GetShapeIndex(int32 InIndex, int32* ShapeIndex);
	void PreConstruct(bool IsDesignTime);
	void SetGroupIndexIF(bool IsGroup, int32 GroupIndex, bool IsForce);
	void SetRank(int32 NewRank);
	void SetRivalInfo(bool IsRival, bool IsPowerRival);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_Charahead_CPU_C">();
	}
	static class UWBP_Race_HUD_Sub_Charahead_CPU_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_Charahead_CPU_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_Charahead_CPU_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_Charahead_CPU_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_Charahead_CPU_C) == 0x000398, "Wrong size on UWBP_Race_HUD_Sub_Charahead_CPU_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, Line) == 0x0002F0, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::Line' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, MLC_PAT_CharaHead_CPU) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::MLC_PAT_CharaHead_CPU' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, PAT_CharaHead_CPU) == 0x000300, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::PAT_CharaHead_CPU' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, PAT_NUM_Main) == 0x000308, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::PAT_NUM_Main' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, PAT_NUM_Outline) == 0x000310, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::PAT_NUM_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, TXT_MLC_Rank) == 0x000318, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::TXT_MLC_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, Rank_TextColor_Index) == 0x000320, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::Rank_TextColor_Index' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, PATMaterial) == 0x000328, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::PATMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, RankMat_Body) == 0x000330, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::RankMat_Body' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, RankMat_Outline) == 0x000338, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::RankMat_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, ColorMap) == 0x000340, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::ColorMap' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, Group_Index) == 0x000390, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::Group_Index' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, NewVar_0) == 0x000394, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_CPU_C, IsRivalNow) == 0x000395, "Member 'UWBP_Race_HUD_Sub_Charahead_CPU_C::IsRivalNow' has a wrong offset!");

}

