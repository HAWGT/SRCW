#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Popup_Window_Tutorial_Sub_Cover

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Popup_Window_Tutorial_Sub_Cover.WBP_Popup_Window_Tutorial_Sub_Cover_C
// 0x0048 (0x0328 - 0x02E0)
class UWBP_Popup_Window_Tutorial_Sub_Cover_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OpEd_Out;                                          // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpEd_Loop;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpEd_In;                                           // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Blue;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Blue_Addtive;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Logo;                                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_OpEd;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Popup_Window_Tutorial_Sub_Cover(int32 EntryPoint);
	void SetExplanation(const class FText& NewText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Popup_Window_Tutorial_Sub_Cover_C">();
	}
	static class UWBP_Popup_Window_Tutorial_Sub_Cover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Popup_Window_Tutorial_Sub_Cover_C>();
	}
};
static_assert(alignof(UWBP_Popup_Window_Tutorial_Sub_Cover_C) == 0x000008, "Wrong alignment on UWBP_Popup_Window_Tutorial_Sub_Cover_C");
static_assert(sizeof(UWBP_Popup_Window_Tutorial_Sub_Cover_C) == 0x000328, "Wrong size on UWBP_Popup_Window_Tutorial_Sub_Cover_C");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, OpEd_Out) == 0x0002E8, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::OpEd_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, OpEd_Loop) == 0x0002F0, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::OpEd_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, OpEd_In) == 0x0002F8, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::OpEd_In' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, base) == 0x000300, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, BG_Blue) == 0x000308, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::BG_Blue' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, BG_Blue_Addtive) == 0x000310, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::BG_Blue_Addtive' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, Logo) == 0x000318, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::Logo' has a wrong offset!");
static_assert(offsetof(UWBP_Popup_Window_Tutorial_Sub_Cover_C, TXT_OpEd) == 0x000320, "Member 'UWBP_Popup_Window_Tutorial_Sub_Cover_C::TXT_OpEd' has a wrong offset!");

}

