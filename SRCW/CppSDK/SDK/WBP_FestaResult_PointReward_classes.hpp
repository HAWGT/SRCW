#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FestaResult_PointReward

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UnionRun_classes.hpp"
#include "UnionUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_FestaResult_PointReward.WBP_FestaResult_PointReward_C
// 0x0378 (0x0690 - 0x0318)
class UWBP_FestaResult_PointReward_C final : public UUnionRaceUIFestaReward
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PointUpChance_In;                                  // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PointUpWin_In_Loop;                                // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PointReward_In;                                    // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Win_Out;                                           // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Win_In_Loop;                                       // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FestaResult_Out;                                   // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FestaResult_Loop;                                  // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FestaResult_In;                                    // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_front;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      DSP_Num_PointUpChance_02;                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FestaResult_ContributionRate_C*    DSP_WBP_FestaResult_ContributionRate;              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MLC_Base;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel_01;                                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel_02;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_1_1;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_1_2;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_1_3;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_2_1;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_2_2;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_2_3;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_3_1;                                       // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_3_2;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN_3_3;                                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_GadgetCount_C*                 WBP_CMN_GadgetCount;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Festa_PointReward_Sub_Object_C*    WBP_Festa_PointReward;                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Festa_PointReward_FestaPointTable_C* WBP_Festa_PointReward_FestaPointTable;           // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FestaResult_RewardComplete_C*      WBP_FestaResult_RewardComplete;                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_WInName;                            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         StartPoint;                                        // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddPoint;                                          // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartItemCount;                                    // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NowPoint;                                          // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFestaPointRewardUIData>        RewardDataList;                                    // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         FrameAddPoint;                                     // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Endpoint;                                          // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DonpaNum;                                          // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRewardUIEnd;                                    // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemGet_Display_C*                 ResultRewardGetDisplay;                            // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RewardIndexOffset;                                 // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPress;                                          // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Wait;                                              // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFestaResultEnd;                                 // 0x0444(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           GaugeSound;                                        // 0x0448(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              PanelDebugTexture_01;                              // 0x0450(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              PanelDebugTexture_02;                              // 0x0478(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         BG_Color;                                          // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaRacerContribution>        ContributionList;                                  // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_SceneDriver_C*>              ActorList;                                         // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        ZposBG;                                            // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadCount;                                         // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MachineActor_C*>             Machines;                                          // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_HoverboardBaseActor_C*>      Hoverboards;                                       // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         Array_Index;                                       // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaResultRewardInfo                 RewardInfo;                                        // 0x0500(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  bIsHoverList;                                      // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsExist;                                          // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoadCount2;                                        // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartAdd;                                          // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     MachinePositions;                                  // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_FestResultBG_C*                     FestResultBG;                                      // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             DefaultCameraTransform;                            // 0x0570(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   SequencePlayer;                                    // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D8[0x8];                                      // 0x05D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ResultPosition;                                    // 0x05E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 FestaTeamColor;                                    // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    SequenceActor;                                     // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastNormalReward;                               // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Next_Add;                                          // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Bonus_Text;                                        // 0x0658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	EStageId                                      CurrentStageId;                                    // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x3];                                      // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Mul_Bonus;                                         // 0x066C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFestaPointRewardUIData>        StreakRewardList;                                  // 0x0670(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         RewardIndex;                                       // 0x0680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DrawBonus;                                         // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsStreakReward;                                   // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageId                                      StageId;                                           // 0x0689(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68A[0x2];                                      // 0x068A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StageIndex;                                        // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_FestaResult_PointReward_Button_front_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_FestaResult_PointReward_Button_front_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void Construct();
	void ContributionInfo();
	void ContributionMain();
	void CreateMachine(const struct FUserMachineCustomizeData& CustomizeData, EMachineId MachineId, int32 PositionIndex, int32 RacerIndex);
	void CreateRacerModel(int32 RacerIndex, int32 PositionIndex);
	void ExecuteUbergraph_WBP_FestaResult_PointReward(int32 EntryPoint);
	void FestaPointReward();
	void GetFestaDriverId_impl(int32 RacerIndex, EDriverId* DriverId);
	void GetResultPlayingStageId(EStageId* OutStageId, struct FTransform* OutTransform);
	void Is_List_Exist_Driver_Id(int32 Index_0, EDriverId DriverId, bool* bIsExist_0);
	void Is_Load_Ok(bool* bIsLoadOk);
	void LoadModelAll();
	void OnFinishedFade(EUnionUIFadeDirection FadeDirection);
	void OnResultRewardDisplayEnd_Event();
	void OnStreakRewardEnd_Event();
	void Open();
	void OpenTeamRankText();
	void PreConstruct(bool IsDesignTime);
	void RewardProcess();
	void SetCompleteBonusWindow();
	void SetDonpaTicketGetWindow(int32 TicketAdd);
	void SetItemWindowPos(double posX);
	void SetPartyColorIndex(int32 ColorIndex);
	void SetRankUpRewardGetWindow();
	void SetStreakRewardGetWindow(ERewardType Type, int32 ItemId);
	void SetupBG();
	void SetupResultBG();
	void UpdateItemWindow(bool bIsGetReward);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_FestaResult_PointReward_C">();
	}
	static class UWBP_FestaResult_PointReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_FestaResult_PointReward_C>();
	}
};
static_assert(alignof(UWBP_FestaResult_PointReward_C) == 0x000010, "Wrong alignment on UWBP_FestaResult_PointReward_C");
static_assert(sizeof(UWBP_FestaResult_PointReward_C) == 0x000690, "Wrong size on UWBP_FestaResult_PointReward_C");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, UberGraphFrame) == 0x000318, "Member 'UWBP_FestaResult_PointReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, PointUpChance_In) == 0x000320, "Member 'UWBP_FestaResult_PointReward_C::PointUpChance_In' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, PointUpWin_In_Loop) == 0x000328, "Member 'UWBP_FestaResult_PointReward_C::PointUpWin_In_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, PointReward_In) == 0x000330, "Member 'UWBP_FestaResult_PointReward_C::PointReward_In' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Win_Out) == 0x000338, "Member 'UWBP_FestaResult_PointReward_C::Win_Out' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Win_In_Loop) == 0x000340, "Member 'UWBP_FestaResult_PointReward_C::Win_In_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, FestaResult_Out) == 0x000348, "Member 'UWBP_FestaResult_PointReward_C::FestaResult_Out' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, FestaResult_Loop) == 0x000350, "Member 'UWBP_FestaResult_PointReward_C::FestaResult_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, FestaResult_In) == 0x000358, "Member 'UWBP_FestaResult_PointReward_C::FestaResult_In' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Button_front) == 0x000360, "Member 'UWBP_FestaResult_PointReward_C::Button_front' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, DSP_Num_PointUpChance_02) == 0x000368, "Member 'UWBP_FestaResult_PointReward_C::DSP_Num_PointUpChance_02' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, DSP_WBP_FestaResult_ContributionRate) == 0x000370, "Member 'UWBP_FestaResult_PointReward_C::DSP_WBP_FestaResult_ContributionRate' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, MLC_Base) == 0x000378, "Member 'UWBP_FestaResult_PointReward_C::MLC_Base' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Panel_01) == 0x000380, "Member 'UWBP_FestaResult_PointReward_C::Panel_01' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Panel_02) == 0x000388, "Member 'UWBP_FestaResult_PointReward_C::Panel_02' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_1_1) == 0x000390, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_1_1' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_1_2) == 0x000398, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_1_2' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_1_3) == 0x0003A0, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_1_3' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_2_1) == 0x0003A8, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_2_1' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_2_2) == 0x0003B0, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_2_2' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_2_3) == 0x0003B8, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_2_3' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_3_1) == 0x0003C0, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_3_1' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_3_2) == 0x0003C8, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_3_2' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, TXT_WIN_3_3) == 0x0003D0, "Member 'UWBP_FestaResult_PointReward_C::TXT_WIN_3_3' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, WBP_CMN_GadgetCount) == 0x0003D8, "Member 'UWBP_FestaResult_PointReward_C::WBP_CMN_GadgetCount' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, WBP_Festa_PointReward) == 0x0003E0, "Member 'UWBP_FestaResult_PointReward_C::WBP_Festa_PointReward' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, WBP_Festa_PointReward_FestaPointTable) == 0x0003E8, "Member 'UWBP_FestaResult_PointReward_C::WBP_Festa_PointReward_FestaPointTable' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, WBP_FestaResult_RewardComplete) == 0x0003F0, "Member 'UWBP_FestaResult_PointReward_C::WBP_FestaResult_RewardComplete' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, WidgetSwitcher_WInName) == 0x0003F8, "Member 'UWBP_FestaResult_PointReward_C::WidgetSwitcher_WInName' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, StartPoint) == 0x000400, "Member 'UWBP_FestaResult_PointReward_C::StartPoint' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, AddPoint) == 0x000404, "Member 'UWBP_FestaResult_PointReward_C::AddPoint' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, StartItemCount) == 0x000408, "Member 'UWBP_FestaResult_PointReward_C::StartItemCount' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, NowPoint) == 0x00040C, "Member 'UWBP_FestaResult_PointReward_C::NowPoint' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, RewardDataList) == 0x000410, "Member 'UWBP_FestaResult_PointReward_C::RewardDataList' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, FrameAddPoint) == 0x000420, "Member 'UWBP_FestaResult_PointReward_C::FrameAddPoint' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Endpoint) == 0x000424, "Member 'UWBP_FestaResult_PointReward_C::Endpoint' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, DonpaNum) == 0x000428, "Member 'UWBP_FestaResult_PointReward_C::DonpaNum' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsRewardUIEnd) == 0x00042C, "Member 'UWBP_FestaResult_PointReward_C::bIsRewardUIEnd' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, ResultRewardGetDisplay) == 0x000430, "Member 'UWBP_FestaResult_PointReward_C::ResultRewardGetDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, RewardIndexOffset) == 0x000438, "Member 'UWBP_FestaResult_PointReward_C::RewardIndexOffset' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsPress) == 0x00043C, "Member 'UWBP_FestaResult_PointReward_C::bIsPress' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Wait) == 0x000440, "Member 'UWBP_FestaResult_PointReward_C::Wait' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsFestaResultEnd) == 0x000444, "Member 'UWBP_FestaResult_PointReward_C::bIsFestaResultEnd' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, GaugeSound) == 0x000448, "Member 'UWBP_FestaResult_PointReward_C::GaugeSound' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, PanelDebugTexture_01) == 0x000450, "Member 'UWBP_FestaResult_PointReward_C::PanelDebugTexture_01' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, PanelDebugTexture_02) == 0x000478, "Member 'UWBP_FestaResult_PointReward_C::PanelDebugTexture_02' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, BG_Color) == 0x0004A0, "Member 'UWBP_FestaResult_PointReward_C::BG_Color' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, ContributionList) == 0x0004A8, "Member 'UWBP_FestaResult_PointReward_C::ContributionList' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, ActorList) == 0x0004B8, "Member 'UWBP_FestaResult_PointReward_C::ActorList' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, ZposBG) == 0x0004C8, "Member 'UWBP_FestaResult_PointReward_C::ZposBG' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, LoadCount) == 0x0004D0, "Member 'UWBP_FestaResult_PointReward_C::LoadCount' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Machines) == 0x0004D8, "Member 'UWBP_FestaResult_PointReward_C::Machines' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Hoverboards) == 0x0004E8, "Member 'UWBP_FestaResult_PointReward_C::Hoverboards' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Array_Index) == 0x0004F8, "Member 'UWBP_FestaResult_PointReward_C::Array_Index' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, RewardInfo) == 0x000500, "Member 'UWBP_FestaResult_PointReward_C::RewardInfo' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsHoverList) == 0x000538, "Member 'UWBP_FestaResult_PointReward_C::bIsHoverList' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsExist) == 0x000548, "Member 'UWBP_FestaResult_PointReward_C::bIsExist' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, LoadCount2) == 0x00054C, "Member 'UWBP_FestaResult_PointReward_C::LoadCount2' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, StartAdd) == 0x000550, "Member 'UWBP_FestaResult_PointReward_C::StartAdd' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, MachinePositions) == 0x000558, "Member 'UWBP_FestaResult_PointReward_C::MachinePositions' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, FestResultBG) == 0x000568, "Member 'UWBP_FestaResult_PointReward_C::FestResultBG' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, DefaultCameraTransform) == 0x000570, "Member 'UWBP_FestaResult_PointReward_C::DefaultCameraTransform' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, SequencePlayer) == 0x0005D0, "Member 'UWBP_FestaResult_PointReward_C::SequencePlayer' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, ResultPosition) == 0x0005E0, "Member 'UWBP_FestaResult_PointReward_C::ResultPosition' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, FestaTeamColor) == 0x000640, "Member 'UWBP_FestaResult_PointReward_C::FestaTeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, SequenceActor) == 0x000648, "Member 'UWBP_FestaResult_PointReward_C::SequenceActor' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsLastNormalReward) == 0x000650, "Member 'UWBP_FestaResult_PointReward_C::bIsLastNormalReward' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Next_Add) == 0x000654, "Member 'UWBP_FestaResult_PointReward_C::Next_Add' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Bonus_Text) == 0x000658, "Member 'UWBP_FestaResult_PointReward_C::Bonus_Text' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, CurrentStageId) == 0x000668, "Member 'UWBP_FestaResult_PointReward_C::CurrentStageId' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, Mul_Bonus) == 0x00066C, "Member 'UWBP_FestaResult_PointReward_C::Mul_Bonus' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, StreakRewardList) == 0x000670, "Member 'UWBP_FestaResult_PointReward_C::StreakRewardList' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, RewardIndex) == 0x000680, "Member 'UWBP_FestaResult_PointReward_C::RewardIndex' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, DrawBonus) == 0x000684, "Member 'UWBP_FestaResult_PointReward_C::DrawBonus' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, bIsStreakReward) == 0x000688, "Member 'UWBP_FestaResult_PointReward_C::bIsStreakReward' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, StageId) == 0x000689, "Member 'UWBP_FestaResult_PointReward_C::StageId' has a wrong offset!");
static_assert(offsetof(UWBP_FestaResult_PointReward_C, StageIndex) == 0x00068C, "Member 'UWBP_FestaResult_PointReward_C::StageIndex' has a wrong offset!");

}

