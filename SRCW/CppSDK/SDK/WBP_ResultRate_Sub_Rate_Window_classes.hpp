#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ResultRate_Sub_Rate_Window

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ResultRate_Sub_Rate_Window.WBP_ResultRate_Sub_Rate_Window_C
// 0x00B8 (0x0398 - 0x02E0)
class UWBP_ResultRate_Sub_Rate_Window_C final : public UResultRateRankSubRateWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Rate_Out;                                          // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Rate_Loop;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Rate_In;                                           // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemGet_WindowMini_C*              DELETE_WBP_ItemGet_WindowMini;                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Title;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ResultRate_Sub_RateGauge_C*        WBP_Result_Sub_RateGauge;                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ResultRate_Sub_RankBand_C*         WBP_ResultRate_Sub_RankBand;                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsGaugeEnd;                                       // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AddGauge;                                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NowRate;                                           // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RateUp;                                            // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           GaugeSoundHandle;                                  // 0x0348(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)
	ERateRank                                     RateRankUp;                                        // 0x034C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     RateRankDown;                                      // 0x034D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWait;                                           // 0x034E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRankUp;                                         // 0x034F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPass;                                           // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GaugeSpeed;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RateDown;                                          // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRankUpRewardEnd;                                // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemGet_Display_C*                 RewardGetDisplay;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RateMaxPoint;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool bRankUp)>  RankUpOrDownEvent;                                 // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_ResultRate_Sub_RankUp_Window_C*    ResultRateSubRankUpWindow;                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AddBonusImpl(const struct FRateRankBonusList& BonusList);
	void AddGaugeImpl(double AddGauge_0);
	void Construct();
	void ExecuteUbergraph_WBP_ResultRate_Sub_Rate_Window(int32 EntryPoint);
	void IsBonusDispEndImpl(bool* bIsEnd);
	void OnResultRewardDisplayEnd_Event();
	void PlayGaugeSE();
	void RankUpOrDownEvent_Event(bool bRankUp);
	void Set_Rate_Base_Impl(ERateRank RateRank, double NowRate_0);
	void SetNowRateTextImpl();
	void SetRankBandRank(uint8 NowRank);
	void SetRankUpRewardGetWindow(ERateRank RateRank, bool bIsGetReward);
	void StartRankBand(uint8 NextRank, bool bRankUp);
	void StopGaugeSE();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateRate(double NowRate_0, ERateRank DrawRank);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ResultRate_Sub_Rate_Window_C">();
	}
	static class UWBP_ResultRate_Sub_Rate_Window_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ResultRate_Sub_Rate_Window_C>();
	}
};
static_assert(alignof(UWBP_ResultRate_Sub_Rate_Window_C) == 0x000008, "Wrong alignment on UWBP_ResultRate_Sub_Rate_Window_C");
static_assert(sizeof(UWBP_ResultRate_Sub_Rate_Window_C) == 0x000398, "Wrong size on UWBP_ResultRate_Sub_Rate_Window_C");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, Rate_Out) == 0x0002E8, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::Rate_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, Rate_Loop) == 0x0002F0, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::Rate_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, Rate_In) == 0x0002F8, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::Rate_In' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, base) == 0x000300, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, DELETE_WBP_ItemGet_WindowMini) == 0x000308, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::DELETE_WBP_ItemGet_WindowMini' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, TXT_Title) == 0x000310, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::TXT_Title' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, WBP_Result_Sub_RateGauge) == 0x000318, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::WBP_Result_Sub_RateGauge' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, WBP_ResultRate_Sub_RankBand) == 0x000320, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::WBP_ResultRate_Sub_RankBand' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, bIsGaugeEnd) == 0x000328, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::bIsGaugeEnd' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, AddGauge) == 0x000330, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::AddGauge' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, NowRate) == 0x000338, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::NowRate' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RateUp) == 0x000340, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RateUp' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, GaugeSoundHandle) == 0x000348, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::GaugeSoundHandle' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RateRankUp) == 0x00034C, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RateRankUp' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RateRankDown) == 0x00034D, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RateRankDown' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, bIsWait) == 0x00034E, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::bIsWait' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, bIsRankUp) == 0x00034F, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::bIsRankUp' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, bIsPass) == 0x000350, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::bIsPass' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, GaugeSpeed) == 0x000358, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::GaugeSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RateDown) == 0x000360, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RateDown' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, bIsRankUpRewardEnd) == 0x000368, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::bIsRankUpRewardEnd' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RewardGetDisplay) == 0x000370, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RewardGetDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RateMaxPoint) == 0x000378, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RateMaxPoint' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, RankUpOrDownEvent) == 0x000380, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::RankUpOrDownEvent' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_Sub_Rate_Window_C, ResultRateSubRankUpWindow) == 0x000390, "Member 'UWBP_ResultRate_Sub_Rate_Window_C::ResultRateSubRankUpWindow' has a wrong offset!");

}

