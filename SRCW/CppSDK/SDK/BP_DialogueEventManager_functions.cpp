#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DialogueEventManager

#include "Basic.hpp"

#include "BP_DialogueEventManager_classes.hpp"
#include "BP_DialogueEventManager_parameters.hpp"


namespace SDK
{

// Function BP_DialogueEventManager.BP_DialogueEventManager_C.AnimationNameCastToEnumID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AnimName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDialogueAnimationAssetID*              EnumID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::AnimationNameCastToEnumID(class FName AnimName, EDialogueAnimationAssetID* EnumID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "AnimationNameCastToEnumID");

	Params::BP_DialogueEventManager_C_AnimationNameCastToEnumID Parms{};

	Parms.AnimName = AnimName;

	UObject::ProcessEvent(Func, &Parms);

	if (EnumID != nullptr)
		*EnumID = Parms.EnumID;
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.ClearBG
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::ClearBG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "ClearBG");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.ClearImage
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::ClearImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "ClearImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.CreateRecieveObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMenuInputRecieveObject**         MenuInputRecieveObject                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::CreateRecieveObject(class UMenuInputRecieveObject** MenuInputRecieveObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "CreateRecieveObject");

	Params::BP_DialogueEventManager_C_CreateRecieveObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MenuInputRecieveObject != nullptr)
		*MenuInputRecieveObject = Parms.MenuInputRecieveObject;
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.CreateSpeechWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::CreateSpeechWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "CreateSpeechWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.Destroy
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "Destroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.DisplayAnimationEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::DisplayAnimationEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "DisplayAnimationEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.DrawText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Character                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_DialogueEventManager_C::DrawText(const class FText& Character, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "DrawText");

	Params::BP_DialogueEventManager_C_DrawText Parms{};

	Parms.Character = std::move(Character);
	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.Event_OnMessageEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::Event_OnMessageEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "Event_OnMessageEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.ExecuteUbergraph_BP_DialogueEventManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::ExecuteUbergraph_BP_DialogueEventManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "ExecuteUbergraph_BP_DialogueEventManager");

	Params::BP_DialogueEventManager_C_ExecuteUbergraph_BP_DialogueEventManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.Initialize
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.InTextWindow
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::InTextWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "InTextWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.Motion_WaitEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::Motion_WaitEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "Motion_WaitEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.OnAcctptKeyPressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          newParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::OnAcctptKeyPressed(class UObject* newParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "OnAcctptKeyPressed");

	Params::BP_DialogueEventManager_C_OnAcctptKeyPressed Parms{};

	Parms.newParam = newParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.OnFullScreenMouseClick
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::OnFullScreenMouseClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "OnFullScreenMouseClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.OnRewardDisplayEnd_Impl
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::OnRewardDisplayEnd_Impl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "OnRewardDisplayEnd_Impl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.OutTextWindow
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::OutTextWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "OutTextWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.PlayDisplayAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AnimationName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::PlayDisplayAnimation(class FName AnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "PlayDisplayAnimation");

	Params::BP_DialogueEventManager_C_PlayDisplayAnimation Parms{};

	Parms.AnimationName = AnimationName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.PlayDisplayAnimation_EndWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AnimationName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::PlayDisplayAnimation_EndWait(class FName AnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "PlayDisplayAnimation_EndWait");

	Params::BP_DialogueEventManager_C_PlayDisplayAnimation_EndWait Parms{};

	Parms.AnimationName = AnimationName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.PrintLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAppLogLevel                            LogLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Log                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::PrintLog(EAppLogLevel LogLevel, const class FString& Log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "PrintLog");

	Params::BP_DialogueEventManager_C_PrintLog Parms{};

	Parms.LogLevel = LogLevel;
	Parms.Log = std::move(Log);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.ScreenToWorldPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         WorldPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::ScreenToWorldPosition(const struct FVector2D& ScreenPosition, double Length, struct FVector* WorldPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "ScreenToWorldPosition");

	Params::BP_DialogueEventManager_C_ScreenToWorldPosition Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.Length = Length;

	UObject::ProcessEvent(Func, &Parms);

	if (WorldPosition != nullptr)
		*WorldPosition = std::move(Parms.WorldPosition);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetCharacter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LeftCharacter_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             RightCharacter_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetCharacter(class FName LeftCharacter_0, class FName RightCharacter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetCharacter");

	Params::BP_DialogueEventManager_C_SetCharacter Parms{};

	Parms.LeftCharacter_0 = LeftCharacter_0;
	Parms.RightCharacter_0 = RightCharacter_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WidgetID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetDisplay(class FName WidgetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetDisplay");

	Params::BP_DialogueEventManager_C_SetDisplay Parms{};

	Parms.WidgetID = WidgetID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetDisplayMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAC_DialogueEventDisplay_C**      AsAC_DialogueEventDisplay                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetDisplayMotion(class FName Motion, class AAC_DialogueEventDisplay_C** AsAC_DialogueEventDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetDisplayMotion");

	Params::BP_DialogueEventManager_C_SetDisplayMotion Parms{};

	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);

	if (AsAC_DialogueEventDisplay != nullptr)
		*AsAC_DialogueEventDisplay = Parms.AsAC_DialogueEventDisplay;
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetDodonpaMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetDodonpaMotion(class FName Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetDodonpaMotion");

	Params::BP_DialogueEventManager_C_SetDodonpaMotion Parms{};

	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetFOV
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameModeId                             GameModeID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetFOV(EGameModeId GameModeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetFOV");

	Params::BP_DialogueEventManager_C_SetFOV Parms{};

	Parms.GameModeID = GameModeID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetImage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UMaterial>         Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetImage(TSoftObjectPtr<class UMaterial> Material, TSoftObjectPtr<class UTexture2D> Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetImage");

	Params::BP_DialogueEventManager_C_SetImage Parms{};

	Parms.Material = Material;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetMenuMotion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetMenuMotion(class FName Character, class FName Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetMenuMotion");

	Params::BP_DialogueEventManager_C_SetMenuMotion Parms{};

	Parms.Character = Character;
	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetMenuSpeechBubbleIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetMenuSpeechBubbleIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetMenuSpeechBubbleIndex");

	Params::BP_DialogueEventManager_C_SetMenuSpeechBubbleIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetMenuSpeechBubbleVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetMenuSpeechBubbleVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetMenuSpeechBubbleVisible");

	Params::BP_DialogueEventManager_C_SetMenuSpeechBubbleVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetMenuText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_DialogueEventManager_C::SetMenuText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetMenuText");

	Params::BP_DialogueEventManager_C_SetMenuText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetMotion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetMotion(class FName Character, class FName Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetMotion");

	Params::BP_DialogueEventManager_C_SetMotion Parms{};

	Parms.Character = Character;
	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetMotion_EndWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetMotion_EndWait(class FName Character, class FName Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetMotion_EndWait");

	Params::BP_DialogueEventManager_C_SetMotion_EndWait Parms{};

	Parms.Character = Character;
	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetRewardGetDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName                       InRewardAchievementDataName                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SetRewardGetDisplay(const class FName InRewardAchievementDataName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetRewardGetDisplay");

	Params::BP_DialogueEventManager_C_SetRewardGetDisplay Parms{};

	Parms.InRewardAchievementDataName = InRewardAchievementDataName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetupDodonpaActor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::SetupDodonpaActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetupDodonpaActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SetupFestaEventData
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::SetupFestaEventData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SetupFestaEventData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.ShowBG
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::ShowBG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "ShowBG");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.SoundPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             QueName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogueEventManager_C::SoundPlay(class FName QueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "SoundPlay");

	Params::BP_DialogueEventManager_C_SoundPlay Parms{};

	Parms.QueName = QueName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogueEventManager.BP_DialogueEventManager_C.UnbindEvent_WaitAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogueEventManager_C::UnbindEvent_WaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogueEventManager_C", "UnbindEvent_WaitAnimation");

	UObject::ProcessEvent(Func, nullptr);
}

}

