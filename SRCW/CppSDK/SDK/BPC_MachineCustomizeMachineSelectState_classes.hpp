#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MachineCustomizeMachineSelectState

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UnionLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_MachineCustomizeMachineSelectState.BPC_MachineCustomizeMachineSelectState_C
// 0x0030 (0x0128 - 0x00F8)
class UBPC_MachineCustomizeMachineSelectState_C final : public UMachineCustomizeMachineSelectState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AMachineCustomizeSequence*              Sequence;                                          // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UHintPopupWindow*                       TipsWindow;                                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHintId                                       FirstGarageTipsId;                                 // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    LastMachineId;                                     // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle;                                       // 0x0118(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RacerUpdateDelay;                                  // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetRacerCustomizeData(const struct FUserMachineCustomizeData& InCustomizeData);
	void UpdateGarageData();
	void SetRacerHidden(bool IsHidden);
	void UpdateRacer(EMachineId InMachineID);
	void OnSetup();
	void SetProperties();
	void EventTipsWindow_CloseEndDelegate();
	void EventMachineSelectWindow_TimerEvent();
	void EventPartsSelectWindow_OnMachineTypeScrollEndEvent(int32 SelectedPlayerControllerIndex, ECarStatusType SelectedMachineType, EMachineId SelectedBaseMachineId);
	void EventPartsSelectWindow_OnMachineTypeCancelEvent(int32 SelectedPlayerControllerIndex);
	void EventPartsSelectWindow_OnMachineTypeDecideEvent(int32 SelectedPlayerControllerIndex, ECarStatusType SelectedMachineType, EMachineId SelectedBaseMachineId);
	void HideTipsWindow();
	void ShowTipsWindow(EHintId InHintId);
	void カスタムイベント();
	void EventShowTips();
	void BindPage();
	void UnbindPage();
	void BindMachineTypeSelectWindow(class UMachineTypeScrollControl* InMachineTypeSelectWindow);
	void UnbindMachineTypeSelectWindow(class UMachineTypeScrollControl* InMachineTypeSelectWindow);
	void ExecuteUbergraph_BPC_MachineCustomizeMachineSelectState(int32 EntryPoint);

	class AGarageCamera* GetCamera() const;
	void IsOpenFirstGarageTipsWindow(bool* bEnableOpenWindow) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_MachineCustomizeMachineSelectState_C">();
	}
	static class UBPC_MachineCustomizeMachineSelectState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_MachineCustomizeMachineSelectState_C>();
	}
};
static_assert(alignof(UBPC_MachineCustomizeMachineSelectState_C) == 0x000008, "Wrong alignment on UBPC_MachineCustomizeMachineSelectState_C");
static_assert(sizeof(UBPC_MachineCustomizeMachineSelectState_C) == 0x000128, "Wrong size on UBPC_MachineCustomizeMachineSelectState_C");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, UberGraphFrame) == 0x0000F8, "Member 'UBPC_MachineCustomizeMachineSelectState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, Sequence) == 0x000100, "Member 'UBPC_MachineCustomizeMachineSelectState_C::Sequence' has a wrong offset!");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, TipsWindow) == 0x000108, "Member 'UBPC_MachineCustomizeMachineSelectState_C::TipsWindow' has a wrong offset!");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, FirstGarageTipsId) == 0x000110, "Member 'UBPC_MachineCustomizeMachineSelectState_C::FirstGarageTipsId' has a wrong offset!");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, LastMachineId) == 0x000111, "Member 'UBPC_MachineCustomizeMachineSelectState_C::LastMachineId' has a wrong offset!");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, TimerHandle) == 0x000118, "Member 'UBPC_MachineCustomizeMachineSelectState_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UBPC_MachineCustomizeMachineSelectState_C, RacerUpdateDelay) == 0x000120, "Member 'UBPC_MachineCustomizeMachineSelectState_C::RacerUpdateDelay' has a wrong offset!");

}

