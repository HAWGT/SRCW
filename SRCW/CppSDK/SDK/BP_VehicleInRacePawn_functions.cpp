#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleInRacePawn

#include "Basic.hpp"

#include "BP_VehicleInRacePawn_classes.hpp"
#include "BP_VehicleInRacePawn_parameters.hpp"


namespace SDK
{

// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.ChangeVehicleSize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SizeRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::ChangeVehicleSize(float SizeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "ChangeVehicleSize");

	Params::BP_VehicleInRacePawn_C_ChangeVehicleSize Parms{};

	Parms.SizeRate = SizeRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.ExecuteUbergraph_BP_VehicleInRacePawn
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::ExecuteUbergraph_BP_VehicleInRacePawn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "ExecuteUbergraph_BP_VehicleInRacePawn");

	Params::BP_VehicleInRacePawn_C_ExecuteUbergraph_BP_VehicleInRacePawn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnBlinkEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWithDriver                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnBlinkEnd(bool bWithDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnBlinkEnd");

	Params::BP_VehicleInRacePawn_C_OnBlinkEnd Parms{};

	Parms.bWithDriver = bWithDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnBlinkStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Color                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithDriver                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnBlinkStart(const struct FLinearColor& Color, bool bWithDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnBlinkStart");

	Params::BP_VehicleInRacePawn_C_OnBlinkStart Parms{};

	Parms.Color = std::move(Color);
	Parms.bWithDriver = bWithDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnDamage
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VehicleInRacePawn_C::OnDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnDamageSpin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AVehicleBaseActor*                TargetVehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPlay                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnDamageSpin(class AVehicleBaseActor* TargetVehicle, bool bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnDamageSpin");

	Params::BP_VehicleInRacePawn_C_OnDamageSpin Parms{};

	Parms.TargetVehicle = TargetVehicle;
	Parms.bIsPlay = bIsPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnDrift
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargeLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnDrift(int32 ChargeLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnDrift");

	Params::BP_VehicleInRacePawn_C_OnDrift Parms{};

	Parms.ChargeLevel = ChargeLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnFadeOutInk
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsPlay                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnFadeOutInk(bool bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnFadeOutInk");

	Params::BP_VehicleInRacePawn_C_OnFadeOutInk Parms{};

	Parms.bIsPlay = bIsPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnRainbowBlinkEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWithDriver                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnRainbowBlinkEnd(bool bWithDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnRainbowBlinkEnd");

	Params::BP_VehicleInRacePawn_C_OnRainbowBlinkEnd Parms{};

	Parms.bWithDriver = bWithDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnRainbowBlinkStart
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWithDriver                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::OnRainbowBlinkStart(bool bWithDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnRainbowBlinkStart");

	Params::BP_VehicleInRacePawn_C_OnRainbowBlinkStart Parms{};

	Parms.bWithDriver = bWithDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.OnResultCamera
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VehicleInRacePawn_C::OnResultCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "OnResultCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.SetHoldItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemId                                 ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemThrowDirection                     ThrowType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLocalPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUpdateThrowType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bGadgetLuckyItem                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::SetHoldItem(EItemId ItemId, EItemThrowDirection ThrowType, int32 Value, bool bIsLocalPlayer, bool bUpdateThrowType, bool bGadgetLuckyItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "SetHoldItem");

	Params::BP_VehicleInRacePawn_C_SetHoldItem Parms{};

	Parms.ItemId = ItemId;
	Parms.ThrowType = ThrowType;
	Parms.Value = Value;
	Parms.bIsLocalPlayer = bIsLocalPlayer;
	Parms.bUpdateThrowType = bUpdateThrowType;
	Parms.bGadgetLuckyItem = bGadgetLuckyItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.SpawnDriverActor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               DriverId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsHoverboard                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUseRivalSkin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleInRacePawn_C::SpawnDriverActor(EDriverId DriverId, bool bIsHoverboard, bool bUseRivalSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "SpawnDriverActor");

	Params::BP_VehicleInRacePawn_C_SpawnDriverActor Parms{};

	Parms.DriverId = DriverId;
	Parms.bIsHoverboard = bIsHoverboard;
	Parms.bUseRivalSkin = bUseRivalSkin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline CountDown__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_CountDown__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline CountDown__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline CountDown__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_CountDown__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline CountDown__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Damage In Intensity__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Damage_In_Intensity__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Damage In Intensity__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Damage In Intensity__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Damage_In_Intensity__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Damage In Intensity__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Damage Spin In Intensity__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Damage_Spin_In_Intensity__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Damage Spin In Intensity__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Damage Spin In Intensity__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Damage_Spin_In_Intensity__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Damage Spin In Intensity__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Drift In Intensity__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Drift_In_Intensity__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Drift In Intensity__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Drift In Intensity__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Drift_In_Intensity__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Drift In Intensity__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline FadeOut Ink__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_FadeOut_Ink__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline FadeOut Ink__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline FadeOut Ink__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_FadeOut_Ink__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline FadeOut Ink__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Rainbow__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Rainbow__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Rainbow__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Rainbow__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Rainbow__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Rainbow__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Scale Down__FinishedFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Scale_Down__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Scale Down__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleInRacePawn.BP_VehicleInRacePawn_C.Timeline Scale Down__UpdateFunc
// (BlueprintEvent)

void ABP_VehicleInRacePawn_C::Timeline_Scale_Down__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleInRacePawn_C", "Timeline Scale Down__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

