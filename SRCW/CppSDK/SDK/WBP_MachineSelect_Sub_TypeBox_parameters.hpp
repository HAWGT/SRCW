#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MachineSelect_Sub_TypeBox

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EMachineSelectMode_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature final
{
public:
	class UUnionUILoopScrollBox*                  FinishedWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature, FinishedWidget) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_BndEvt__WBP_MachineSelect_Sub_TypeBox_UnionScroll_K2Node_ComponentBoundEvent_0_ScrollAnimationEvent__DelegateSignature::FinishedWidget' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.Close
// 0x0001 (0x0001 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_Close final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_Close) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_Close");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_Close) == 0x000001, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_Close");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Close, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Close::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox
// 0x0010 (0x0010 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUILoopScrollBox*                  K2Node_ComponentBoundEvent_FinishedWidget;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox) == 0x000010, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox, EntryPoint) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox, K2Node_ComponentBoundEvent_FinishedWidget) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_ExecuteUbergraph_WBP_MachineSelect_Sub_TypeBox::K2Node_ComponentBoundEvent_FinishedWidget' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.OnScrollAnimFinishedEvent
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent final
{
public:
	class UUnionUILoopScrollBox*                  FinishedWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent) == 0x000008, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent, FinishedWidget) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_OnScrollAnimFinishedEvent::FinishedWidget' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.PlayScroll
// 0x0003 (0x0003 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_PlayScroll final
{
public:
	bool                                          bDownRight;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInImmediateReflection;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_PlayScroll) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_PlayScroll");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_PlayScroll) == 0x000003, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_PlayScroll");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_PlayScroll, bDownRight) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_PlayScroll::bDownRight' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_PlayScroll, bInImmediateReflection) == 0x000001, "Member 'WBP_MachineSelect_Sub_TypeBox_C_PlayScroll::bInImmediateReflection' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_PlayScroll, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_MachineSelect_Sub_TypeBox_C_PlayScroll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_PreConstruct");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_PreConstruct) == 0x000001, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_PreConstruct");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetCursorVisible
// 0x0005 (0x0005 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible final
{
public:
	bool                                          NewVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible) == 0x000005, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible, NewVisible) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible::NewVisible' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible, Temp_bool_Variable) == 0x000001, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible, Temp_byte_Variable) == 0x000002, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible, K2Node_Select_Default) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetCursorVisible::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetElementTexture
// 0x0030 (0x0030 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             InTexture;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeMachineIcon*                K2Node_DynamicCast_AsMachine_Type_Machine_Icon;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture) == 0x000030, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture, InIndex) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture::InIndex' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture, InTexture) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture::InTexture' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture, K2Node_DynamicCast_AsMachine_Type_Machine_Icon) == 0x000020, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture::K2Node_DynamicCast_AsMachine_Type_Machine_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetElementTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetFocusIndex
// 0x0048 (0x0048 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex final
{
public:
	int32                                         InSelectMachineIndex;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex) == 0x000048, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, InSelectMachineIndex) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::InSelectMachineIndex' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, Index_0) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, Temp_int_Variable) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x000040, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetFocusIndex::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetIconScale
// 0x0040 (0x0040 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetIconScale final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Scale;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ytransrate;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeMachineIcon*                K2Node_DynamicCast_AsMachine_Type_Machine_Icon;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetTextureScaleWithYTransrate_InScaleRate_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTextureScaleWithYTransrate_InY_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetIconScale");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale) == 0x000040, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetIconScale");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, Index_0) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, Scale) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::Scale' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, Ytransrate) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::Ytransrate' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, K2Node_DynamicCast_AsMachine_Type_Machine_Icon) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::K2Node_DynamicCast_AsMachine_Type_Machine_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, CallFunc_SetTextureScaleWithYTransrate_InScaleRate_ImplicitCast) == 0x000034, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::CallFunc_SetTextureScaleWithYTransrate_InScaleRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetIconScale, CallFunc_SetTextureScaleWithYTransrate_InY_ImplicitCast) == 0x000038, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetIconScale::CallFunc_SetTextureScaleWithYTransrate_InY_ImplicitCast' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetMachineID
// 0x0020 (0x0020 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetMachineID final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeMachineIcon*                K2Node_DynamicCast_AsMachine_Type_Machine_Icon;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetMachineID");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID) == 0x000020, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetMachineID");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID, Index_0) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineID::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID, MachineId) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineID::MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID, K2Node_DynamicCast_AsMachine_Type_Machine_Icon) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineID::K2Node_DynamicCast_AsMachine_Type_Machine_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineID::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetMachineType
// 0x0078 (0x0078 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetMachineType final
{
public:
	ECarStatusType                                machineType_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetMachineType");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType) == 0x000078, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetMachineType");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, machineType_0) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::machineType_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, Temp_byte_Variable) == 0x000001, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, Temp_struct_Variable) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, Temp_struct_Variable_3) == 0x000034, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, Temp_struct_Variable_4) == 0x000044, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, K2Node_Select_Default) == 0x000054, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineType, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetMachineTypeColorWidth
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromMaterial_ReturnValue;        // 0x0010(0x00D0)()
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth) == 0x000010, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth) == 0x0000E0, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth, Width) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth::Width' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth, CallFunc_MakeBrushFromMaterial_ReturnValue) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMachineTypeColorWidth::CallFunc_MakeBrushFromMaterial_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetMode final
{
public:
	EMachineSelectMode::EMachineSelectMode        InMode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetMode) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetMode");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetMode) == 0x000001, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetMode");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetMode, InMode) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetMode::InMode' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetPlayerControllerIndex
// 0x0060 (0x0060 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex) == 0x000060, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, Index_0) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, Temp_int_Variable) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, Temp_struct_Variable) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, Temp_struct_Variable_2) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, Temp_struct_Variable_3) == 0x000038, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex, K2Node_Select_Default) == 0x000050, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetPlayerControllerIndex::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.Setup
// 0x0160 (0x0160 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_Setup final
{
public:
	int32                                         TmpElementMax;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    TempMachineId;                                     // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineSelect_Sub_MachineBtn_C*    TempButton;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_MachineSelect_Sub_MachineBtn_C*> TempButtonList;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetMachineId_OutMachineId;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EMachineId>                            CallFunc_GetMachineIds_MachineIDs;                 // 0x0070(0x0010)(ReferenceParm)
	TArray<EMachineId>                            CallFunc_GetMachineIds_MachineIDs_1;               // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineSelect_Sub_MachineBtn_C*    CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMachineNum_OutMachineNum;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetMachineId_OutMachineId_1;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectMode::EMachineSelectMode        CallFunc_GetMode_OutMode;                          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedPlayerCount_ReturnValue;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMenuResourceElement*>           CallFunc_Initialize_OutElements;                   // 0x00C8(0x0010)(ReferenceParm)
	EMachineSelectMode::EMachineSelectMode        Temp_byte_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuResourceElement*                   CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineResourceElement_C*              K2Node_DynamicCast_AsMachine_Resource_Element;     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAllIndex_ReturnValue;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMachineNum_OutMachineNum_1;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcTmpElementMax_OutTmpElementMax;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_FindObject_ReturnValue;                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMenuResourcePreloader*                 K2Node_DynamicCast_AsMenu_Resource_Preloader;      // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_MachineBtn_C*    CallFunc_Create_ReturnValue;                       // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_MachineSelect_Sub_MachineBtn_C*> K2Node_MakeArray_Array;                       // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_Setup) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_Setup");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_Setup) == 0x000160, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_Setup");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, TmpElementMax) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::TmpElementMax' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, TempMachineId) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::TempMachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, TempIndex) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::TempIndex' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, TempButton) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::TempButton' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, TempButtonList) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::TempButtonList' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_name_Variable) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_name_Variable_1) == 0x000030, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_name_Variable_2) == 0x000038, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_name_Variable_3) == 0x000040, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_name_Variable_4) == 0x000048, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMachineId_OutMachineId) == 0x000054, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMachineId_OutMachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_int_Variable) == 0x000064, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMachineIds_MachineIDs) == 0x000070, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMachineIds_MachineIDs' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMachineIds_MachineIDs_1) == 0x000080, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMachineIds_MachineIDs_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Get_Item) == 0x000098, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Length_ReturnValue_3) == 0x0000A8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMachineNum_OutMachineNum) == 0x0000AC, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMachineNum_OutMachineNum' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_byte_Variable) == 0x0000B1, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Percent_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000B8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMachineId_OutMachineId_1) == 0x0000BC, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMachineId_OutMachineId_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMode_OutMode) == 0x0000BD, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMode_OutMode' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetSelectedPlayerCount_ReturnValue) == 0x0000C0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetSelectedPlayerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Initialize_OutElements) == 0x0000C8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Initialize_OutElements' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_byte_Variable_1) == 0x0000D8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_DynamicCast_AsMachine_Resource_Element) == 0x0000E8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_DynamicCast_AsMachine_Resource_Element' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_Select_Default) == 0x0000F4, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetAllIndex_ReturnValue) == 0x0000F8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetAllIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Length_ReturnValue_4) == 0x0000FC, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000100, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetMachineNum_OutMachineNum_1) == 0x000104, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetMachineNum_OutMachineNum_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_Select_Default_1) == 0x000108, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_CalcTmpElementMax_OutTmpElementMax) == 0x000110, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_CalcTmpElementMax_OutTmpElementMax' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_FindObject_ReturnValue) == 0x000118, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_FindObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_DynamicCast_AsMenu_Resource_Preloader) == 0x000120, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_DynamicCast_AsMenu_Resource_Preloader' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, Temp_int_Loop_Counter_Variable_1) == 0x00012C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Less_IntInt_ReturnValue_1) == 0x000130, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Add_IntInt_ReturnValue_2) == 0x000134, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_GetOwningPlayer_ReturnValue) == 0x000138, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Create_ReturnValue) == 0x000140, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, CallFunc_Array_Add_ReturnValue) == 0x000148, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_Setup, K2Node_MakeArray_Array) == 0x000150, "Member 'WBP_MachineSelect_Sub_TypeBox_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.SetupButton
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_SetupButton final
{
public:
	class UWBP_MachineSelect_Sub_MachineBtn_C*    InButton;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    InMachineID;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineSelect_Sub_MachineBtn_C*    Button;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimpleCustomMachineId_ReturnValue;      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectMode::EMachineSelectMode        CallFunc_GetMode_OutMode;                          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectMode::EMachineSelectMode        CallFunc_GetMode_OutMode_1;                        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0028(0x0078)()
	bool                                          CallFunc_IsCustomMachineId_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicMachineId_ReturnValue;             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconTexture_OutIconTexture;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconTexture_bOutIsFound;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicCustomMachineId_ReturnValue;       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMachineNew_ReturnValue;                 // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicCustomMachineId_ReturnValue_1;     // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMilestoneVersion                             CallFunc_GetMileStoneVersion_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectMode::EMachineSelectMode        Temp_byte_Variable_2;                              // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_SetupButton");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton) == 0x0000C8, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_SetupButton");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, InButton) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::InButton' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, InIndex) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::InIndex' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, InMachineID) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::InMachineID' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, MachineId) == 0x00000D, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Index_0) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Button) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Button' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Temp_byte_Variable) == 0x000020, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_MakeLiteralByte_ReturnValue) == 0x000022, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_IsSimpleCustomMachineId_ReturnValue) == 0x000023, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_IsSimpleCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_GetMode_OutMode) == 0x000024, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_GetMode_OutMode' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_GetMode_OutMode_1) == 0x000025, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_GetMode_OutMode_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000026, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_IsCustomMachineId_ReturnValue) == 0x0000A0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_IsCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_IsBasicMachineId_ReturnValue) == 0x0000A2, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_IsBasicMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_GetIconTexture_OutIconTexture) == 0x0000A8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_GetIconTexture_OutIconTexture' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_GetIconTexture_bOutIsFound) == 0x0000B0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_GetIconTexture_bOutIsFound' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_IsBasicCustomMachineId_ReturnValue) == 0x0000B1, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_IsBasicCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_IsMachineNew_ReturnValue) == 0x0000B3, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_IsMachineNew_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Temp_bool_Variable) == 0x0000B4, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, K2Node_Select_Default) == 0x0000B5, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Temp_bool_Variable_1) == 0x0000B6, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_IsBasicCustomMachineId_ReturnValue_1) == 0x0000B7, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_IsBasicCustomMachineId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_SelectInt_ReturnValue) == 0x0000B8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_GetMileStoneVersion_ReturnValue) == 0x0000BC, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_GetMileStoneVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BD, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000BE, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, Temp_byte_Variable_2) == 0x0000BF, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_BooleanNAND_ReturnValue) == 0x0000C0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C1, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, K2Node_Select_Default_1) == 0x0000C2, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_SetupButton, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C3, "Member 'WBP_MachineSelect_Sub_TypeBox_C_SetupButton::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.UpdateIconScale
// 0x0050 (0x0050 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachineIconDisplayData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeMachineIcon*                K2Node_DynamicCast_AsMachine_Type_Machine_Icon;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale) == 0x000050, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_GetEnumeratorName_ReturnValue) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, K2Node_DynamicCast_AsMachine_Type_Machine_Icon) == 0x000038, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::K2Node_DynamicCast_AsMachine_Type_Machine_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.UpdateIconSizeAndYTransrate
// 0x0068 (0x0068 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bYTransrateAdjust;                                 // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachineIconDisplayData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetIconScale_Scale_ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate) == 0x000068, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, DataTable) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::DataTable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, Index_0) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, bYTransrateAdjust) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::bYTransrateAdjust' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, Temp_real_Variable) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, Temp_bool_Variable) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_GetEnumeratorName_ReturnValue) == 0x00001C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000038, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, K2Node_Select_Default) == 0x000050, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_SetIconScale_Scale_ImplicitCast) == 0x000058, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_SetIconScale_Scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconSizeAndYTransrate::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.UpdateIconTextures
// 0x0190 (0x0190 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures final
{
public:
	EMachineId                                    TempMachineId;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectMode::EMachineSelectMode        Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0010(0x0078)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachineIconDisplayData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomMachineId_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData_1; // 0x00B0(0x0078)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMilestoneVersion                             CallFunc_GetMileStoneVersion_ReturnValue;          // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectMode::EMachineSelectMode        Temp_byte_Variable_3;                              // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicCustomMachineId_ReturnValue;       // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomMachineId_ReturnValue_1;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconTexture_OutIconTexture;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconTexture_bOutIsFound;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeMachineIcon*                K2Node_DynamicCast_AsMachine_Type_Machine_Icon;    // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetMachineId_ReturnValue;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures) == 0x000190, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, TempMachineId) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::TempMachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_bool_Variable) == 0x000001, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_byte_Variable) == 0x000003, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_byte_Variable_2) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetEnumeratorName_ReturnValue) == 0x00008C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_IsCustomMachineId_ReturnValue) == 0x0000A9, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_IsCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData_1) == 0x0000B0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_Select_Default) == 0x00012D, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetMileStoneVersion_ReturnValue) == 0x00012E, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetMileStoneVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00012F, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000130, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_bool_Variable_2) == 0x000131, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_BooleanNAND_ReturnValue) == 0x000132, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_byte_Variable_3) == 0x000133, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_IsBasicCustomMachineId_ReturnValue) == 0x000134, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_IsBasicCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_Select_Default_1) == 0x000135, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_SelectInt_ReturnValue) == 0x000138, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_real_Variable) == 0x000140, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_IsCustomMachineId_ReturnValue_1) == 0x000148, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_IsCustomMachineId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_BooleanAND_ReturnValue) == 0x000149, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetIconTexture_OutIconTexture) == 0x000150, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetIconTexture_OutIconTexture' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetIconTexture_bOutIsFound) == 0x000158, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetIconTexture_bOutIsFound' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_BooleanAND_ReturnValue_1) == 0x000159, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_Select_Default_2) == 0x00015A, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, Temp_bool_Variable_3) == 0x00015B, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_Select_Default_3) == 0x000160, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_Array_Get_Item) == 0x000168, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_DynamicCast_AsMachine_Type_Machine_Icon) == 0x000170, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_DynamicCast_AsMachine_Type_Machine_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, CallFunc_GetMachineId_ReturnValue) == 0x000181, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::CallFunc_GetMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures, K2Node_Select_Option_0_ImplicitCast) == 0x000188, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateIconTextures::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.UpdateMachineIds
// 0x0018 (0x0018 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EMachineId>                            CallFunc_GetSelectableMachineIds_OutMachineIds;    // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds) == 0x000018, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000001, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds, CallFunc_GetSelectableMachineIds_OutMachineIds) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_UpdateMachineIds::CallFunc_GetSelectableMachineIds_OutMachineIds' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.CalcTmpElementMax
// 0x0020 (0x0020 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InAlreadyCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutTmpElementMax;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax) == 0x000004, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax) == 0x000020, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, InCount) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::InCount' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, InAlreadyCount) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::InAlreadyCount' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, OutTmpElementMax) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::OutTmpElementMax' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, Max) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::Max' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000014, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'WBP_MachineSelect_Sub_TypeBox_C_CalcTmpElementMax::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetCenter
// 0x0028 (0x0028 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetCenter final
{
public:
	class UObject*                                Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetMachineIdCurrent_MachineId;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_MachineBtn_C*    K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndex_ReturnValue;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetCenter");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter) == 0x000028, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetCenter");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, Output) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::Output' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, Index_0) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, MachineId) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, CallFunc_GetMachineIdCurrent_MachineId) == 0x00000D, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::CallFunc_GetMachineIdCurrent_MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCenter, CallFunc_GetIndex_ReturnValue) == 0x000024, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCenter::CallFunc_GetIndex_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetCurrentItemDisplayIndex
// 0x0020 (0x0020 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex final
{
public:
	int32                                         OutDisplayIndex;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMachineNum_OutMachineNum;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetCenter_Output;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCenter_Index;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetCenter_MachineId;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex) == 0x000020, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex, OutDisplayIndex) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex::OutDisplayIndex' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex, CallFunc_GetMachineNum_OutMachineNum) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex::CallFunc_GetMachineNum_OutMachineNum' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex, CallFunc_GetCenter_Output) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex::CallFunc_GetCenter_Output' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex, CallFunc_GetCenter_Index) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex::CallFunc_GetCenter_Index' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex, CallFunc_GetCenter_MachineId) == 0x000014, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex::CallFunc_GetCenter_MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetCurrentItemDisplayIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetIconTexture
// 0x0268 (0x0268 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             OutIconTexture;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutIsFound;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable;                          // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_1;                        // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_2;                        // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_3;                        // 0x0090(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_4;                        // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UMachineIconSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EMachineId, class UTexture2D*>           CallFunc_GetTextureMap_OutTextureMap;              // 0x00E8(0x0050)()
	EMilestoneVersion                             CallFunc_GetMileStoneVersion_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                Temp_byte_Variable;                                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0148(0x0078)()
	class UTexture2D*                             K2Node_DynamicCast_As_____2D;                      // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue;             // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x01E0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As_____2D_1;                    // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicCustomMachineId_ReturnValue;       // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetBasicMachineIconTextureById_ReturnValue; // 0x0220(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicMachineId_ReturnValue;             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As_____2D_2;                    // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture) == 0x000268, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, InMachineID) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::InMachineID' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, OutIconTexture) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::OutIconTexture' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, bOutIsFound) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::bOutIsFound' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, Temp_softobject_Variable) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, Temp_softobject_Variable_1) == 0x000040, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, Temp_softobject_Variable_2) == 0x000068, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, Temp_softobject_Variable_3) == 0x000090, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, Temp_softobject_Variable_4) == 0x0000B8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000E0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_GetTextureMap_OutTextureMap) == 0x0000E8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_GetTextureMap_OutTextureMap' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_GetMileStoneVersion_ReturnValue) == 0x000138, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_GetMileStoneVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, Temp_byte_Variable) == 0x000139, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00013A, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00013B, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000140, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000148, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_DynamicCast_As_____2D) == 0x0001C0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_DynamicCast_As_____2D' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_GetCarStatusType_ReturnValue) == 0x0001C9, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_GetCarStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_Map_Find_ReturnValue) == 0x0001D8, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_Select_Default) == 0x0001E0, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000208, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_DynamicCast_As_____2D_1) == 0x000210, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_DynamicCast_As_____2D_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_DynamicCast_bSuccess_1) == 0x000218, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_IsBasicCustomMachineId_ReturnValue) == 0x000219, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_IsBasicCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_GetBasicMachineIconTextureById_ReturnValue) == 0x000220, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_GetBasicMachineIconTextureById_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_IsBasicMachineId_ReturnValue) == 0x000248, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_IsBasicMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000250, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_DynamicCast_As_____2D_2) == 0x000258, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_DynamicCast_As_____2D_2' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetIconTexture::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMachineId
// 0x0018 (0x0018 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMachineId final
{
public:
	int32                                         InMachineIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    OutMachineId;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EMachineId>                            CallFunc_GetMachineIds_MachineIDs;                 // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineId) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMachineId");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineId) == 0x000018, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMachineId");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineId, InMachineIndex) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineId::InMachineIndex' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineId, OutMachineId) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineId::OutMachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineId, CallFunc_GetMachineIds_MachineIDs) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineId::CallFunc_GetMachineIds_MachineIDs' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMachineIdCurrent
// 0x0020 (0x0020 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_MachineBtn_C*    K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetMachineId_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent) == 0x000020, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent, MachineId) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent::MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent, CallFunc_GetMachineId_ReturnValue) == 0x000019, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdCurrent::CallFunc_GetMachineId_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMachineIdNext
// 0x0028 (0x0028 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext final
{
public:
	bool                                          isNext;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_MachineBtn_C*    K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetMachineId_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext) == 0x000028, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, isNext) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::isNext' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, MachineId) == 0x000001, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::MachineId' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, Temp_bool_Variable) == 0x000002, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, Temp_int_Variable) == 0x000004, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, Temp_int_Variable_1) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, K2Node_Select_Default) == 0x00000C, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Machine_Btn' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext, CallFunc_GetMachineId_ReturnValue) == 0x000021, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIdNext::CallFunc_GetMachineId_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMachineIds
// 0x0010 (0x0010 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds final
{
public:
	TArray<EMachineId>                            MachineIds_0;                                      // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds) == 0x000010, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds, MachineIds_0) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineIds::MachineIds_0' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMachineNum
// 0x0020 (0x0020 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum final
{
public:
	int32                                         OutMachineNum;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EMachineId>                            CallFunc_GetMachineIds_MachineIDs;                 // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum) == 0x000008, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum) == 0x000020, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum, OutMachineNum) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum::OutMachineNum' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum, CallFunc_GetMachineIds_MachineIDs) == 0x000008, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum::CallFunc_GetMachineIds_MachineIDs' has a wrong offset!");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMachineType
// 0x0001 (0x0001 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMachineType final
{
public:
	ECarStatusType                                Machine_Type;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineType) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMachineType");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineType) == 0x000001, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMachineType");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMachineType, Machine_Type) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMachineType::Machine_Type' has a wrong offset!");

// Function WBP_MachineSelect_Sub_TypeBox.WBP_MachineSelect_Sub_TypeBox_C.GetMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_MachineSelect_Sub_TypeBox_C_GetMode final
{
public:
	EMachineSelectMode::EMachineSelectMode        OutMode;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineSelect_Sub_TypeBox_C_GetMode) == 0x000001, "Wrong alignment on WBP_MachineSelect_Sub_TypeBox_C_GetMode");
static_assert(sizeof(WBP_MachineSelect_Sub_TypeBox_C_GetMode) == 0x000001, "Wrong size on WBP_MachineSelect_Sub_TypeBox_C_GetMode");
static_assert(offsetof(WBP_MachineSelect_Sub_TypeBox_C_GetMode, OutMode) == 0x000000, "Member 'WBP_MachineSelect_Sub_TypeBox_C_GetMode::OutMode' has a wrong offset!");

}

