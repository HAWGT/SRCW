#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C.ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header
// 0x0130 (0x0130 - 0x0000)
struct WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_Stop_ReturnValue;                         // 0x0004(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue;                  // 0x001C(0x0004)()
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0024(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x0028(0x0004)()
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_1;           // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_2;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnablePlaySound;              // 0x0090(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     K2Node_CustomEvent_SoundPan;                       // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_Boost_C*              K2Node_CustomEvent_WBP_Boost;                      // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsBoost;                        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue_1;                // 0x00A4(0x0004)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_1;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_1;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_2;             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_2;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetUnionRacers_ReturnValue_3;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_3;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_Stop_ReturnValue_1;                       // 0x011C(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header");
static_assert(sizeof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header) == 0x000130, "Wrong size on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, EntryPoint) == 0x000000, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_Stop_ReturnValue) == 0x000004, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsPlaying_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_SetPanSplit_ReturnValue) == 0x00001C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_SetPanSplit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CustomEvent_InVisibility) == 0x000020, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_SoundPlay_ReturnValue) == 0x000024, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_SoundPlay_ReturnValue_1) == 0x000028, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000040, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000048, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000058, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000060, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_CreatePlayAnimationProxyObject_Result_2) == 0x000068, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_CreatePlayAnimationProxyObject_Result_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2) == 0x000070, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue_2) == 0x000079, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000080, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000088, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CustomEvent_IsEnablePlaySound) == 0x000090, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CustomEvent_IsEnablePlaySound' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CustomEvent_SoundPan) == 0x000091, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CustomEvent_SoundPan' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CustomEvent_WBP_Boost) == 0x000098, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CustomEvent_WBP_Boost' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CustomEvent_IsBoost) == 0x0000A0, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CustomEvent_IsBoost' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue_3) == 0x0000A1, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_SetPanSplit_ReturnValue_1) == 0x0000A4, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_SetPanSplit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetUnionRacers_ReturnValue) == 0x0000B8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetUnionRacers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetRaceHUDRef_ReturnValue) == 0x0000C0, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetRaceHUDRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetUnionRacers_ReturnValue_1) == 0x0000C8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetUnionRacers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue_4) == 0x0000D0, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetRaceHUDRef_ReturnValue_1) == 0x0000D8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetRaceHUDRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue_5) == 0x0000E0, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetUnionRacers_ReturnValue_2) == 0x0000E8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetUnionRacers_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetRaceHUDRef_ReturnValue_2) == 0x0000F0, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetRaceHUDRef_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetUnionRacers_ReturnValue_3) == 0x0000F8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetUnionRacers_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_GetRaceHUDRef_ReturnValue_3) == 0x000100, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_GetRaceHUDRef_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsValid_ReturnValue_6) == 0x000108, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, K2Node_CreateDelegate_OutputDelegate_3) == 0x00010C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_Stop_ReturnValue_1) == 0x00011C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_Stop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_IsPlaying_ReturnValue_1) == 0x000120, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_Delay_Duration_ImplicitCast) == 0x000124, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000128, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C.OnVisibilityChangedEvent
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent");
static_assert(sizeof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent, InVisibility) == 0x000000, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_OnVisibilityChangedEvent::InVisibility' has a wrong offset!");

// Function WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C.SetParam
// 0x0050 (0x0050 - 0x0000)
struct WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam final
{
public:
	int32                                         TypeIndex_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex_0;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIrregularEventId                             Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam");
static_assert(sizeof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam) == 0x000050, "Wrong size on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, TypeIndex_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::TypeIndex_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, PlayerIndex_0) == 0x000004, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::PlayerIndex_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_byte_Variable) == 0x000008, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable) == 0x00000C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable_1) == 0x000010, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable_2) == 0x000014, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable_3) == 0x000018, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable_4) == 0x00001C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable_5) == 0x000020, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, Temp_int_Variable_6) == 0x000024, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, CallFunc_Conv_IntToByte_ReturnValue) == 0x000028, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, CallFunc_GetValidValue_ReturnValue) == 0x000029, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, CallFunc_MakeLiteralInt_ReturnValue) == 0x00002C, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, K2Node_Select_Default) == 0x000030, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000048, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetParam::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C.SetText
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText final
{
public:
	EIrregularEventId                             Type_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIrregularEventId                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_2;                              // 0x0028(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_3;                              // 0x0038(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_4;                              // 0x0048(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_5;                              // 0x0058(0x0010)(ConstParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0068(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0078(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0088(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0098(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x00A8(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x00B8(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x00C8(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0010)(ConstParm)
};
static_assert(alignof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText");
static_assert(sizeof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText) == 0x0000E8, "Wrong size on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Type_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Type_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_byte_Variable) == 0x000001, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_text_Variable) == 0x000008, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_text_Variable_1) == 0x000018, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_text_Variable_2) == 0x000028, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_text_Variable_3) == 0x000038, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_text_Variable_4) == 0x000048, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, Temp_text_Variable_5) == 0x000058, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue) == 0x000068, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000078, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000088, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000098, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0000A8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0000B8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, CallFunc_MakeLiteralText_ReturnValue_6) == 0x0000C8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText, K2Node_Select_Default) == 0x0000D8, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_SetText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C.StartIrregular
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular final
{
public:
	bool                                          EnablePlaySound_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular");
static_assert(sizeof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular, EnablePlaySound_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregular::EnablePlaySound_0' has a wrong offset!");

// Function WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C.StartIrregularEvent
// 0x0018 (0x0018 - 0x0000)
struct WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent final
{
public:
	bool                                          IsEnablePlaySound;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     SoundPan_0;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_Boost_C*              WBP_Boost;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBoost;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent");
static_assert(sizeof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent) == 0x000018, "Wrong size on WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent, IsEnablePlaySound) == 0x000000, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent::IsEnablePlaySound' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent, SoundPan_0) == 0x000001, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent::SoundPan_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent, WBP_Boost) == 0x000008, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent::WBP_Boost' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent, IsBoost) == 0x000010, "Member 'WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C_StartIrregularEvent::IsBoost' has a wrong offset!");

}

