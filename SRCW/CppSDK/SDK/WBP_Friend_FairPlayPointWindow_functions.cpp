#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_FairPlayPointWindow

#include "Basic.hpp"

#include "WBP_Friend_FairPlayPointWindow_classes.hpp"
#include "WBP_Friend_FairPlayPointWindow_parameters.hpp"


namespace SDK
{

// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.ExecuteUbergraph_WBP_Friend_FairPlayPointWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Friend_FairPlayPointWindow_C::ExecuteUbergraph_WBP_Friend_FairPlayPointWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_FairPlayPointWindow_C", "ExecuteUbergraph_WBP_Friend_FairPlayPointWindow");

	Params::WBP_Friend_FairPlayPointWindow_C_ExecuteUbergraph_WBP_Friend_FairPlayPointWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.OnBackKeyPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Friend_FairPlayPointWindow_C::OnBackKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_FairPlayPointWindow_C", "OnBackKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Friend_FairPlayPointWindow_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_FairPlayPointWindow_C", "OnFocusReceived");

	Params::WBP_Friend_FairPlayPointWindow_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Friend_FairPlayPointWindow.WBP_Friend_FairPlayPointWindow_C.Setup
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InFairPlayPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInBan                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    InPenaltyEndTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_Friend_FairPlayPointWindow_C::Setup(int32 InFairPlayPoint, bool bInBan, const class FString& InPenaltyEndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Friend_FairPlayPointWindow_C", "Setup");

	Params::WBP_Friend_FairPlayPointWindow_C_Setup Parms{};

	Parms.InFairPlayPoint = InFairPlayPoint;
	Parms.bInBan = bInBan;
	Parms.InPenaltyEndTime = std::move(InPenaltyEndTime);

	UObject::ProcessEvent(Func, &Parms);
}

}

