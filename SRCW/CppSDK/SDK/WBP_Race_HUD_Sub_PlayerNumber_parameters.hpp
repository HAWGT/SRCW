#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_PlayerNumber

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Sub_PlayerNumber.WBP_Race_HUD_Sub_PlayerNumber_C.ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber
// 0x0068 (0x0068 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0038(0x0010)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsGroup;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLocalMulti;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0058(0x0010)()
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber) == 0x000068, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, EntryPoint) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, Temp_int_Variable) == 0x000004, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, Temp_text_Variable) == 0x000008, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, Temp_text_Variable_1) == 0x000018, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, Temp_text_Variable_2) == 0x000028, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, Temp_text_Variable_3) == 0x000038, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, K2Node_Event_IsDesignTime) == 0x000048, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, K2Node_CustomEvent_Index) == 0x00004C, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, K2Node_CustomEvent_IsGroup) == 0x000050, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::K2Node_CustomEvent_IsGroup' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, K2Node_CustomEvent_IsLocalMulti) == 0x000051, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::K2Node_CustomEvent_IsLocalMulti' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber, K2Node_Select_Default) == 0x000058, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_ExecuteUbergraph_WBP_Race_HUD_Sub_PlayerNumber::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Race_HUD_Sub_PlayerNumber.WBP_Race_HUD_Sub_PlayerNumber_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Race_HUD_Sub_PlayerNumber.WBP_Race_HUD_Sub_PlayerNumber_C.SetBGColorInfo
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGroup;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalMulti;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo) == 0x000004, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo) == 0x000008, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo, Index_0) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo, IsGroup) == 0x000004, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo::IsGroup' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo, IsLocalMulti) == 0x000005, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_SetBGColorInfo::IsLocalMulti' has a wrong offset!");

// Function WBP_Race_HUD_Sub_PlayerNumber.WBP_Race_HUD_Sub_PlayerNumber_C.SetPlayerIndex
// 0x0018 (0x0018 - 0x0000)
struct WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex final
{
public:
	int32                                         NewPlayerIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex");
static_assert(sizeof(WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex) == 0x000018, "Wrong size on WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex, NewPlayerIndex) == 0x000000, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex::NewPlayerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_Race_HUD_Sub_PlayerNumber_C_SetPlayerIndex::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

