#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemVioletVoidObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemVioletVoidObject.BP_ItemVioletVoidObject_C
// 0x0030 (0x0710 - 0x06E0)
class ABP_ItemVioletVoidObject_C final : public AItemVioletVoidObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUnionStaticMeshComponent*              Debug;                                             // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        AppearAnimationTime;                               // 0x06F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EatAnimationTime;                                  // 0x06F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisappearAnimationTime;                            // 0x0700(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemVioletVoidObject(int32 EntryPoint);
	void GetAnimePlayRate(double PlayTime, double BaseFrame, double* PlayRate);
	bool IsMeshAnimEating();
	bool IsMeshAnimInSleep();
	void PlaySE2DEvent(class FName SEName);
	void ReceiveBeginPlay();
	void RequestMeshAnimAppearance(bool bAppearance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemVioletVoidObject_C">();
	}
	static class ABP_ItemVioletVoidObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemVioletVoidObject_C>();
	}
};
static_assert(alignof(ABP_ItemVioletVoidObject_C) == 0x000010, "Wrong alignment on ABP_ItemVioletVoidObject_C");
static_assert(sizeof(ABP_ItemVioletVoidObject_C) == 0x000710, "Wrong size on ABP_ItemVioletVoidObject_C");
static_assert(offsetof(ABP_ItemVioletVoidObject_C, UberGraphFrame) == 0x0006E0, "Member 'ABP_ItemVioletVoidObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemVioletVoidObject_C, Debug) == 0x0006E8, "Member 'ABP_ItemVioletVoidObject_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_ItemVioletVoidObject_C, AppearAnimationTime) == 0x0006F0, "Member 'ABP_ItemVioletVoidObject_C::AppearAnimationTime' has a wrong offset!");
static_assert(offsetof(ABP_ItemVioletVoidObject_C, EatAnimationTime) == 0x0006F8, "Member 'ABP_ItemVioletVoidObject_C::EatAnimationTime' has a wrong offset!");
static_assert(offsetof(ABP_ItemVioletVoidObject_C, DisappearAnimationTime) == 0x000700, "Member 'ABP_ItemVioletVoidObject_C::DisappearAnimationTime' has a wrong offset!");

}

