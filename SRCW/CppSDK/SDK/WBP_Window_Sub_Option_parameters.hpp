#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Window_Sub_Option

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.Decide
// 0x0001 (0x0001 - 0x0000)
struct WBP_Window_Sub_Option_C_Decide final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_Decide) == 0x000001, "Wrong alignment on WBP_Window_Sub_Option_C_Decide");
static_assert(sizeof(WBP_Window_Sub_Option_C_Decide) == 0x000001, "Wrong size on WBP_Window_Sub_Option_C_Decide");
static_assert(offsetof(WBP_Window_Sub_Option_C_Decide, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_Decide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.ExecuteUbergraph_WBP_Window_Sub_Option
// 0x0028 (0x0028 - 0x0000)
struct WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option) == 0x000004, "Wrong alignment on WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option");
static_assert(sizeof(WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option) == 0x000028, "Wrong size on WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option");
static_assert(offsetof(WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option, EntryPoint) == 0x000000, "Member 'WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_Window_Sub_Option_C_ExecuteUbergraph_WBP_Window_Sub_Option::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.NavigationLeft
// 0x0010 (0x0010 - 0x0000)
struct WBP_Window_Sub_Option_C_NavigationLeft final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_NavigationLeft) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_NavigationLeft");
static_assert(sizeof(WBP_Window_Sub_Option_C_NavigationLeft) == 0x000010, "Wrong size on WBP_Window_Sub_Option_C_NavigationLeft");
static_assert(offsetof(WBP_Window_Sub_Option_C_NavigationLeft, Navigation_0) == 0x000000, "Member 'WBP_Window_Sub_Option_C_NavigationLeft::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_NavigationLeft, ReturnValue) == 0x000008, "Member 'WBP_Window_Sub_Option_C_NavigationLeft::ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.NavigationRight
// 0x0018 (0x0018 - 0x0000)
struct WBP_Window_Sub_Option_C_NavigationRight final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_NavigationRight) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_NavigationRight");
static_assert(sizeof(WBP_Window_Sub_Option_C_NavigationRight) == 0x000018, "Wrong size on WBP_Window_Sub_Option_C_NavigationRight");
static_assert(offsetof(WBP_Window_Sub_Option_C_NavigationRight, Navigation_0) == 0x000000, "Member 'WBP_Window_Sub_Option_C_NavigationRight::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_NavigationRight, ReturnValue) == 0x000008, "Member 'WBP_Window_Sub_Option_C_NavigationRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_NavigationRight, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_Window_Sub_Option_C_NavigationRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.OnFocusImpl
// 0x0018 (0x0018 - 0x0000)
struct WBP_Window_Sub_Option_C_OnFocusImpl final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_OnFocusImpl) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_OnFocusImpl");
static_assert(sizeof(WBP_Window_Sub_Option_C_OnFocusImpl) == 0x000018, "Wrong size on WBP_Window_Sub_Option_C_OnFocusImpl");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusImpl, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_OnFocusImpl::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusImpl, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Window_Sub_Option_C_OnFocusImpl::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusImpl, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Window_Sub_Option_C_OnFocusImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_Window_Sub_Option_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Window_Sub_Option_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_Window_Sub_Option_C_OnFocusLost");
static_assert(sizeof(WBP_Window_Sub_Option_C_OnFocusLost) == 0x000008, "Wrong size on WBP_Window_Sub_Option_C_OnFocusLost");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_Window_Sub_Option_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.OnFocusLostImpl
// 0x0018 (0x0018 - 0x0000)
struct WBP_Window_Sub_Option_C_OnFocusLostImpl final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterMainMenu_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_OnFocusLostImpl) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_OnFocusLostImpl");
static_assert(sizeof(WBP_Window_Sub_Option_C_OnFocusLostImpl) == 0x000018, "Wrong size on WBP_Window_Sub_Option_C_OnFocusLostImpl");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusLostImpl, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_OnFocusLostImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusLostImpl, CallFunc_UnregisterMainMenu_ReturnValue) == 0x000001, "Member 'WBP_Window_Sub_Option_C_OnFocusLostImpl::CallFunc_UnregisterMainMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusLostImpl, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Window_Sub_Option_C_OnFocusLostImpl::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusLostImpl, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'WBP_Window_Sub_Option_C_OnFocusLostImpl::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.OnFocusReceived
// 0x0288 (0x0288 - 0x0000)
struct WBP_Window_Sub_Option_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
	int32                                         CallFunc_GetUserIndexByFocusEvent_ReturnValue;     // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x01B8(0x00B8)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMenuPlayerController*                  K2Node_DynamicCast_AsMenu_Player_Controller;       // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_OnFocusReceived");
static_assert(sizeof(WBP_Window_Sub_Option_C_OnFocusReceived) == 0x000288, "Wrong size on WBP_Window_Sub_Option_C_OnFocusReceived");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, CallFunc_GetUserIndexByFocusEvent_ReturnValue) == 0x0001B0, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::CallFunc_GetUserIndexByFocusEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, K2Node_MakeStruct_EventReply) == 0x0001B8, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, CallFunc_GetPlayerController_ReturnValue) == 0x000270, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, K2Node_DynamicCast_AsMenu_Player_Controller) == 0x000278, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::K2Node_DynamicCast_AsMenu_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_OnFocusReceived, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'WBP_Window_Sub_Option_C_OnFocusReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.PlayAnimationLoop
// 0x0008 (0x0008 - 0x0000)
struct WBP_Window_Sub_Option_C_PlayAnimationLoop final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_PlayAnimationLoop) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_PlayAnimationLoop");
static_assert(sizeof(WBP_Window_Sub_Option_C_PlayAnimationLoop) == 0x000008, "Wrong size on WBP_Window_Sub_Option_C_PlayAnimationLoop");
static_assert(offsetof(WBP_Window_Sub_Option_C_PlayAnimationLoop, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_PlayAnimationLoop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.PlaySEDecide
// 0x0004 (0x0004 - 0x0000)
struct WBP_Window_Sub_Option_C_PlaySEDecide final
{
public:
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0000(0x0004)()
};
static_assert(alignof(WBP_Window_Sub_Option_C_PlaySEDecide) == 0x000004, "Wrong alignment on WBP_Window_Sub_Option_C_PlaySEDecide");
static_assert(sizeof(WBP_Window_Sub_Option_C_PlaySEDecide) == 0x000004, "Wrong size on WBP_Window_Sub_Option_C_PlaySEDecide");
static_assert(offsetof(WBP_Window_Sub_Option_C_PlaySEDecide, CallFunc_SoundPlay_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_PlaySEDecide::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.PlaySEFocus
// 0x0004 (0x0004 - 0x0000)
struct WBP_Window_Sub_Option_C_PlaySEFocus final
{
public:
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0000(0x0004)()
};
static_assert(alignof(WBP_Window_Sub_Option_C_PlaySEFocus) == 0x000004, "Wrong alignment on WBP_Window_Sub_Option_C_PlaySEFocus");
static_assert(sizeof(WBP_Window_Sub_Option_C_PlaySEFocus) == 0x000004, "Wrong size on WBP_Window_Sub_Option_C_PlaySEFocus");
static_assert(offsetof(WBP_Window_Sub_Option_C_PlaySEFocus, CallFunc_SoundPlay_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_PlaySEFocus::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Window_Sub_Option_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Window_Sub_Option_C_PreConstruct");
static_assert(sizeof(WBP_Window_Sub_Option_C_PreConstruct) == 0x000001, "Wrong size on WBP_Window_Sub_Option_C_PreConstruct");
static_assert(offsetof(WBP_Window_Sub_Option_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Window_Sub_Option_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Window_Sub_Option_C_SetText final
{
public:
	class FText                                   TypeText_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Window_Sub_Option_C_SetText) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_SetText");
static_assert(sizeof(WBP_Window_Sub_Option_C_SetText) == 0x000010, "Wrong size on WBP_Window_Sub_Option_C_SetText");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetText, TypeText_0) == 0x000000, "Member 'WBP_Window_Sub_Option_C_SetText::TypeText_0' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.SetToggleBtn
// 0x0020 (0x0020 - 0x0000)
struct WBP_Window_Sub_Option_C_SetToggleBtn final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_SetToggleBtn) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_SetToggleBtn");
static_assert(sizeof(WBP_Window_Sub_Option_C_SetToggleBtn) == 0x000020, "Wrong size on WBP_Window_Sub_Option_C_SetToggleBtn");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetToggleBtn, bEnable) == 0x000000, "Member 'WBP_Window_Sub_Option_C_SetToggleBtn::bEnable' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetToggleBtn, Temp_bool_Variable) == 0x000001, "Member 'WBP_Window_Sub_Option_C_SetToggleBtn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetToggleBtn, Temp_real_Variable) == 0x000004, "Member 'WBP_Window_Sub_Option_C_SetToggleBtn::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetToggleBtn, Temp_real_Variable_1) == 0x000008, "Member 'WBP_Window_Sub_Option_C_SetToggleBtn::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetToggleBtn, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_Window_Sub_Option_C_SetToggleBtn::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetToggleBtn, K2Node_Select_Default) == 0x000018, "Member 'WBP_Window_Sub_Option_C_SetToggleBtn::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.SetupIcon
// 0x0018 (0x0018 - 0x0000)
struct WBP_Window_Sub_Option_C_SetupIcon final
{
public:
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_SetupIcon) == 0x000008, "Wrong alignment on WBP_Window_Sub_Option_C_SetupIcon");
static_assert(sizeof(WBP_Window_Sub_Option_C_SetupIcon) == 0x000018, "Wrong size on WBP_Window_Sub_Option_C_SetupIcon");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupIcon, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000000, "Member 'WBP_Window_Sub_Option_C_SetupIcon::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_Window_Sub_Option_C_SetupIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupIcon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_Window_Sub_Option_C_SetupIcon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Window_Sub_Option.WBP_Window_Sub_Option_C.SetupTSR
// 0x0005 (0x0005 - 0x0000)
struct WBP_Window_Sub_Option_C_SetupTSR final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_Sub_Option_C_SetupTSR) == 0x000001, "Wrong alignment on WBP_Window_Sub_Option_C_SetupTSR");
static_assert(sizeof(WBP_Window_Sub_Option_C_SetupTSR) == 0x000005, "Wrong size on WBP_Window_Sub_Option_C_SetupTSR");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupTSR, Temp_bool_Variable) == 0x000000, "Member 'WBP_Window_Sub_Option_C_SetupTSR::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupTSR, Temp_byte_Variable) == 0x000001, "Member 'WBP_Window_Sub_Option_C_SetupTSR::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupTSR, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Window_Sub_Option_C_SetupTSR::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupTSR, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000003, "Member 'WBP_Window_Sub_Option_C_SetupTSR::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_Sub_Option_C_SetupTSR, K2Node_Select_Default) == 0x000004, "Member 'WBP_Window_Sub_Option_C_SetupTSR::K2Node_Select_Default' has a wrong offset!");

}

