#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Festa_TeamGroup

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_Festa_TeamGroup.WBP_Race_HUD_Sub_Festa_TeamGroup_C
// 0x0070 (0x0368 - 0x02F8)
class UWBP_Race_HUD_Sub_Festa_TeamGroup_C final : public URaceUISubTeamGroup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 base;                                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_CharaIcon_02;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_PAT_Rank;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    DSP_TXT_you;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Light;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Ring;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsRight;                                           // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isSingle;                                          // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDataTable>              RankDataTable;                                     // 0x0338(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Rank;                                           // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_Festa_TeamGroup(int32 EntryPoint);
	void PlayChangeRank(EDriverId DriverId, bool IsDispYou, int32 Rank, TSoftObjectPtr<class UTexture2D> IconTexture);
	void PlayChargeEffect();
	void Set_BaseColor(const struct FLinearColor& Color);
	void Set_Driver_Icon(EDriverId DirverId);
	void Set_Driver_IconForTex(TSoftObjectPtr<class UTexture2D> DirverId);
	void SetDispPlayer(bool IsDsip);
	void SetInfoDelay(EDriverId DriverId, bool IsDispYou, int32 Rank, TSoftObjectPtr<class UTexture2D> IconTexture);
	void SetRank(int32 Rank);
	void SetRight();
	void UpdateLocalizeTexture();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_Festa_TeamGroup_C">();
	}
	static class UWBP_Race_HUD_Sub_Festa_TeamGroup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_Festa_TeamGroup_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_Festa_TeamGroup_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C) == 0x000368, "Wrong size on UWBP_Race_HUD_Sub_Festa_TeamGroup_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, UberGraphFrame) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, base) == 0x000300, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, DMY_CharaIcon_02) == 0x000308, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::DMY_CharaIcon_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, DSP_PAT_Rank) == 0x000310, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::DSP_PAT_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, DSP_TXT_you) == 0x000318, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::DSP_TXT_you' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, Eff_Light) == 0x000320, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::Eff_Light' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, Eff_Ring) == 0x000328, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::Eff_Ring' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, IsRight) == 0x000330, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::IsRight' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, isSingle) == 0x000331, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::isSingle' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, RankDataTable) == 0x000338, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::RankDataTable' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamGroup_C, MI_Rank) == 0x000360, "Member 'UWBP_Race_HUD_Sub_Festa_TeamGroup_C::MI_Rank' has a wrong offset!");

}

