#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ResultRate_Sub_RankBand

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.ExecuteUbergraph_WBP_ResultRate_Sub_RankBand
// 0x0048 (0x0048 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     K2Node_CustomEvent_End;                            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRankUp;                        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Current;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand) == 0x000008, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand) == 0x000048, "Wrong size on WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, EntryPoint) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, Temp_real_Variable) == 0x000004, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, K2Node_CustomEvent_End) == 0x000009, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::K2Node_CustomEvent_End' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, K2Node_CustomEvent_bRankUp) == 0x00000A, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::K2Node_CustomEvent_bRankUp' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, K2Node_CustomEvent_Current) == 0x000010, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::K2Node_CustomEvent_Current' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_PauseAnimation_ReturnValue) == 0x000018, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_PauseAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00001C, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00001D, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00001E, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, Temp_real_Variable_1) == 0x000020, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, Temp_bool_Variable) == 0x000030, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, K2Node_Select_Default) == 0x000034, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000040, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand, CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1) == 0x000044, "Member 'WBP_ResultRate_Sub_RankBand_C_ExecuteUbergraph_WBP_ResultRate_Sub_RankBand::CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1' has a wrong offset!");

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_PreConstruct");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_PreConstruct) == 0x000001, "Wrong size on WBP_ResultRate_Sub_RankBand_C_PreConstruct");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.RateNotice
// 0x0008 (0x0008 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_RateNotice final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_RateNotice) == 0x000008, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_RateNotice");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_RateNotice) == 0x000008, "Wrong size on WBP_ResultRate_Sub_RankBand_C_RateNotice");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_RateNotice, Current) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_RateNotice::Current' has a wrong offset!");

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.SetAnimateImpl
// 0x0020 (0x0020 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl final
{
public:
	ERateRank                                     NowRank_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     NextRank_in;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRateRankToIntRank_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRateRankToIntRank_ReturnValue_1;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRateRankCategoryNo_ReturnValue;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl) == 0x000008, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl) == 0x000020, "Wrong size on WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, NowRank_in) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::NowRank_in' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, NextRank_in) == 0x000001, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::NextRank_in' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, CallFunc_GetRateRankToIntRank_ReturnValue) == 0x000004, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::CallFunc_GetRateRankToIntRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, CallFunc_GetRateRankToIntRank_ReturnValue_1) == 0x000008, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::CallFunc_GetRateRankToIntRank_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, CallFunc_GetRateRankCategoryNo_ReturnValue) == 0x000010, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::CallFunc_GetRateRankCategoryNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'WBP_ResultRate_Sub_RankBand_C_SetAnimateImpl::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.SetNextRankImpl
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl final
{
public:
	ERateRank                                     NextRank_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_18;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_22;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_23;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_24;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_25;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_26;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl) == 0x000008, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl) == 0x0000E8, "Wrong size on WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, NextRank_0) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::NextRank_0' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_byte_Variable) == 0x000001, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable) == 0x000008, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_1) == 0x000010, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_2) == 0x000018, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_3) == 0x000020, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_4) == 0x000028, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_5) == 0x000030, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_6) == 0x000038, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_7) == 0x000040, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_8) == 0x000048, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_9) == 0x000050, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_10) == 0x000058, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_11) == 0x000060, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_12) == 0x000068, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_13) == 0x000070, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_14) == 0x000078, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_15) == 0x000080, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_16) == 0x000088, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_17) == 0x000090, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_18) == 0x000098, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_19) == 0x0000A0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_20) == 0x0000A8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_21) == 0x0000B0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_22) == 0x0000B8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_23) == 0x0000C0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_24) == 0x0000C8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_25) == 0x0000D0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, Temp_real_Variable_26) == 0x0000D8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNextRankImpl::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.SetNowRankImpl
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl final
{
public:
	ERateRank                                     NowRank_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_18;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_22;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_23;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_24;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_25;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_26;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl) == 0x000008, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl) == 0x0000F8, "Wrong size on WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, NowRank_0) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::NowRank_0' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_byte_Variable) == 0x000001, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable) == 0x000008, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_1) == 0x000010, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_2) == 0x000018, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_3) == 0x000020, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_4) == 0x000028, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_5) == 0x000030, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_6) == 0x000038, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_7) == 0x000040, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_8) == 0x000048, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_9) == 0x000050, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_10) == 0x000058, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_11) == 0x000060, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_12) == 0x000068, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_13) == 0x000070, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_14) == 0x000078, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_15) == 0x000080, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_16) == 0x000088, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_17) == 0x000090, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_18) == 0x000098, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_19) == 0x0000A0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_20) == 0x0000A8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_21) == 0x0000B0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_22) == 0x0000B8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_23) == 0x0000C0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_24) == 0x0000C8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_25) == 0x0000D0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, Temp_real_Variable_26) == 0x0000D8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, CallFunc_PlayAnimation_ReturnValue) == 0x0000E8, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x0000F0, "Member 'WBP_ResultRate_Sub_RankBand_C_SetNowRankImpl::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_ResultRate_Sub_RankBand.WBP_ResultRate_Sub_RankBand_C.StartRankAnim
// 0x0002 (0x0002 - 0x0000)
struct WBP_ResultRate_Sub_RankBand_C_StartRankAnim final
{
public:
	ERateRank                                     End;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRankUp;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ResultRate_Sub_RankBand_C_StartRankAnim) == 0x000001, "Wrong alignment on WBP_ResultRate_Sub_RankBand_C_StartRankAnim");
static_assert(sizeof(WBP_ResultRate_Sub_RankBand_C_StartRankAnim) == 0x000002, "Wrong size on WBP_ResultRate_Sub_RankBand_C_StartRankAnim");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_StartRankAnim, End) == 0x000000, "Member 'WBP_ResultRate_Sub_RankBand_C_StartRankAnim::End' has a wrong offset!");
static_assert(offsetof(WBP_ResultRate_Sub_RankBand_C_StartRankAnim, bRankUp) == 0x000001, "Member 'WBP_ResultRate_Sub_RankBand_C_StartRankAnim::bRankUp' has a wrong offset!");

}

