#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ResultRate

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ResultRate.WBP_ResultRate_C
// 0x00C8 (0x03A8 - 0x02E0)
class UWBP_ResultRate_C final : public UResultRateRank
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RankUp_Out;                                        // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RankUp_Loop;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Rate_Out;                                          // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Rate_Loop;                                         // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Rate_In;                                           // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Screen;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Title;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ResultRate_Sub_RankUp_Window_C*    WBP_Result_Sub_Rate_RankUp_Window;                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ResultRate_Sub_Rate_Window_C*      WBP_Result_Sub_Rate_Window;                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ESequenceStateRateRank                        SequenceStateRateRank;                             // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NowRate;                                           // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RankUpRate;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RankDownRate;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     RateRank;                                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRateRankBonusList                     RateRankBonusList;                                 // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        TotalBonus;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPressed;                                        // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     NextRank;                                          // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGetReward;                                      // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenTipsWindow;                                   // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnShowTipsWindow;                                  // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCloseTipsWindow;                                 // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_ResultRate_Button_Screen_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void CloseTips();
	void Construct();
	void EndProc();
	void ExecuteUbergraph_WBP_ResultRate(int32 EntryPoint);
	void SetOpenTipsWindow(bool InOpenWindow);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ResultRate_C">();
	}
	static class UWBP_ResultRate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ResultRate_C>();
	}
};
static_assert(alignof(UWBP_ResultRate_C) == 0x000008, "Wrong alignment on UWBP_ResultRate_C");
static_assert(sizeof(UWBP_ResultRate_C) == 0x0003A8, "Wrong size on UWBP_ResultRate_C");
static_assert(offsetof(UWBP_ResultRate_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_ResultRate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, RankUp_Out) == 0x0002E8, "Member 'UWBP_ResultRate_C::RankUp_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, RankUp_Loop) == 0x0002F0, "Member 'UWBP_ResultRate_C::RankUp_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, Rate_Out) == 0x0002F8, "Member 'UWBP_ResultRate_C::Rate_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, Rate_Loop) == 0x000300, "Member 'UWBP_ResultRate_C::Rate_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, Rate_In) == 0x000308, "Member 'UWBP_ResultRate_C::Rate_In' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, base) == 0x000310, "Member 'UWBP_ResultRate_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, Button_Screen) == 0x000318, "Member 'UWBP_ResultRate_C::Button_Screen' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, TXT_Title) == 0x000320, "Member 'UWBP_ResultRate_C::TXT_Title' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, WBP_Result_Sub_Rate_RankUp_Window) == 0x000328, "Member 'UWBP_ResultRate_C::WBP_Result_Sub_Rate_RankUp_Window' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, WBP_Result_Sub_Rate_Window) == 0x000330, "Member 'UWBP_ResultRate_C::WBP_Result_Sub_Rate_Window' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, SequenceStateRateRank) == 0x000338, "Member 'UWBP_ResultRate_C::SequenceStateRateRank' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, NowRate) == 0x000340, "Member 'UWBP_ResultRate_C::NowRate' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, RankUpRate) == 0x000348, "Member 'UWBP_ResultRate_C::RankUpRate' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, RankDownRate) == 0x000350, "Member 'UWBP_ResultRate_C::RankDownRate' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, RateRank) == 0x000358, "Member 'UWBP_ResultRate_C::RateRank' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, RateRankBonusList) == 0x000360, "Member 'UWBP_ResultRate_C::RateRankBonusList' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, TotalBonus) == 0x000370, "Member 'UWBP_ResultRate_C::TotalBonus' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, bIsPressed) == 0x000378, "Member 'UWBP_ResultRate_C::bIsPressed' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, NextRank) == 0x000379, "Member 'UWBP_ResultRate_C::NextRank' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, Count) == 0x00037C, "Member 'UWBP_ResultRate_C::Count' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, bIsGetReward) == 0x000380, "Member 'UWBP_ResultRate_C::bIsGetReward' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, bOpenTipsWindow) == 0x000381, "Member 'UWBP_ResultRate_C::bOpenTipsWindow' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, OnShowTipsWindow) == 0x000388, "Member 'UWBP_ResultRate_C::OnShowTipsWindow' has a wrong offset!");
static_assert(offsetof(UWBP_ResultRate_C, OnCloseTipsWindow) == 0x000398, "Member 'UWBP_ResultRate_C::OnCloseTipsWindow' has a wrong offset!");

}

