#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReadySequenceActor

#include "Basic.hpp"

#include "BP_ReadySequenceActor_classes.hpp"
#include "BP_ReadySequenceActor_parameters.hpp"


namespace SDK
{

// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.BackupSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::BackupSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "BackupSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.BindInputEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::BindInputEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "BindInputEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.CancelEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::CancelEvent(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "CancelEvent");

	Params::BP_ReadySequenceActor_C_CancelEvent Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.CancelReady
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::CancelReady(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "CancelReady");

	Params::BP_ReadySequenceActor_C_CancelReady Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.Check Permission Input
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bISPermission                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::Check_Permission_Input(int32 PlayerIndex, bool* bISPermission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "Check Permission Input");

	Params::BP_ReadySequenceActor_C_Check_Permission_Input Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (bISPermission != nullptr)
		*bISPermission = Parms.bISPermission;
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.CheckInputEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::CheckInputEvent(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "CheckInputEvent");

	Params::BP_ReadySequenceActor_C_CheckInputEvent Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.CheckTimeTrialDisableGadget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::CheckTimeTrialDisableGadget(bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "CheckTimeTrialDisableGadget");

	Params::BP_ReadySequenceActor_C_CheckTimeTrialDisableGadget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.CreateReadyWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Optimize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::CreateReadyWidget(bool Optimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "CreateReadyWidget");

	Params::BP_ReadySequenceActor_C_CreateReadyWidget Parms{};

	Parms.Optimize = Optimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.DisableOptionChange
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::DisableOptionChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "DisableOptionChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.ExecuteUbergraph_BP_ReadySequenceActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::ExecuteUbergraph_BP_ReadySequenceActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "ExecuteUbergraph_BP_ReadySequenceActor");

	Params::BP_ReadySequenceActor_C_ExecuteUbergraph_BP_ReadySequenceActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.GadgetSetForMouse
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::GadgetSetForMouse(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "GadgetSetForMouse");

	Params::BP_ReadySequenceActor_C_GadgetSetForMouse Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.GadgetSlide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsNoSlide                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::GadgetSlide(int32 PlayerIndex, bool bIsRight, bool bIsNoSlide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "GadgetSlide");

	Params::BP_ReadySequenceActor_C_GadgetSlide Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.bIsRight = bIsRight;
	Parms.bIsNoSlide = bIsNoSlide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.InEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::InEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "InEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.IsAllPlayerChecked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ReadySequenceActor_C::IsAllPlayerChecked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "IsAllPlayerChecked");

	Params::BP_ReadySequenceActor_C_IsAllPlayerChecked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.IsDiffSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   AppDiff                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   OptionDiff                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::IsDiffSettings(bool* AppDiff, bool* OptionDiff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "IsDiffSettings");

	Params::BP_ReadySequenceActor_C_IsDiffSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AppDiff != nullptr)
		*AppDiff = Parms.AppDiff;

	if (OptionDiff != nullptr)
		*OptionDiff = Parms.OptionDiff;
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.LastCheckEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::LastCheckEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "LastCheckEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.LeftEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::LeftEvent(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "LeftEvent");

	Params::BP_ReadySequenceActor_C_LeftEvent Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.MouseInputSetUpEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::MouseInputSetUpEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "MouseInputSetUpEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.OnDecide_PopupWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::OnDecide_PopupWindow(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "OnDecide_PopupWindow");

	Params::BP_ReadySequenceActor_C_OnDecide_PopupWindow Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.OnGoAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::OnGoAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "OnGoAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.OnSpecialPressedWithPlayerIdEvent_イベント
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::OnSpecialPressedWithPlayerIdEvent_イベント(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "OnSpecialPressedWithPlayerIdEvent_イベント");

	Params::BP_ReadySequenceActor_C_OnSpecialPressedWithPlayerIdEvent_イベント Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.OptionChangeEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::OptionChangeEvent(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "OptionChangeEvent");

	Params::BP_ReadySequenceActor_C_OptionChangeEvent Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.OptionClick
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::OptionClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "OptionClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.OutEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::OutEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "OutEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.PresetClickA
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::PresetClickA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "PresetClickA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.PresetClickB
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::PresetClickB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "PresetClickB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.PresetClickC
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::PresetClickC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "PresetClickC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.PresetClickD
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::PresetClickD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "PresetClickD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.PresetClickE
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::PresetClickE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "PresetClickE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.ReadyClick
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::ReadyClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "ReadyClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ReadySequenceActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "ReceiveEndPlay");

	Params::BP_ReadySequenceActor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.RegisterMenuEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::RegisterMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "RegisterMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.RightEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::RightEvent(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "RightEvent");

	Params::BP_ReadySequenceActor_C_RightEvent Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetInputTabVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetInputTabVisible(int32 PlayerIndex, bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetInputTabVisible");

	Params::BP_ReadySequenceActor_C_SetInputTabVisible Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetOption(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetOption");

	Params::BP_ReadySequenceActor_C_SetOption Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetReadyFlag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetReadyFlag(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetReadyFlag");

	Params::BP_ReadySequenceActor_C_SetReadyFlag Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetUpCharacterInformation
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::SetUpCharacterInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetUpCharacterInformation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetupCharaInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::SetupCharaInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetupCharaInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetupCreateWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Optimize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetupCreateWidget(bool Optimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetupCreateWidget");

	Params::BP_ReadySequenceActor_C_SetupCreateWidget Parms{};

	Parms.Optimize = Optimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetUpGadgetIconMouseInp[ut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetUpGadgetIconMouseInp_ut(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetUpGadgetIconMouseInp[ut");

	Params::BP_ReadySequenceActor_C_SetUpGadgetIconMouseInp_ut Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetupGadgetPlateWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::SetupGadgetPlateWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetupGadgetPlateWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetUpOptionEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::SetUpOptionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetUpOptionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetupParamWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSlide                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetupParamWindow(int32 PlayerIndex, bool IsSlide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetupParamWindow");

	Params::BP_ReadySequenceActor_C_SetupParamWindow Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.IsSlide = IsSlide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetUpParamWindowEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const int32&                            PlayerControllerIndex                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetUpParamWindowEvent(class UObject* Object, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetUpParamWindowEvent");

	Params::BP_ReadySequenceActor_C_SetUpParamWindowEvent Parms{};

	Parms.Object = Object;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetUpPlayersParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetUpPlayersParam(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetUpPlayersParam");

	Params::BP_ReadySequenceActor_C_SetUpPlayersParam Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.SetVisibleCharaMachineParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReadySequenceActor_C::SetVisibleCharaMachineParam(int32 PlayerIndex, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "SetVisibleCharaMachineParam");

	Params::BP_ReadySequenceActor_C_SetVisibleCharaMachineParam Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.TimeTrialWarningPopup
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::TimeTrialWarningPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "TimeTrialWarningPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReadySequenceActor.BP_ReadySequenceActor_C.UnbindInputEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_ReadySequenceActor_C::UnbindInputEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReadySequenceActor_C", "UnbindInputEvent");

	UObject::ProcessEvent(Func, nullptr);
}

}

