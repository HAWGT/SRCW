#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RaceBefore_RuleExplanation

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.Close
// 0x0001 (0x0001 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_Close final
{
public:
	bool                                          bSelfRemove;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_Close) == 0x000001, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_Close");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_Close) == 0x000001, "Wrong size on WBP_RaceBefore_RuleExplanation_C_Close");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_Close, bSelfRemove) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_Close::bSelfRemove' has a wrong offset!");

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.ExecuteUbergraph_WBP_RaceBefore_RuleExplanation
// 0x03F8 (0x03F8 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_1; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0014(0x0004)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As_____2D;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                CallFunc_GetGroupRaceRuleSetting_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGroupRaceRuleData                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0050)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserGadgetData                        CallFunc_Array_Get_Item_1;                         // 0x00B4(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue;        // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                CallFunc_GetGroupRaceRuleSetting_ReturnValue_1;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfRemove;                          // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNetMasterDataManageSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue_1;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSPFestaRule_ReturnValue;                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue_2;      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue_3;      // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue_4;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_2; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGroupRaceSpeedClass_ReturnValue;        // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0108(0x0010)()
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_3; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0120(0x0010)()
	class UNetMasterDataManageSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSPFestaRule_ReturnValue_1;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0168(0x0010)()
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_4; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_5; // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_6; // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x01B0(0x0010)()
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue_7; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x01E0(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x01F0(0x0010)()
	bool                                          Temp_bool_Variable_5;                              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue_5;      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0218(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0278(0x0010)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28B[0x1];                                      // 0x028B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuGroupRaceRuleData                 CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0298(0x00E0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsRivalSkinExistsGameMode_ReturnValue; // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsRivalSkinExistsGameMode_ReturnValue_1; // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue_6;      // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x03CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x03CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2[0x6];                                      // 0x03D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_3;                           // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_4;                           // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_5;                           // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_6;                           // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation) == 0x000008, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation) == 0x0003F8, "Wrong size on WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, EntryPoint) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue) == 0x000004, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_True_if_break_was_hit_Variable) == 0x000006, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_1) == 0x000010, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000012, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_SoundPlay_ReturnValue) == 0x000014, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_DynamicCast_As_____2D) == 0x000028, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_DynamicCast_As_____2D' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetGroupRaceRuleSetting_ReturnValue) == 0x000031, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetGroupRaceRuleSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Array_Get_Item) == 0x00004C, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Array_Get_Item_1) == 0x0000B4, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C2, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue) == 0x0000C3, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000C8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C9, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetGroupRaceRuleSetting_ReturnValue_1) == 0x0000D0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetGroupRaceRuleSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000D1, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000D2, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D3, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_2) == 0x0000D4, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000D5, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Event_bSelfRemove) == 0x0000D6, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Event_bSelfRemove' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000D7, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000D8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue_1) == 0x0000E0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000E1, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_IsSPFestaRule_ReturnValue) == 0x0000E2, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_IsSPFestaRule_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000E3, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue_2) == 0x0000E4, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000E5, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue_3) == 0x0000E6, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000E7, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue_4) == 0x0000E8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_3) == 0x0000E9, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0000EA, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_4) == 0x0000EB, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_2) == 0x000100, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000101, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_IsGroupRaceSpeedClass_ReturnValue) == 0x000102, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_IsGroupRaceSpeedClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_MakeLiteralText_ReturnValue) == 0x000108, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_3) == 0x000118, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable) == 0x000119, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00011A, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000120, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000130, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_IsSPFestaRule_ReturnValue_1) == 0x000138, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_IsSPFestaRule_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_CreateDelegate_OutputDelegate) == 0x00013C, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_5) == 0x00014C, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetDisplayName_ReturnValue) == 0x000150, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_PauseAnimation_ReturnValue) == 0x000160, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_PauseAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000168, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_4) == 0x000178, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000179, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable_1) == 0x00017A, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable_2) == 0x00017B, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_PlayAnimation_ReturnValue) == 0x000180, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable_3) == 0x000188, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable_4) == 0x000189, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default) == 0x000190, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_CreateDelegate_OutputDelegate_1) == 0x000198, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_5) == 0x0001A8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x0001A9, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_6) == 0x0001AA, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0001AB, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_MakeLiteralText_ReturnValue_3) == 0x0001B0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedRaceParkPresetId_ReturnValue_7) == 0x0001C0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedRaceParkPresetId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Conv_TextToString_ReturnValue) == 0x0001C8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0001D8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0001E0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0001F0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable_5) == 0x000200, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue_5) == 0x000201, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000202, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000203, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000208, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_MakeStruct_FormatArgumentData) == 0x000218, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_MakeArray_Array_1) == 0x000260, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000270, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Format_ReturnValue) == 0x000278, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanOR_ReturnValue) == 0x000288, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x000289, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanOR_ReturnValue_1) == 0x00028A, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetEnumeratorName_ReturnValue) == 0x00028C, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_6) == 0x000294, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000298, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000378, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Conv_NameToString_ReturnValue) == 0x000380, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, Temp_bool_Variable_6) == 0x000390, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_Concat_StrStr_ReturnValue) == 0x000398, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default_1) == 0x0003A8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetIsRivalSkinExistsGameMode_ReturnValue) == 0x0003B0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetIsRivalSkinExistsGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default_2) == 0x0003B8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_PlayAnimation_ReturnValue_1) == 0x0003C0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetIsRivalSkinExistsGameMode_ReturnValue_1) == 0x0003C8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetIsRivalSkinExistsGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_GetSelectedGameModeId_ReturnValue_6) == 0x0003C9, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_GetSelectedGameModeId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0003CA, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0003CB, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0003CC, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanOR_ReturnValue_2) == 0x0003CD, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanOR_ReturnValue_3) == 0x0003CE, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanOR_ReturnValue_4) == 0x0003CF, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanAND_ReturnValue_7) == 0x0003D0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, CallFunc_BooleanOR_ReturnValue_5) == 0x0003D1, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default_3) == 0x0003D8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default_4) == 0x0003E0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default_5) == 0x0003E8, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation, K2Node_Select_Default_6) == 0x0003F0, "Member 'WBP_RaceBefore_RuleExplanation_C_ExecuteUbergraph_WBP_RaceBefore_RuleExplanation::K2Node_Select_Default_6' has a wrong offset!");

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.OnFestaHidePeople
// 0x0006 (0x0006 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople) == 0x000001, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople) == 0x000006, "Wrong size on WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople, Temp_bool_Variable) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople, Temp_byte_Variable) == 0x000001, "Member 'WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople, CallFunc_GetSelectedGameModeId_ReturnValue) == 0x000003, "Member 'WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople::CallFunc_GetSelectedGameModeId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople, K2Node_Select_Default) == 0x000005, "Member 'WBP_RaceBefore_RuleExplanation_C_OnFestaHidePeople::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_PreConstruct");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_PreConstruct) == 0x000001, "Wrong size on WBP_RaceBefore_RuleExplanation_C_PreConstruct");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.SetRuleDetail
// 0x0070 (0x0070 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_SetRuleDetail final
{
public:
	class FString                                 RuleDetail;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0060(0x0010)()
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail) == 0x000008, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_SetRuleDetail");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail) == 0x000070, "Wrong size on WBP_RaceBefore_RuleExplanation_C_SetRuleDetail");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, RuleDetail) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::RuleDetail' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_FindSubstring_ReturnValue) == 0x000010, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_Left_ReturnValue) == 0x000018, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_MakeLiteralString_ReturnValue) == 0x000028, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_Len_ReturnValue) == 0x000048, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_RightChop_ReturnValue) == 0x000050, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_SetRuleDetail, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000060, "Member 'WBP_RaceBefore_RuleExplanation_C_SetRuleDetail::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.UpdateMatchFormatText
// 0x0088 (0x0088 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText final
{
public:
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0020(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0030(0x0010)()
	ERaceSettingGrouping                          Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0058(0x0010)()
	ERaceSettingGrouping                          Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceSettingGrouping                          CallFunc_GetRaceSettingGrouping_ReturnValue;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0078(0x0010)(ConstParm)
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText) == 0x000008, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText) == 0x000088, "Wrong size on WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, K2Node_MakeArray_Array) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, K2Node_MakeArray_Array_1) == 0x000010, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, CallFunc_Format_ReturnValue) == 0x000020, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, CallFunc_Format_ReturnValue_1) == 0x000030, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, Temp_byte_Variable) == 0x000040, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, K2Node_MakeArray_Array_2) == 0x000048, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, CallFunc_Format_ReturnValue_2) == 0x000058, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, Temp_byte_Variable_1) == 0x000068, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, CallFunc_GetRaceSettingGrouping_ReturnValue) == 0x000069, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::CallFunc_GetRaceSettingGrouping_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, K2Node_Select_Default) == 0x000070, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText, K2Node_Select_Default_1) == 0x000078, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateMatchFormatText::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_RaceBefore_RuleExplanation.WBP_RaceBefore_RuleExplanation_C.UpdateWithRuleVisible
// 0x0030 (0x0030 - 0x0000)
struct WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              CallFunc_GetSelectedRaceParkPresetId_ReturnValue;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible) == 0x000008, "Wrong alignment on WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible");
static_assert(sizeof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible) == 0x000030, "Wrong size on WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, Temp_byte_Variable) == 0x000000, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_GetSelectedRaceParkPresetId_ReturnValue) == 0x000002, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_GetSelectedRaceParkPresetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000014, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, Temp_bool_Variable) == 0x000016, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, K2Node_Select_Default) == 0x000020, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_RaceBefore_RuleExplanation_C_UpdateWithRuleVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

