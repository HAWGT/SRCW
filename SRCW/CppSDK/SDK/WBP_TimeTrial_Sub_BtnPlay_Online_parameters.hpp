#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_BtnPlay_Online

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UnionUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_TimeTrial_Sub_BtnPlay_Online.WBP_TimeTrial_Sub_BtnPlay_Online_C.ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online
// 0x0020 (0x0020 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0010(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online) == 0x000020, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online, EntryPoint) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online, K2Node_Event_InFocusEvent_1) == 0x000010, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online, K2Node_Event_InFocusEvent) == 0x000018, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Online::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Online.WBP_TimeTrial_Sub_BtnPlay_Online_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost) == 0x000008, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Online.WBP_TimeTrial_Sub_BtnPlay_Online_C.OnFocusLostImpl
// 0x0008 (0x0008 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl) == 0x000004, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl) == 0x000008, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl, InFocusEvent) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusLostImpl::InFocusEvent' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Online.WBP_TimeTrial_Sub_BtnPlay_Online_C.OnFocusReceived
// 0x0268 (0x0268 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
	struct FEventReply                            CallFunc_OnFocusReceivedImpl_ReturnValue;          // 0x01B0(0x00B8)()
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived) == 0x000268, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived, CallFunc_OnFocusReceivedImpl_ReturnValue) == 0x0001B0, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_OnFocusReceived::CallFunc_OnFocusReceivedImpl_ReturnValue' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Online.WBP_TimeTrial_Sub_BtnPlay_Online_C.SetLock
// 0x0020 (0x0020 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock final
{
public:
	bool                                          Locking;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonFocusType                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonFocusType                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EButtonFocusType                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock) == 0x000020, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, Locking) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::Locking' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, Temp_bool_Variable) == 0x000001, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, Temp_byte_Variable) == 0x000003, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, K2Node_Select_Default) == 0x000008, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_TimeTrial_Sub_BtnPlay_Online_C_SetLock::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

