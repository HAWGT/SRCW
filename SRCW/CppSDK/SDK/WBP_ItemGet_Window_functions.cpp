#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemGet_Window

#include "Basic.hpp"

#include "WBP_ItemGet_Window_classes.hpp"
#include "WBP_ItemGet_Window_parameters.hpp"


namespace SDK
{

// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.BndEvt__WBP_ItemGet_Window_MouseInteraction_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_ItemGet_Window_C::BndEvt__WBP_ItemGet_Window_MouseInteraction_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "BndEvt__WBP_ItemGet_Window_MouseInteraction_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.BPFRewardUtil_OpenWindow
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::BPFRewardUtil_OpenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "BPFRewardUtil_OpenWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.CloseWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::CloseWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "CloseWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ItemGet_Window_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.CreateItemCountWidget
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::CreateItemCountWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "CreateItemCountWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ItemGet_Window_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.ExecuteUbergraph_WBP_ItemGet_Window
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::ExecuteUbergraph_WBP_ItemGet_Window(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "ExecuteUbergraph_WBP_ItemGet_Window");

	Params::WBP_ItemGet_Window_C_ExecuteUbergraph_WBP_ItemGet_Window Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.FixTextureSize
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::FixTextureSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "FixTextureSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.Get Character Text
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            OutNameText                                            (Parm, OutParm)
// class FText*                            OutRewardTypeText                                      (Parm, OutParm)

void UWBP_ItemGet_Window_C::Get_Character_Text(ERewardType InRewardType, EDriverId InDriverId, class FText* OutNameText, class FText* OutRewardTypeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "Get Character Text");

	Params::WBP_ItemGet_Window_C_Get_Character_Text Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InDriverId = InDriverId;

	UObject::ProcessEvent(Func, &Parms);

	if (OutNameText != nullptr)
		*OutNameText = std::move(Parms.OutNameText);

	if (OutRewardTypeText != nullptr)
		*OutRewardTypeText = std::move(Parms.OutRewardTypeText);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.Get Machine Parts UI Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   rewardType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              MachineId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMachinePartsUIData*             OutMachinePartsUIData                                  (Parm, OutParm)

void UWBP_ItemGet_Window_C::Get_Machine_Parts_UI_Data(uint8 rewardType, EMachineId MachineId, struct FMachinePartsUIData* OutMachinePartsUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "Get Machine Parts UI Data");

	Params::WBP_ItemGet_Window_C_Get_Machine_Parts_UI_Data Parms{};

	Parms.rewardType = rewardType;
	Parms.MachineId = MachineId;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMachinePartsUIData != nullptr)
		*OutMachinePartsUIData = std::move(Parms.OutMachinePartsUIData);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.GetDriverData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDriverData*                     OutDriverData                                          (Parm, OutParm)

void UWBP_ItemGet_Window_C::GetDriverData(EDriverId InDriverId, struct FDriverData* OutDriverData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "GetDriverData");

	Params::WBP_ItemGet_Window_C_GetDriverData Parms{};

	Parms.InDriverId = InDriverId;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDriverData != nullptr)
		*OutDriverData = std::move(Parms.OutDriverData);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.GetMachineTypeFromMachineId
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachineId                              InMachineID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bOutIsEnable                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType*                         OutCarStatusType                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::GetMachineTypeFromMachineId(EMachineId InMachineID, bool* bOutIsEnable, ECarStatusType* OutCarStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "GetMachineTypeFromMachineId");

	Params::WBP_ItemGet_Window_C_GetMachineTypeFromMachineId Parms{};

	Parms.InMachineID = InMachineID;

	UObject::ProcessEvent(Func, &Parms);

	if (bOutIsEnable != nullptr)
		*bOutIsEnable = Parms.bOutIsEnable;

	if (OutCarStatusType != nullptr)
		*OutCarStatusType = Parms.OutCarStatusType;
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.GetMachineTypeIconImage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UImage* UWBP_ItemGet_Window_C::GetMachineTypeIconImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "GetMachineTypeIconImage");

	Params::WBP_ItemGet_Window_C_GetMachineTypeIconImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OnAcceptKeyPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OnAcceptKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OnAcceptKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OnAnimationOutFinished_Event
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OnAnimationOutFinished_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OnAnimationOutFinished_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OnBaseInAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OnBaseInAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OnBaseInAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OnBaseOutAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OnBaseOutAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OnBaseOutAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OnForcePressed
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OnForcePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OnForcePressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OnInfoInAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OnInfoInAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OnInfoInAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OpenWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OpenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OpenWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.OutItemCountWidget
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::OutItemCountWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "OutItemCountWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.PlayGetSe
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::PlayGetSe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "PlayGetSe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "PreConstruct");

	Params::WBP_ItemGet_Window_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SequenceEvent__ENTRYPOINTWBP_ItemGet_Window
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::SequenceEvent__ENTRYPOINTWBP_ItemGet_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SequenceEvent__ENTRYPOINTWBP_ItemGet_Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.Set Gadget Plate Empty from Plate Id
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGadgetPlateId                          InPlateId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InRunkUp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InLevelUp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::Set_Gadget_Plate_Empty_from_Plate_Id(EGadgetPlateId InPlateId, bool InRunkUp, bool InLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "Set Gadget Plate Empty from Plate Id");

	Params::WBP_ItemGet_Window_C_Set_Gadget_Plate_Empty_from_Plate_Id Parms{};

	Parms.InPlateId = InPlateId;
	Parms.InRunkUp = InRunkUp;
	Parms.InLevelUp = InLevelUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetAnimationDelegate
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::SetAnimationDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetAnimationDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetCharacterDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        InIconTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetCharacterDisplay(ERewardType InRewardType, EDriverId InDriverId, TSoftObjectPtr<class UTexture2D> InIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetCharacterDisplay");

	Params::WBP_ItemGet_Window_C_SetCharacterDisplay Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InDriverId = InDriverId;
	Parms.InIconTexture = InIconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetCharacterIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        InIconTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetCharacterIcon(EDriverId InDriverId, TSoftObjectPtr<class UTexture2D> InIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetCharacterIcon");

	Params::WBP_ItemGet_Window_C_SetCharacterIcon Parms{};

	Parms.InDriverId = InDriverId;
	Parms.InIconTexture = InIconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetDisplayParam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FRewardGetWindowParam>&InDisplayParamArray                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   InWindowZOrder                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetDisplayParam(const TArray<struct FRewardGetWindowParam>& InDisplayParamArray, int32 InWindowZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetDisplayParam");

	Params::WBP_ItemGet_Window_C_SetDisplayParam Parms{};

	Parms.InDisplayParamArray = std::move(InDisplayParamArray);
	Parms.InWindowZOrder = InWindowZOrder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetDonpaTicketDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetDonpaTicketDisplay(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetDonpaTicketDisplay");

	Params::WBP_ItemGet_Window_C_SetDonpaTicketDisplay Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetEmptyDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::SetEmptyDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetEmptyDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetFixedGadgetDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGadgetId                               InGadgetId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InNum                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        Itemtexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetFixedGadgetDisplay(EGadgetId InGadgetId, int32 InNum, TSoftObjectPtr<class UTexture2D> Itemtexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetFixedGadgetDisplay");

	Params::WBP_ItemGet_Window_C_SetFixedGadgetDisplay Parms{};

	Parms.InGadgetId = InGadgetId;
	Parms.InNum = InNum;
	Parms.Itemtexture = Itemtexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetGadgetPlate
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::SetGadgetPlate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetGadgetPlate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetHornWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             rewardType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   rewardId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetHornWidget(ERewardType rewardType, int32 rewardId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetHornWidget");

	Params::WBP_ItemGet_Window_C_SetHornWidget Parms{};

	Parms.rewardType = rewardType;
	Parms.rewardId = rewardId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetItemCountWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InItemNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemGetNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       InIconTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetItemCountWidget(int32 InItemNum, int32 InItemGetNum, ERewardType InRewardType, class UTexture2D* InIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetItemCountWidget");

	Params::WBP_ItemGet_Window_C_SetItemCountWidget Parms{};

	Parms.InItemNum = InItemNum;
	Parms.InItemGetNum = InItemGetNum;
	Parms.InRewardType = InRewardType;
	Parms.InIconTexture = InIconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetItemCountWidgetVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetItemCountWidgetVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetItemCountWidgetVisible");

	Params::WBP_ItemGet_Window_C_SetItemCountWidgetVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetItemIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRewardId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        InIconTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UImage*                           InImageWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetItemIcon(ERewardType InRewardType, int32 InRewardId, TSoftObjectPtr<class UTexture2D> InIconTexture, class UImage* InImageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetItemIcon");

	Params::WBP_ItemGet_Window_C_SetItemIcon Parms{};

	Parms.InRewardType = InRewardType;
	Parms.InRewardId = InRewardId;
	Parms.InIconTexture = InIconTexture;
	Parms.InImageWidget = InImageWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetItemIconActiveIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             InRewardType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetItemIconActiveIndex(ERewardType InRewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetItemIconActiveIndex");

	Params::WBP_ItemGet_Window_C_SetItemIconActiveIndex Parms{};

	Parms.InRewardType = InRewardType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetItemName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ItemGet_Window_C::SetItemName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetItemName");

	Params::WBP_ItemGet_Window_C_SetItemName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetMachineDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachineId                              InMachineID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetMachineDisplay(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetMachineDisplay");

	Params::WBP_ItemGet_Window_C_SetMachineDisplay Parms{};

	Parms.InMachineID = InMachineID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetMachineIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInMachineEnable                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMatchSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetMachineIcon(bool bInMachineEnable, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetMachineIcon");

	Params::WBP_ItemGet_Window_C_SetMachineIcon Parms{};

	Parms.bInMachineEnable = bInMachineEnable;
	Parms.bMatchSize = bMatchSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetMachinePartsDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   rewardType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              MachineId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        Itemtexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetMachinePartsDisplay(uint8 rewardType, EMachineId MachineId, TSoftObjectPtr<class UTexture2D> Itemtexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetMachinePartsDisplay");

	Params::WBP_ItemGet_Window_C_SetMachinePartsDisplay Parms{};

	Parms.rewardType = rewardType;
	Parms.MachineId = MachineId;
	Parms.Itemtexture = Itemtexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetMachinePartsIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInMachineEnable                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMatchSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetMachinePartsIcon(bool bInMachineEnable, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetMachinePartsIcon");

	Params::WBP_ItemGet_Window_C_SetMachinePartsIcon Parms{};

	Parms.bInMachineEnable = bInMachineEnable;
	Parms.bMatchSize = bMatchSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetMachineTypeIconVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetMachineTypeIconVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetMachineTypeIconVisibility");

	Params::WBP_ItemGet_Window_C_SetMachineTypeIconVisibility Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetRaceCountReward
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::SetRaceCountReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetRaceCountReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             rewardType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   rewardId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetReward(ERewardType rewardType, int32 rewardId, class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetReward");

	Params::WBP_ItemGet_Window_C_SetReward Parms{};

	Parms.rewardType = rewardType;
	Parms.rewardId = rewardId;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetRewardTypeText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ItemGet_Window_C::SetRewardTypeText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetRewardTypeText");

	Params::WBP_ItemGet_Window_C_SetRewardTypeText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetRivalRewardEffectVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetRivalRewardEffectVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetRivalRewardEffectVisible");

	Params::WBP_ItemGet_Window_C_SetRivalRewardEffectVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetStickerWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   stickerId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        InIconTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetStickerWidget(int32 stickerId, TSoftObjectPtr<class UTexture2D> InIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetStickerWidget");

	Params::WBP_ItemGet_Window_C_SetStickerWidget Parms{};

	Parms.stickerId = stickerId;
	Parms.InIconTexture = InIconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetTimeTrialCompleteReward
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::SetTimeTrialCompleteReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetTimeTrialCompleteReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.SetTitleWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             rewardType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   rewardId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::SetTitleWidget(ERewardType rewardType, int32 rewardId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "SetTitleWidget");

	Params::WBP_ItemGet_Window_C_SetTitleWidget Parms{};

	Parms.rewardType = rewardType;
	Parms.rewardId = rewardId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.StartNextDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::StartNextDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "StartNextDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemGet_Window_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "Tick");

	Params::WBP_ItemGet_Window_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.UpdateDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::UpdateDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "UpdateDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.UpdateDisplayImpliment
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRewardGetWindowParam&     RewardGetWindowParam                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_ItemGet_Window_C::UpdateDisplayImpliment(const struct FRewardGetWindowParam& RewardGetWindowParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "UpdateDisplayImpliment");

	Params::WBP_ItemGet_Window_C_UpdateDisplayImpliment Parms{};

	Parms.RewardGetWindowParam = std::move(RewardGetWindowParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemGet_Window.WBP_ItemGet_Window_C.UpdateTitleFontSize
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemGet_Window_C::UpdateTitleFontSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemGet_Window_C", "UpdateTitleFontSize");

	UObject::ProcessEvent(Func, nullptr);
}

}

