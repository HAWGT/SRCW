#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_Sub_Btn_LR

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C
// 0x0068 (0x0348 - 0x02E0)
class UWBP_Race_Sub_Btn_LR_C final : public URaceUISubBtnGuide
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Btn_Push_Loop;                                     // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Btn_Active;                                        // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 PAT_Key;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Key;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text_R1;                                           // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_L1;                                           // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_R2;                                           // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_L2;                                           // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_Race_Sub_Btn_LR(int32 EntryPoint);
	void OnAccelInput(float InValue);
	void OnBrakeInput(float InValue);
	void OnDriftPressed();
	void OnDriftReleased();
	void OnEmotePressed();
	void OnEmoteReleased();
	void OnHornPressed();
	void OnHornReleased();
	void OnPausePressed();
	void OnPauseReleased();
	void OnPitchInput(float InValue);
	void OnRearViewPressed();
	void OnRearViewReleased();
	void OnSlimeCancelXInput(float InValue);
	void OnSlimeCancelYInput(float InValue);
	void OnSteerInput(float InValue);
	void OnTradeItemPressed();
	void OnTradeItemReleased();
	void OnTrickX2Input(float InValue);
	void OnTrickXInput(float InValue);
	void OnTrickY2Input(float InValue);
	void OnTrickYInput(float InValue);
	void OnUseItemPressed();
	void OnUseItemReleased();
	void SetBtnText(int32 PlayerControllerIndex);
	void SetKey(const struct FKey& NewKey, bool* Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_Sub_Btn_LR_C">();
	}
	static class UWBP_Race_Sub_Btn_LR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_Sub_Btn_LR_C>();
	}
};
static_assert(alignof(UWBP_Race_Sub_Btn_LR_C) == 0x000008, "Wrong alignment on UWBP_Race_Sub_Btn_LR_C");
static_assert(sizeof(UWBP_Race_Sub_Btn_LR_C) == 0x000348, "Wrong size on UWBP_Race_Sub_Btn_LR_C");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Race_Sub_Btn_LR_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, Btn_Push_Loop) == 0x0002E8, "Member 'UWBP_Race_Sub_Btn_LR_C::Btn_Push_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, Btn_Active) == 0x0002F0, "Member 'UWBP_Race_Sub_Btn_LR_C::Btn_Active' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, PAT_Key) == 0x0002F8, "Member 'UWBP_Race_Sub_Btn_LR_C::PAT_Key' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, TXT_Key) == 0x000300, "Member 'UWBP_Race_Sub_Btn_LR_C::TXT_Key' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, Text_R1) == 0x000308, "Member 'UWBP_Race_Sub_Btn_LR_C::Text_R1' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, Text_L1) == 0x000318, "Member 'UWBP_Race_Sub_Btn_LR_C::Text_L1' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, Text_R2) == 0x000328, "Member 'UWBP_Race_Sub_Btn_LR_C::Text_R2' has a wrong offset!");
static_assert(offsetof(UWBP_Race_Sub_Btn_LR_C, Text_L2) == 0x000338, "Member 'UWBP_Race_Sub_Btn_LR_C::Text_L2' has a wrong offset!");

}

