#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlueFlagMenuBG_3D

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C
// 0x00E0 (0x0370 - 0x0290)
class ABP_BlueFlagMenuBG_3D_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Party_White;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate_0_To_1_E1B4524D4CCEC6A980940EBB86C28D57;    // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Rotate__Direction_E1B4524D4CCEC6A980940EBB86C28D57; // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rotate;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         RotateTimeline_Forward_8402B0744364A266E6E5668CF30B699F; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateTimeline_Rotate_8402B0744364A266E6E5668CF30B699F; // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RotateTimeline__Direction_8402B0744364A266E6E5668CF30B699F; // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RotateTimeline;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TopMenu_C*                         As_WBP_Top_Menu;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x02E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             InitTrans;                                         // 0x0300(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdate;                                           // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BlueFlagMenuBG_3D(int32 EntryPoint);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnAcceptKeyReleased();
	void OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyPressed();
	void OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyReleased();
	void OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyPressed();
	void OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyReleased();
	void OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftPressed();
	void OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftReleased();
	void OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopPressed();
	void OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopReleased();
	void OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyPressed();
	void OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyReleased();
	void OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderPressed();
	void OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderReleased();
	void OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickAxis(const struct FVector2D& Value);
	void OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnLeftStickButtonPressed();
	void OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickButtonReleased();
	void OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyPressed();
	void OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyReleased();
	void OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderPressed();
	void OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderReleased();
	void OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickAxis(const struct FVector2D& Value);
	void OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnRightStickButtonPressed();
	void OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickButtonReleased();
	void OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialPressed();
	void OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialReleased();
	void OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyPressed();
	void OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyReleased();
	void OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void ReceiveBeginPlay();
	void Rotate__FinishedFunc();
	void Rotate__UpdateFunc();
	void RotateStart();
	void RotateTimeline__FinishedFunc();
	void RotateTimeline__UpdateFunc();
	void SetPartyPresetVisible(bool Visible);
	void SetUpdate(bool InUpdate);
	void SetVisible(bool Visible);
	void SilentFocusReady(bool bOnce);
	void TransformInit();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BlueFlagMenuBG_3D_C">();
	}
	static class ABP_BlueFlagMenuBG_3D_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BlueFlagMenuBG_3D_C>();
	}
};
static_assert(alignof(ABP_BlueFlagMenuBG_3D_C) == 0x000010, "Wrong alignment on ABP_BlueFlagMenuBG_3D_C");
static_assert(sizeof(ABP_BlueFlagMenuBG_3D_C) == 0x000370, "Wrong size on ABP_BlueFlagMenuBG_3D_C");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, UberGraphFrame) == 0x000290, "Member 'ABP_BlueFlagMenuBG_3D_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Party_White) == 0x000298, "Member 'ABP_BlueFlagMenuBG_3D_C::Party_White' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Widget) == 0x0002A0, "Member 'ABP_BlueFlagMenuBG_3D_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Root) == 0x0002A8, "Member 'ABP_BlueFlagMenuBG_3D_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Scene) == 0x0002B0, "Member 'ABP_BlueFlagMenuBG_3D_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Rotate_0_To_1_E1B4524D4CCEC6A980940EBB86C28D57) == 0x0002B8, "Member 'ABP_BlueFlagMenuBG_3D_C::Rotate_0_To_1_E1B4524D4CCEC6A980940EBB86C28D57' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Rotate__Direction_E1B4524D4CCEC6A980940EBB86C28D57) == 0x0002BC, "Member 'ABP_BlueFlagMenuBG_3D_C::Rotate__Direction_E1B4524D4CCEC6A980940EBB86C28D57' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, Rotate) == 0x0002C0, "Member 'ABP_BlueFlagMenuBG_3D_C::Rotate' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, RotateTimeline_Forward_8402B0744364A266E6E5668CF30B699F) == 0x0002C8, "Member 'ABP_BlueFlagMenuBG_3D_C::RotateTimeline_Forward_8402B0744364A266E6E5668CF30B699F' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, RotateTimeline_Rotate_8402B0744364A266E6E5668CF30B699F) == 0x0002CC, "Member 'ABP_BlueFlagMenuBG_3D_C::RotateTimeline_Rotate_8402B0744364A266E6E5668CF30B699F' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, RotateTimeline__Direction_8402B0744364A266E6E5668CF30B699F) == 0x0002D0, "Member 'ABP_BlueFlagMenuBG_3D_C::RotateTimeline__Direction_8402B0744364A266E6E5668CF30B699F' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, RotateTimeline) == 0x0002D8, "Member 'ABP_BlueFlagMenuBG_3D_C::RotateTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, As_WBP_Top_Menu) == 0x0002E0, "Member 'ABP_BlueFlagMenuBG_3D_C::As_WBP_Top_Menu' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, NewVar_0) == 0x0002E8, "Member 'ABP_BlueFlagMenuBG_3D_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, InitTrans) == 0x000300, "Member 'ABP_BlueFlagMenuBG_3D_C::InitTrans' has a wrong offset!");
static_assert(offsetof(ABP_BlueFlagMenuBG_3D_C, bUpdate) == 0x000360, "Member 'ABP_BlueFlagMenuBG_3D_C::bUpdate' has a wrong offset!");

}

