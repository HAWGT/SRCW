#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharaMachineSequence

#include "Basic.hpp"

#include "BP_CharaMachineSequence_classes.hpp"
#include "BP_CharaMachineSequence_parameters.hpp"


namespace SDK
{

// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.BindMachineState
// (BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::BindMachineState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "BindMachineState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.BindOnExit
// (BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::BindOnExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "BindOnExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.BndEvt__BP_CharaMachineSequence_BPC_CharaSelectState_K2Node_ComponentBoundEvent_2_OnBackStateDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::BndEvt__BP_CharaMachineSequence_BPC_CharaSelectState_K2Node_ComponentBoundEvent_2_OnBackStateDelegate__DelegateSignature(EMenuSequenceSubState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "BndEvt__BP_CharaMachineSequence_BPC_CharaSelectState_K2Node_ComponentBoundEvent_2_OnBackStateDelegate__DelegateSignature");

	Params::BP_CharaMachineSequence_C_BndEvt__BP_CharaMachineSequence_BPC_CharaSelectState_K2Node_ComponentBoundEvent_2_OnBackStateDelegate__DelegateSignature Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.BndEvt__BP_CharaMachineSequence_BPC_MachineState_K2Node_ComponentBoundEvent_3_OnBackStateDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::BndEvt__BP_CharaMachineSequence_BPC_MachineState_K2Node_ComponentBoundEvent_3_OnBackStateDelegate__DelegateSignature(EMenuSequenceSubState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "BndEvt__BP_CharaMachineSequence_BPC_MachineState_K2Node_ComponentBoundEvent_3_OnBackStateDelegate__DelegateSignature");

	Params::BP_CharaMachineSequence_C_BndEvt__BP_CharaMachineSequence_BPC_MachineState_K2Node_ComponentBoundEvent_3_OnBackStateDelegate__DelegateSignature Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::CustomEvent(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "CustomEvent");

	Params::BP_CharaMachineSequence_C_CustomEvent Parms{};

	Parms.FadeDirection = FadeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.ExecuteUbergraph_BP_CharaMachineSequence
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::ExecuteUbergraph_BP_CharaMachineSequence(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "ExecuteUbergraph_BP_CharaMachineSequence");

	Params::BP_CharaMachineSequence_C_ExecuteUbergraph_BP_CharaMachineSequence Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.FinalizeMessageBar
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::FinalizeMessageBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "FinalizeMessageBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.HideLoadingDisplayWidget
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUILoadingDisplay*           InLoadingDisplayWidget                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::HideLoadingDisplayWidget(class UUnionUILoadingDisplay* InLoadingDisplayWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "HideLoadingDisplayWidget");

	Params::BP_CharaMachineSequence_C_HideLoadingDisplayWidget Parms{};

	Parms.InLoadingDisplayWidget = InLoadingDisplayWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.InitializeSelectedPlayerCharacterIndex
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::InitializeSelectedPlayerCharacterIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "InitializeSelectedPlayerCharacterIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.MachineState_OnMachinePartsFocus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              FrontPartsId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              RearPartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              TirePartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::MachineState_OnMachinePartsFocus(int32 PlayerIndex, EMachineId FrontPartsId, EMachineId RearPartsId, EMachineId TirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "MachineState_OnMachinePartsFocus");

	Params::BP_CharaMachineSequence_C_MachineState_OnMachinePartsFocus Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.FrontPartsId = FrontPartsId;
	Parms.RearPartsId = RearPartsId;
	Parms.TirePartsId = TirePartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.MachineState_OnMachinePartsSelect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              FrontPartsId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              RearPartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              TirePartsId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::MachineState_OnMachinePartsSelect(int32 PlayerIndex, EMachineId FrontPartsId, EMachineId RearPartsId, EMachineId TirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "MachineState_OnMachinePartsSelect");

	Params::BP_CharaMachineSequence_C_MachineState_OnMachinePartsSelect Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.FrontPartsId = FrontPartsId;
	Parms.RearPartsId = RearPartsId;
	Parms.TirePartsId = TirePartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.MachineState_OnMachineSelectModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// UNION::EMachineSelectMode               Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::MachineState_OnMachineSelectModeChanged(int32 PlayerIndex, UNION::EMachineSelectMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "MachineState_OnMachineSelectModeChanged");

	Params::BP_CharaMachineSequence_C_MachineState_OnMachineSelectModeChanged Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.MachineTypeDecide_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType                          machineType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              MachineId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::MachineTypeDecide_Event(int32 PlayerControllerIndex, ECarStatusType machineType, EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "MachineTypeDecide_Event");

	Params::BP_CharaMachineSequence_C_MachineTypeDecide_Event Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.machineType = machineType;
	Parms.MachineId = MachineId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.MachineTypeScrollStart_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarStatusType                          machineType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              MachineId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::MachineTypeScrollStart_Event(int32 PlayerControllerIndex, ECarStatusType machineType, EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "MachineTypeScrollStart_Event");

	Params::BP_CharaMachineSequence_C_MachineTypeScrollStart_Event Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.machineType = machineType;
	Parms.MachineId = MachineId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnDecideCharaIcon
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerControllerIndex                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCharaIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::OnDecideCharaIcon(int32 InPlayerControllerIndex, int32 InCharaIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnDecideCharaIcon");

	Params::BP_CharaMachineSequence_C_OnDecideCharaIcon Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InCharaIndex = InCharaIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnExitEvent_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::OnExitEvent_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnExitEvent_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnFinalize
// (Event, Protected, BlueprintEvent)

void ABP_CharaMachineSequence_C::OnFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnFocusCharaIcon
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerControllerIndex                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCharaIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::OnFocusCharaIcon(int32 InPlayerControllerIndex, int32 InCharaIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnFocusCharaIcon");

	Params::BP_CharaMachineSequence_C_OnFocusCharaIcon Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InCharaIndex = InCharaIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnInitialize
// (Event, Protected, BlueprintEvent)

void ABP_CharaMachineSequence_C::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnSetRacerDriver
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMenuRacerBase*                   InRacer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::OnSetRacerDriver(class AMenuRacerBase* InRacer, EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnSetRacerDriver");

	Params::BP_CharaMachineSequence_C_OnSetRacerDriver Parms{};

	Parms.InRacer = InRacer;
	Parms.InDriverId = InDriverId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnSetRacerMachineCustomData
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMenuRacerBase*                   InRacer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FUserMachineCustomizeData& InData                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_CharaMachineSequence_C::OnSetRacerMachineCustomData(class AMenuRacerBase* InRacer, const struct FUserMachineCustomizeData& InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnSetRacerMachineCustomData");

	Params::BP_CharaMachineSequence_C_OnSetRacerMachineCustomData Parms{};

	Parms.InRacer = InRacer;
	Parms.InData = std::move(InData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnSetRacerRotation
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMenuRacerBase*                   InRacer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::OnSetRacerRotation(class AMenuRacerBase* InRacer, float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnSetRacerRotation");

	Params::BP_CharaMachineSequence_C_OnSetRacerRotation Parms{};

	Parms.InRacer = InRacer;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.OnSetRacerTransform
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMenuRacerBase*                   InRacer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                InTransform                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsNoLerp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::OnSetRacerTransform(class AMenuRacerBase* InRacer, const struct FTransform& InTransform, bool IsNoLerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "OnSetRacerTransform");

	Params::BP_CharaMachineSequence_C_OnSetRacerTransform Parms{};

	Parms.InRacer = InRacer;
	Parms.InTransform = std::move(InTransform);
	Parms.IsNoLerp = IsNoLerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.PlayRacerAnimation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::PlayRacerAnimation(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "PlayRacerAnimation");

	Params::BP_CharaMachineSequence_C_PlayRacerAnimation Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.SetMessageBarVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsMessageBarVisible_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::SetMessageBarVisible(bool bIsMessageBarVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "SetMessageBarVisible");

	Params::BP_CharaMachineSequence_C_SetMessageBarVisible Parms{};

	Parms.bIsMessageBarVisible_0 = bIsMessageBarVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.SetNextMenuSequenceSubState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::SetNextMenuSequenceSubState(EMenuSequenceSubState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "SetNextMenuSequenceSubState");

	Params::BP_CharaMachineSequence_C_SetNextMenuSequenceSubState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.SetSelectedDriverIds
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::SetSelectedDriverIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "SetSelectedDriverIds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.SetStartState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   Start_State_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::SetStartState(EMenuSequenceSubState Start_State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "SetStartState");

	Params::BP_CharaMachineSequence_C_SetStartState Parms{};

	Parms.Start_State_0 = Start_State_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.SetupMessageBar
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::SetupMessageBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "SetupMessageBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.SetupParamWindowMachineSelect
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// UNION::EMachineSelectMode               InMode                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::SetupParamWindowMachineSelect(int32 InPlayerIndex, UNION::EMachineSelectMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "SetupParamWindowMachineSelect");

	Params::BP_CharaMachineSequence_C_SetupParamWindowMachineSelect Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InMode = InMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.ShowLoadingDisplayWidget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUILoadingDisplay*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UUnionUILoadingDisplay* ABP_CharaMachineSequence_C::ShowLoadingDisplayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "ShowLoadingDisplayWidget");

	Params::BP_CharaMachineSequence_C_ShowLoadingDisplayWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.StartFade
// (BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::StartFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "StartFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.StartMoveCameraTransform
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCharaSelect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoLerp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::StartMoveCameraTransform(bool bCharaSelect, bool NoLerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "StartMoveCameraTransform");

	Params::BP_CharaMachineSequence_C_StartMoveCameraTransform Parms{};

	Parms.bCharaSelect = bCharaSelect;
	Parms.NoLerp = NoLerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.UnbindMachineState
// (BlueprintCallable, BlueprintEvent)

void ABP_CharaMachineSequence_C::UnbindMachineState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "UnbindMachineState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.UpdateParamWindow
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::UpdateParamWindow(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "UpdateParamWindow");

	Params::BP_CharaMachineSequence_C_UpdateParamWindow Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.UpdateParamWindowByCharaId
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::UpdateParamWindowByCharaId(int32 InPlayerIndex, EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "UpdateParamWindowByCharaId");

	Params::BP_CharaMachineSequence_C_UpdateParamWindowByCharaId Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InDriverId = InDriverId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.UpdateParamWindowByMachineId
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InMachineID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::UpdateParamWindowByMachineId(int32 InPlayerIndex, EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "UpdateParamWindowByMachineId");

	Params::BP_CharaMachineSequence_C_UpdateParamWindowByMachineId Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InMachineID = InMachineID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.UpdateParamWindowByMachinePartsIds
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InFrontPartsId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InRearPartsId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InTirePartsId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::UpdateParamWindowByMachinePartsIds(int32 InPlayerIndex, EMachineId InFrontPartsId, EMachineId InRearPartsId, EMachineId InTirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "UpdateParamWindowByMachinePartsIds");

	Params::BP_CharaMachineSequence_C_UpdateParamWindowByMachinePartsIds Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InFrontPartsId = InFrontPartsId;
	Parms.InRearPartsId = InRearPartsId;
	Parms.InTirePartsId = InTirePartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.GetMachineTransformOffset
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EMachineId                              InMachineID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_CharaMachineSequence_C::GetMachineTransformOffset(EMachineId InMachineID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "GetMachineTransformOffset");

	Params::BP_CharaMachineSequence_C_GetMachineTransformOffset Parms{};

	Parms.InMachineID = InMachineID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.GetMessageBarVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharaMachineSequence_C::GetMessageBarVisible(bool* IsVisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "GetMessageBarVisible");

	Params::BP_CharaMachineSequence_C_GetMessageBarVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.GetParamData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EDriverId                               InDriverId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InFrontPartsId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InRearPartsId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InTirePartsId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<EGadgetId>&                InGadgetIds                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRacerParamData*                 OutParamData                                           (Parm, OutParm, NoDestructor)

void ABP_CharaMachineSequence_C::GetParamData(EDriverId InDriverId, EMachineId InFrontPartsId, EMachineId InRearPartsId, EMachineId InTirePartsId, const TArray<EGadgetId>& InGadgetIds, struct FRacerParamData* OutParamData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "GetParamData");

	Params::BP_CharaMachineSequence_C_GetParamData Parms{};

	Parms.InDriverId = InDriverId;
	Parms.InFrontPartsId = InFrontPartsId;
	Parms.InRearPartsId = InRearPartsId;
	Parms.InTirePartsId = InTirePartsId;
	Parms.InGadgetIds = std::move(InGadgetIds);

	UObject::ProcessEvent(Func, &Parms);

	if (OutParamData != nullptr)
		*OutParamData = std::move(Parms.OutParamData);
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.GetSubLevel
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ULevelStreaming*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class ULevelStreaming* ABP_CharaMachineSequence_C::GetSubLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "GetSubLevel");

	Params::BP_CharaMachineSequence_C_GetSubLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.GetSubLevelTransform
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCharaSelect                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_CharaMachineSequence_C::GetSubLevelTransform(int32 InPlayerIndex, bool IsCharaSelect) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "GetSubLevelTransform");

	Params::BP_CharaMachineSequence_C_GetSubLevelTransform Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.IsCharaSelect = IsCharaSelect;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CharaMachineSequence.BP_CharaMachineSequence_C.IsLevelLoaded
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_CharaMachineSequence_C::IsLevelLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharaMachineSequence_C", "IsLevelLoaded");

	Params::BP_CharaMachineSequence_C_IsLevelLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

