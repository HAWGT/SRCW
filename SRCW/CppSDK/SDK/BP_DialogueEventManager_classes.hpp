#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DialogueEventManager

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DialogueEventManager.BP_DialogueEventManager_C
// 0x0098 (0x0368 - 0x02D0)
class ABP_DialogueEventManager_C final : public ADialogueEventManagerBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDodonpaEventSpeechBeltBase*            MessageWindow;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_DialogueEventCharacterBase_C*       LeftCharacter;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DialogueEventCharacterBase_C*       RightCharacter;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_EventBG_C*                          EventBG;                                           // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnCompleteInitialize;                              // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCompleteDestroy;                                 // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCompleteCommand;                                 // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AActor*                                 CommandTarget;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADialogueBillboardActor*                BillboardImage;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ERewardAchievementType                        RewardAchievementType;                             // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuInputRecieveObject*                InputRecieveObject;                                // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CharacterNameDataTable;                            // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   FestaName;                                         // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AnimationNameCastToEnumID(class FName AnimName, EDialogueAnimationAssetID* EnumID);
	void ClearBG();
	void ClearImage();
	void CreateRecieveObject(class UMenuInputRecieveObject** MenuInputRecieveObject);
	void CreateSpeechWidget();
	void Destroy();
	void DisplayAnimationEnd();
	void DrawText(const class FText& Character, const class FText& Text);
	void Event_OnMessageEnd();
	void ExecuteUbergraph_BP_DialogueEventManager(int32 EntryPoint);
	void Initialize();
	void InTextWindow();
	void Motion_WaitEnd();
	void OnAcctptKeyPressed(class UObject* newParam);
	void OnFullScreenMouseClick();
	void OnRewardDisplayEnd_Impl();
	void OutTextWindow();
	void PlayDisplayAnimation(class FName AnimationName);
	void PlayDisplayAnimation_EndWait(class FName AnimationName);
	void PrintLog(EAppLogLevel LogLevel, const class FString& Log);
	void ScreenToWorldPosition(const struct FVector2D& ScreenPosition, double Length, struct FVector* WorldPosition);
	void SetCharacter(class FName LeftCharacter_0, class FName RightCharacter_0);
	void SetDisplay(class FName WidgetID);
	void SetDisplayMotion(class FName Motion, class AAC_DialogueEventDisplay_C** AsAC_DialogueEventDisplay);
	void SetDodonpaMotion(class FName Motion);
	void SetFOV(EGameModeId GameModeID);
	void SetImage(TSoftObjectPtr<class UMaterial> Material, TSoftObjectPtr<class UTexture2D> Texture);
	void SetMenuMotion(class FName Character, class FName Motion);
	void SetMenuSpeechBubbleIndex(int32 InIndex);
	void SetMenuSpeechBubbleVisible(bool bVisible);
	void SetMenuText(const class FText& Text);
	void SetMotion(class FName Character, class FName Motion);
	void SetMotion_EndWait(class FName Character, class FName Motion);
	void SetRewardGetDisplay(const class FName InRewardAchievementDataName);
	void SetupDodonpaActor();
	void SetupFestaEventData();
	void ShowBG();
	void SoundPlay(class FName QueName);
	void UnbindEvent_WaitAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DialogueEventManager_C">();
	}
	static class ABP_DialogueEventManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DialogueEventManager_C>();
	}
};
static_assert(alignof(ABP_DialogueEventManager_C) == 0x000008, "Wrong alignment on ABP_DialogueEventManager_C");
static_assert(sizeof(ABP_DialogueEventManager_C) == 0x000368, "Wrong size on ABP_DialogueEventManager_C");
static_assert(offsetof(ABP_DialogueEventManager_C, UberGraphFrame) == 0x0002D0, "Member 'ABP_DialogueEventManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_DialogueEventManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, MessageWindow) == 0x0002E0, "Member 'ABP_DialogueEventManager_C::MessageWindow' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, LeftCharacter) == 0x0002E8, "Member 'ABP_DialogueEventManager_C::LeftCharacter' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, RightCharacter) == 0x0002F0, "Member 'ABP_DialogueEventManager_C::RightCharacter' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, EventBG) == 0x0002F8, "Member 'ABP_DialogueEventManager_C::EventBG' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, OnCompleteInitialize) == 0x000300, "Member 'ABP_DialogueEventManager_C::OnCompleteInitialize' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, OnCompleteDestroy) == 0x000310, "Member 'ABP_DialogueEventManager_C::OnCompleteDestroy' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, OnCompleteCommand) == 0x000320, "Member 'ABP_DialogueEventManager_C::OnCompleteCommand' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, CommandTarget) == 0x000330, "Member 'ABP_DialogueEventManager_C::CommandTarget' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, BillboardImage) == 0x000338, "Member 'ABP_DialogueEventManager_C::BillboardImage' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, RewardAchievementType) == 0x000340, "Member 'ABP_DialogueEventManager_C::RewardAchievementType' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, InputRecieveObject) == 0x000348, "Member 'ABP_DialogueEventManager_C::InputRecieveObject' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, CharacterNameDataTable) == 0x000350, "Member 'ABP_DialogueEventManager_C::CharacterNameDataTable' has a wrong offset!");
static_assert(offsetof(ABP_DialogueEventManager_C, FestaName) == 0x000358, "Member 'ABP_DialogueEventManager_C::FestaName' has a wrong offset!");

}

