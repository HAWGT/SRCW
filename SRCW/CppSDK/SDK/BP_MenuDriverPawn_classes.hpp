#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuDriverPawn

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MenuDriverPawn.BP_MenuDriverPawn_C
// 0x0070 (0x05B8 - 0x0548)
class ABP_MenuDriverPawn_C final : public ADriver
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0548(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGFurComponent*                         GFur;                                              // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SteeringWheel;                                     // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     DriverId;                                          // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EItemId Activated_Item_Id)> OnActivateItem;                        // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UABPT_MenuDriver_C*                     DriverAnimInstance;                                // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnBindItem;                                        // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bHoverboard;                                       // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABPT_MenuDriver_C*                     ABPT_MenuDriverRef;                                // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabledSound;                                     // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CreateDriver(EDriverId ID);
	void ExecuteUbergraph_BP_MenuDriverPawn(int32 EntryPoint);
	void LoadMasterDataAssets(EDriverId ID);
	void OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7(class FName NotifyName);
	void OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC(class FName NotifyName);
	void OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7(class FName NotifyName);
	void OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC(class FName NotifyName);
	void OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7(class FName NotifyName);
	void OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC(class FName NotifyName);
	void OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7(class FName NotifyName);
	void OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC(class FName NotifyName);
	void OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7(class FName NotifyName);
	void OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC(class FName NotifyName);
	void Play_Animation(EMenuDriverAnimationStateId StateId, int32 Index_0);
	void PlayFaceOverrideMontage(EMenuDriverAnimationStateId InStateId, int32 InIndex);
	void ReceiveBeginPlay();
	void SetAnimationBoneSetting(bool UseBoneControl, const struct FRotator& NeckRotation, const struct FRotator& SpineRotation);
	void SetAnimationIsDriveIdleLowLoop(bool IsDriveIdleLowLoop);
	void SetAnimClass(const class UClass* NewClass);
	void SetEnableGfur(bool Condition);
	void SetLightingChannels(bool Channel0, bool Channel1, bool Channel2);
	void SetRideableStatusType(ECarStatusType StatusType);

	void PlayVoice(const EDriverVoiceId InDriverVoiceId, const ESoundPan InSoundPan) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuDriverPawn_C">();
	}
	static class ABP_MenuDriverPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MenuDriverPawn_C>();
	}
};
static_assert(alignof(ABP_MenuDriverPawn_C) == 0x000008, "Wrong alignment on ABP_MenuDriverPawn_C");
static_assert(sizeof(ABP_MenuDriverPawn_C) == 0x0005B8, "Wrong size on ABP_MenuDriverPawn_C");
static_assert(offsetof(ABP_MenuDriverPawn_C, UberGraphFrame) == 0x000548, "Member 'ABP_MenuDriverPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, GFur) == 0x000550, "Member 'ABP_MenuDriverPawn_C::GFur' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, SteeringWheel) == 0x000558, "Member 'ABP_MenuDriverPawn_C::SteeringWheel' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, SkeletalMesh) == 0x000560, "Member 'ABP_MenuDriverPawn_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, DefaultSceneRoot) == 0x000568, "Member 'ABP_MenuDriverPawn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, DriverId) == 0x000570, "Member 'ABP_MenuDriverPawn_C::DriverId' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, OnActivateItem) == 0x000578, "Member 'ABP_MenuDriverPawn_C::OnActivateItem' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, DriverAnimInstance) == 0x000588, "Member 'ABP_MenuDriverPawn_C::DriverAnimInstance' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, OnBindItem) == 0x000590, "Member 'ABP_MenuDriverPawn_C::OnBindItem' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, bHoverboard) == 0x0005A0, "Member 'ABP_MenuDriverPawn_C::bHoverboard' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, ABPT_MenuDriverRef) == 0x0005A8, "Member 'ABP_MenuDriverPawn_C::ABPT_MenuDriverRef' has a wrong offset!");
static_assert(offsetof(ABP_MenuDriverPawn_C, bEnabledSound) == 0x0005B0, "Member 'ABP_MenuDriverPawn_C::bEnabledSound' has a wrong offset!");

}

