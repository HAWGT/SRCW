#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RaceBefore_FinalRound

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RaceBefore_FinalRound.WBP_RaceBefore_FinalRound_C
// 0x00D0 (0x03B0 - 0x02E0)
class UWBP_RaceBefore_FinalRound_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RaceBefore_Out;                                    // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RaceBefore_In;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlackBG;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_System_BG_01;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_System_BG_02;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_System_BG_03;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel;                                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_GrandPrixMedley;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CourseSelect_Sub_CourseIcon_C*     WBP_CourseSelect_Sub_CourseIcon;                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<EStageId>                              StageIds;                                          // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UImage*>                         StageImageTexture;                                 // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         NewVar;                                            // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnLoadComplete;                                    // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnAnimCompleted;                                   // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OpenTipsWindow;                                    // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnResumeRaceBeforeIn;                              // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnShowTipsWindow;                                  // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BeginRaceBeforOut();
	void CheckOpenTips();
	void Construct();
	void ExecuteUbergraph_WBP_RaceBefore_FinalRound(int32 EntryPoint);
	void LoadCompleted();
	void OnAnimationEnd();
	void PreConstruct(bool IsDesignTime);
	void ResumeRaceBeforeIn();
	void SequenceEvent__ENTRYPOINTWBP_RaceBefore_FinalRound();
	void SequenceEvent__ENTRYPOINTWBP_RaceBefore_FinalRound_0();
	void Set_Open_Tips_Window(bool InOpenWindow);
	void SetGrandPrixIcon(EGrandPrixId InGrandprixId);
	void SetMedleyText(const class FText& InText);
	void SetTextures(TArray<class UTexture2D*>& Textures);
	void Setup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RaceBefore_FinalRound_C">();
	}
	static class UWBP_RaceBefore_FinalRound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RaceBefore_FinalRound_C>();
	}
};
static_assert(alignof(UWBP_RaceBefore_FinalRound_C) == 0x000008, "Wrong alignment on UWBP_RaceBefore_FinalRound_C");
static_assert(sizeof(UWBP_RaceBefore_FinalRound_C) == 0x0003B0, "Wrong size on UWBP_RaceBefore_FinalRound_C");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_RaceBefore_FinalRound_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, RaceBefore_Out) == 0x0002E8, "Member 'UWBP_RaceBefore_FinalRound_C::RaceBefore_Out' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, RaceBefore_In) == 0x0002F0, "Member 'UWBP_RaceBefore_FinalRound_C::RaceBefore_In' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, base) == 0x0002F8, "Member 'UWBP_RaceBefore_FinalRound_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, BlackBG) == 0x000300, "Member 'UWBP_RaceBefore_FinalRound_C::BlackBG' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, CanvasPanel_0) == 0x000308, "Member 'UWBP_RaceBefore_FinalRound_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, DMY_System_BG_01) == 0x000310, "Member 'UWBP_RaceBefore_FinalRound_C::DMY_System_BG_01' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, DMY_System_BG_02) == 0x000318, "Member 'UWBP_RaceBefore_FinalRound_C::DMY_System_BG_02' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, DMY_System_BG_03) == 0x000320, "Member 'UWBP_RaceBefore_FinalRound_C::DMY_System_BG_03' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, Panel) == 0x000328, "Member 'UWBP_RaceBefore_FinalRound_C::Panel' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, TXT_GrandPrixMedley) == 0x000330, "Member 'UWBP_RaceBefore_FinalRound_C::TXT_GrandPrixMedley' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, WBP_CourseSelect_Sub_CourseIcon) == 0x000338, "Member 'UWBP_RaceBefore_FinalRound_C::WBP_CourseSelect_Sub_CourseIcon' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, StageIds) == 0x000340, "Member 'UWBP_RaceBefore_FinalRound_C::StageIds' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, StageImageTexture) == 0x000350, "Member 'UWBP_RaceBefore_FinalRound_C::StageImageTexture' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, NewVar) == 0x000360, "Member 'UWBP_RaceBefore_FinalRound_C::NewVar' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, OnLoadComplete) == 0x000368, "Member 'UWBP_RaceBefore_FinalRound_C::OnLoadComplete' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, OnAnimCompleted) == 0x000378, "Member 'UWBP_RaceBefore_FinalRound_C::OnAnimCompleted' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, OpenTipsWindow) == 0x000388, "Member 'UWBP_RaceBefore_FinalRound_C::OpenTipsWindow' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, OnResumeRaceBeforeIn) == 0x000390, "Member 'UWBP_RaceBefore_FinalRound_C::OnResumeRaceBeforeIn' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FinalRound_C, OnShowTipsWindow) == 0x0003A0, "Member 'UWBP_RaceBefore_FinalRound_C::OnShowTipsWindow' has a wrong offset!");

}

