#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_TimeTrialRanking

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_TimeTrialRanking.BPC_TimeTrialRanking_C
// 0x0110 (0x0238 - 0x0128)
class UBPC_TimeTrialRanking_C final : public UTimeTrialRankingState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0128(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_TimeTrialSequence_C*                OwnerTimeTrialSequence;                            // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_Ranking_C*           RankingWidget;                                     // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMenuInputRecieveObject*                SubInputReciever;                                  // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_GhostDownloadActor_C*               GhostDownloadActor;                                // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUnionUIPopupWindowBase*                PopupWindow;                                       // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PrivateMatch_Popup_C*              DownloadingWidget;                                 // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRankingDataTimeTrial                  SelectedRankingData;                               // 0x0160(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_Ghost_Valid;                                    // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SettingGhostGadgetPreset();
	void CreateServerErrorWindow(const EResponseCodeAbstract& ResponseCode);
	void CreateErrorWindow(const class FText& MessageText);
	void CreateRankingWidget();
	void OnDecideEvent(class UObject* Object);
	void OnCancelEvent(class UObject* Object);
	void RankingBind();
	void RankingUnbind();
	void SetRegisterSubMenu();
	void OnExitState();
	void OnUpdateState(float InDeltaTime);
	void OnInitState();
	void FinishDownloadEvent(bool Success);
	void Window_OnDecide(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void OnClosed_RankingWidget();
	void SetupFooter(bool IsVisible);
	void OnMyBestButtonPressed(class UObject* Object);
	void RankingClosed_MyBest();
	void OnMouseClickEvent();
	void カスタムイベント();
	void ExecuteUbergraph_BPC_TimeTrialRanking(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_TimeTrialRanking_C">();
	}
	static class UBPC_TimeTrialRanking_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_TimeTrialRanking_C>();
	}
};
static_assert(alignof(UBPC_TimeTrialRanking_C) == 0x000008, "Wrong alignment on UBPC_TimeTrialRanking_C");
static_assert(sizeof(UBPC_TimeTrialRanking_C) == 0x000238, "Wrong size on UBPC_TimeTrialRanking_C");
static_assert(offsetof(UBPC_TimeTrialRanking_C, UberGraphFrame) == 0x000128, "Member 'UBPC_TimeTrialRanking_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, OwnerTimeTrialSequence) == 0x000130, "Member 'UBPC_TimeTrialRanking_C::OwnerTimeTrialSequence' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, RankingWidget) == 0x000138, "Member 'UBPC_TimeTrialRanking_C::RankingWidget' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, SubInputReciever) == 0x000140, "Member 'UBPC_TimeTrialRanking_C::SubInputReciever' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, GhostDownloadActor) == 0x000148, "Member 'UBPC_TimeTrialRanking_C::GhostDownloadActor' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, PopupWindow) == 0x000150, "Member 'UBPC_TimeTrialRanking_C::PopupWindow' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, DownloadingWidget) == 0x000158, "Member 'UBPC_TimeTrialRanking_C::DownloadingWidget' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, SelectedRankingData) == 0x000160, "Member 'UBPC_TimeTrialRanking_C::SelectedRankingData' has a wrong offset!");
static_assert(offsetof(UBPC_TimeTrialRanking_C, Is_Ghost_Valid) == 0x000230, "Member 'UBPC_TimeTrialRanking_C::Is_Ghost_Valid' has a wrong offset!");

}

