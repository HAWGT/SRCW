#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ItemDarkChaoPerformance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_ItemDarkChaoPerformance_structs.hpp"
#include "UnionRun_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ItemDarkChaoPerformance.ABP_ItemDarkChaoPerformance_C
// 0x03C0 (0x0740 - 0x0380)
class UABP_ItemDarkChaoPerformance_C final : public UItemDarkChaoAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_ItemDarkChaoPerformance::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;  // 0x0388(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0390(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0398(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03A0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0488(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x04B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0518(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0560(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0580(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x05C8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x05E8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0658(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0678(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_ReaveAnimation();
	void AnimNotify_ThrowStart();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ItemDarkChaoPerformance_AnimGraphNode_TransitionResult_04ACC9614B146A5DF3E0FE99F6F95ADD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ItemDarkChaoPerformance_AnimGraphNode_TransitionResult_FA23C0794D8B4F515B839ABE8D6F316F();
	void ExecuteUbergraph_ABP_ItemDarkChaoPerformance(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ItemDarkChaoPerformance_C">();
	}
	static class UABP_ItemDarkChaoPerformance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ItemDarkChaoPerformance_C>();
	}
};
static_assert(alignof(UABP_ItemDarkChaoPerformance_C) == 0x000010, "Wrong alignment on UABP_ItemDarkChaoPerformance_C");
static_assert(sizeof(UABP_ItemDarkChaoPerformance_C) == 0x000740, "Wrong size on UABP_ItemDarkChaoPerformance_C");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, UberGraphFrame) == 0x000380, "Member 'UABP_ItemDarkChaoPerformance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, __AnimBlueprintMutables) == 0x000388, "Member 'UABP_ItemDarkChaoPerformance_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimBlueprintExtension_PropertyAccess) == 0x000390, "Member 'UABP_ItemDarkChaoPerformance_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimBlueprintExtension_Base) == 0x000398, "Member 'UABP_ItemDarkChaoPerformance_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_Root) == 0x0003A0, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_TransitionResult_5) == 0x0003C0, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_TransitionResult_4) == 0x0003E8, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_TransitionResult_3) == 0x000410, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_TransitionResult_2) == 0x000438, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_TransitionResult_1) == 0x000460, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_TransitionResult) == 0x000488, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_SequencePlayer_2) == 0x0004B0, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_StateResult_3) == 0x0004F8, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_SequencePlayer_1) == 0x000518, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_StateResult_2) == 0x000560, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_SequencePlayer) == 0x000580, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_StateResult_1) == 0x0005C8, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_BlendSpacePlayer) == 0x0005E8, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_StateResult) == 0x000658, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ItemDarkChaoPerformance_C, AnimGraphNode_StateMachine) == 0x000678, "Member 'UABP_ItemDarkChaoPerformance_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

