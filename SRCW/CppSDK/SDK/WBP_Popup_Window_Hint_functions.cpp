#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Popup_Window_Hint

#include "Basic.hpp"

#include "WBP_Popup_Window_Hint_classes.hpp"
#include "WBP_Popup_Window_Hint_parameters.hpp"


namespace SDK
{

// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.BindAnimationEvent
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::BindAnimationEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "BindAnimationEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.ChangeInputTypeIF
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAppControllerInputType                 InNewControllerInputType                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::ChangeInputTypeIF(EAppControllerInputType InNewControllerInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "ChangeInputTypeIF");

	Params::WBP_Popup_Window_Hint_C_ChangeInputTypeIF Parms{};

	Parms.InNewControllerInputType = InNewControllerInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.CloseWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::CloseWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "CloseWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.DelayInputEnable
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::DelayInputEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "DelayInputEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.ExecuteUbergraph_WBP_Popup_Window_Hint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::ExecuteUbergraph_WBP_Popup_Window_Hint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "ExecuteUbergraph_WBP_Popup_Window_Hint");

	Params::WBP_Popup_Window_Hint_C_ExecuteUbergraph_WBP_Popup_Window_Hint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.Finished_4C6E859C40AEF81A6EFEC8815F6EBDF6
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::Finished_4C6E859C40AEF81A6EFEC8815F6EBDF6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "Finished_4C6E859C40AEF81A6EFEC8815F6EBDF6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.GetHintId
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHintId                                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EHintId UWBP_Popup_Window_Hint_C::GetHintId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "GetHintId");

	Params::WBP_Popup_Window_Hint_C_GetHintId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.IsMultiPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bOutIsMultiPage                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::IsMultiPage(bool* bOutIsMultiPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "IsMultiPage");

	Params::WBP_Popup_Window_Hint_C_IsMultiPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutIsMultiPage != nullptr)
		*bOutIsMultiPage = Parms.bOutIsMultiPage;
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.LoadImageWidgetTexture
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<TSoftObjectPtr<class UTexture2D>>&InImageWidgetTexture                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::LoadImageWidgetTexture(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageWidgetTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "LoadImageWidgetTexture");

	Params::WBP_Popup_Window_Hint_C_LoadImageWidgetTexture Parms{};

	Parms.InImageWidgetTexture = std::move(InImageWidgetTexture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OnAcceptKeyPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OnAcceptKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OnAcceptKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OnInAnimationFinishedEvent
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OnInAnimationFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OnInAnimationFinishedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OnLeftShoulderPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OnLeftShoulderPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OnLeftShoulderPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OnLoaded_6A2FCA554B5EA4E54410B982C2471768
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::OnLoaded_6A2FCA554B5EA4E54410B982C2471768(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OnLoaded_6A2FCA554B5EA4E54410B982C2471768");

	Params::WBP_Popup_Window_Hint_C_OnLoaded_6A2FCA554B5EA4E54410B982C2471768 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OnOutAnimationFinishedEvent
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OnOutAnimationFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OnOutAnimationFinishedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OnRightShoulderPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OnRightShoulderPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OnRightShoulderPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OpenWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OpenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OpenWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.OpenWindowWithoutAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::OpenWindowWithoutAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "OpenWindowWithoutAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "PreConstruct");

	Params::WBP_Popup_Window_Hint_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetAutoEnableSubMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetAutoEnableSubMenu(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetAutoEnableSubMenu");

	Params::WBP_Popup_Window_Hint_C_SetAutoEnableSubMenu Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetBackgroundVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bInVisible                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetBackgroundVisible(const bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetBackgroundVisible");

	Params::WBP_Popup_Window_Hint_C_SetBackgroundVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetCharacterVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetCharacterVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetCharacterVisible");

	Params::WBP_Popup_Window_Hint_C_SetCharacterVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetCharacterVisibleByParameter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EHintCategory                           InCategory                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTipsIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetCharacterVisibleByParameter(EHintCategory InCategory, int32 InTipsIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetCharacterVisibleByParameter");

	Params::WBP_Popup_Window_Hint_C_SetCharacterVisibleByParameter Parms{};

	Parms.InCategory = InCategory;
	Parms.InTipsIndex = InTipsIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetEmptyDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::SetEmptyDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetEmptyDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetExplanationText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::SetExplanationText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetExplanationText");

	Params::WBP_Popup_Window_Hint_C_SetExplanationText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetFooterParam
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIButtonIconType                       InUIButtonIconType                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InButtonIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetFooterParam(EUIButtonIconType InUIButtonIconType, int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetFooterParam");

	Params::WBP_Popup_Window_Hint_C_SetFooterParam Parms{};

	Parms.InUIButtonIconType = InUIButtonIconType;
	Parms.InButtonIndex = InButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetFooterVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bInVisible                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetFooterVisible(const bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetFooterVisible");

	Params::WBP_Popup_Window_Hint_C_SetFooterVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetImageTexture
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>& InImageTexture                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetImageTexture(const TSoftObjectPtr<class UTexture2D>& InImageTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetImageTexture");

	Params::WBP_Popup_Window_Hint_C_SetImageTexture Parms{};

	Parms.InImageTexture = InImageTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetImageWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSoftClassPtr<class UClass>&      InImageWidget                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// float                                   InAnimationInterval                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetImageWidget(const TSoftClassPtr<class UClass>& InImageWidget, float InAnimationInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetImageWidget");

	Params::WBP_Popup_Window_Hint_C_SetImageWidget Parms{};

	Parms.InImageWidget = InImageWidget;
	Parms.InAnimationInterval = InAnimationInterval;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetImageWidgetObjectTexture
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::SetImageWidgetObjectTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetImageWidgetObjectTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetLRArrowVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInLVisible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInRVisible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetLRArrowVisible(bool bInLVisible, bool bInRVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetLRArrowVisible");

	Params::WBP_Popup_Window_Hint_C_SetLRArrowVisible Parms{};

	Parms.bInLVisible = bInLVisible;
	Parms.bInRVisible = bInRVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetNextPageIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InChangeValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetNextPageIndex(int32 InChangeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetNextPageIndex");

	Params::WBP_Popup_Window_Hint_C_SetNextPageIndex Parms{};

	Parms.InChangeValue = InChangeValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetPageDisplay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPageNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCurrentPageIndex                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::SetPageDisplay(int32 InPageNum, int32 InCurrentPageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetPageDisplay");

	Params::WBP_Popup_Window_Hint_C_SetPageDisplay Parms{};

	Parms.InPageNum = InPageNum;
	Parms.InCurrentPageIndex = InCurrentPageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetPageExplanationText
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              InTextArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::SetPageExplanationText(const TArray<class FText>& InTextArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetPageExplanationText");

	Params::WBP_Popup_Window_Hint_C_SetPageExplanationText Parms{};

	Parms.InTextArray = std::move(InTextArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetPageImageTexture
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<TSoftObjectPtr<class UTexture2D>>&InImageTextureArray                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::SetPageImageTexture(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageTextureArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetPageImageTexture");

	Params::WBP_Popup_Window_Hint_C_SetPageImageTexture Parms{};

	Parms.InImageTextureArray = std::move(InImageTextureArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetPageImageTextureAndWidget
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<TSoftObjectPtr<class UTexture2D>>&InImageTexture                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<TSoftClassPtr<class UClass>>&InImageWidget                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<double>&                   InImageWidgetAnimationInterval                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::SetPageImageTextureAndWidget(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageTexture, const TArray<TSoftClassPtr<class UClass>>& InImageWidget, const TArray<double>& InImageWidgetAnimationInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetPageImageTextureAndWidget");

	Params::WBP_Popup_Window_Hint_C_SetPageImageTextureAndWidget Parms{};

	Parms.InImageTexture = std::move(InImageTexture);
	Parms.InImageWidget = std::move(InImageWidget);
	Parms.InImageWidgetAnimationInterval = std::move(InImageWidgetAnimationInterval);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetPageImageWidget
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<TSoftObjectPtr<class UTexture2D>>&InImageTexture                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<TSoftClassPtr<class UClass>>&InImageWidgetArray                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<double>&                   InAnimationInterval                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::SetPageImageWidget(const TArray<TSoftObjectPtr<class UTexture2D>>& InImageTexture, const TArray<TSoftClassPtr<class UClass>>& InImageWidgetArray, const TArray<double>& InAnimationInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetPageImageWidget");

	Params::WBP_Popup_Window_Hint_C_SetPageImageWidget Parms{};

	Parms.InImageTexture = std::move(InImageTexture);
	Parms.InImageWidgetArray = std::move(InImageWidgetArray);
	Parms.InAnimationInterval = std::move(InAnimationInterval);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetScrollBoxParam
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::SetScrollBoxParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetScrollBoxParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetTestTextParam
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::SetTestTextParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetTestTextParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.SetTitleText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Popup_Window_Hint_C::SetTitleText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "SetTitleText");

	Params::WBP_Popup_Window_Hint_C_SetTitleText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.Setup
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHintId                                 InHintId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInDecisionClose                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::Setup(EHintId InHintId, bool bInDecisionClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "Setup");

	Params::WBP_Popup_Window_Hint_C_Setup Parms{};

	Parms.InHintId = InHintId;
	Parms.bInDecisionClose = bInDecisionClose;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.UnBindAnimationEvent
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::UnBindAnimationEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "UnBindAnimationEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.UpdateDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EHintId                                 InHintId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::UpdateDisplay(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "UpdateDisplay");

	Params::WBP_Popup_Window_Hint_C_UpdateDisplay Parms{};

	Parms.InHintId = InHintId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.UpdateFooter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsTips                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Popup_Window_Hint_C::UpdateFooter(bool bInIsTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "UpdateFooter");

	Params::WBP_Popup_Window_Hint_C_UpdateFooter Parms{};

	Parms.bInIsTips = bInIsTips;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.UpdateInputType
// (BlueprintCallable, BlueprintEvent)

void UWBP_Popup_Window_Hint_C::UpdateInputType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "UpdateInputType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Popup_Window_Hint.WBP_Popup_Window_Hint_C.GetRegistPriority
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EMainMenuRegistPriority                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EMainMenuRegistPriority UWBP_Popup_Window_Hint_C::GetRegistPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Popup_Window_Hint_C", "GetRegistPriority");

	Params::WBP_Popup_Window_Hint_C_GetRegistPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

