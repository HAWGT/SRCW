#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo.WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C.SetRivalType
// 0x0014 (0x0014 - 0x0000)
struct WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType final
{
public:
	ERivalType                                    In_RivalType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERivalType                                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType) == 0x000004, "Wrong alignment on WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType");
static_assert(sizeof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType) == 0x000014, "Wrong size on WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType, In_RivalType) == 0x000000, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType::In_RivalType' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType, Temp_byte_Variable) == 0x000001, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType, Temp_int_Variable) == 0x000004, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType, Temp_int_Variable_1) == 0x000008, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType, K2Node_Select_Default) == 0x000010, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetRivalType::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo.WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText) == 0x000008, "Wrong alignment on WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText");
static_assert(sizeof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText) == 0x000010, "Wrong size on WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText");
static_assert(offsetof(WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText, InText) == 0x000000, "Member 'WBP_RaceBefore_RivalRacer_Sub_RivalRacerInfo_C_SetText::InText' has a wrong offset!");

}

