#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuRacerPreview

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.AddRotation
// 0x0010 (0x0010 - 0x0000)
struct BP_MenuRacerPreview_C_AddRotation final
{
public:
	double                                        InDeltaRotation;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_AddRotation) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_AddRotation");
static_assert(sizeof(BP_MenuRacerPreview_C_AddRotation) == 0x000010, "Wrong size on BP_MenuRacerPreview_C_AddRotation");
static_assert(offsetof(BP_MenuRacerPreview_C_AddRotation, InDeltaRotation) == 0x000000, "Member 'BP_MenuRacerPreview_C_AddRotation::InDeltaRotation' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_AddRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_AddRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.Attach Driver to Machine
// 0x0110 (0x0110 - 0x0000)
struct BP_MenuRacerPreview_C_Attach_Driver_to_Machine final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0000(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_Attach_Driver_to_Machine");
static_assert(sizeof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine) == 0x000110, "Wrong size on BP_MenuRacerPreview_C_Attach_Driver_to_Machine");
static_assert(offsetof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000000, "Member 'BP_MenuRacerPreview_C_Attach_Driver_to_Machine::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000F8, "Member 'BP_MenuRacerPreview_C_Attach_Driver_to_Machine::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000100, "Member 'BP_MenuRacerPreview_C_Attach_Driver_to_Machine::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_MenuRacerPreview_C_Attach_Driver_to_Machine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Attach_Driver_to_Machine, CallFunc_K2_AttachToActor_ReturnValue) == 0x000109, "Member 'BP_MenuRacerPreview_C_Attach_Driver_to_Machine::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.AttachDriverToHoverboard
// 0x0100 (0x0100 - 0x0000)
struct BP_MenuRacerPreview_C_AttachDriverToHoverboard final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0000(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_AttachDriverToHoverboard) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_AttachDriverToHoverboard");
static_assert(sizeof(BP_MenuRacerPreview_C_AttachDriverToHoverboard) == 0x000100, "Wrong size on BP_MenuRacerPreview_C_AttachDriverToHoverboard");
static_assert(offsetof(BP_MenuRacerPreview_C_AttachDriverToHoverboard, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000000, "Member 'BP_MenuRacerPreview_C_AttachDriverToHoverboard::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_AttachDriverToHoverboard, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000F8, "Member 'BP_MenuRacerPreview_C_AttachDriverToHoverboard::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_AttachDriverToHoverboard, CallFunc_K2_AttachToActor_ReturnValue) == 0x0000F9, "Member 'BP_MenuRacerPreview_C_AttachDriverToHoverboard::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.CharaMachineMoveStart
// 0x0170 (0x0170 - 0x0000)
struct BP_MenuRacerPreview_C_CharaMachineMoveStart final
{
public:
	struct FTransform                             GoalTransForm_0;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoLerp;                                            // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0068(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_CharaMachineMoveStart) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_CharaMachineMoveStart");
static_assert(sizeof(BP_MenuRacerPreview_C_CharaMachineMoveStart) == 0x000170, "Wrong size on BP_MenuRacerPreview_C_CharaMachineMoveStart");
static_assert(offsetof(BP_MenuRacerPreview_C_CharaMachineMoveStart, GoalTransForm_0) == 0x000000, "Member 'BP_MenuRacerPreview_C_CharaMachineMoveStart::GoalTransForm_0' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CharaMachineMoveStart, NoLerp) == 0x000060, "Member 'BP_MenuRacerPreview_C_CharaMachineMoveStart::NoLerp' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CharaMachineMoveStart, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000068, "Member 'BP_MenuRacerPreview_C_CharaMachineMoveStart::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CharaMachineMoveStart, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000160, "Member 'BP_MenuRacerPreview_C_CharaMachineMoveStart::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.CorrectCustomizeData
// 0x0080 (0x0080 - 0x0000)
struct BP_MenuRacerPreview_C_CorrectCustomizeData final
{
public:
	struct FUserMachineCustomizeData              InCustomizeData;                                   // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	ECarStatusType                                InVehicleType;                                     // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_CorrectCustomizeData) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_CorrectCustomizeData");
static_assert(sizeof(BP_MenuRacerPreview_C_CorrectCustomizeData) == 0x000080, "Wrong size on BP_MenuRacerPreview_C_CorrectCustomizeData");
static_assert(offsetof(BP_MenuRacerPreview_C_CorrectCustomizeData, InCustomizeData) == 0x000000, "Member 'BP_MenuRacerPreview_C_CorrectCustomizeData::InCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CorrectCustomizeData, InVehicleType) == 0x000078, "Member 'BP_MenuRacerPreview_C_CorrectCustomizeData::InVehicleType' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.CreateDriver
// 0x0120 (0x0120 - 0x0000)
struct BP_MenuRacerPreview_C_CreateDriver final
{
public:
	EDriverId                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboard_ReturnValue;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDriverAnimator>       CallFunc_SetAnimClass_self_CastInput;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     K2Node_Select_Default;                             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
	class ABP_MenuDriverPawn_C*                   K2Node_DynamicCast_AsBP_Menu_Driver_Pawn;          // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_CreateDriver) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_CreateDriver");
static_assert(sizeof(BP_MenuRacerPreview_C_CreateDriver) == 0x000120, "Wrong size on BP_MenuRacerPreview_C_CreateDriver");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, Temp_byte_Variable) == 0x000000, "Member 'BP_MenuRacerPreview_C_CreateDriver::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, Temp_struct_Variable) == 0x000010, "Member 'BP_MenuRacerPreview_C_CreateDriver::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, Temp_bool_Variable) == 0x000078, "Member 'BP_MenuRacerPreview_C_CreateDriver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_IsHoverboard_ReturnValue) == 0x000079, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_IsHoverboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_SetAnimClass_self_CastInput) == 0x000080, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_SetAnimClass_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000091, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000093, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, K2Node_Select_Default) == 0x000094, "Member 'BP_MenuRacerPreview_C_CreateDriver::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_Conv_ByteToText_ReturnValue) == 0x000098, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'BP_MenuRacerPreview_C_CreateDriver::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_MenuRacerPreview_C_CreateDriver::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_MenuRacerPreview_C_CreateDriver::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, K2Node_DynamicCast_AsBP_Menu_Driver_Pawn) == 0x000110, "Member 'BP_MenuRacerPreview_C_CreateDriver::K2Node_DynamicCast_AsBP_Menu_Driver_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateDriver, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_MenuRacerPreview_C_CreateDriver::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.CreateHoverboard
// 0x01D0 (0x01D0 - 0x0000)
struct BP_MenuRacerPreview_C_CreateHoverboard final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuRacerHoverboard_C*              K2Node_DynamicCast_AsBP_Menu_Racer_Hoverboard;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MenuRacerPreview_C_CreateHoverboard) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_CreateHoverboard");
static_assert(sizeof(BP_MenuRacerPreview_C_CreateHoverboard) == 0x0001D0, "Wrong size on BP_MenuRacerPreview_C_CreateHoverboard");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateHoverboard, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_MenuRacerPreview_C_CreateHoverboard::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateHoverboard, Temp_struct_Variable) == 0x000060, "Member 'BP_MenuRacerPreview_C_CreateHoverboard::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateHoverboard, K2Node_DynamicCast_AsBP_Menu_Racer_Hoverboard) == 0x0000C0, "Member 'BP_MenuRacerPreview_C_CreateHoverboard::K2Node_DynamicCast_AsBP_Menu_Racer_Hoverboard' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateHoverboard, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_MenuRacerPreview_C_CreateHoverboard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateHoverboard, CallFunc_AddComponent_ReturnValue) == 0x0000D0, "Member 'BP_MenuRacerPreview_C_CreateHoverboard::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateHoverboard, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000D8, "Member 'BP_MenuRacerPreview_C_CreateHoverboard::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.CreateMachine
// 0x0090 (0x0090 - 0x0000)
struct BP_MenuRacerPreview_C_CreateMachine final
{
public:
	class ABP_MenuRacerMachine_C*                 TempMachineActor;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   TempMachineComponet;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuRacerMachine_C*                 K2Node_DynamicCast_AsBP_Menu_Racer_Machine;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_CreateMachine) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_CreateMachine");
static_assert(sizeof(BP_MenuRacerPreview_C_CreateMachine) == 0x000090, "Wrong size on BP_MenuRacerPreview_C_CreateMachine");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateMachine, TempMachineActor) == 0x000000, "Member 'BP_MenuRacerPreview_C_CreateMachine::TempMachineActor' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateMachine, TempMachineComponet) == 0x000008, "Member 'BP_MenuRacerPreview_C_CreateMachine::TempMachineComponet' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateMachine, Temp_struct_Variable) == 0x000010, "Member 'BP_MenuRacerPreview_C_CreateMachine::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateMachine, K2Node_DynamicCast_AsBP_Menu_Racer_Machine) == 0x000070, "Member 'BP_MenuRacerPreview_C_CreateMachine::K2Node_DynamicCast_AsBP_Menu_Racer_Machine' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateMachine, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_MenuRacerPreview_C_CreateMachine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_CreateMachine, CallFunc_AddComponent_ReturnValue) == 0x000080, "Member 'BP_MenuRacerPreview_C_CreateMachine::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.DecideChara
// 0x0320 (0x0320 - 0x0000)
struct BP_MenuRacerPreview_C_DecideChara final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSelectedPlayerCount;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_12;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_13;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_14;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_15;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_16;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_17;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_18;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_19;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_20;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_21;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_22;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_23;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_24;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_25;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_26;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_27;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_28;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_29;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_30;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_31;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_32;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_33;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_34;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_35;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_36;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_37;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_38;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_39;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_40;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_41;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_42;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_43;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_44;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_45;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_46;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_47;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_48;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_49;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_50;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_51;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_52;                           // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_53;                           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_54;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_55;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_56;                           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_57;                           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_58;                           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_59;                           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_60;                           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_61;                           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_62;                           // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_63;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_64;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_65;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_66;                           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_67;                           // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_68;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_69;                           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_70;                           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_71;                           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_72;                           // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_73;                           // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_74;                           // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_75;                           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_76;                           // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_77;                           // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_78;                           // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_79;                           // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_80;                           // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_81;                           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_82;                           // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_83;                           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_84;                           // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_85;                           // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_86;                           // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_87;                           // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_88;                           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_89;                           // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimMontageId                          Temp_byte_Variable_3;                              // 0x02E4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimMontageId                          Temp_byte_Variable_4;                              // 0x02E5(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimMontageId                          Temp_byte_Variable_5;                              // 0x02E6(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E7[0x1];                                      // 0x02E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x02F0(0x0004)()
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     Temp_byte_Variable_6;                              // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     K2Node_Select_Default_1;                           // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimMontageId                          K2Node_Select_Default_2;                           // 0x0305(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     K2Node_Select_Default_3;                           // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_307[0x1];                                      // 0x0307(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDriverAnimator>       CallFunc_PlayAnimation_self_CastInput;             // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SetPanSplit_ReturnValue;                  // 0x0318(0x0004)()
};
static_assert(alignof(BP_MenuRacerPreview_C_DecideChara) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_DecideChara");
static_assert(sizeof(BP_MenuRacerPreview_C_DecideChara) == 0x000320, "Wrong size on BP_MenuRacerPreview_C_DecideChara");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, InPlayerIndex) == 0x000000, "Member 'BP_MenuRacerPreview_C_DecideChara::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, InSelectedPlayerCount) == 0x000004, "Member 'BP_MenuRacerPreview_C_DecideChara::InSelectedPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable) == 0x000008, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_bool_Variable) == 0x000009, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable_2) == 0x00000B, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable) == 0x000010, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_1) == 0x000018, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_2) == 0x000020, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_3) == 0x000028, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_4) == 0x000030, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_5) == 0x000038, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_6) == 0x000040, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_7) == 0x000048, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_8) == 0x000050, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_9) == 0x000058, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_10) == 0x000060, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_11) == 0x000068, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_12) == 0x000070, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_13) == 0x000078, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_14) == 0x000080, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_15) == 0x000088, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_16) == 0x000090, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_17) == 0x000098, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_18) == 0x0000A0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_19) == 0x0000A8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_20) == 0x0000B0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_21) == 0x0000B8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_22) == 0x0000C0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_23) == 0x0000C8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_24) == 0x0000D0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_25) == 0x0000D8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_26) == 0x0000E0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_27) == 0x0000E8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_28) == 0x0000F0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_29) == 0x0000F8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_30) == 0x000100, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_31) == 0x000108, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_32) == 0x000110, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_33) == 0x000118, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_34) == 0x000120, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_35) == 0x000128, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_36) == 0x000130, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_37) == 0x000138, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_38) == 0x000140, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_39) == 0x000148, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_40) == 0x000150, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_41) == 0x000158, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_42) == 0x000160, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_43) == 0x000168, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_44) == 0x000170, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_45) == 0x000178, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_46) == 0x000180, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_47) == 0x000188, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_48) == 0x000190, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_49) == 0x000198, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_50) == 0x0001A0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_51) == 0x0001A8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_52) == 0x0001B0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_53) == 0x0001B8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_54) == 0x0001C0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_55) == 0x0001C8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_56) == 0x0001D0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_57) == 0x0001D8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_58) == 0x0001E0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_59) == 0x0001E8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_60) == 0x0001F0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_61) == 0x0001F8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_62) == 0x000200, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_63) == 0x000208, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_64) == 0x000210, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_65) == 0x000218, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_66) == 0x000220, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_67) == 0x000228, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_68) == 0x000230, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_69) == 0x000238, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_70) == 0x000240, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_71) == 0x000248, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_72) == 0x000250, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_73) == 0x000258, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_74) == 0x000260, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_75) == 0x000268, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_76) == 0x000270, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_77) == 0x000278, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_78) == 0x000280, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_79) == 0x000288, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_80) == 0x000290, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_81) == 0x000298, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_82) == 0x0002A0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_83) == 0x0002A8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_84) == 0x0002B0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_85) == 0x0002B8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_86) == 0x0002C0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_87) == 0x0002C8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_88) == 0x0002D0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_object_Variable_89) == 0x0002D8, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_int_Variable) == 0x0002E0, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable_3) == 0x0002E4, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable_4) == 0x0002E5, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable_5) == 0x0002E6, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, K2Node_Select_Default) == 0x0002E8, "Member 'BP_MenuRacerPreview_C_DecideChara::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_SoundPlay_ReturnValue) == 0x0002F0, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_Percent_IntInt_ReturnValue) == 0x0002F4, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_IsValid_ReturnValue) == 0x0002F8, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002F9, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_byte_Variable_6) == 0x0002FA, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002FB, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, Temp_bool_Variable_1) == 0x0002FC, "Member 'BP_MenuRacerPreview_C_DecideChara::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000300, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, K2Node_Select_Default_1) == 0x000304, "Member 'BP_MenuRacerPreview_C_DecideChara::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, K2Node_Select_Default_2) == 0x000305, "Member 'BP_MenuRacerPreview_C_DecideChara::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, K2Node_Select_Default_3) == 0x000306, "Member 'BP_MenuRacerPreview_C_DecideChara::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_PlayAnimation_self_CastInput) == 0x000308, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_PlayAnimation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DecideChara, CallFunc_SetPanSplit_ReturnValue) == 0x000318, "Member 'BP_MenuRacerPreview_C_DecideChara::CallFunc_SetPanSplit_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.DestoryOldComponents
// 0x0003 (0x0003 - 0x0000)
struct BP_MenuRacerPreview_C_DestoryOldComponents final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_DestoryOldComponents) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_DestoryOldComponents");
static_assert(sizeof(BP_MenuRacerPreview_C_DestoryOldComponents) == 0x000003, "Wrong size on BP_MenuRacerPreview_C_DestoryOldComponents");
static_assert(offsetof(BP_MenuRacerPreview_C_DestoryOldComponents, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MenuRacerPreview_C_DestoryOldComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DestoryOldComponents, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_MenuRacerPreview_C_DestoryOldComponents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DestoryOldComponents, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_MenuRacerPreview_C_DestoryOldComponents::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.DisableBoundsAndLod_Machine
// 0x0030 (0x0030 - 0x0000)
struct BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine final
{
public:
	TArray<class UMeshComponent*>                 MeshComponents;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionStaticMeshComponent*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine");
static_assert(sizeof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine) == 0x000030, "Wrong size on BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, MeshComponents) == 0x000000, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::MeshComponents' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_MenuRacerPreview_C_DisableBoundsAndLod_Machine::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.ExecuteUbergraph_BP_MenuRacerPreview
// 0x0680 (0x0680 - 0x0000)
struct BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0210(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0310(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetDefaultMachineCustomizeData_OutCustomizeData; // 0x0410(0x0078)()
	bool                                          CallFunc_Polling_Set_Sticker_IsCompleteSetSticker; // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Polling_Set_Sticker_IsCompleteSetSticker_1; // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A[0x2];                                      // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerIndex_2;                        // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SelectedPlayerCount;                  // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerIndex_1;                        // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerIndex;                          // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_StateId;                              // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0xC];                                      // 0x04A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x04B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x0518(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     K2Node_Event_InDriverId;                           // 0x0613(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInForcedSetting;                     // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0616(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_617[0x1];                                      // 0x0617(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_1;                    // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_2;                    // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_2;                    // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview");
static_assert(sizeof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview) == 0x000680, "Wrong size on BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, EntryPoint) == 0x000000, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakTransform_Location) == 0x000020, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakTransform_Rotation) == 0x000038, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakTransform_Scale) == 0x000050, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakTransform_Location_1) == 0x000068, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakTransform_Rotation_1) == 0x000080, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakTransform_Scale_1) == 0x000098, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakRotator_Roll_1) == 0x0000BC, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakRotator_Pitch_1) == 0x0000C0, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_BreakRotator_Yaw_1) == 0x0000C4, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_ReturnValue) == 0x0000E0, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E8, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_ReturnValue_1) == 0x000100, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_ReturnValue_2) == 0x000120, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_MakeRotator_ReturnValue) == 0x000190, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000210, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000308, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000310, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000408, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_GetDefaultMachineCustomizeData_OutCustomizeData) == 0x000410, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_GetDefaultMachineCustomizeData_OutCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Polling_Set_Sticker_IsCompleteSetSticker) == 0x000488, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Polling_Set_Sticker_IsCompleteSetSticker' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Polling_Set_Sticker_IsCompleteSetSticker_1) == 0x000489, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Polling_Set_Sticker_IsCompleteSetSticker_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_PlayerIndex_2) == 0x00048C, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_PlayerIndex_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_SelectedPlayerCount) == 0x000490, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_SelectedPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_PlayerIndex_1) == 0x000494, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_PlayerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_PlayerIndex) == 0x000498, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_StateId) == 0x00049C, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_StateId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_Index) == 0x0004A0, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Array_Get_Item) == 0x0004B0, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Conv_IntToByte_ReturnValue) == 0x000510, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x000518, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x000610, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_GetValidValue_ReturnValue) == 0x000611, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000612, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_InDriverId) == 0x000613, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_InDriverId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, K2Node_Event_bInForcedSetting) == 0x000614, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::K2Node_Event_bInForcedSetting' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_IsValid_ReturnValue) == 0x000615, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_IsValid_ReturnValue_1) == 0x000616, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000618, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000620, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x000628, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000630, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_A_ImplicitCast) == 0x000638, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_A_ImplicitCast_1) == 0x000640, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_A_ImplicitCast_2) == 0x000648, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_B_ImplicitCast) == 0x000650, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_B_ImplicitCast_1) == 0x000658, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_Lerp_B_ImplicitCast_2) == 0x000660, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_Lerp_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000668, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00066C, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000670, "Member 'BP_MenuRacerPreview_C_ExecuteUbergraph_BP_MenuRacerPreview::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.GetChildActors
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuRacerPreview_C_GetChildActors final
{
public:
	TArray<class AActor*>                         OutChildActors;                                    // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         CallFunc_GetChildActors_Internal_OutChildActors;   // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_MenuRacerPreview_C_GetChildActors) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_GetChildActors");
static_assert(sizeof(BP_MenuRacerPreview_C_GetChildActors) == 0x000020, "Wrong size on BP_MenuRacerPreview_C_GetChildActors");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors, OutChildActors) == 0x000000, "Member 'BP_MenuRacerPreview_C_GetChildActors::OutChildActors' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors, CallFunc_GetChildActors_Internal_OutChildActors) == 0x000010, "Member 'BP_MenuRacerPreview_C_GetChildActors::CallFunc_GetChildActors_Internal_OutChildActors' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.GetChildActors_Internal
// 0x0048 (0x0048 - 0x0000)
struct BP_MenuRacerPreview_C_GetChildActors_Internal final
{
public:
	class UChildActorComponent*                   InDriverComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   InMachineComponet;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   InHoverboardComponet;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OutChildActors;                                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         TempChildActors;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_GetChildActors_Internal) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_GetChildActors_Internal");
static_assert(sizeof(BP_MenuRacerPreview_C_GetChildActors_Internal) == 0x000048, "Wrong size on BP_MenuRacerPreview_C_GetChildActors_Internal");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, InDriverComponent) == 0x000000, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::InDriverComponent' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, InMachineComponet) == 0x000008, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::InMachineComponet' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, InHoverboardComponet) == 0x000010, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::InHoverboardComponet' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, OutChildActors) == 0x000018, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::OutChildActors' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, TempChildActors) == 0x000028, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::TempChildActors' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, CallFunc_IsValid_ReturnValue_2) == 0x00003A, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetChildActors_Internal, CallFunc_Array_Add_ReturnValue_2) == 0x000044, "Member 'BP_MenuRacerPreview_C_GetChildActors_Internal::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.GetDriverData
// 0x08D0 (0x08D0 - 0x0000)
struct BP_MenuRacerPreview_C_GetDriverData final
{
public:
	EDriverId                                     DriverId_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDriverData                            DriverData;                                        // 0x0008(0x0390)(Parm, OutParm)
	bool                                          bFind;                                             // 0x0398(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x03C8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x03D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0430(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0478(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0488(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0498(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04A8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x04B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x04C8(0x0048)(HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0510(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1[0x7];                                      // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x08A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x08B8(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_GetDriverData) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_GetDriverData");
static_assert(sizeof(BP_MenuRacerPreview_C_GetDriverData) == 0x0008D0, "Wrong size on BP_MenuRacerPreview_C_GetDriverData");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, DriverId_0) == 0x000000, "Member 'BP_MenuRacerPreview_C_GetDriverData::DriverId_0' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, DriverData) == 0x000008, "Member 'BP_MenuRacerPreview_C_GetDriverData::DriverData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, bFind) == 0x000398, "Member 'BP_MenuRacerPreview_C_GetDriverData::bFind' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0003A0, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_GetEnumeratorName_ReturnValue) == 0x0003A8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_IsValid_ReturnValue) == 0x0003B0, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_GetDisplayName_ReturnValue) == 0x0003B8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_Conv_StringToText_ReturnValue) == 0x0003C8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0003D8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, K2Node_MakeStruct_FormatArgumentData) == 0x0003E8, "Member 'BP_MenuRacerPreview_C_GetDriverData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, K2Node_MakeStruct_FormatArgumentData_1) == 0x000430, "Member 'BP_MenuRacerPreview_C_GetDriverData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, K2Node_MakeArray_Array) == 0x000478, "Member 'BP_MenuRacerPreview_C_GetDriverData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, K2Node_MakeArray_Array_1) == 0x000488, "Member 'BP_MenuRacerPreview_C_GetDriverData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_Format_ReturnValue) == 0x000498, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_Format_ReturnValue_1) == 0x0004A8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0004B8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, K2Node_MakeStruct_FormatArgumentData_2) == 0x0004C8, "Member 'BP_MenuRacerPreview_C_GetDriverData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000510, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008A0, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, K2Node_MakeArray_Array_2) == 0x0008A8, "Member 'BP_MenuRacerPreview_C_GetDriverData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_Format_ReturnValue_2) == 0x0008B8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_GetDriverData, CallFunc_IsValid_ReturnValue_1) == 0x0008C8, "Member 'BP_MenuRacerPreview_C_GetDriverData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.InitTransformForTopMenu
// 0x0060 (0x0060 - 0x0000)
struct BP_MenuRacerPreview_C_InitTransformForTopMenu final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_InitTransformForTopMenu) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_InitTransformForTopMenu");
static_assert(sizeof(BP_MenuRacerPreview_C_InitTransformForTopMenu) == 0x000060, "Wrong size on BP_MenuRacerPreview_C_InitTransformForTopMenu");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformForTopMenu, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_MenuRacerPreview_C_InitTransformForTopMenu::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.InitTransformMapForCharaMachineSelect
// 0x0380 (0x0380 - 0x0000)
struct BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect final
{
public:
	EViewSplitId                                  Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_1;                              // 0x0070(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_2;                              // 0x00E0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_3;                              // 0x0150(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0xF];                                      // 0x0151(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_4;                              // 0x01C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0xF];                                      // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_5;                              // 0x0230(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0xF];                                      // 0x0231(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0240(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_6;                              // 0x02A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0xF];                                      // 0x02A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_7;                              // 0x0370(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect");
static_assert(sizeof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect) == 0x000380, "Wrong size on BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable) == 0x000000, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_1) == 0x000070, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_1) == 0x000080, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_2) == 0x0000E0, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_2) == 0x0000F0, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_3) == 0x000150, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_3) == 0x000160, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_4) == 0x0001C0, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_4) == 0x0001D0, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_5) == 0x000230, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_5) == 0x000240, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_6) == 0x0002A0, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_6) == 0x0002B0, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, CallFunc_MakeTransform_ReturnValue_7) == 0x000310, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect, Temp_byte_Variable_7) == 0x000370, "Member 'BP_MenuRacerPreview_C_InitTransformMapForCharaMachineSelect::Temp_byte_Variable_7' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.OnCreateAuraEffect
// 0x0007 (0x0007 - 0x0000)
struct BP_MenuRacerPreview_C_OnCreateAuraEffect final
{
public:
	EMachineAuraId                                InAuraID;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                InType;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboard_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_OnCreateAuraEffect) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_OnCreateAuraEffect");
static_assert(sizeof(BP_MenuRacerPreview_C_OnCreateAuraEffect) == 0x000007, "Wrong size on BP_MenuRacerPreview_C_OnCreateAuraEffect");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, InAuraID) == 0x000000, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::InAuraID' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, InType) == 0x000001, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::InType' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, CallFunc_IsHoverboard_ReturnValue) == 0x000002, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::CallFunc_IsHoverboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_OnCreateAuraEffect, CallFunc_IsValid_ReturnValue_3) == 0x000006, "Member 'BP_MenuRacerPreview_C_OnCreateAuraEffect::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.PlayDriverAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuRacerPreview_C_PlayDriverAnimation final
{
public:
	int32                                         StateId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_PlayDriverAnimation) == 0x000004, "Wrong alignment on BP_MenuRacerPreview_C_PlayDriverAnimation");
static_assert(sizeof(BP_MenuRacerPreview_C_PlayDriverAnimation) == 0x000008, "Wrong size on BP_MenuRacerPreview_C_PlayDriverAnimation");
static_assert(offsetof(BP_MenuRacerPreview_C_PlayDriverAnimation, StateId) == 0x000000, "Member 'BP_MenuRacerPreview_C_PlayDriverAnimation::StateId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_PlayDriverAnimation, Index_0) == 0x000004, "Member 'BP_MenuRacerPreview_C_PlayDriverAnimation::Index_0' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.PlayLeaveAnimation
// 0x0010 (0x0010 - 0x0000)
struct BP_MenuRacerPreview_C_PlayLeaveAnimation final
{
public:
	TScriptInterface<class IDriverVoicePlayer>    CallFunc_PlayVoice_self_CastInput;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_PlayLeaveAnimation) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_PlayLeaveAnimation");
static_assert(sizeof(BP_MenuRacerPreview_C_PlayLeaveAnimation) == 0x000010, "Wrong size on BP_MenuRacerPreview_C_PlayLeaveAnimation");
static_assert(offsetof(BP_MenuRacerPreview_C_PlayLeaveAnimation, CallFunc_PlayVoice_self_CastInput) == 0x000000, "Member 'BP_MenuRacerPreview_C_PlayLeaveAnimation::CallFunc_PlayVoice_self_CastInput' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.Polling Set Sticker
// 0x0058 (0x0058 - 0x0000)
struct BP_MenuRacerPreview_C_Polling_Set_Sticker final
{
public:
	class UStickerBakerHandle*                    StickerBakerHandle;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCompleteSetSticker;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AUnionStickerBaker*                     CallFunc_GetBaker_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUnionStickerBaker*                     CallFunc_GetBaker_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUnionStickerBaker*                     CallFunc_GetBaker_ReturnValue_2;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetStickerTexture_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetStickerTexture_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetStickerTexture_ReturnValue_2;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetStickerTexture_ReturnValue_3;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUnionStickerBaker*                     CallFunc_GetBaker_ReturnValue_3;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBakingComplete_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboard_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_Polling_Set_Sticker) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_Polling_Set_Sticker");
static_assert(sizeof(BP_MenuRacerPreview_C_Polling_Set_Sticker) == 0x000058, "Wrong size on BP_MenuRacerPreview_C_Polling_Set_Sticker");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, StickerBakerHandle) == 0x000000, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::StickerBakerHandle' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, IsCompleteSetSticker) == 0x000008, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::IsCompleteSetSticker' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetBaker_ReturnValue) == 0x000010, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetBaker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetBaker_ReturnValue_1) == 0x000018, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetBaker_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetBaker_ReturnValue_2) == 0x000020, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetBaker_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetStickerTexture_ReturnValue) == 0x000028, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetStickerTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetStickerTexture_ReturnValue_1) == 0x000030, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetStickerTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetStickerTexture_ReturnValue_2) == 0x000038, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetStickerTexture_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetStickerTexture_ReturnValue_3) == 0x000040, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetStickerTexture_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_GetBaker_ReturnValue_3) == 0x000048, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_GetBaker_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_IsBakingComplete_ReturnValue) == 0x000050, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_IsBakingComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Polling_Set_Sticker, CallFunc_IsHoverboard_ReturnValue) == 0x000051, "Member 'BP_MenuRacerPreview_C_Polling_Set_Sticker::CallFunc_IsHoverboard_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuRacerPreview_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MenuRacerPreview_C_ReceiveTick");
static_assert(sizeof(BP_MenuRacerPreview_C_ReceiveTick) == 0x000004, "Wrong size on BP_MenuRacerPreview_C_ReceiveTick");
static_assert(offsetof(BP_MenuRacerPreview_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MenuRacerPreview_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.ResetLeaveAnimTimer
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuRacerPreview_C_ResetLeaveAnimTimer final
{
public:
	bool                                          bIsStop;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_InvalidateTimerHandle_ReturnValue;     // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_ResetLeaveAnimTimer) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_ResetLeaveAnimTimer");
static_assert(sizeof(BP_MenuRacerPreview_C_ResetLeaveAnimTimer) == 0x000020, "Wrong size on BP_MenuRacerPreview_C_ResetLeaveAnimTimer");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetLeaveAnimTimer, bIsStop) == 0x000000, "Member 'BP_MenuRacerPreview_C_ResetLeaveAnimTimer::bIsStop' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetLeaveAnimTimer, CallFunc_K2_InvalidateTimerHandle_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_ResetLeaveAnimTimer::CallFunc_K2_InvalidateTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetLeaveAnimTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_MenuRacerPreview_C_ResetLeaveAnimTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetLeaveAnimTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000018, "Member 'BP_MenuRacerPreview_C_ResetLeaveAnimTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.ResetMachineRelativeRotation
// 0x0108 (0x0108 - 0x0000)
struct BP_MenuRacerPreview_C_ResetMachineRelativeRotation final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0010(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MenuRacerPreview_C_ResetMachineRelativeRotation) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_ResetMachineRelativeRotation");
static_assert(sizeof(BP_MenuRacerPreview_C_ResetMachineRelativeRotation) == 0x000108, "Wrong size on BP_MenuRacerPreview_C_ResetMachineRelativeRotation");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetMachineRelativeRotation, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MenuRacerPreview_C_ResetMachineRelativeRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetMachineRelativeRotation, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_ResetMachineRelativeRotation::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_ResetMachineRelativeRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000010, "Member 'BP_MenuRacerPreview_C_ResetMachineRelativeRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.Set All
// 0x0510 (0x0510 - 0x0000)
struct BP_MenuRacerPreview_C_Set_All final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              InCustomizeData;                                   // 0x0008(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bInForcedSetting;                                  // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitialize;                                     // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsChangeAura;                                     // 0x0082(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRearStickerChanged;                             // 0x0083(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFrontStickerChanged;                            // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRearMeshChanged;                                // 0x0085(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFrontMeshChanged;                               // 0x0086(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              OldCustomizeData;                                  // 0x0088(0x0078)(Edit, BlueprintVisible)
	TArray<class AActor*>                         NewActors;                                         // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         OldActors;                                         // 0x0110(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	ECarStatusType                                OldVehicleType;                                    // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     OldDriverId;                                       // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldCreateVehicle;                              // 0x0122(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldCreateDriver;                               // 0x0123(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHoverboard;                                     // 0x0124(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHoverboard_Old;                                 // 0x0125(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDriverData                            CallFunc_GetDriverData_DriverData;                 // 0x0128(0x0390)()
	bool                                          CallFunc_GetDriverData_bFind;                      // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue;             // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue_1;           // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStickerChanged_ReturnValue;             // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x04CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStickerChanged_ReturnValue_1;           // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboard_ReturnValue;                 // 0x04DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue_2;           // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE[0x2];                                      // 0x04DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDriverAnimator>       CallFunc_SetRideableStatusType_self_CastInput;     // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoverboard_ReturnValue_1;               // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x04F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7[0x1];                                      // 0x04F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x04FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x04FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_Set_All) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_Set_All");
static_assert(sizeof(BP_MenuRacerPreview_C_Set_All) == 0x000510, "Wrong size on BP_MenuRacerPreview_C_Set_All");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, InDriverId) == 0x000000, "Member 'BP_MenuRacerPreview_C_Set_All::InDriverId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, InCustomizeData) == 0x000008, "Member 'BP_MenuRacerPreview_C_Set_All::InCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bInForcedSetting) == 0x000080, "Member 'BP_MenuRacerPreview_C_Set_All::bInForcedSetting' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsInitialize) == 0x000081, "Member 'BP_MenuRacerPreview_C_Set_All::bIsInitialize' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsChangeAura) == 0x000082, "Member 'BP_MenuRacerPreview_C_Set_All::bIsChangeAura' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsRearStickerChanged) == 0x000083, "Member 'BP_MenuRacerPreview_C_Set_All::bIsRearStickerChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsFrontStickerChanged) == 0x000084, "Member 'BP_MenuRacerPreview_C_Set_All::bIsFrontStickerChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsRearMeshChanged) == 0x000085, "Member 'BP_MenuRacerPreview_C_Set_All::bIsRearMeshChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsFrontMeshChanged) == 0x000086, "Member 'BP_MenuRacerPreview_C_Set_All::bIsFrontMeshChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, OldCustomizeData) == 0x000088, "Member 'BP_MenuRacerPreview_C_Set_All::OldCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, NewActors) == 0x000100, "Member 'BP_MenuRacerPreview_C_Set_All::NewActors' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, OldActors) == 0x000110, "Member 'BP_MenuRacerPreview_C_Set_All::OldActors' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, OldVehicleType) == 0x000120, "Member 'BP_MenuRacerPreview_C_Set_All::OldVehicleType' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, OldDriverId) == 0x000121, "Member 'BP_MenuRacerPreview_C_Set_All::OldDriverId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bShouldCreateVehicle) == 0x000122, "Member 'BP_MenuRacerPreview_C_Set_All::bShouldCreateVehicle' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bShouldCreateDriver) == 0x000123, "Member 'BP_MenuRacerPreview_C_Set_All::bShouldCreateDriver' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsHoverboard) == 0x000124, "Member 'BP_MenuRacerPreview_C_Set_All::bIsHoverboard' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, bIsHoverboard_Old) == 0x000125, "Member 'BP_MenuRacerPreview_C_Set_All::bIsHoverboard_Old' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_GetDriverData_DriverData) == 0x000128, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_GetDriverData_DriverData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_GetDriverData_bFind) == 0x0004B8, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_GetDriverData_bFind' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0004B9, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_GetCarStatusType_ReturnValue) == 0x0004BA, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_GetCarStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004BB, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_GetCarStatusType_ReturnValue_1) == 0x0004BC, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_GetCarStatusType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0004C0, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0004C4, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0004C8, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_IsStickerChanged_ReturnValue) == 0x0004CC, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_IsStickerChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0004CD, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue) == 0x0004CE, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_1) == 0x0004CF, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_IsStickerChanged_ReturnValue_1) == 0x0004D0, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_IsStickerChanged_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0004D4, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_2) == 0x0004D8, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0004D9, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_3) == 0x0004DA, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_IsHoverboard_ReturnValue) == 0x0004DB, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_IsHoverboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_GetCarStatusType_ReturnValue_2) == 0x0004DC, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_GetCarStatusType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_4) == 0x0004DD, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_SetRideableStatusType_self_CastInput) == 0x0004E0, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_SetRideableStatusType_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x0004F0, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_IsHoverboard_ReturnValue_1) == 0x0004F4, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_IsHoverboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_IsValid_ReturnValue) == 0x0004F5, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0004F6, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x0004F8, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_5) == 0x0004FC, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0004FD, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, Temp_bool_Variable) == 0x0004FE, "Member 'BP_MenuRacerPreview_C_Set_All::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x0004FF, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, K2Node_Select_Default) == 0x000500, "Member 'BP_MenuRacerPreview_C_Set_All::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_6) == 0x000508, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_All, CallFunc_BooleanOR_ReturnValue_7) == 0x000509, "Member 'BP_MenuRacerPreview_C_Set_All::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.Set Cockpit Anim Enabled
// 0x0001 (0x0001 - 0x0000)
struct BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled");
static_assert(sizeof(BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled) == 0x000001, "Wrong size on BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled");
static_assert(offsetof(BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled, bInEnabled) == 0x000000, "Member 'BP_MenuRacerPreview_C_Set_Cockpit_Anim_Enabled::bInEnabled' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetCustomizeData
// 0x0080 (0x0080 - 0x0000)
struct BP_MenuRacerPreview_C_SetCustomizeData final
{
public:
	struct FUserMachineCustomizeData              InCustomizeData;                                   // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bInForcedSetting;                                  // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetCustomizeData) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_SetCustomizeData");
static_assert(sizeof(BP_MenuRacerPreview_C_SetCustomizeData) == 0x000080, "Wrong size on BP_MenuRacerPreview_C_SetCustomizeData");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData, InCustomizeData) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetCustomizeData::InCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData, bInForcedSetting) == 0x000078, "Member 'BP_MenuRacerPreview_C_SetCustomizeData::bInForcedSetting' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetCustomizeData_Hoverboard
// 0x0038 (0x0038 - 0x0000)
struct BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard final
{
public:
	bool                                          bIsFrontMeshChanged;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRearMeshChanged;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFrontStickerChanged;                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRearStickerChanged;                             // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStickerBakeManagerSubsystem*           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStickerSize_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStickerSize_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStickerBakerHandle*                    CallFunc_StartBake_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStickerBakerHandle*                    CallFunc_StartBake_ReturnValue_1;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard");
static_assert(sizeof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard) == 0x000038, "Wrong size on BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, bIsFrontMeshChanged) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::bIsFrontMeshChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, bIsRearMeshChanged) == 0x000001, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::bIsRearMeshChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, bIsFrontStickerChanged) == 0x000002, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::bIsFrontStickerChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, bIsRearStickerChanged) == 0x000003, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::bIsRearStickerChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_GetStickerSize_ReturnValue) == 0x000014, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_GetStickerSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_GetStickerSize_ReturnValue_1) == 0x000018, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_GetStickerSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_StartBake_ReturnValue) == 0x000020, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_StartBake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_StartBake_ReturnValue_1) == 0x000028, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_StartBake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard, CallFunc_BooleanOR_ReturnValue_1) == 0x000031, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Hoverboard::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetCustomizeData_Machine
// 0x0058 (0x0058 - 0x0000)
struct BP_MenuRacerPreview_C_SetCustomizeData_Machine final
{
public:
	bool                                          bIsFrontMeshChanged;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRearMeshChanged;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFrontStickerChanged;                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRearStickerChanged;                             // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStickerBakeManagerSubsystem*           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDriverSize                                   Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverSize                                   Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStickerSize_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStickerBakerHandle*                    CallFunc_StartBake_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStickerSize_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStickerBakerHandle*                    CallFunc_StartBake_ReturnValue_1;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDriverSize                                   K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionStaticMeshComponent*              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetCustomizeData_Machine) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_SetCustomizeData_Machine");
static_assert(sizeof(BP_MenuRacerPreview_C_SetCustomizeData_Machine) == 0x000058, "Wrong size on BP_MenuRacerPreview_C_SetCustomizeData_Machine");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, bIsFrontMeshChanged) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::bIsFrontMeshChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, bIsRearMeshChanged) == 0x000001, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::bIsRearMeshChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, bIsFrontStickerChanged) == 0x000002, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::bIsFrontStickerChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, bIsRearStickerChanged) == 0x000003, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::bIsRearStickerChanged' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, Temp_byte_Variable) == 0x000010, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, Temp_byte_Variable_1) == 0x000020, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_GetStickerSize_ReturnValue) == 0x000024, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_GetStickerSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_StartBake_ReturnValue) == 0x000028, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_StartBake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_GetStickerSize_ReturnValue_1) == 0x000030, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_GetStickerSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_StartBake_ReturnValue_1) == 0x000038, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_StartBake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, K2Node_Select_Default) == 0x000040, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_BooleanOR_ReturnValue_1) == 0x000042, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetCustomizeData_Machine, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_MenuRacerPreview_C_SetCustomizeData_Machine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetDriver
// 0x0003 (0x0003 - 0x0000)
struct BP_MenuRacerPreview_C_SetDriver final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInForcedSetting;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     SetDriverId;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetDriver) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_SetDriver");
static_assert(sizeof(BP_MenuRacerPreview_C_SetDriver) == 0x000003, "Wrong size on BP_MenuRacerPreview_C_SetDriver");
static_assert(offsetof(BP_MenuRacerPreview_C_SetDriver, InDriverId) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetDriver::InDriverId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetDriver, bInForcedSetting) == 0x000001, "Member 'BP_MenuRacerPreview_C_SetDriver::bInForcedSetting' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetDriver, SetDriverId) == 0x000002, "Member 'BP_MenuRacerPreview_C_SetDriver::SetDriverId' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetDriverInterface
// 0x0002 (0x0002 - 0x0000)
struct BP_MenuRacerPreview_C_SetDriverInterface final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInForcedSetting;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetDriverInterface) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_SetDriverInterface");
static_assert(sizeof(BP_MenuRacerPreview_C_SetDriverInterface) == 0x000002, "Wrong size on BP_MenuRacerPreview_C_SetDriverInterface");
static_assert(offsetof(BP_MenuRacerPreview_C_SetDriverInterface, InDriverId) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetDriverInterface::InDriverId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetDriverInterface, bInForcedSetting) == 0x000001, "Member 'BP_MenuRacerPreview_C_SetDriverInterface::bInForcedSetting' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetDriverTransform_Hoverboard
// 0x00F8 (0x00F8 - 0x0000)
struct BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0000(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard");
static_assert(sizeof(BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard) == 0x0000F8, "Wrong size on BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard");
static_assert(offsetof(BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetDriverTransform_Hoverboard::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetLightingChannels
// 0x0003 (0x0003 - 0x0000)
struct BP_MenuRacerPreview_C_SetLightingChannels final
{
public:
	bool                                          bInLightingChannel0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLightingChannel1;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLightingChannel2;                               // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetLightingChannels) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_SetLightingChannels");
static_assert(sizeof(BP_MenuRacerPreview_C_SetLightingChannels) == 0x000003, "Wrong size on BP_MenuRacerPreview_C_SetLightingChannels");
static_assert(offsetof(BP_MenuRacerPreview_C_SetLightingChannels, bInLightingChannel0) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetLightingChannels::bInLightingChannel0' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetLightingChannels, bInLightingChannel1) == 0x000001, "Member 'BP_MenuRacerPreview_C_SetLightingChannels::bInLightingChannel1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetLightingChannels, bInLightingChannel2) == 0x000002, "Member 'BP_MenuRacerPreview_C_SetLightingChannels::bInLightingChannel2' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetParts
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuRacerPreview_C_SetParts final
{
public:
	EMachineId                                    InFrontPartsId;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    InRearPartsId;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    InTirePartsId;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInForcedSetting;                                  // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetParts) == 0x000001, "Wrong alignment on BP_MenuRacerPreview_C_SetParts");
static_assert(sizeof(BP_MenuRacerPreview_C_SetParts) == 0x000004, "Wrong size on BP_MenuRacerPreview_C_SetParts");
static_assert(offsetof(BP_MenuRacerPreview_C_SetParts, InFrontPartsId) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetParts::InFrontPartsId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetParts, InRearPartsId) == 0x000001, "Member 'BP_MenuRacerPreview_C_SetParts::InRearPartsId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetParts, InTirePartsId) == 0x000002, "Member 'BP_MenuRacerPreview_C_SetParts::InTirePartsId' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetParts, bInForcedSetting) == 0x000003, "Member 'BP_MenuRacerPreview_C_SetParts::bInForcedSetting' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetupForCharaSelect
// 0x0180 (0x0180 - 0x0000)
struct BP_MenuRacerPreview_C_SetupForCharaSelect final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSelectedPlayerCount;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  CallFunc_CalcViewSplitId_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value;                           // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0078(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetupForCharaSelect) == 0x000010, "Wrong alignment on BP_MenuRacerPreview_C_SetupForCharaSelect");
static_assert(sizeof(BP_MenuRacerPreview_C_SetupForCharaSelect) == 0x000180, "Wrong size on BP_MenuRacerPreview_C_SetupForCharaSelect");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, InPlayerIndex) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, InSelectedPlayerCount) == 0x000004, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::InSelectedPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, CallFunc_CalcViewSplitId_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::CallFunc_CalcViewSplitId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000078, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForCharaSelect, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000170, "Member 'BP_MenuRacerPreview_C_SetupForCharaSelect::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetupForTopMenu
// 0x0100 (0x0100 - 0x0000)
struct BP_MenuRacerPreview_C_SetupForTopMenu final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0000(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetupForTopMenu) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_SetupForTopMenu");
static_assert(sizeof(BP_MenuRacerPreview_C_SetupForTopMenu) == 0x000100, "Wrong size on BP_MenuRacerPreview_C_SetupForTopMenu");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForTopMenu, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetupForTopMenu::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupForTopMenu, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000F8, "Member 'BP_MenuRacerPreview_C_SetupForTopMenu::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetupTranformForCharaMachine
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuRacerPreview_C_SetupTranformForCharaMachine final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedPlayerCount;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetupTranformForCharaMachine) == 0x000004, "Wrong alignment on BP_MenuRacerPreview_C_SetupTranformForCharaMachine");
static_assert(sizeof(BP_MenuRacerPreview_C_SetupTranformForCharaMachine) == 0x000008, "Wrong size on BP_MenuRacerPreview_C_SetupTranformForCharaMachine");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupTranformForCharaMachine, PlayerIndex) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetupTranformForCharaMachine::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupTranformForCharaMachine, SelectedPlayerCount) == 0x000004, "Member 'BP_MenuRacerPreview_C_SetupTranformForCharaMachine::SelectedPlayerCount' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetupTranformForLobby
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuRacerPreview_C_SetupTranformForLobby final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetupTranformForLobby) == 0x000004, "Wrong alignment on BP_MenuRacerPreview_C_SetupTranformForLobby");
static_assert(sizeof(BP_MenuRacerPreview_C_SetupTranformForLobby) == 0x000004, "Wrong size on BP_MenuRacerPreview_C_SetupTranformForLobby");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupTranformForLobby, PlayerIndex) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetupTranformForLobby::PlayerIndex' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.SetupTranformForTopMenu
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuRacerPreview_C_SetupTranformForTopMenu final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_SetupTranformForTopMenu) == 0x000004, "Wrong alignment on BP_MenuRacerPreview_C_SetupTranformForTopMenu");
static_assert(sizeof(BP_MenuRacerPreview_C_SetupTranformForTopMenu) == 0x000004, "Wrong size on BP_MenuRacerPreview_C_SetupTranformForTopMenu");
static_assert(offsetof(BP_MenuRacerPreview_C_SetupTranformForTopMenu, PlayerIndex) == 0x000000, "Member 'BP_MenuRacerPreview_C_SetupTranformForTopMenu::PlayerIndex' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.StartRotation
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuRacerPreview_C_StartRotation final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_StartRotation) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_StartRotation");
static_assert(sizeof(BP_MenuRacerPreview_C_StartRotation) == 0x000020, "Wrong size on BP_MenuRacerPreview_C_StartRotation");
static_assert(offsetof(BP_MenuRacerPreview_C_StartRotation, InPlayerIndex) == 0x000000, "Member 'BP_MenuRacerPreview_C_StartRotation::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_StartRotation, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'BP_MenuRacerPreview_C_StartRotation::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_StartRotation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_StartRotation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_StartRotation, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_MenuRacerPreview_C_StartRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_StartRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_MenuRacerPreview_C_StartRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.UpdateRotation
// 0x0240 (0x0240 - 0x0000)
struct BP_MenuRacerPreview_C_UpdateRotation final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0028(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult_1; // 0x0138(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsHoverboard_ReturnValue;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuRacerPreview_C_UpdateRotation) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_UpdateRotation");
static_assert(sizeof(BP_MenuRacerPreview_C_UpdateRotation) == 0x000240, "Wrong size on BP_MenuRacerPreview_C_UpdateRotation");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000028, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000120, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_K2_SetActorRelativeRotation_SweepHitResult_1) == 0x000138, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_K2_SetActorRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_IsHoverboard_ReturnValue) == 0x000230, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_IsHoverboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000234, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MenuRacerPreview_C_UpdateRotation, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000238, "Member 'BP_MenuRacerPreview_C_UpdateRotation::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_MenuRacerPreview.BP_MenuRacerPreview_C.Get Customize Data
// 0x0078 (0x0078 - 0x0000)
struct BP_MenuRacerPreview_C_Get_Customize_Data final
{
public:
	struct FUserMachineCustomizeData              OutCustomizeData;                                  // 0x0000(0x0078)(Parm, OutParm)
};
static_assert(alignof(BP_MenuRacerPreview_C_Get_Customize_Data) == 0x000008, "Wrong alignment on BP_MenuRacerPreview_C_Get_Customize_Data");
static_assert(sizeof(BP_MenuRacerPreview_C_Get_Customize_Data) == 0x000078, "Wrong size on BP_MenuRacerPreview_C_Get_Customize_Data");
static_assert(offsetof(BP_MenuRacerPreview_C_Get_Customize_Data, OutCustomizeData) == 0x000000, "Member 'BP_MenuRacerPreview_C_Get_Customize_Data::OutCustomizeData' has a wrong offset!");

}

