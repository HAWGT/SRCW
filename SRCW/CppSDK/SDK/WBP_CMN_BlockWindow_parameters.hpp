#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CMN_BlockWindow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.ExecuteUbergraph_WBP_CMN_BlockWindow
// 0x0348 (0x0348 - 0x0000)
struct WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuWorldSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMenuWorldSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x0058(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x006C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x0074(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_3;                              // 0x0090(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_2;                              // 0x00A0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x00B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x00B4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x00BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x00C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x00C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_1;                              // 0x00D0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value;                                // 0x00E0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x00F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x00F4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x00F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x00FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x0100(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x0104(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x0108(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnce;                                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     K2Node_CustomEvent_Button_1;                       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PanelIndex_1;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPlayInAnim;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CMN_MainMenu_Btn_C*                K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn;        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0140(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   CallFunc_GetAppPlayerController_ReturnValue;       // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerErrorCode                         K2Node_Event_ErrorCode_1;                          // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173[0x5];                                      // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_ProductUserId;                        // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUnionUIButtonBase*                     K2Node_Event_Button;                               // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PanelIndex;                           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ButtonIndex;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasSuccessful;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ErrorCode;                            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_1; // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_2; // 0x01B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_3; // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionUIButtonBase*                     K2Node_CustomEvent_Button;                         // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PanelIndex;                     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_4; // 0x01E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPlayerInfoSubWindowBtnType SubWindowType, bool bIsError)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0204(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_CMN_MainMenu_Btn_C*>        K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_CMN_MainMenu_Btn_C*                CallFunc_Array_Get_Item;                           // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   CallFunc_GetAppPlayerController_ReturnValue_1;     // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     CallFunc_Array_Get_Item_1;                         // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPlayerInfoSubWindowBtnType                   K2Node_Event_InBtnType_1;                          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnablePut;                         // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_CMN_MainMenu_Btn_C*>        K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_CMN_MainMenu_Btn_C*                CallFunc_Array_Get_Item_2;                         // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerInfoSubWindowBtnType                   K2Node_Event_InBtnType;                            // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsError;                           // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0288(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0298(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x02A8(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x02B8(0x0010)()
	class UUnionUIButtonBase*                     CallFunc_Array_Get_Item_3;                         // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CMN_MainMenu_Btn_C*                K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn_1;      // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionUIButtonBase*                     CallFunc_Array_Get_Item_4;                         // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x02F0(0x0010)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTerminologyTextByText_ReturnValue;     // 0x0308(0x0010)()
	class UUnionUIButtonBase*                     CallFunc_Array_Get_Item_5;                         // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CMN_MainMenu_Btn_C*                K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn_2;      // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionUIButtonsPanel*                   CallFunc_SetupButtonsPanel_ReturnValue;            // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow");
static_assert(sizeof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow) == 0x000348, "Wrong size on WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, EntryPoint) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_MakeLiteralBool_ReturnValue) == 0x000004, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000020, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_bool_Variable) == 0x000028, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_bool_True_if_break_was_hit_Variable) == 0x000029, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Array_Index_Variable) == 0x000038, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Loop_Counter_Variable_3) == 0x000050, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_27) == 0x000058, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_26) == 0x00005C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_25) == 0x000060, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_24) == 0x000064, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_23) == 0x000068, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_22) == 0x00006C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_21) == 0x000070, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_20) == 0x000074, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_19) == 0x000078, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_18) == 0x00007C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_17) == 0x000080, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_16) == 0x000084, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_15) == 0x000088, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_14) == 0x00008C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_Value_3) == 0x000090, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_Value_2) == 0x0000A0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_13) == 0x0000B0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_12) == 0x0000B4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_11) == 0x0000B8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_10) == 0x0000BC, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_9) == 0x0000C0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_8) == 0x0000C4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_7) == 0x0000C8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_Value_1) == 0x0000D0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_Value) == 0x0000E0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_6) == 0x0000F0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_5) == 0x0000F4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_4) == 0x0000F8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_3) == 0x0000FC, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_2) == 0x000100, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex_1) == 0x000104, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PlayerControllerIndex) == 0x000108, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_bOnce) == 0x00010C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_bOnce' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_Button_1) == 0x000110, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_PanelIndex_1) == 0x000118, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_PanelIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_ButtonIndex_1) == 0x00011C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_ButtonIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_bIsPlayInAnim) == 0x000120, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_bIsPlayInAnim' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000121, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn) == 0x000128, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_Animation) == 0x000140, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Select_Default) == 0x000148, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_PlayAnimationForward_ReturnValue) == 0x000150, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000158, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_GetAppPlayerController_ReturnValue) == 0x000160, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_GetAppPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000168, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Variable) == 0x00016C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_IsInViewport_ReturnValue) == 0x000171, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_ErrorCode_1) == 0x000172, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_ErrorCode_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_ProductUserId) == 0x000178, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_ProductUserId' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_Button) == 0x000188, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_Button' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_PanelIndex) == 0x000190, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_ButtonIndex) == 0x000194, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_bWasSuccessful) == 0x000198, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_ErrorCode) == 0x00019C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_ErrorCode' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001A0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Variable_1) == 0x0001B4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001C8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_Button) == 0x0001D8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_PanelIndex) == 0x0001E0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CustomEvent_ButtonIndex) == 0x0001E4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CustomEvent_ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001E8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Array_Index_Variable_2) == 0x0001F8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Variable_2) == 0x0001FC, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000200, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_CreateDelegate_OutputDelegate_5) == 0x000204, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_MakeArray_Array) == 0x000218, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Get_Item) == 0x000228, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Length_ReturnValue) == 0x000230, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Less_IntInt_ReturnValue) == 0x000234, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_GetAppPlayerController_ReturnValue_1) == 0x000238, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_GetAppPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Variable_3) == 0x000240, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Get_Item_1) == 0x000248, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_InBtnType_1) == 0x000250, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_InBtnType_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_bIsEnablePut) == 0x000251, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_bIsEnablePut' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000254, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Variable_4) == 0x000258, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_MakeArray_Array_1) == 0x000260, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Get_Item_2) == 0x000270, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Select_Default_1) == 0x000278, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_InBtnType) == 0x00027C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_InBtnType' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Event_bInIsError) == 0x00027D, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Event_bInIsError' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Array_Index_Variable_3) == 0x000280, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_text_Variable) == 0x000288, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_text_Variable_1) == 0x000298, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_text_Variable_2) == 0x0002A8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_text_Variable_3) == 0x0002B8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Get_Item_3) == 0x0002C8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn_1) == 0x0002D8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E1, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, Temp_int_Variable_5) == 0x0002E4, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Get_Item_4) == 0x0002E8, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_Select_Default_2) == 0x0002F0, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_IsVisible_ReturnValue) == 0x000300, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_GetTerminologyTextByText_ReturnValue) == 0x000308, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_GetTerminologyTextByText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Get_Item_5) == 0x000318, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Length_ReturnValue_2) == 0x000320, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn_2) == 0x000328, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_DynamicCast_AsWBP_CMN_Main_Menu_Btn_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, K2Node_DynamicCast_bSuccess_2) == 0x000330, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Less_IntInt_ReturnValue_2) == 0x000331, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_BooleanAND_ReturnValue) == 0x000332, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Array_Length_ReturnValue_3) == 0x000334, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_Less_IntInt_ReturnValue_3) == 0x000338, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_MakeLiteralInt_ReturnValue) == 0x00033C, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow, CallFunc_SetupButtonsPanel_ReturnValue) == 0x000340, "Member 'WBP_CMN_BlockWindow_C_ExecuteUbergraph_WBP_CMN_BlockWindow::CallFunc_SetupButtonsPanel_ReturnValue' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.GetPopUpWindowDecideText
// 0x0060 (0x0060 - 0x0000)
struct WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText final
{
public:
	int32                                         BlockPopUpType;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0040(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0010)()
};
static_assert(alignof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText");
static_assert(sizeof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText) == 0x000060, "Wrong size on WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, BlockPopUpType) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::BlockPopUpType' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, ReturnValue) == 0x000008, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, Temp_int_Variable) == 0x000018, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, Temp_text_Variable) == 0x000020, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000040, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText, K2Node_Select_Default) == 0x000050, "Member 'WBP_CMN_BlockWindow_C_GetPopUpWindowDecideText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnAcceptBlockWindow
// 0x0018 (0x0018 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnAcceptBlockWindow final
{
public:
	EBlockPlayerErrorCode                         ErrorCode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductUserId;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnAcceptBlockWindow) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnAcceptBlockWindow");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnAcceptBlockWindow) == 0x000018, "Wrong size on WBP_CMN_BlockWindow_C_OnAcceptBlockWindow");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAcceptBlockWindow, ErrorCode) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnAcceptBlockWindow::ErrorCode' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAcceptBlockWindow, ProductUserId) == 0x000008, "Member 'WBP_CMN_BlockWindow_C_OnAcceptBlockWindow::ProductUserId' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnAcceptFriendRequestWindow
// 0x0008 (0x0008 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow) == 0x000008, "Wrong size on WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow, bWasSuccessful) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow, ErrorCode) == 0x000004, "Member 'WBP_CMN_BlockWindow_C_OnAcceptFriendRequestWindow::ErrorCode' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnAnimationFinished");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_CMN_BlockWindow_C_OnAnimationFinished");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnCancelDownEvent
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnCancelDownEvent final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PanelIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnCancelDownEvent) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnCancelDownEvent");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnCancelDownEvent) == 0x000010, "Wrong size on WBP_CMN_BlockWindow_C_OnCancelDownEvent");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnCancelDownEvent, Button) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnCancelDownEvent::Button' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnCancelDownEvent, PanelIndex) == 0x000008, "Member 'WBP_CMN_BlockWindow_C_OnCancelDownEvent::PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnCancelDownEvent, ButtonIndex) == 0x00000C, "Member 'WBP_CMN_BlockWindow_C_OnCancelDownEvent::ButtonIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnChangeBlockWindowBtnPutType
// 0x0002 (0x0002 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType final
{
public:
	EPlayerInfoSubWindowBtnType                   InBtnType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnablePut;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType) == 0x000001, "Wrong alignment on WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType) == 0x000002, "Wrong size on WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType, InBtnType) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType::InBtnType' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType, bIsEnablePut) == 0x000001, "Member 'WBP_CMN_BlockWindow_C_OnChangeBlockWindowBtnPutType::bIsEnablePut' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnDecideBlockPopup
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnDecideBlockPopup final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PanelIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnDecideBlockPopup) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnDecideBlockPopup");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnDecideBlockPopup) == 0x000010, "Wrong size on WBP_CMN_BlockWindow_C_OnDecideBlockPopup");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecideBlockPopup, Button) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnDecideBlockPopup::Button' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecideBlockPopup, PanelIndex) == 0x000008, "Member 'WBP_CMN_BlockWindow_C_OnDecideBlockPopup::PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecideBlockPopup, ButtonIndex) == 0x00000C, "Member 'WBP_CMN_BlockWindow_C_OnDecideBlockPopup::ButtonIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnDecideResultPopUpEvent
// 0x0002 (0x0002 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent final
{
public:
	EPlayerInfoSubWindowBtnType                   InBtnType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInIsError;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent) == 0x000001, "Wrong alignment on WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent) == 0x000002, "Wrong size on WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent, InBtnType) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent::InBtnType' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent, bInIsError) == 0x000001, "Member 'WBP_CMN_BlockWindow_C_OnDecideResultPopUpEvent::bInIsError' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnDecisionBlockEvent
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnDecisionBlockEvent final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PanelIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnDecisionBlockEvent) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnDecisionBlockEvent");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnDecisionBlockEvent) == 0x000010, "Wrong size on WBP_CMN_BlockWindow_C_OnDecisionBlockEvent");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecisionBlockEvent, Button) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnDecisionBlockEvent::Button' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecisionBlockEvent, PanelIndex) == 0x000008, "Member 'WBP_CMN_BlockWindow_C_OnDecisionBlockEvent::PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDecisionBlockEvent, ButtonIndex) == 0x00000C, "Member 'WBP_CMN_BlockWindow_C_OnDecisionBlockEvent::ButtonIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftStickAxis) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftStickAxis");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftStickAxis) == 0x000010, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftStickAxis");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftStickAxis, Value) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftStickAxis::Value' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_CMN_BlockWindow_C_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightStickAxis) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightStickAxis");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightStickAxis) == 0x000010, "Wrong size on WBP_CMN_BlockWindow_C_OnRightStickAxis");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightStickAxis, Value) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightStickAxis::Value' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_CMN_BlockWindow_C_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.PlayAnimEvent
// 0x0001 (0x0001 - 0x0000)
struct WBP_CMN_BlockWindow_C_PlayAnimEvent final
{
public:
	bool                                          bIsPlayInAnim;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_PlayAnimEvent) == 0x000001, "Wrong alignment on WBP_CMN_BlockWindow_C_PlayAnimEvent");
static_assert(sizeof(WBP_CMN_BlockWindow_C_PlayAnimEvent) == 0x000001, "Wrong size on WBP_CMN_BlockWindow_C_PlayAnimEvent");
static_assert(offsetof(WBP_CMN_BlockWindow_C_PlayAnimEvent, bIsPlayInAnim) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_PlayAnimEvent::bIsPlayInAnim' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.SetupBlockWindow
// 0x0002 (0x0002 - 0x0000)
struct WBP_CMN_BlockWindow_C_SetupBlockWindow final
{
public:
	bool                                          bInIsBlocked;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_SetupBlockWindow) == 0x000001, "Wrong alignment on WBP_CMN_BlockWindow_C_SetupBlockWindow");
static_assert(sizeof(WBP_CMN_BlockWindow_C_SetupBlockWindow) == 0x000002, "Wrong size on WBP_CMN_BlockWindow_C_SetupBlockWindow");
static_assert(offsetof(WBP_CMN_BlockWindow_C_SetupBlockWindow, bInIsBlocked) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_SetupBlockWindow::bInIsBlocked' has a wrong offset!");
static_assert(offsetof(WBP_CMN_BlockWindow_C_SetupBlockWindow, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_CMN_BlockWindow_C_SetupBlockWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_CMN_BlockWindow.WBP_CMN_BlockWindow_C.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct WBP_CMN_BlockWindow_C_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CMN_BlockWindow_C_SilentFocusReady) == 0x000001, "Wrong alignment on WBP_CMN_BlockWindow_C_SilentFocusReady");
static_assert(sizeof(WBP_CMN_BlockWindow_C_SilentFocusReady) == 0x000001, "Wrong size on WBP_CMN_BlockWindow_C_SilentFocusReady");
static_assert(offsetof(WBP_CMN_BlockWindow_C_SilentFocusReady, bOnce) == 0x000000, "Member 'WBP_CMN_BlockWindow_C_SilentFocusReady::bOnce' has a wrong offset!");

}

