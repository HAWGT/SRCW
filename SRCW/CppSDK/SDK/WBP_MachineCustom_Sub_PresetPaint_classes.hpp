#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MachineCustom_Sub_PresetPaint

#include "Basic.hpp"

#include "ST_ColorPresetSelectPageData_structs.hpp"
#include "UNION_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_ColorPresetSelectPageItemData_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UnionUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MachineCustom_Sub_PresetPaint.WBP_MachineCustom_Sub_PresetPaint_C
// 0x00C8 (0x04A0 - 0x03D8)
class UWBP_MachineCustom_Sub_PresetPaint_C final : public UUnionUISceneBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PresetWindow_Loop;                                 // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresetWindow_Left_In;                              // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresetWindow_Right_In;                             // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CPPage;                                            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_LR_Arrow_C*                    WBP_CMN_LR_Arrow_L;                                // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_LR_Arrow_C*                    WBP_CMN_LR_Arrow_R;                                // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_ScrollSnapPoint_C*             WBP_CMN_ScrollSnapPoint;                           // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ItemNumPerPage;                                    // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemNumInRow;                                      // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PageDataIndex;                                     // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevPageDataIndex;                                 // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FST_ColorPresetSelectPageItemData& ItemData, int32 InPlayerIndex, int32 ButtonIndex)> OnItemFocused; // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FST_ColorPresetSelectPageItemData& ItemData, int32 InPlayerIndex)> OnItemSelected; // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 InPlayerIndex)> OnCancel;                                    // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         PlayerIndex;                                       // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_ColorPresetSelectPageData>  PageDataList;                                      // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         LastItemIndex;                                     // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevRowIndex;                                      // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextRowIndex;                                      // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanNextPage;                                      // 0x047C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanPrevPage;                                      // 0x047D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E[0x2];                                      // 0x047E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnPageSlideStart;                                  // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnPageSlideEnd;                                    // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_MachineCustom_Sub_PresetPaint_WBP_CMN_LR_Arrow_L_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void BndEvt__WBP_MachineCustom_Sub_PresetPaint_WBP_CMN_LR_Arrow_R_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature();
	void Construct();
	void Event_OnCancel(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void Event_OnDecision(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void Event_OnFocus(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void Event_OnLShoulder(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void Event_OnRShoulder(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void Event_OnSideNavigationCustom(EUnionUIControlDir Direction, class UUnionUIButtonBase* Button, int32 RowIndex, int32 ColumnIndex);
	void ExecuteUbergraph_WBP_MachineCustom_Sub_PresetPaint(int32 EntryPoint);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnFocusReceivedInternal(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void PlayAnimationLeftIn();
	void PlayAnimationLoop();
	void PlayAnimationRightIn();
	void PlaySETab();
	void SetEnableShoulderItem(bool IsEnable);
	void SetFocusItem(int32 InItemIndex);
	void SetFocusToItemInNextPage(int32 InRowIndex);
	void SetFocusToItemInPrevPage(int32 InRowIndex);
	void SetIndices();
	void SetIsGamepadKey(bool Is_Game_Pad_Key);
	void SetPageItems(int32 InPageDataIndex, int32 InPageIndex);
	void SetPagePlayerIndex(int32 InPlayerIndex, int32 InPageIndex);
	void Setup(TArray<struct FST_ColorPresetSelectPageItemData>& InItemDataList);
	void SetupArrows();
	void SetupPage();
	void SetupScrollPointBox();
	void SetVisibleArrowButton(bool IsVisibility);
	void SwitchPageToNext(int32 RowIndex);
	void SwitchPageToPrev(int32 RowIndex);
	void WidgetAnimationEvt_PresetWindow_Left_In_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_PresetWindow_Right_In_K2Node_WidgetAnimationEvent_0();

	void GetItem(int32 InItemIndex, class UWBP_MachinrCustom_Sub_Paint_PresetIcon_C** OutItem) const;
	void GetPage(TArray<class UWBP_MachinrCustom_Sub_Paint_PresetWindow_C*>* OutList) const;
	void GetPageForIndex(int32 InIndex, class UWBP_MachinrCustom_Sub_Paint_PresetWindow_C** Output) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MachineCustom_Sub_PresetPaint_C">();
	}
	static class UWBP_MachineCustom_Sub_PresetPaint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MachineCustom_Sub_PresetPaint_C>();
	}
};
static_assert(alignof(UWBP_MachineCustom_Sub_PresetPaint_C) == 0x000008, "Wrong alignment on UWBP_MachineCustom_Sub_PresetPaint_C");
static_assert(sizeof(UWBP_MachineCustom_Sub_PresetPaint_C) == 0x0004A0, "Wrong size on UWBP_MachineCustom_Sub_PresetPaint_C");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, UberGraphFrame) == 0x0003D8, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PresetWindow_Loop) == 0x0003E0, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PresetWindow_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PresetWindow_Left_In) == 0x0003E8, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PresetWindow_Left_In' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PresetWindow_Right_In) == 0x0003F0, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PresetWindow_Right_In' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, CPPage) == 0x0003F8, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::CPPage' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, WBP_CMN_LR_Arrow_L) == 0x000400, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::WBP_CMN_LR_Arrow_L' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, WBP_CMN_LR_Arrow_R) == 0x000408, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::WBP_CMN_LR_Arrow_R' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, WBP_CMN_ScrollSnapPoint) == 0x000410, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::WBP_CMN_ScrollSnapPoint' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, ItemNumPerPage) == 0x000418, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::ItemNumPerPage' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, ItemNumInRow) == 0x00041C, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::ItemNumInRow' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PageDataIndex) == 0x000420, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PageDataIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PrevPageDataIndex) == 0x000424, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PrevPageDataIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, OnItemFocused) == 0x000428, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::OnItemFocused' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, OnItemSelected) == 0x000438, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::OnItemSelected' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, OnCancel) == 0x000448, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::OnCancel' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PlayerIndex) == 0x000458, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PageDataList) == 0x000460, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PageDataList' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, LastItemIndex) == 0x000470, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::LastItemIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, PrevRowIndex) == 0x000474, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::PrevRowIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, NextRowIndex) == 0x000478, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::NextRowIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, bCanNextPage) == 0x00047C, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::bCanNextPage' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, bCanPrevPage) == 0x00047D, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::bCanPrevPage' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, OnPageSlideStart) == 0x000480, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::OnPageSlideStart' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_PresetPaint_C, OnPageSlideEnd) == 0x000490, "Member 'UWBP_MachineCustom_Sub_PresetPaint_C::OnPageSlideEnd' has a wrong offset!");

}

