#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MenuStateTopMenu

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UnionLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_MenuStateTopMenu.BPC_MenuStateTopMenu_C
// 0x0040 (0x0178 - 0x0138)
class UBPC_MenuStateTopMenu_C final : public UMenuSequenceStateBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0138(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_MenuSequence_C*                     OwnerSequence;                                     // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_TopMenu_C*                         TopMenu;                                           // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMenuSequenceMainState                        NextSequenceState;                                 // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRewardAchievementData>         RewardAchievementDataArray;                        // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUnionUIPopupWindowBase*                PopupWindow;                                       // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUnionUIPopupWindowBase*                RewardWindow;                                      // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void SetupRacerConfig();
	void ConvertDriverIdToIndex(EDriverId ID, int32* Index_0);
	void ConvertIndexToDriverId(int32 Index_0, EDriverId* ID);
	void CreateRewardGetDisplay();
	void OnRewardDisplayEnd_Impl();
	void SetRewardDisplayParam();
	void ClearRewardDisplayRequest();
	void OnUISceneDecisionEvent_Impl(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void CreateRewardGetDisplayConfirmWindow();
	void OnRewardDisplayEndSaveComplete(ESaveDataStatus Status);
	void StartRewardGetDisplay();
	void EndRewardGetDisplay();
	void OnInitState();
	void OnUpdateState(float InDeltaTime);
	void OnExitState();
	void OnPopupOK(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void NgCreatePopupWindow();
	void EventFinishedFade(EUnionUIFadeDirection FadeDirection);
	void OnFinishedTopMenuEvent(ETopMenuPlayMode TopMenuPlayMode, ETopMenuGameMode TopMenuGameMode);
	void OnBackEvent();
	void ExecuteUbergraph_BPC_MenuStateTopMenu(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_MenuStateTopMenu_C">();
	}
	static class UBPC_MenuStateTopMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_MenuStateTopMenu_C>();
	}
};
static_assert(alignof(UBPC_MenuStateTopMenu_C) == 0x000008, "Wrong alignment on UBPC_MenuStateTopMenu_C");
static_assert(sizeof(UBPC_MenuStateTopMenu_C) == 0x000178, "Wrong size on UBPC_MenuStateTopMenu_C");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, UberGraphFrame) == 0x000138, "Member 'UBPC_MenuStateTopMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, OwnerSequence) == 0x000140, "Member 'UBPC_MenuStateTopMenu_C::OwnerSequence' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, TopMenu) == 0x000148, "Member 'UBPC_MenuStateTopMenu_C::TopMenu' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, NextSequenceState) == 0x000150, "Member 'UBPC_MenuStateTopMenu_C::NextSequenceState' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, RewardAchievementDataArray) == 0x000158, "Member 'UBPC_MenuStateTopMenu_C::RewardAchievementDataArray' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, PopupWindow) == 0x000168, "Member 'UBPC_MenuStateTopMenu_C::PopupWindow' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStateTopMenu_C, RewardWindow) == 0x000170, "Member 'UBPC_MenuStateTopMenu_C::RewardWindow' has a wrong offset!");

}

