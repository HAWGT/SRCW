#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Popup_Window_Simple

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.ExecuteUbergraph_WBP_Popup_Window_Simple
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPopupWindowButtonType                        K2Node_Event_ButtonType_1;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InTime;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_Event_BtnTextArray;                         // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_InDisplay;                            // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentCount;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AfterCount;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InEnable;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_BtnIconIndex;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_BtnIconType;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_BtnText;                              // 0x0040(0x0010)(ConstParm)
	class FText                                   K2Node_Event_InText;                               // 0x0050(0x0010)(ConstParm)
	const class UTexture2D*                       K2Node_Event_Texture2D;                            // 0x0060(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InButtonIndex;                        // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Btn01IconIndex;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Btn02IconIndex;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPopupWindowButtonType                        K2Node_Event_ButtonType;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPopupWindowType                              K2Node_Event_WindowType;                           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text_1;                               // 0x0080(0x0010)(ConstParm)
	class FText                                   K2Node_Event_Text;                                 // 0x0090(0x0010)(ConstParm)
	bool                                          K2Node_Event_Attension;                            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Popup_Sub_Btn_Standard_C*>  K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Popup_Sub_Btn_Standard_C*          CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple");
static_assert(sizeof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple) == 0x0000D0, "Wrong size on WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, EntryPoint) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_ButtonType_1) == 0x000010, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_ButtonType_1' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_InTime) == 0x000014, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_InTime' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_BtnTextArray) == 0x000018, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_BtnTextArray' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_InDisplay) == 0x000028, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_InDisplay' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_CurrentCount) == 0x00002C, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_CurrentCount' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_AfterCount) == 0x000030, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_AfterCount' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_InEnable) == 0x000034, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_InEnable' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_BtnIconIndex) == 0x000038, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_BtnIconIndex' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_BtnIconType) == 0x00003C, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_BtnIconType' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_BtnText) == 0x000040, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_BtnText' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_InText) == 0x000050, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Texture2D) == 0x000060, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Texture2D' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_InButtonIndex) == 0x000068, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_InButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Index) == 0x00006C, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Btn01IconIndex) == 0x000070, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Btn01IconIndex' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Btn02IconIndex) == 0x000074, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Btn02IconIndex' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_ButtonType) == 0x000078, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_ButtonType' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_WindowType) == 0x000079, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_WindowType' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_SwitchEnum_CmpSuccess) == 0x00007A, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Text_1) == 0x000080, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Text) == 0x000090, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_Attension) == 0x0000A0, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_Attension' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_Event_IsDesignTime) == 0x0000A1, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'WBP_Popup_Window_Simple_C_ExecuteUbergraph_WBP_Popup_Window_Simple::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.GetAnimationIn
// 0x0008 (0x0008 - 0x0000)
struct WBP_Popup_Window_Simple_C_GetAnimationIn final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_GetAnimationIn) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_GetAnimationIn");
static_assert(sizeof(WBP_Popup_Window_Simple_C_GetAnimationIn) == 0x000008, "Wrong size on WBP_Popup_Window_Simple_C_GetAnimationIn");
static_assert(offsetof(WBP_Popup_Window_Simple_C_GetAnimationIn, ReturnValue) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_GetAnimationIn::ReturnValue' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.GetAnimationLoop
// 0x0008 (0x0008 - 0x0000)
struct WBP_Popup_Window_Simple_C_GetAnimationLoop final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_GetAnimationLoop) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_GetAnimationLoop");
static_assert(sizeof(WBP_Popup_Window_Simple_C_GetAnimationLoop) == 0x000008, "Wrong size on WBP_Popup_Window_Simple_C_GetAnimationLoop");
static_assert(offsetof(WBP_Popup_Window_Simple_C_GetAnimationLoop, ReturnValue) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_GetAnimationLoop::ReturnValue' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.GetAnimationOut
// 0x0008 (0x0008 - 0x0000)
struct WBP_Popup_Window_Simple_C_GetAnimationOut final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_GetAnimationOut) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_GetAnimationOut");
static_assert(sizeof(WBP_Popup_Window_Simple_C_GetAnimationOut) == 0x000008, "Wrong size on WBP_Popup_Window_Simple_C_GetAnimationOut");
static_assert(offsetof(WBP_Popup_Window_Simple_C_GetAnimationOut, ReturnValue) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_GetAnimationOut::ReturnValue' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.GetPopupWindowButtonType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_GetPopupWindowButtonType final
{
public:
	EPopupWindowButtonType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_GetPopupWindowButtonType) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_GetPopupWindowButtonType");
static_assert(sizeof(WBP_Popup_Window_Simple_C_GetPopupWindowButtonType) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_GetPopupWindowButtonType");
static_assert(offsetof(WBP_Popup_Window_Simple_C_GetPopupWindowButtonType, ReturnValue) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_GetPopupWindowButtonType::ReturnValue' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.GetPopupWindowType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_GetPopupWindowType final
{
public:
	EPopupWindowType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_GetPopupWindowType) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_GetPopupWindowType");
static_assert(sizeof(WBP_Popup_Window_Simple_C_GetPopupWindowType) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_GetPopupWindowType");
static_assert(offsetof(WBP_Popup_Window_Simple_C_GetPopupWindowType, ReturnValue) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_GetPopupWindowType::ReturnValue' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.InitParam
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_InitParam final
{
public:
	EPopupWindowButtonType                        ButtonType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_InitParam) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_InitParam");
static_assert(sizeof(WBP_Popup_Window_Simple_C_InitParam) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_InitParam");
static_assert(offsetof(WBP_Popup_Window_Simple_C_InitParam, ButtonType) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_InitParam::ButtonType' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_PreConstruct");
static_assert(sizeof(WBP_Popup_Window_Simple_C_PreConstruct) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_PreConstruct");
static_assert(offsetof(WBP_Popup_Window_Simple_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetButtonControlDelayTime
// 0x0004 (0x0004 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetButtonControlDelayTime final
{
public:
	float                                         InTime;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetButtonControlDelayTime) == 0x000004, "Wrong alignment on WBP_Popup_Window_Simple_C_SetButtonControlDelayTime");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetButtonControlDelayTime) == 0x000004, "Wrong size on WBP_Popup_Window_Simple_C_SetButtonControlDelayTime");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetButtonControlDelayTime, InTime) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetButtonControlDelayTime::InTime' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetButtonText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetButtonText final
{
public:
	TArray<class FText>                           BtnTextArray;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetButtonText) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_SetButtonText");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetButtonText) == 0x000010, "Wrong size on WBP_Popup_Window_Simple_C_SetButtonText");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetButtonText, BtnTextArray) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetButtonText::BtnTextArray' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetDisplayFooterButton
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetDisplayFooterButton final
{
public:
	bool                                          InDisplay;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetDisplayFooterButton) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_SetDisplayFooterButton");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetDisplayFooterButton) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_SetDisplayFooterButton");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetDisplayFooterButton, InDisplay) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetDisplayFooterButton::InDisplay' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetDonpaTicketCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetDonpaTicketCount final
{
public:
	int32                                         CurrentCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterCount;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetDonpaTicketCount) == 0x000004, "Wrong alignment on WBP_Popup_Window_Simple_C_SetDonpaTicketCount");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetDonpaTicketCount) == 0x000008, "Wrong size on WBP_Popup_Window_Simple_C_SetDonpaTicketCount");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetDonpaTicketCount, CurrentCount) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetDonpaTicketCount::CurrentCount' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetDonpaTicketCount, AfterCount) == 0x000004, "Member 'WBP_Popup_Window_Simple_C_SetDonpaTicketCount::AfterCount' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetEnableInput
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetEnableInput final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetEnableInput) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_SetEnableInput");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetEnableInput) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_SetEnableInput");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetEnableInput, InEnable) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetEnableInput::InEnable' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetFooterMenuBtn
// 0x0018 (0x0018 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetFooterMenuBtn final
{
public:
	int32                                         BtnIconIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BtnIconType;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   BtnText;                                           // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetFooterMenuBtn) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_SetFooterMenuBtn");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetFooterMenuBtn) == 0x000018, "Wrong size on WBP_Popup_Window_Simple_C_SetFooterMenuBtn");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetFooterMenuBtn, BtnIconIndex) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetFooterMenuBtn::BtnIconIndex' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetFooterMenuBtn, BtnIconType) == 0x000004, "Member 'WBP_Popup_Window_Simple_C_SetFooterMenuBtn::BtnIconType' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetFooterMenuBtn, BtnText) == 0x000008, "Member 'WBP_Popup_Window_Simple_C_SetFooterMenuBtn::BtnText' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetImageButtonSelectText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetImageButtonSelectText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetImageButtonSelectText) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_SetImageButtonSelectText");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetImageButtonSelectText) == 0x000010, "Wrong size on WBP_Popup_Window_Simple_C_SetImageButtonSelectText");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetImageButtonSelectText, InText) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetImageButtonSelectText::InText' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetImageTexture
// 0x0008 (0x0008 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetImageTexture final
{
public:
	const class UTexture2D*                       Texture2D;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetImageTexture) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_SetImageTexture");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetImageTexture) == 0x000008, "Wrong size on WBP_Popup_Window_Simple_C_SetImageTexture");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetImageTexture, Texture2D) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetImageTexture::Texture2D' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetInitialFocusButtonIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex final
{
public:
	int32                                         InButtonIndex;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex) == 0x000004, "Wrong alignment on WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex) == 0x000004, "Wrong size on WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex, InButtonIndex) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetInitialFocusButtonIndex::InButtonIndex' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetPopupInfoDisplayIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex) == 0x000004, "Wrong alignment on WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex) == 0x000004, "Wrong size on WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex, Index_0) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetPopupInfoDisplayIndex::Index_0' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetPopupInfoMainMenuButtonIconIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex final
{
public:
	int32                                         Btn01IconIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Btn02IconIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex) == 0x000004, "Wrong alignment on WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex) == 0x000008, "Wrong size on WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex, Btn01IconIndex) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex::Btn01IconIndex' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex, Btn02IconIndex) == 0x000004, "Member 'WBP_Popup_Window_Simple_C_SetPopupInfoMainMenuButtonIconIndex::Btn02IconIndex' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetPopupWindowButtonType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetPopupWindowButtonType final
{
public:
	EPopupWindowButtonType                        ButtonType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetPopupWindowButtonType) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_SetPopupWindowButtonType");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetPopupWindowButtonType) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_SetPopupWindowButtonType");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetPopupWindowButtonType, ButtonType) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetPopupWindowButtonType::ButtonType' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetPopupWindowType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetPopupWindowType final
{
public:
	EPopupWindowType                              WindowType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetPopupWindowType) == 0x000001, "Wrong alignment on WBP_Popup_Window_Simple_C_SetPopupWindowType");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetPopupWindowType) == 0x000001, "Wrong size on WBP_Popup_Window_Simple_C_SetPopupWindowType");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetPopupWindowType, WindowType) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetPopupWindowType::WindowType' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetTextMessege
// 0x0010 (0x0010 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetTextMessege final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetTextMessege) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_SetTextMessege");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetTextMessege) == 0x000010, "Wrong size on WBP_Popup_Window_Simple_C_SetTextMessege");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetTextMessege, Text) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetTextMessege::Text' has a wrong offset!");

// Function WBP_Popup_Window_Simple.WBP_Popup_Window_Simple_C.SetTextTitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_Popup_Window_Simple_C_SetTextTitle final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Attension;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Popup_Window_Simple_C_SetTextTitle) == 0x000008, "Wrong alignment on WBP_Popup_Window_Simple_C_SetTextTitle");
static_assert(sizeof(WBP_Popup_Window_Simple_C_SetTextTitle) == 0x000018, "Wrong size on WBP_Popup_Window_Simple_C_SetTextTitle");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetTextTitle, Text) == 0x000000, "Member 'WBP_Popup_Window_Simple_C_SetTextTitle::Text' has a wrong offset!");
static_assert(offsetof(WBP_Popup_Window_Simple_C_SetTextTitle, Attension) == 0x000010, "Member 'WBP_Popup_Window_Simple_C_SetTextTitle::Attension' has a wrong offset!");

}

