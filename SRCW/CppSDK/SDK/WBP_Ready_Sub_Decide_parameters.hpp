#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ready_Sub_Decide

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Ready_Sub_Decide.WBP_Ready_Sub_Decide_C.ExecuteUbergraph_WBP_Ready_Sub_Decide
// 0x0038 (0x0038 - 0x0000)
struct WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_1;           // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide) == 0x000008, "Wrong alignment on WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide");
static_assert(sizeof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide) == 0x000038, "Wrong size on WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide, EntryPoint) == 0x000000, "Member 'WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide, K2Node_CustomEvent_InVisibility) == 0x000030, "Member 'WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'WBP_Ready_Sub_Decide_C_ExecuteUbergraph_WBP_Ready_Sub_Decide::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Ready_Sub_Decide.WBP_Ready_Sub_Decide_C.OnVisibilityChangedEvent
// 0x0001 (0x0001 - 0x0000)
struct WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent) == 0x000001, "Wrong alignment on WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent");
static_assert(sizeof(WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent) == 0x000001, "Wrong size on WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent");
static_assert(offsetof(WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent, InVisibility) == 0x000000, "Member 'WBP_Ready_Sub_Decide_C_OnVisibilityChangedEvent::InVisibility' has a wrong offset!");

}

