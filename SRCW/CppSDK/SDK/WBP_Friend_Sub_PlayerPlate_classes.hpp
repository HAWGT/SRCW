#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_Sub_PlayerPlate

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UnionUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Friend_Sub_PlayerPlate.WBP_Friend_Sub_PlayerPlate_C
// 0x00B8 (0x0538 - 0x0480)
class UWBP_Friend_Sub_PlayerPlate_C final : public UUnionUIButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Btn_Select_Loop;                                   // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Btn_Active_Loop;                                   // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DSP_Cursor_Texture;                                // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DSP_LobbyInfo_All;                                 // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_LobbyInvitation;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DSP_PlayerInfo_All;                                // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Friend_PlayerIcon_C*               DSP_WBP_Friend_PlayerIcon;                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Friend_PlayerStatusIcon_C*         DSP_WBP_Friend_PlayerStatusIcon;                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FriendMatchBase;                                   // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LobbyInfoBase;                                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MouseInteraction;                                  // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_PlatformIcon;                                  // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerInfoBase;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerPlateBase;                                   // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_FriendMatch;                                   // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_LobbyInfo;                                     // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_PlayerInfo;                                    // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_PlayerName;                                    // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          MouseDown;                                         // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayDecisionSe;                                   // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDirectionKeyPressed;                             // 0x051A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B[0x5];                                      // 0x051B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Friend_Sub_PlayerPlate_Small_C*    ParentPlate;                                       // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECrossplayPlatform                            TargetPlatform;                                    // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFriendListType                               ListType;                                          // 0x0529(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MovingUpDownDeadzone;                              // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangePlayAnimation(class UWidgetAnimation* InStopAnimation, class UWidgetAnimation* InPlayAnimation);
	void Check_Release_Response_InputType(bool* bOutReleaseResponseInput);
	void Construct();
	void ExecuteUbergraph_WBP_Friend_Sub_PlayerPlate(int32 EntryPoint);
	void LeftDirectionEvent();
	class UWidget* LeftNavigationEvent(EUINavigation Navigation_0);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedImpl();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnBackKeyPressed();
	void OnFocusAnimStart();
	void OnFocusImpl(class UUnionUIButtonBase* Button);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnInitialized();
	void OnLeftKeyReleased();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnRightKeyReleased();
	void OnUnFocusAnimStart();
	void RightDirectionEvent();
	class UWidget* RightNavigationEvent(EUINavigation Navigation_0);
	void SetButtonFocusType(EButtonFocusType InButtonFocusType);
	void SetByListPlayerInfo(const struct FFriendListPlayerInfo& InListPlayerInfo, bool InShowPlayerId);
	void SetCursorVisible(bool bInVisible);
	void SetDateText(const class FString& InDate);
	void SetFocusAnimation(bool bInEnable);
	void SetFocusEnable(bool bInEnable);
	void SetLobbyInfoVisible(bool bInVisible);
	void SetLobbyInvitationIconVisible(bool bInVisible);
	void SetLobbyType(bool bInFriendMatch);
	void SetMouseInteractionVisible(bool bInVisible);
	void SetPlatformIcon(ECrossplayPlatform InPlatformType);
	void SetPlayDecisionSe(bool bInEnable);
	void SetPlayerIcon(TSoftObjectPtr<class UTexture2D> InIconTexture, const struct FLinearColor& InBgColor, bool bInNowPlaying);
	void SetPlayerIconVisible(bool bInVisible);
	void SetPlayerIdText(const class FString& InPlayerId);
	void SetPlayerNameText(const class FText& InText);
	void SetPlayerStatusIcon(bool bInAppBlock, bool bInPFBlock);
	void SetWidgetFocus(bool bInPlayFocusSound);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Friend_Sub_PlayerPlate_C">();
	}
	static class UWBP_Friend_Sub_PlayerPlate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Friend_Sub_PlayerPlate_C>();
	}
};
static_assert(alignof(UWBP_Friend_Sub_PlayerPlate_C) == 0x000008, "Wrong alignment on UWBP_Friend_Sub_PlayerPlate_C");
static_assert(sizeof(UWBP_Friend_Sub_PlayerPlate_C) == 0x000538, "Wrong size on UWBP_Friend_Sub_PlayerPlate_C");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, UberGraphFrame) == 0x000480, "Member 'UWBP_Friend_Sub_PlayerPlate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, Btn_Select_Loop) == 0x000488, "Member 'UWBP_Friend_Sub_PlayerPlate_C::Btn_Select_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, Btn_Active_Loop) == 0x000490, "Member 'UWBP_Friend_Sub_PlayerPlate_C::Btn_Active_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, DSP_Cursor_Texture) == 0x000498, "Member 'UWBP_Friend_Sub_PlayerPlate_C::DSP_Cursor_Texture' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, DSP_LobbyInfo_All) == 0x0004A0, "Member 'UWBP_Friend_Sub_PlayerPlate_C::DSP_LobbyInfo_All' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, DSP_LobbyInvitation) == 0x0004A8, "Member 'UWBP_Friend_Sub_PlayerPlate_C::DSP_LobbyInvitation' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, DSP_PlayerInfo_All) == 0x0004B0, "Member 'UWBP_Friend_Sub_PlayerPlate_C::DSP_PlayerInfo_All' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, DSP_WBP_Friend_PlayerIcon) == 0x0004B8, "Member 'UWBP_Friend_Sub_PlayerPlate_C::DSP_WBP_Friend_PlayerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, DSP_WBP_Friend_PlayerStatusIcon) == 0x0004C0, "Member 'UWBP_Friend_Sub_PlayerPlate_C::DSP_WBP_Friend_PlayerStatusIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, FriendMatchBase) == 0x0004C8, "Member 'UWBP_Friend_Sub_PlayerPlate_C::FriendMatchBase' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, LobbyInfoBase) == 0x0004D0, "Member 'UWBP_Friend_Sub_PlayerPlate_C::LobbyInfoBase' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, MouseInteraction) == 0x0004D8, "Member 'UWBP_Friend_Sub_PlayerPlate_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, PAT_PlatformIcon) == 0x0004E0, "Member 'UWBP_Friend_Sub_PlayerPlate_C::PAT_PlatformIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, PlayerInfoBase) == 0x0004E8, "Member 'UWBP_Friend_Sub_PlayerPlate_C::PlayerInfoBase' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, PlayerPlateBase) == 0x0004F0, "Member 'UWBP_Friend_Sub_PlayerPlate_C::PlayerPlateBase' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, TXT_FriendMatch) == 0x0004F8, "Member 'UWBP_Friend_Sub_PlayerPlate_C::TXT_FriendMatch' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, TXT_LobbyInfo) == 0x000500, "Member 'UWBP_Friend_Sub_PlayerPlate_C::TXT_LobbyInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, TXT_PlayerInfo) == 0x000508, "Member 'UWBP_Friend_Sub_PlayerPlate_C::TXT_PlayerInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, TXT_PlayerName) == 0x000510, "Member 'UWBP_Friend_Sub_PlayerPlate_C::TXT_PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, MouseDown) == 0x000518, "Member 'UWBP_Friend_Sub_PlayerPlate_C::MouseDown' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, bPlayDecisionSe) == 0x000519, "Member 'UWBP_Friend_Sub_PlayerPlate_C::bPlayDecisionSe' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, IsDirectionKeyPressed) == 0x00051A, "Member 'UWBP_Friend_Sub_PlayerPlate_C::IsDirectionKeyPressed' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, ParentPlate) == 0x000520, "Member 'UWBP_Friend_Sub_PlayerPlate_C::ParentPlate' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, TargetPlatform) == 0x000528, "Member 'UWBP_Friend_Sub_PlayerPlate_C::TargetPlatform' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, ListType) == 0x000529, "Member 'UWBP_Friend_Sub_PlayerPlate_C::ListType' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_Sub_PlayerPlate_C, MovingUpDownDeadzone) == 0x000530, "Member 'UWBP_Friend_Sub_PlayerPlate_C::MovingUpDownDeadzone' has a wrong offset!");

}

