#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FooterMenu_Sub_ControllerCross

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_3;                              // 0x0038(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_2;                              // 0x0048(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x0058(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x006C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_1;                              // 0x0078(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value;                                // 0x0088(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x0098(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x009C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x00A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x00A8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x00AC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x00B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnce;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate;             // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x00E4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x00E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross) == 0x0000F0, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, EntryPoint) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_27) == 0x000004, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_26) == 0x000008, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_25) == 0x00000C, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_24) == 0x000010, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_23) == 0x000014, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_22) == 0x000018, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_21) == 0x00001C, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_20) == 0x000020, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_19) == 0x000024, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_18) == 0x000028, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_17) == 0x00002C, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_16) == 0x000030, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_Value_3) == 0x000038, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_Value_2) == 0x000048, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_15) == 0x000058, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_14) == 0x00005C, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_13) == 0x000060, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_12) == 0x000064, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_11) == 0x000068, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_10) == 0x00006C, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_9) == 0x000070, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_Value_1) == 0x000078, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_Value) == 0x000088, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_8) == 0x000098, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_7) == 0x00009C, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_6) == 0x0000A0, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_5) == 0x0000A4, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_4) == 0x0000A8, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_3) == 0x0000AC, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_2) == 0x0000B0, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_bOnce) == 0x0000B4, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_bOnce' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_IsDesignTime) == 0x0000B5, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, CallFunc_PlayAnimation_ReturnValue) == 0x0000C8, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_CustomEvent_InVisibility) == 0x0000E0, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex_1) == 0x0000E4, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross, K2Node_Event_PlayerControllerIndex) == 0x0000E8, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_ExecuteUbergraph_WBP_FooterMenu_Sub_ControllerCross::K2Node_Event_PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis) == 0x000010, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis, Value) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxis::Value' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis) == 0x000010, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis, Value) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxis::Value' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.OnVisibilityChanged_イベント
// 0x0001 (0x0001 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント) == 0x000001, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント) == 0x000001, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント, InVisibility) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_OnVisibilityChanged_イベント::InVisibility' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct) == 0x000001, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.PressButtonAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation) == 0x000008, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_PressButtonAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.SetButtonImageIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex final
{
public:
	int32                                         Param_Index_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex) == 0x000004, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex) == 0x000004, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex, Param_Index_0) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_SetButtonImageIndex::Param_Index_0' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_SetText) == 0x000008, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_SetText");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_SetText) == 0x000010, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_SetText");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_SetText, Text_0) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_SetText::Text_0' has a wrong offset!");

// Function WBP_FooterMenu_Sub_ControllerCross.WBP_FooterMenu_Sub_ControllerCross_C.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady) == 0x000001, "Wrong alignment on WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady");
static_assert(sizeof(WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady) == 0x000001, "Wrong size on WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady");
static_assert(offsetof(WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady, bOnce) == 0x000000, "Member 'WBP_FooterMenu_Sub_ControllerCross_C_SilentFocusReady::bOnce' has a wrong offset!");

}

