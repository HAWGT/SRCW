#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_WinLose

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TimeTrial_Sub_WinLose.WBP_TimeTrial_Sub_WinLose_C
// 0x0090 (0x0370 - 0x02E0)
class UWBP_TimeTrial_Sub_WinLose_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Lose_InOut;                                        // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Win_InOut;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base_01;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_02;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_01;                                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_02;                                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_03;                                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_04;                                            // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Effect_Base_01;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Effect_Base_02;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Effect_Base_03;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Effect_L_01;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel;                                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Lose;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_WIN;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Win_Base_01;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Win_Base_02;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose(int32 EntryPoint);
	void SetLoseText(ETimeTrialWinLoseDispId WinLoseID);
	void SetWinText(ETimeTrialWinLoseDispId WinLoseID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TimeTrial_Sub_WinLose_C">();
	}
	static class UWBP_TimeTrial_Sub_WinLose_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TimeTrial_Sub_WinLose_C>();
	}
};
static_assert(alignof(UWBP_TimeTrial_Sub_WinLose_C) == 0x000008, "Wrong alignment on UWBP_TimeTrial_Sub_WinLose_C");
static_assert(sizeof(UWBP_TimeTrial_Sub_WinLose_C) == 0x000370, "Wrong size on UWBP_TimeTrial_Sub_WinLose_C");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_TimeTrial_Sub_WinLose_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Lose_InOut) == 0x0002E8, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Lose_InOut' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Win_InOut) == 0x0002F0, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Win_InOut' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Base_01) == 0x0002F8, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Base_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Base_02) == 0x000300, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Base_02' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Eff_01) == 0x000308, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Eff_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Eff_02) == 0x000310, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Eff_02' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Eff_03) == 0x000318, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Eff_03' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Eff_04) == 0x000320, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Eff_04' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Effect_Base_01) == 0x000328, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Effect_Base_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Effect_Base_02) == 0x000330, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Effect_Base_02' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Effect_Base_03) == 0x000338, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Effect_Base_03' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Effect_L_01) == 0x000340, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Effect_L_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, Panel) == 0x000348, "Member 'UWBP_TimeTrial_Sub_WinLose_C::Panel' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, TXT_Lose) == 0x000350, "Member 'UWBP_TimeTrial_Sub_WinLose_C::TXT_Lose' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, TXT_WIN) == 0x000358, "Member 'UWBP_TimeTrial_Sub_WinLose_C::TXT_WIN' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, TXT_Win_Base_01) == 0x000360, "Member 'UWBP_TimeTrial_Sub_WinLose_C::TXT_Win_Base_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_WinLose_C, TXT_Win_Base_02) == 0x000368, "Member 'UWBP_TimeTrial_Sub_WinLose_C::TXT_Win_Base_02' has a wrong offset!");

}

