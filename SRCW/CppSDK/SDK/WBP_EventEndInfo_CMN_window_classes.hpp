#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventEndInfo_CMN_window

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EventEndInfo_CMN_window.WBP_EventEndInfo_CMN_window_C
// 0x0078 (0x0358 - 0x02E0)
class UWBP_EventEndInfo_CMN_window_C final : public UEventEndInfoWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out;                                               // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base_Footer;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Header;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BaseWindow;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Black;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Event_Period;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Title_Detail;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EventEndInfo_Sub_Details_C*        WBP_EventEndInfo_Sub_Details;                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FooterMenu_Sub_CommonBtn_C*        WBP_FooterMenu_Sub_CommonBtn;                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFinishedEvent;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Ranking;                                           // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Point;                                             // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_EventEndInfo_CMN_window(int32 EntryPoint);
	void FinishedPointDisplay();
	void FinishedRankingDisplay();
	void GetDateString(const struct FDateTime& DateTime, class FText* DateText);
	void InAnimationEnd();
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnAcceptKeyReleased();
	void OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyPressed();
	void OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyReleased();
	void OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyPressed();
	void OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyReleased();
	void OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftPressed();
	void OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftReleased();
	void OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopPressed();
	void OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopReleased();
	void OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnInitialized();
	void OnLeftKeyPressed();
	void OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyReleased();
	void OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderPressed();
	void OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderReleased();
	void OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickAxis(const struct FVector2D& Value);
	void OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnLeftStickButtonPressed();
	void OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickButtonReleased();
	void OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyPressed();
	void OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyReleased();
	void OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderPressed();
	void OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderReleased();
	void OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickAxis(const struct FVector2D& Value);
	void OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnRightStickButtonPressed();
	void OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickButtonReleased();
	void OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialPressed();
	void OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialReleased();
	void OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyPressed();
	void OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyReleased();
	void OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OutAnimationEnd();
	void SetFestaName(const class FText& FestaName);
	void SetRankingLabelText(const class FText& RankingLavelText);
	void SetRankingTitleText(const class FText& TitleName);
	void SetResult(int32 Ranking_0, int32 Point_0);
	void SetSchedule(const struct FDateTime& StartTime, const struct FDateTime& endTime);
	void SetTextureBG(class UTexture2D* Texture);
	void SilentFocusReady(bool bOnce);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EventEndInfo_CMN_window_C">();
	}
	static class UWBP_EventEndInfo_CMN_window_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EventEndInfo_CMN_window_C>();
	}
};
static_assert(alignof(UWBP_EventEndInfo_CMN_window_C) == 0x000008, "Wrong alignment on UWBP_EventEndInfo_CMN_window_C");
static_assert(sizeof(UWBP_EventEndInfo_CMN_window_C) == 0x000358, "Wrong size on UWBP_EventEndInfo_CMN_window_C");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_EventEndInfo_CMN_window_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, Out) == 0x0002E8, "Member 'UWBP_EventEndInfo_CMN_window_C::Out' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, Loop) == 0x0002F0, "Member 'UWBP_EventEndInfo_CMN_window_C::Loop' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, In) == 0x0002F8, "Member 'UWBP_EventEndInfo_CMN_window_C::In' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, Base_Footer) == 0x000300, "Member 'UWBP_EventEndInfo_CMN_window_C::Base_Footer' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, Base_Header) == 0x000308, "Member 'UWBP_EventEndInfo_CMN_window_C::Base_Header' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, BaseWindow) == 0x000310, "Member 'UWBP_EventEndInfo_CMN_window_C::BaseWindow' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, BG_Black) == 0x000318, "Member 'UWBP_EventEndInfo_CMN_window_C::BG_Black' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, TXT_Event_Period) == 0x000320, "Member 'UWBP_EventEndInfo_CMN_window_C::TXT_Event_Period' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, TXT_Title_Detail) == 0x000328, "Member 'UWBP_EventEndInfo_CMN_window_C::TXT_Title_Detail' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, WBP_EventEndInfo_Sub_Details) == 0x000330, "Member 'UWBP_EventEndInfo_CMN_window_C::WBP_EventEndInfo_Sub_Details' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, WBP_FooterMenu_Sub_CommonBtn) == 0x000338, "Member 'UWBP_EventEndInfo_CMN_window_C::WBP_FooterMenu_Sub_CommonBtn' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, OnFinishedEvent) == 0x000340, "Member 'UWBP_EventEndInfo_CMN_window_C::OnFinishedEvent' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, Ranking) == 0x000350, "Member 'UWBP_EventEndInfo_CMN_window_C::Ranking' has a wrong offset!");
static_assert(offsetof(UWBP_EventEndInfo_CMN_window_C, Point) == 0x000354, "Member 'UWBP_EventEndInfo_CMN_window_C::Point' has a wrong offset!");

}

