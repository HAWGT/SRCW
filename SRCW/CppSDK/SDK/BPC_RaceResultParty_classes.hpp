#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RaceResultParty

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_RaceResultParty.BPC_RaceResultParty_C
// 0x0018 (0x0120 - 0x0108)
class UBPC_RaceResultParty_C final : public URaceResultSequenceStateParty
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0108(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_GroupResult_C*                     GroupResult;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_RaceResultSequence_C*               OwnerSeq;                                          // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_RaceResultParty(int32 EntryPoint);
	void OnExitState();
	void OnInitState();
	void OnUpdateState(float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_RaceResultParty_C">();
	}
	static class UBPC_RaceResultParty_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_RaceResultParty_C>();
	}
};
static_assert(alignof(UBPC_RaceResultParty_C) == 0x000008, "Wrong alignment on UBPC_RaceResultParty_C");
static_assert(sizeof(UBPC_RaceResultParty_C) == 0x000120, "Wrong size on UBPC_RaceResultParty_C");
static_assert(offsetof(UBPC_RaceResultParty_C, UberGraphFrame) == 0x000108, "Member 'UBPC_RaceResultParty_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_RaceResultParty_C, GroupResult) == 0x000110, "Member 'UBPC_RaceResultParty_C::GroupResult' has a wrong offset!");
static_assert(offsetof(UBPC_RaceResultParty_C, OwnerSeq) == 0x000118, "Member 'UBPC_RaceResultParty_C::OwnerSeq' has a wrong offset!");

}

