#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RaceSequenceStateSendRaceEnd

#include "Basic.hpp"

#include "BPC_RaceSequenceStateSendRaceEnd_classes.hpp"
#include "BPC_RaceSequenceStateSendRaceEnd_parameters.hpp"


namespace SDK
{

// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.ConvertStickerData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FUserStickerData&          UserStickerData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FCommon_MachineStickerData*      Common_MachineStickerData                              (Parm, OutParm)

void UBPC_RaceSequenceStateSendRaceEnd_C::ConvertStickerData(const struct FUserStickerData& UserStickerData, struct FCommon_MachineStickerData* Common_MachineStickerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "ConvertStickerData");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_ConvertStickerData Parms{};

	Parms.UserStickerData = std::move(UserStickerData);

	UObject::ProcessEvent(Func, &Parms);

	if (Common_MachineStickerData != nullptr)
		*Common_MachineStickerData = std::move(Parms.Common_MachineStickerData);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.EndPlatformGameMatch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::EndPlatformGameMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "EndPlatformGameMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.ExecuteUbergraph_BPC_RaceSequenceStateSendRaceEnd
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::ExecuteUbergraph_BPC_RaceSequenceStateSendRaceEnd(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "ExecuteUbergraph_BPC_RaceSequenceStateSendRaceEnd");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_ExecuteUbergraph_BPC_RaceSequenceStateSendRaceEnd Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetHistoryData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonLobbyMemberContext*        MemberContext                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCommon_HistoryData*             Common_HistoryData                                     (Parm, OutParm)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetHistoryData(class UCommonLobbyMemberContext* MemberContext, struct FCommon_HistoryData* Common_HistoryData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetHistoryData");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetHistoryData Parms{};

	Parms.MemberContext = MemberContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Common_HistoryData != nullptr)
		*Common_HistoryData = std::move(Parms.Common_HistoryData);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetLobbyContextParam
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetLobbyContextParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetLobbyContextParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetPredictCarPacketRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FResultSavePredictCarPacketRequest*Request                                                (Parm, OutParm)
// bool*                                   IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetPredictCarPacketRequest(struct FResultSavePredictCarPacketRequest* Request, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetPredictCarPacketRequest");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetPredictCarPacketRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request != nullptr)
		*Request = std::move(Parms.Request);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetReplaySignedUrlRequest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCntReplayGetSignedUrlRequest*   Request                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetReplaySignedUrlRequest(struct FCntReplayGetSignedUrlRequest* Request, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetReplaySignedUrlRequest");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetReplaySignedUrlRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request != nullptr)
		*Request = std::move(Parms.Request);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetResultSaveFestaResultRequest
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FResultSaveFestaResultRequest*   Request                                                (Parm, OutParm)
// bool*                                   IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetResultSaveFestaResultRequest(struct FResultSaveFestaResultRequest* Request, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetResultSaveFestaResultRequest");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetResultSaveFestaResultRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request != nullptr)
		*Request = std::move(Parms.Request);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetResultSaveLegendCompeResultRequest
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FResultSaveLegendCompeResultRequest*Request                                                (Parm, OutParm)
// bool*                                   IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetResultSaveLegendCompeResultRequest(struct FResultSaveLegendCompeResultRequest* Request, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetResultSaveLegendCompeResultRequest");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetResultSaveLegendCompeResultRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request != nullptr)
		*Request = std::move(Parms.Request);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetResultSaveRankMatchResultRequest
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FResultSaveRankMatchResultRequest*Request                                                (Parm, OutParm)
// bool*                                   IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetResultSaveRankMatchResultRequest(struct FResultSaveRankMatchResultRequest* Request, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetResultSaveRankMatchResultRequest");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetResultSaveRankMatchResultRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request != nullptr)
		*Request = std::move(Parms.Request);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.GetResultSaveTimeTrialResult
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FResultSaveTimeTrialResultRequest*Request                                                (Parm, OutParm)
// bool*                                   IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::GetResultSaveTimeTrialResult(struct FResultSaveTimeTrialResultRequest* Request, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "GetResultSaveTimeTrialResult");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_GetResultSaveTimeTrialResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request != nullptr)
		*Request = std::move(Parms.Request);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.NotifySendResultSave
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::NotifySendResultSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "NotifySendResultSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.OnExitState
// (Event, Public, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::OnExitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "OnExitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.OnInitState
// (Event, Public, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::OnInitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "OnInitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.OnSendResultSaveFestaResultCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::OnSendResultSaveFestaResultCallback(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "OnSendResultSaveFestaResultCallback");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_OnSendResultSaveFestaResultCallback Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.OnSendResultSaveLegendCompeResultCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::OnSendResultSaveLegendCompeResultCallback(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "OnSendResultSaveLegendCompeResultCallback");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_OnSendResultSaveLegendCompeResultCallback Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.OnSendResultSaveRankMatchResultCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::OnSendResultSaveRankMatchResultCallback(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "OnSendResultSaveRankMatchResultCallback");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_OnSendResultSaveRankMatchResultCallback Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.OutputLog_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DispStr                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bError                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceEnd_C::OutputLog_Event(const class FString& DispStr, bool bError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "OutputLog_Event");

	Params::BPC_RaceSequenceStateSendRaceEnd_C_OutputLog_Event Parms{};

	Parms.DispStr = std::move(DispStr);
	Parms.bError = bError;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.SendPredictLog
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::SendPredictLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "SendPredictLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.UpdateSendResultSaveCount
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::UpdateSendResultSaveCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "UpdateSendResultSaveCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceEnd.BPC_RaceSequenceStateSendRaceEnd_C.UploadPredictCarPacket
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceEnd_C::UploadPredictCarPacket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceEnd_C", "UploadPredictCarPacket");

	UObject::ProcessEvent(Func, nullptr);
}

}

