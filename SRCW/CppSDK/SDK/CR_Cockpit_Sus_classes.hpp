#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Cockpit_Sus

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CR_Cockpit_Sus.RigVMMemory_Work
// 0x0648 (0x0670 - 0x0028)
class CR_Cockpit_Sus::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x01C0)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_Result;                  // 0x01F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___ArrayGetAtIndex_Element;              // 0x01F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_A;                       // 0x0210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0xC];                                      // 0x0214(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_Transform;             // 0x0220(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_CachedIndex;           // 0x0280(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_B;                       // 0x0290(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0xC];                                      // 0x0294(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_OffsetTransform__IO; // 0x02A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_CachedIndex;   // 0x0300(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_1_Result;                // 0x0310(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___ArrayGetAtIndex_1_Element;            // 0x0318(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_A;                     // 0x0330(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0xC];                                      // 0x0334(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_1_Transform;           // 0x0340(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_CachedIndex;         // 0x03A0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_1_B;                     // 0x03B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0xC];                                      // 0x03B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_OffsetTransform__IO; // 0x03C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_CachedIndex; // 0x0420(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_2_Result;                // 0x0430(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___ArrayGetAtIndex_1_1_Element;          // 0x0438(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_2_A;                     // 0x0450(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0xC];                                      // 0x0454(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_1_1_Transform;         // 0x0460(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_CachedIndex;       // 0x04C0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_2_B;                     // 0x04D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0xC];                                      // 0x04D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_2_OffsetTransform__IO; // 0x04E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_2_CachedIndex; // 0x0540(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_3_Result;                // 0x0550(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___ArrayGetAtIndex_1_1_1_Element;        // 0x0558(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_3_A;                     // 0x0570(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0xC];                                      // 0x0574(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_1_1_1_Transform;       // 0x0580(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_1_CachedIndex;     // 0x05E0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_3_B;                     // 0x05F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0xC];                                      // 0x05F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_3_OffsetTransform__IO; // 0x0600(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_3_CachedIndex; // 0x0660(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_Cockpit_Sus.RigVMMemory_Work", true>();
	}
	static class CR_Cockpit_Sus::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_Cockpit_Sus::URigVMMemory_Work>();
	}
};
static_assert(alignof(CR_Cockpit_Sus::URigVMMemory_Work) == 0x000010, "Wrong alignment on CR_Cockpit_Sus::URigVMMemory_Work");
static_assert(sizeof(CR_Cockpit_Sus::URigVMMemory_Work) == 0x000670, "Wrong size on CR_Cockpit_Sus::URigVMMemory_Work");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_Result) == 0x0001F0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_Result' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_Element) == 0x0001F8, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_A) == 0x000210, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_A' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_Transform) == 0x000220, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_CachedIndex) == 0x000280, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_B) == 0x000290, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_B' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_OffsetTransform__IO) == 0x0002A0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_CachedIndex) == 0x000300, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_1_Result) == 0x000310, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_Element) == 0x000318, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_1_A) == 0x000330, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_1_A' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_1_Transform) == 0x000340, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_1_CachedIndex) == 0x0003A0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_1_B) == 0x0003B0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_1_B' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_OffsetTransform__IO) == 0x0003C0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_CachedIndex) == 0x000420, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_2_Result) == 0x000430, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_2_Result' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_1_Element) == 0x000438, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_1_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_2_A) == 0x000450, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_2_A' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_Transform) == 0x000460, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_CachedIndex) == 0x0004C0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_2_B) == 0x0004D0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_2_B' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_2_OffsetTransform__IO) == 0x0004E0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_2_CachedIndex) == 0x000540, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_3_Result) == 0x000550, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_3_Result' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___ArrayGetAtIndex_1_1_1_Element) == 0x000558, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___ArrayGetAtIndex_1_1_1_Element' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_3_A) == 0x000570, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_3_A' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_Transform) == 0x000580, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_CachedIndex) == 0x0005E0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___MathFloatSub_3_B) == 0x0005F0, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___MathFloatSub_3_B' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_3_OffsetTransform__IO) == 0x000600, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_3_CachedIndex) == 0x000660, "Member 'CR_Cockpit_Sus::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_3_CachedIndex' has a wrong offset!");

// ControlRigBlueprintGeneratedClass CR_Cockpit_Sus.CR_Cockpit_Sus_C
// 0x0018 (0x0AC0 - 0x0AA8)
class UCR_Cockpit_Sus_C final : public UControlRig
{
public:
	TArray<struct FVector>                        WheelPos;                                          // 0x0AA8(0x0010)(Edit, BlueprintVisible)
	bool                                          IsEnableWheelUpdate;                               // 0x0AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Cockpit_Sus_C">();
	}
	static class UCR_Cockpit_Sus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Cockpit_Sus_C>();
	}
};
static_assert(alignof(UCR_Cockpit_Sus_C) == 0x000008, "Wrong alignment on UCR_Cockpit_Sus_C");
static_assert(sizeof(UCR_Cockpit_Sus_C) == 0x000AC0, "Wrong size on UCR_Cockpit_Sus_C");
static_assert(offsetof(UCR_Cockpit_Sus_C, WheelPos) == 0x000AA8, "Member 'UCR_Cockpit_Sus_C::WheelPos' has a wrong offset!");
static_assert(offsetof(UCR_Cockpit_Sus_C, IsEnableWheelUpdate) == 0x000AB8, "Member 'UCR_Cockpit_Sus_C::IsEnableWheelUpdate' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_Cockpit_Sus.RigVMMemory_Literal
// 0x00E8 (0x0110 - 0x0028)
class CR_Cockpit_Sus::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_Item__Const;   // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_Index__Const;         // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_Item__Const;           // 0x00A4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___GetTransform_4_Space__Const;          // 0x00B0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetTransform_4_bInitial__Const : 1;   // 0x00B1(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___OffsetTransformForItem_Weight__Const; // 0x00B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_Item__Const; // 0x00B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_1_Index__Const;       // 0x00C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_1_Item__Const;         // 0x00C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_2_Item__Const; // 0x00D4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_1_1_Index__Const;     // 0x00E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_1_1_Item__Const;       // 0x00E4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_3_Item__Const; // 0x00F0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayGetAtIndex_1_1_1_Index__Const;   // 0x00FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_1_1_1_Item__Const;     // 0x0100(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_Cockpit_Sus.RigVMMemory_Literal", true>();
	}
	static class CR_Cockpit_Sus::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_Cockpit_Sus::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CR_Cockpit_Sus::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CR_Cockpit_Sus::URigVMMemory_Literal");
static_assert(sizeof(CR_Cockpit_Sus::URigVMMemory_Literal) == 0x000110, "Wrong size on CR_Cockpit_Sus::URigVMMemory_Literal");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_Item__Const) == 0x000028, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_OffsetTransform__Const) == 0x000040, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_Index__Const) == 0x0000A0, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___GetTransform_4_Item__Const) == 0x0000A4, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___GetTransform_4_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___GetTransform_4_Space__Const) == 0x0000B0, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___GetTransform_4_Space__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_Weight__Const) == 0x0000B4, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_Weight__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_Item__Const) == 0x0000B8, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_1_Index__Const) == 0x0000C4, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_1_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___GetTransform_4_1_Item__Const) == 0x0000C8, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___GetTransform_4_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_2_Item__Const) == 0x0000D4, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_1_1_Index__Const) == 0x0000E0, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_1_1_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___GetTransform_4_1_1_Item__Const) == 0x0000E4, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___GetTransform_4_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_3_Item__Const) == 0x0000F0, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___ArrayGetAtIndex_1_1_1_Index__Const) == 0x0000FC, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___ArrayGetAtIndex_1_1_1_Index__Const' has a wrong offset!");
static_assert(offsetof(CR_Cockpit_Sus::URigVMMemory_Literal, RigVMModel___GetTransform_4_1_1_1_Item__Const) == 0x000100, "Member 'CR_Cockpit_Sus::URigVMMemory_Literal::RigVMModel___GetTransform_4_1_1_1_Item__Const' has a wrong offset!");

}

