#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MachineResourceElement

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MachineResourceElement.MachineResourceElement_C
// 0x0050 (0x00B0 - 0x0060)
class UMachineResourceElement_C final : public UMenuResourceElement
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0060(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMachinePartsDataAsset*                 FrontParts;                                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMachinePartsDataAsset*                 RearParts;                                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMachineTirePartsDataAsset*             TireParts;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SideMesh;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerNo;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CarStatusType;                                     // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x008D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        PartsPath;                                         // 0x0090(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MachineResourceElement(int32 EntryPoint);
	void Initialize(int32 PlayerNo_0, ECarStatusType CarStatusType_0, EMachineId MachineId_0);
	void OnLoaded_7EC97FE04E6C0C687DDC7C8EAE6DB204(class UObject* Loaded);
	void OnLoaded_95CBE1C547B13B8B9D57678CC6841399(class UObject* Loaded);
	void OnLoaded_A4A9566F4CFB176F6C82718A086116EC(class UObject* Loaded);
	void OnLoaded_F35FE6E84B36E7912B5397B1CD02FC96(class UObject* Loaded);
	void OnLoadResource();
	void OnUnloadResource();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MachineResourceElement_C">();
	}
	static class UMachineResourceElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMachineResourceElement_C>();
	}
};
static_assert(alignof(UMachineResourceElement_C) == 0x000008, "Wrong alignment on UMachineResourceElement_C");
static_assert(sizeof(UMachineResourceElement_C) == 0x0000B0, "Wrong size on UMachineResourceElement_C");
static_assert(offsetof(UMachineResourceElement_C, UberGraphFrame) == 0x000060, "Member 'UMachineResourceElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, FrontParts) == 0x000068, "Member 'UMachineResourceElement_C::FrontParts' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, RearParts) == 0x000070, "Member 'UMachineResourceElement_C::RearParts' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, TireParts) == 0x000078, "Member 'UMachineResourceElement_C::TireParts' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, SideMesh) == 0x000080, "Member 'UMachineResourceElement_C::SideMesh' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, PlayerNo) == 0x000088, "Member 'UMachineResourceElement_C::PlayerNo' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, CarStatusType) == 0x00008C, "Member 'UMachineResourceElement_C::CarStatusType' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, MachineId) == 0x00008D, "Member 'UMachineResourceElement_C::MachineId' has a wrong offset!");
static_assert(offsetof(UMachineResourceElement_C, PartsPath) == 0x000090, "Member 'UMachineResourceElement_C::PartsPath' has a wrong offset!");

}

