#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Charahead_CPU

#include "Basic.hpp"

#include "WBP_Race_HUD_Sub_Charahead_CPU_classes.hpp"
#include "WBP_Race_HUD_Sub_Charahead_CPU_parameters.hpp"


namespace SDK
{

// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.ExecuteUbergraph_WBP_Race_HUD_Sub_Charahead_CPU
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::ExecuteUbergraph_WBP_Race_HUD_Sub_Charahead_CPU(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "ExecuteUbergraph_WBP_Race_HUD_Sub_Charahead_CPU");

	Params::WBP_Race_HUD_Sub_Charahead_CPU_C_ExecuteUbergraph_WBP_Race_HUD_Sub_Charahead_CPU Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.GetShapeIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ShapeIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::GetShapeIndex(int32 InIndex, int32* ShapeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "GetShapeIndex");

	Params::WBP_Race_HUD_Sub_Charahead_CPU_C_GetShapeIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeIndex != nullptr)
		*ShapeIndex = Parms.ShapeIndex;
}


// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "PreConstruct");

	Params::WBP_Race_HUD_Sub_Charahead_CPU_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.SetGroupIndexIF
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGroup                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GroupIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsForce                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::SetGroupIndexIF(bool IsGroup, int32 GroupIndex, bool IsForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "SetGroupIndexIF");

	Params::WBP_Race_HUD_Sub_Charahead_CPU_C_SetGroupIndexIF Parms{};

	Parms.IsGroup = IsGroup;
	Parms.GroupIndex = GroupIndex;
	Parms.IsForce = IsForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.SetRank
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewRank                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::SetRank(int32 NewRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "SetRank");

	Params::WBP_Race_HUD_Sub_Charahead_CPU_C_SetRank Parms{};

	Parms.NewRank = NewRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_HUD_Sub_Charahead_CPU.WBP_Race_HUD_Sub_Charahead_CPU_C.SetRivalInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRival                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPowerRival                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_HUD_Sub_Charahead_CPU_C::SetRivalInfo(bool IsRival, bool IsPowerRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_HUD_Sub_Charahead_CPU_C", "SetRivalInfo");

	Params::WBP_Race_HUD_Sub_Charahead_CPU_C_SetRivalInfo Parms{};

	Parms.IsRival = IsRival;
	Parms.IsPowerRival = IsPowerRival;

	UObject::ProcessEvent(Func, &Parms);
}

}

