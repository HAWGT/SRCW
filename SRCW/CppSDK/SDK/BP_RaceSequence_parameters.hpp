#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaceSequence

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UnionLib_structs.hpp"


namespace SDK::Params
{

// Function BP_RaceSequence.BP_RaceSequence_C.ApplyOnlineCharaMachineSetting
// 0x0058 (0x0058 - 0x0000)
struct BP_RaceSequence_C_ApplyOnlineCharaMachineSetting final
{
public:
	bool                                          CallFunc_GetIsOnlineGameMode_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionRacer*>                    CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacer*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerIndex_OutRacerIndex;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRacerMachineID_OutId;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     CallFunc_GetRacerDriverId_OutId;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ApplyOnlineCharaMachineSetting");
static_assert(sizeof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting) == 0x000058, "Wrong size on BP_RaceSequence_C_ApplyOnlineCharaMachineSetting");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_GetIsOnlineGameMode_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_GetIsOnlineGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_GetRacersRef_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000038, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_GetRacerIndex_OutRacerIndex) == 0x000044, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_GetRacerIndex_OutRacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_GetRacerMachineID_OutId) == 0x00004C, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_GetRacerMachineID_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyOnlineCharaMachineSetting, CallFunc_GetRacerDriverId_OutId) == 0x000050, "Member 'BP_RaceSequence_C_ApplyOnlineCharaMachineSetting::CallFunc_GetRacerDriverId_OutId' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ApplyParam
// 0x01A8 (0x01A8 - 0x0000)
struct BP_RaceSequence_C_ApplyParam final
{
public:
	class UUnionRacers*                           Racers_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RacerIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUserMachineCustomizeData              CallFunc_GetRacerMachineCustomizeData_MachineCustomizeData; // 0x0018(0x0078)()
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMachineCustomParamData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0020)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachineCustomParamData                CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00C8(0x0020)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUnionRaceCustomParam                  K2Node_MakeStruct_UnionRaceCustomParam;            // 0x00EC(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUnionRaceCustomParam                  K2Node_MakeStruct_UnionRaceCustomParam_1;          // 0x0100(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_2;          // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachineCustomParamData                CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0120(0x0020)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUnionRaceCustomParam                  K2Node_MakeStruct_UnionRaceCustomParam_2;          // 0x0144(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDriverId                                     CallFunc_GetRacerDriverId_OutId;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_3;          // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDriverCustomParamData                 CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0170(0x0020)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUnionRaceCustomParam                  K2Node_MakeStruct_UnionRaceCustomParam_3;          // 0x0194(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaceSequence_C_ApplyParam) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ApplyParam");
static_assert(sizeof(BP_RaceSequence_C_ApplyParam) == 0x0001A8, "Wrong size on BP_RaceSequence_C_ApplyParam");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, Racers_0) == 0x000000, "Member 'BP_RaceSequence_C_ApplyParam::Racers_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, RacerIndex) == 0x000008, "Member 'BP_RaceSequence_C_ApplyParam::RacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetRacerMachineCustomizeData_MachineCustomizeData) == 0x000018, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetRacerMachineCustomizeData_MachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetEnumeratorName_ReturnValue) == 0x000090, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x000098, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000C8, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000E8, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, K2Node_MakeStruct_UnionRaceCustomParam) == 0x0000EC, "Member 'BP_RaceSequence_C_ApplyParam::K2Node_MakeStruct_UnionRaceCustomParam' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, K2Node_MakeStruct_UnionRaceCustomParam_1) == 0x000100, "Member 'BP_RaceSequence_C_ApplyParam::K2Node_MakeStruct_UnionRaceCustomParam_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetEnumeratorName_ReturnValue_2) == 0x000114, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetEnumeratorName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetCarStatusType_ReturnValue) == 0x00011C, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetCarStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000120, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000140, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000141, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, K2Node_MakeStruct_UnionRaceCustomParam_2) == 0x000144, "Member 'BP_RaceSequence_C_ApplyParam::K2Node_MakeStruct_UnionRaceCustomParam_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetRacerDriverId_OutId) == 0x000158, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetRacerDriverId_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetEnumeratorName_ReturnValue_3) == 0x00015C, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetEnumeratorName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000168, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000170, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000190, "Member 'BP_RaceSequence_C_ApplyParam::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ApplyParam, K2Node_MakeStruct_UnionRaceCustomParam_3) == 0x000194, "Member 'BP_RaceSequence_C_ApplyParam::K2Node_MakeStruct_UnionRaceCustomParam_3' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.BindRaceBGMEvent
// 0x0178 (0x0178 - 0x0000)
struct BP_RaceSequence_C_BindRaceBGMEvent final
{
public:
	class UAppRaceEventManager*                   AppRaceEventManager;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value1, const class FString& Value2)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value)>   K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Value)>                   K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value1, const class FString& Value2)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FAppRaceEventGoalData& Value)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value1, const class FString& Value2)> K2Node_CreateDelegate_OutputDelegate_9; // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate_13;           // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate_14;           // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value)>   K2Node_CreateDelegate_OutputDelegate_15;           // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Value)>                   K2Node_CreateDelegate_OutputDelegate_16;           // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value1, bool Value2)> K2Node_CreateDelegate_OutputDelegate_17; // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value)>   K2Node_CreateDelegate_OutputDelegate_21;           // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value)>   K2Node_CreateDelegate_OutputDelegate_22;           // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_BindRaceBGMEvent) == 0x000008, "Wrong alignment on BP_RaceSequence_C_BindRaceBGMEvent");
static_assert(sizeof(BP_RaceSequence_C_BindRaceBGMEvent) == 0x000178, "Wrong size on BP_RaceSequence_C_BindRaceBGMEvent");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, AppRaceEventManager) == 0x000000, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::AppRaceEventManager' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_5) == 0x000058, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_6) == 0x000068, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_7) == 0x000078, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_8) == 0x000088, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_9) == 0x000098, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000A8, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000B8, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_12) == 0x0000C8, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_13) == 0x0000D8, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_14) == 0x0000E8, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_15) == 0x0000F8, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_16) == 0x000108, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_17) == 0x000118, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_18) == 0x000128, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_19) == 0x000138, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_20) == 0x000148, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_21) == 0x000158, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindRaceBGMEvent, K2Node_CreateDelegate_OutputDelegate_22) == 0x000168, "Member 'BP_RaceSequence_C_BindRaceBGMEvent::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.BindSilenceSoundEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_RaceSequence_C_BindSilenceSoundEvent final
{
public:
	class UAppRaceEventManager*                   AppRaceEventManager;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Value)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Value)>                   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_BindSilenceSoundEvent) == 0x000008, "Wrong alignment on BP_RaceSequence_C_BindSilenceSoundEvent");
static_assert(sizeof(BP_RaceSequence_C_BindSilenceSoundEvent) == 0x000028, "Wrong size on BP_RaceSequence_C_BindSilenceSoundEvent");
static_assert(offsetof(BP_RaceSequence_C_BindSilenceSoundEvent, AppRaceEventManager) == 0x000000, "Member 'BP_RaceSequence_C_BindSilenceSoundEvent::AppRaceEventManager' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindSilenceSoundEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_RaceSequence_C_BindSilenceSoundEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_BindSilenceSoundEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_RaceSequence_C_BindSilenceSoundEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ChangeDomainPre1st
// 0x00E0 (0x00E0 - 0x0000)
struct BP_RaceSequence_C_ChangeDomainPre1st final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalNewDomainIndex;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Select_Course_Setting_Impl_Texture;       // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_Select_Course_Setting_Impl_OrthoRate;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Select_Course_Setting_Impl_Angle;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Select_Course_Setting_Impl_Offset;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUnionRaceUIInterface> CallFunc_SetCourseSetting_self_CastInput;          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacer*                            CallFunc_GetRacer_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacePlayerStatus*                 CallFunc_GetRacePlayerStatus_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUnionRaceLapInfo*                      CallFunc_GetRaceLapInfo_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue_1;       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetCourseSetting_OrthoRate_ImplicitCast;  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCourseSetting_Angle_ImplicitCast;      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ChangeDomainPre1st) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ChangeDomainPre1st");
static_assert(sizeof(BP_RaceSequence_C_ChangeDomainPre1st) == 0x0000E0, "Wrong size on BP_RaceSequence_C_ChangeDomainPre1st");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, RacerIndex) == 0x000000, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::RacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, LocalNewDomainIndex) == 0x000004, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::LocalNewDomainIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_Select_Course_Setting_Impl_Texture) == 0x000010, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_Select_Course_Setting_Impl_Texture' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_Select_Course_Setting_Impl_OrthoRate) == 0x000038, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_Select_Course_Setting_Impl_OrthoRate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_Select_Course_Setting_Impl_Angle) == 0x000040, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_Select_Course_Setting_Impl_Angle' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_Select_Course_Setting_Impl_Offset) == 0x000048, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_Select_Course_Setting_Impl_Offset' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRaceHUDRef_ReturnValue) == 0x000060, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRaceHUDRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_SetCourseSetting_self_CastInput) == 0x000068, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_SetCourseSetting_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRacersRef_ReturnValue) == 0x000080, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRacer_ReturnValue) == 0x000088, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRacer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000098, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRacePlayerStatus_ReturnValue) == 0x0000A8, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRacePlayerStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000B4, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRaceLapInfo_ReturnValue) == 0x0000B8, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRaceLapInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_SelectInt_ReturnValue_1) == 0x0000C0, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_IsValid_ReturnValue_3) == 0x0000C4, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GetRacerStatusObject_ReturnValue_1) == 0x0000C8, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GetRacerStatusObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_IsLocalPlayer_ReturnValue) == 0x0000D1, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_SetCourseSetting_OrthoRate_ImplicitCast) == 0x0000D4, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_SetCourseSetting_OrthoRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeDomainPre1st, CallFunc_SetCourseSetting_Angle_ImplicitCast) == 0x0000D8, "Member 'BP_RaceSequence_C_ChangeDomainPre1st::CallFunc_SetCourseSetting_Angle_ImplicitCast' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ChangeSubEvent
// 0x0038 (0x0038 - 0x0000)
struct BP_RaceSequence_C_ChangeSubEvent final
{
public:
	EMainSubCourseIndex                           NextMainSubState;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RacerId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMainSubMapInfo                    CurrentMainSubState;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EStageCourseMainSubMapInfo                    CallFunc_ChangeSubMapTexture_MainSubState;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacer*                            CallFunc_GetRacer_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ChangeSubEvent) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ChangeSubEvent");
static_assert(sizeof(BP_RaceSequence_C_ChangeSubEvent) == 0x000038, "Wrong size on BP_RaceSequence_C_ChangeSubEvent");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, NextMainSubState) == 0x000000, "Member 'BP_RaceSequence_C_ChangeSubEvent::NextMainSubState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, RacerId) == 0x000004, "Member 'BP_RaceSequence_C_ChangeSubEvent::RacerId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, CurrentMainSubState) == 0x000008, "Member 'BP_RaceSequence_C_ChangeSubEvent::CurrentMainSubState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, CallFunc_GetRacersRef_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_ChangeSubEvent::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, CallFunc_ChangeSubMapTexture_MainSubState) == 0x000018, "Member 'BP_RaceSequence_C_ChangeSubEvent::CallFunc_ChangeSubMapTexture_MainSubState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, CallFunc_GetRacer_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_ChangeSubEvent::CallFunc_GetRacer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_ChangeSubEvent::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubEvent, CallFunc_IsLocalPlayer_ReturnValue) == 0x000030, "Member 'BP_RaceSequence_C_ChangeSubEvent::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ChangeSubMapTexture
// 0x00A8 (0x00A8 - 0x0000)
struct BP_RaceSequence_C_ChangeSubMapTexture final
{
public:
	EMainSubCourseIndex                           NextMainSubState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMainSubMapInfo                    MainSubState;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMainSubMapInfo                    CurrentMainSubState;                               // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceType                                     Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStageCourseMapParam                   CallFunc_Map_Find_Value;                           // 0x0020(0x0028)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRaceDebugParamFinalLap_ReturnValue;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0050(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUnionRaceUIInterface> CallFunc_SetCourseSetting_self_CastInput;          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceType                                     CallFunc_GetSelectedRaceType_ReturnValue;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMapInfo                           K2Node_Select_Default;                             // 0x009C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMapInfo                           K2Node_Select_Default_1;                           // 0x009E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMapInfo                           K2Node_Select_Default_2;                           // 0x009F(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ChangeSubMapTexture) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ChangeSubMapTexture");
static_assert(sizeof(BP_RaceSequence_C_ChangeSubMapTexture) == 0x0000A8, "Wrong size on BP_RaceSequence_C_ChangeSubMapTexture");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, NextMainSubState) == 0x000000, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::NextMainSubState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, MainSubState) == 0x000001, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::MainSubState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CurrentMainSubState) == 0x000002, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CurrentMainSubState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_MakeLiteralByte_ReturnValue) == 0x000003, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000004, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000005, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000006, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, Temp_int_Variable) == 0x000008, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, Temp_byte_Variable) == 0x00000C, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x00000D, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_GetRaceHUDRef_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_GetRaceHUDRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_GetRaceDebugParamFinalLap_ReturnValue) == 0x000049, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_GetRaceDebugParamFinalLap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000050, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000078, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_SetCourseSetting_self_CastInput) == 0x000080, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_SetCourseSetting_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000090, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, Temp_bool_Variable) == 0x000098, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_Conv_IntToByte_ReturnValue) == 0x000099, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_GetValidValue_ReturnValue) == 0x00009A, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_GetSelectedRaceType_ReturnValue) == 0x00009B, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_GetSelectedRaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, K2Node_Select_Default) == 0x00009C, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x00009D, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, K2Node_Select_Default_1) == 0x00009E, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, K2Node_Select_Default_2) == 0x00009F, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ChangeSubMapTexture, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'BP_RaceSequence_C_ChangeSubMapTexture::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.Chara Machine COMROM
// 0x0188 (0x0188 - 0x0000)
struct BP_RaceSequence_C_Chara_Machine_COMROM final
{
public:
	TArray<int32>                                 LocalMachineIdTmp_0;                               // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<EDriverId>                             LocalCharaTmp_0;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 LocalMachineIdTmp;                                 // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 LocalMachineIdBase;                                // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<EDriverId>                             LocalCharaTmp;                                     // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<EDriverId>                             LocalCharaBase;                                    // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EDriverId>                             K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedMachineID_OutExecsPin;         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     CallFunc_GetSelectedDriverId_OutId;                // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutputExecsPin_SuccessFailed                 CallFunc_GetSelectedDriverId_OutExecsPin;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EDriverId>                             K2Node_MakeArray_Array_1;                          // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetIsOnlineGameMode_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x00A0(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_3;                          // 0x00B0(0x0010)(ReferenceParm)
	TArray<EDriverId>                             K2Node_MakeArray_Array_4;                          // 0x00C0(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_5;                          // 0x00D0(0x0010)(ReferenceParm)
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionRacer*>                    CallFunc_Map_Values_Values;                        // 0x00F0(0x0010)(ReferenceParm)
	class UUnionRacer*                            CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRacerIndex_OutRacerIndex;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRacerMachineID_OutId;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     CallFunc_GetRacerDriverId_OutId;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     CallFunc_Array_Get_Item_1;                         // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedMachineID_OutExecsPin_1;       // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue_1;               // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UUnionRacer*>                    CallFunc_Map_Values_Values_1;                      // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacer*                            CallFunc_Array_Get_Item_2;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue_1;       // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_Chara_Machine_COMROM) == 0x000008, "Wrong alignment on BP_RaceSequence_C_Chara_Machine_COMROM");
static_assert(sizeof(BP_RaceSequence_C_Chara_Machine_COMROM) == 0x000188, "Wrong size on BP_RaceSequence_C_Chara_Machine_COMROM");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, LocalMachineIdTmp_0) == 0x000000, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::LocalMachineIdTmp_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, LocalCharaTmp_0) == 0x000010, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::LocalCharaTmp_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, LocalMachineIdTmp) == 0x000020, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::LocalMachineIdTmp' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, LocalMachineIdBase) == 0x000030, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::LocalMachineIdBase' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, LocalCharaTmp) == 0x000040, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::LocalCharaTmp' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, LocalCharaBase) == 0x000050, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::LocalCharaBase' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_SetSelectedMachineID_OutExecsPin) == 0x000081, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_SetSelectedMachineID_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_SwitchEnum_CmpSuccess) == 0x000082, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetSelectedDriverId_OutId) == 0x000083, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetSelectedDriverId_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetSelectedDriverId_OutExecsPin) == 0x000084, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetSelectedDriverId_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_SwitchEnum_CmpSuccess_1) == 0x000085, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_MakeArray_Array_1) == 0x000088, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetIsOnlineGameMode_ReturnValue) == 0x000098, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetIsOnlineGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_MakeArray_Array_2) == 0x0000A0, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_MakeArray_Array_3) == 0x0000B0, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_MakeArray_Array_4) == 0x0000C0, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_MakeArray_Array_5) == 0x0000D0, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacersRef_ReturnValue) == 0x0000E0, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, Temp_int_Loop_Counter_Variable_1) == 0x0000E8, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Map_Values_Values) == 0x0000F0, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000110, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Conv_IntToByte_ReturnValue) == 0x000119, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacerIndex_OutRacerIndex) == 0x00011C, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacerIndex_OutRacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetValidValue_ReturnValue) == 0x000120, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacerMachineID_OutId) == 0x000124, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacerMachineID_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetCarStatusType_ReturnValue) == 0x000128, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetCarStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacerDriverId_OutId) == 0x000129, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacerDriverId_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Get_Item_1) == 0x000135, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_MakeLiteralByte_ReturnValue) == 0x000136, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000138, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_SetSelectedMachineID_OutExecsPin_1) == 0x00013C, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_SetSelectedMachineID_OutExecsPin_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, K2Node_SwitchEnum_CmpSuccess_2) == 0x00013D, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Length_ReturnValue_2) == 0x000140, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_RemoveItem_ReturnValue) == 0x000145, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Contains_ReturnValue) == 0x000146, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacersRef_ReturnValue_1) == 0x000148, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacersRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Map_Values_Values_1) == 0x000150, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Length_ReturnValue_3) == 0x000160, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Array_Get_Item_2) == 0x000168, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_Less_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_GetRacerStatusObject_ReturnValue_1) == 0x000178, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_GetRacerStatusObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Chara_Machine_COMROM, CallFunc_IsLocalPlayer_ReturnValue) == 0x000180, "Member 'BP_RaceSequence_C_Chara_Machine_COMROM::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.CheckDebugGenericVar
// 0x0014 (0x0014 - 0x0000)
struct BP_RaceSequence_C_CheckDebugGenericVar final
{
public:
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedMachineType_OutExecsPin;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRaceDebugParamGenericInt_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedMachineID_OutExecsPin;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_CheckDebugGenericVar) == 0x000004, "Wrong alignment on BP_RaceSequence_C_CheckDebugGenericVar");
static_assert(sizeof(BP_RaceSequence_C_CheckDebugGenericVar) == 0x000014, "Wrong size on BP_RaceSequence_C_CheckDebugGenericVar");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_SetSelectedMachineType_OutExecsPin) == 0x000000, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_SetSelectedMachineType_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_IsShippingBuild_ReturnValue) == 0x000001, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_MakeLiteralByte_ReturnValue) == 0x000003, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_GetRaceDebugParamGenericInt_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_GetRaceDebugParamGenericInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_SetSelectedMachineID_OutExecsPin) == 0x000011, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_SetSelectedMachineID_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_CheckDebugGenericVar, K2Node_SwitchEnum_CmpSuccess_1) == 0x000013, "Member 'BP_RaceSequence_C_CheckDebugGenericVar::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ConvertIndexToDriverId
// 0x0038 (0x0038 - 0x0000)
struct BP_RaceSequence_C_ConvertIndexToDriverId final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     ID;                                                // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EDriverId>                             K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EDriverId>                             K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm)
	EDriverId                                     K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ConvertIndexToDriverId) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ConvertIndexToDriverId");
static_assert(sizeof(BP_RaceSequence_C_ConvertIndexToDriverId) == 0x000038, "Wrong size on BP_RaceSequence_C_ConvertIndexToDriverId");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, Index_0) == 0x000000, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::Index_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, ID) == 0x000004, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::ID' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, CallFunc_IsShippingBuild_ReturnValue) == 0x000018, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, Temp_bool_Variable) == 0x000019, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, K2Node_MakeArray_Array_1) == 0x000020, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToDriverId, K2Node_Select_Default) == 0x000030, "Member 'BP_RaceSequence_C_ConvertIndexToDriverId::K2Node_Select_Default' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ConvertIndexToPre1stBehaviorId
// 0x0050 (0x0050 - 0x0000)
struct BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId");
static_assert(sizeof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId) == 0x000050, "Wrong size on BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, Index_0) == 0x000000, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::Index_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, ID) == 0x000004, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::ID' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, Temp_bool_Variable) == 0x000008, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, CallFunc_IsShippingBuild_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, K2Node_MakeArray_Array_1) == 0x000028, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, K2Node_Select_Default) == 0x000038, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_RaceSequence_C_ConvertIndexToPre1stBehaviorId::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.DebugOverride
// 0x0460 (0x0460 - 0x0000)
struct BP_RaceSequence_C_DebugOverride final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedDriverId_OutExecsPin;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolFromConfig_ConfigValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolFromConfig_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetStringArrayFromConfig_ConfigValue;     // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetStringArrayFromConfig_ReturnValue;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppDataManageSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetOverrideDriverIds_OutDriverIds;        // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableOverrideDriverId_ReturnValue;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionRacer*>                    CallFunc_Map_Values_Values;                        // 0x0430(0x0010)(ReferenceParm)
	class UUnionRacer*                            CallFunc_Array_Get_Item_1;                         // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_DebugOverride) == 0x000008, "Wrong alignment on BP_RaceSequence_C_DebugOverride");
static_assert(sizeof(BP_RaceSequence_C_DebugOverride) == 0x000460, "Wrong size on BP_RaceSequence_C_DebugOverride");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_RaceSequence_C_DebugOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_RaceSequence_C_DebugOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_RaceSequence_C_DebugOverride::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetValidValue_ReturnValue) == 0x000012, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000013, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetEnumeratorName_ReturnValue) == 0x000014, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_SetSelectedDriverId_OutExecsPin) == 0x00001C, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_SetSelectedDriverId_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'BP_RaceSequence_C_DebugOverride::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_RaceSequence_C_DebugOverride::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetBoolFromConfig_ConfigValue) == 0x000024, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetBoolFromConfig_ConfigValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetBoolFromConfig_ReturnValue) == 0x000025, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetBoolFromConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetStringArrayFromConfig_ConfigValue) == 0x000030, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetStringArrayFromConfig_ConfigValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetStringArrayFromConfig_ReturnValue) == 0x000040, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetStringArrayFromConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000048, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetOverrideDriverIds_OutDriverIds) == 0x000060, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetOverrideDriverIds_OutDriverIds' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Conv_StringToInt_ReturnValue) == 0x000070, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_IsEnableOverrideDriverId_ReturnValue) == 0x000078, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_IsEnableOverrideDriverId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000088, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetRacersRef_ReturnValue) == 0x000090, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000428, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Map_Values_Values) == 0x000430, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Array_Get_Item_1) == 0x000440, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Array_Length_ReturnValue_1) == 0x000448, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000450, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Less_IntInt_ReturnValue_1) == 0x000458, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_DebugOverride, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00045C, "Member 'BP_RaceSequence_C_DebugOverride::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ExecuteUbergraph_BP_RaceSequence
// 0x0D90 (0x0D90 - 0x0000)
struct BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppRaceEventManager*                   CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerCount_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UObject*                          Temp_object_Variable;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_1;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG_1;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_2;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_BlackBoard_C*               CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RacerIndex_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionUITransitionManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacer*                            CallFunc_GetRacer_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UForceNextSequenceManagerSubsytem*      CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_3;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleDisplayMode                           CallFunc_GetVehicleDisplayMode_ReturnValue;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RacerIndex;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue_4;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue_1;               // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacer*                            CallFunc_GetRacer_ReturnValue_1;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UForceNextSequenceManagerSubsytem*      CallFunc_GetWorldSubsystem_ReturnValue_2;          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue_1;       // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionStatsManager*                     CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EVehicleDisplayMode                           CallFunc_GetVehicleDisplayMode_ReturnValue_1;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EventId;                        // 0x00F4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x00F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x00FC(0x0004)()
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsRace_Standings;          // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue_2;               // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue_2;       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x0138(0x0004)()
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue_3;               // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x0148(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolFromConfig_ConfigValue;            // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolFromConfig_ReturnValue;            // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIntFromConfig_ConfigValue;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIntFromConfig_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRaceRivalByRacerIndex_ReturnValue;      // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAppRacePlayerResultData               CallFunc_GetAppRacePlayerResultData_OutData;       // 0x0160(0x00B8)()
	EOutputExecsPin_SuccessFailed                 CallFunc_GetAppRacePlayerResultData_OutExecsPin;   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Value)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x021C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0238(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedPlayerCount_ReturnValue;       // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsRace_Standings_1;        // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_1;              // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F8[0x8];                                      // 0x05F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0600(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARaceStandings*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRacerCount_ReturnValue_1;              // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x067D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x067E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x067F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_Stop_ReturnValue;                         // 0x0688(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D[0x3];                                      // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_2;              // 0x0690(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_FooterMenu_C*                      CallFunc_Create_ReturnValue_1;                     // 0x0698(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsOnlineGameMode_ReturnValue;          // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeId                                   CallFunc_GetSelectedGameModeId_ReturnValue;        // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x06A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x06A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x06B0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue_4;               // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5[0x3];                                      // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUITransitionManager*              CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x071C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_5;                             // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentRaceCount_ReturnValue;          // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsLevel_ReturnValue;                // 0x074D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74E[0x2];                                      // 0x074E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0760(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_2;       // 0x0770(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsLevel_ReturnValue_1;              // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0xF];                                      // 0x0781(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAppRaceConfigData                     CallFunc_GetAppRaceConfigData_OutData;             // 0x0790(0x0490)()
	EViewSplitMode                                Temp_byte_Variable;                                // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C21[0x7];                                      // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue_2;                     // 0x0C30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_GetRedStarRingAcquisitionPerStage_ReturnValue; // 0x0C38(0x0010)(ReferenceParm)
	class UUnionRaceUI*                           K2Node_DynamicCast_AsUnion_Race_UI;                // 0x0C48(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_1;                              // 0x0C51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_2;                              // 0x0C52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C53[0x1];                                      // 0x0C53(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const EMainSubCourseIndex& Value1, int32 Value2)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0C54(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DomainIndex_1;                        // 0x0C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRaceCourseMapInfo                     K2Node_Event_MapInfo_1;                            // 0x0C68(0x0050)(ConstParm)
	int32                                         K2Node_Event_DomainIndex;                          // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRaceCourseSubMapInfo                  K2Node_Event_MapInfo;                              // 0x0CC0(0x0050)(ConstParm)
	bool                                          CallFunc_LoadDriverVoice_ReturnValue;              // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D11[0x3];                                      // 0x0D11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedPlayerCount_ReturnValue_1;     // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_3;                              // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0D19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_4;                              // 0x0D1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUnionUIFadeDirection                         K2Node_CustomEvent_FadeDirection;                  // 0x0D1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUnionUIFadeDirection FadeDirection)> K2Node_CreateDelegate_OutputDelegate_4;     // 0x0D1C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_5;                              // 0x0D2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2D[0x3];                                      // 0x0D2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_3;              // 0x0D30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Race_HUD_Player01_C*               K2Node_DynamicCast_AsWBP_Race_HUD_Player_01;       // 0x0D38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D41[0x3];                                      // 0x0D41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_GetRacePauseMenuInSESoundHandle_ReturnValue; // 0x0D44(0x0004)()
	struct FSoundHandle                           CallFunc_Stop_ReturnValue_1;                       // 0x0D48(0x0004)()
	struct FSoundHandle                           K2Node_MakeStruct_SoundHandle;                     // 0x0D4C(0x0004)()
	int32                                         Temp_int_Variable_2;                               // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                K2Node_Select_Default_2;                           // 0x0D54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D55[0x3];                                      // 0x0D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_5;       // 0x0D58(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay;                          // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x0D70(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUnionRaceUI*                           CallFunc_GetRaceHUDRef_ReturnValue_4;              // 0x0D80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0D88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence) == 0x000010, "Wrong alignment on BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence");
static_assert(sizeof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence) == 0x000D90, "Wrong size on BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, EntryPoint) == 0x000000, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRaceHUDRef_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRaceHUDRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacerCount_ReturnValue) == 0x000030, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_bool_Variable) == 0x000034, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_int_Variable) == 0x000038, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_object_Variable) == 0x000040, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsShippingBuild_ReturnValue) == 0x000048, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_AsWBP_System_Loading_BG) == 0x000050, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_AsWBP_System_Loading_BG' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsShippingBuild_ReturnValue_1) == 0x000059, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsShippingBuild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue_3) == 0x00005A, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_AsWBP_System_Loading_BG_1) == 0x000060, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_AsWBP_System_Loading_BG_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsShippingBuild_ReturnValue_2) == 0x000069, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsShippingBuild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Create_ReturnValue) == 0x000070, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable) == 0x000078, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_Loaded) == 0x000080, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_RacerIndex_1) == 0x000088, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_RacerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacersRef_ReturnValue) == 0x000090, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacer_ReturnValue) == 0x0000A0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x0000A8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacerStatusObject_ReturnValue) == 0x0000B0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsShippingBuild_ReturnValue_3) == 0x0000B8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsShippingBuild_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetVehicleDisplayMode_ReturnValue) == 0x0000B9, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetVehicleDisplayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_SwitchEnum_CmpSuccess) == 0x0000BA, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_RacerIndex) == 0x0000BC, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_RacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsShippingBuild_ReturnValue_4) == 0x0000C0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsShippingBuild_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacersRef_ReturnValue_1) == 0x0000C8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacersRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacer_ReturnValue_1) == 0x0000D0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetWorldSubsystem_ReturnValue_2) == 0x0000D8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetWorldSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacerStatusObject_ReturnValue_1) == 0x0000E0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacerStatusObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000E8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetVehicleDisplayMode_ReturnValue_1) == 0x0000F0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetVehicleDisplayMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000F1, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_EventId) == 0x0000F4, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_EventId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_Value) == 0x0000F8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_SoundPlay_ReturnValue) == 0x0000FC, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Conv_IntToByte_ReturnValue) == 0x000100, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetValidValue_ReturnValue) == 0x000101, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable_1) == 0x000108, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_SwitchEnum_CmpSuccess_2) == 0x000110, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_ClassDynamicCast_AsRace_Standings) == 0x000118, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_ClassDynamicCast_AsRace_Standings' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_ClassDynamicCast_bSuccess) == 0x000120, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacersRef_ReturnValue_2) == 0x000128, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacersRef_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacerStatusObject_ReturnValue_2) == 0x000130, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacerStatusObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_SoundPlay_ReturnValue_1) == 0x000138, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsLocalPlayer_ReturnValue) == 0x00013C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_BooleanAND_ReturnValue) == 0x00013D, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacersRef_ReturnValue_3) == 0x000140, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacersRef_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_Loaded_1) == 0x000148, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValidClass_ReturnValue) == 0x000150, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetBoolFromConfig_ConfigValue) == 0x000151, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetBoolFromConfig_ConfigValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetBoolFromConfig_ReturnValue) == 0x000152, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetBoolFromConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetIntFromConfig_ConfigValue) == 0x000154, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetIntFromConfig_ConfigValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetIntFromConfig_ReturnValue) == 0x000158, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetIntFromConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_BooleanAND_ReturnValue_1) == 0x000159, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x00015A, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsRaceRivalByRacerIndex_ReturnValue) == 0x00015B, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsRaceRivalByRacerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetAppRacePlayerResultData_OutData) == 0x000160, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetAppRacePlayerResultData_OutData' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetAppRacePlayerResultData_OutExecsPin) == 0x000218, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetAppRacePlayerResultData_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_SwitchEnum_CmpSuccess_3) == 0x000219, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate) == 0x00021C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetEnumeratorName_ReturnValue) == 0x00022C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetDataTableRowFromName_OutRow) == 0x000238, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005C8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetSelectedPlayerCount_ReturnValue) == 0x0005CC, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetSelectedPlayerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable_2) == 0x0005D0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_ClassDynamicCast_AsRace_Standings_1) == 0x0005D8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_ClassDynamicCast_AsRace_Standings_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_ClassDynamicCast_bSuccess_1) == 0x0005E0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Add_IntInt_ReturnValue_2) == 0x0005E4, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_Loaded_2) == 0x0005E8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRaceHUDRef_ReturnValue_1) == 0x0005F0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRaceHUDRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_MakeTransform_ReturnValue) == 0x000600, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000660, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue_4) == 0x000668, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_FinishSpawningActor_ReturnValue) == 0x000670, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacerCount_ReturnValue_1) == 0x000678, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacerCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00067C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Event_EndPlayReason) == 0x00067D, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_SwitchEnum_CmpSuccess_4) == 0x00067E, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue_5) == 0x00067F, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000680, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Array_Add_ReturnValue) == 0x000684, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Stop_ReturnValue) == 0x000688, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsPlaying_ReturnValue) == 0x00068C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRaceHUDRef_ReturnValue_2) == 0x000690, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRaceHUDRef_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Create_ReturnValue_1) == 0x000698, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetIsOnlineGameMode_ReturnValue) == 0x0006A0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetIsOnlineGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetSelectedGameModeId_ReturnValue) == 0x0006A1, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetSelectedGameModeId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0006A2, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_BooleanAND_ReturnValue_2) == 0x0006A3, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Array_Get_Item) == 0x0006A8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Select_Default) == 0x0006B0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_IsValid_ReturnValue_6) == 0x0006D8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Array_Length_ReturnValue) == 0x0006DC, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Less_IntInt_ReturnValue) == 0x0006E0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacersRef_ReturnValue_4) == 0x0006E8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacersRef_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x0006F0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0006F4, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x0006F8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable_3) == 0x000700, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_object_Variable_1) == 0x000708, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable_4) == 0x000710, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Array_Add_ReturnValue_1) == 0x000718, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_MakeLiteralName_ReturnValue) == 0x00071C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable_5) == 0x000728, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000730, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000738, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_int_Variable_1) == 0x000740, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000744, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetCurrentRaceCount_ReturnValue) == 0x000748, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetCurrentRaceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00074C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_ContainsLevel_ReturnValue) == 0x00074D, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_ContainsLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_Loaded_3) == 0x000750, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_class_Variable_6) == 0x000758, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate_1) == 0x000760, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate_2) == 0x000770, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_ContainsLevel_ReturnValue_1) == 0x000780, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_ContainsLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetAppRaceConfigData_OutData) == 0x000790, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetAppRaceConfigData_OutData' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_byte_Variable) == 0x000C20, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Select_Default_1) == 0x000C28, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Create_ReturnValue_2) == 0x000C30, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRedStarRingAcquisitionPerStage_ReturnValue) == 0x000C38, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRedStarRingAcquisitionPerStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_AsUnion_Race_UI) == 0x000C48, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_AsUnion_Race_UI' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_bSuccess_2) == 0x000C50, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_byte_Variable_1) == 0x000C51, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_byte_Variable_2) == 0x000C52, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate_3) == 0x000C54, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Event_DomainIndex_1) == 0x000C64, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Event_DomainIndex_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Event_MapInfo_1) == 0x000C68, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Event_MapInfo_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Event_DomainIndex) == 0x000CB8, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Event_DomainIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Event_MapInfo) == 0x000CC0, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Event_MapInfo' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_LoadDriverVoice_ReturnValue) == 0x000D10, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_LoadDriverVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetSelectedPlayerCount_ReturnValue_1) == 0x000D14, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetSelectedPlayerCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_byte_Variable_3) == 0x000D18, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000D19, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_byte_Variable_4) == 0x000D1A, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_FadeDirection) == 0x000D1B, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_FadeDirection' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate_4) == 0x000D1C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_byte_Variable_5) == 0x000D2C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRaceHUDRef_ReturnValue_3) == 0x000D30, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRaceHUDRef_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_AsWBP_Race_HUD_Player_01) == 0x000D38, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_AsWBP_Race_HUD_Player_01' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_DynamicCast_bSuccess_3) == 0x000D40, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRacePauseMenuInSESoundHandle_ReturnValue) == 0x000D44, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRacePauseMenuInSESoundHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_Stop_ReturnValue_1) == 0x000D48, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_Stop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_MakeStruct_SoundHandle) == 0x000D4C, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_MakeStruct_SoundHandle' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, Temp_int_Variable_2) == 0x000D50, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_Select_Default_2) == 0x000D54, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate_5) == 0x000D58, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CustomEvent_Delay) == 0x000D68, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, K2Node_CreateDelegate_OutputDelegate_6) == 0x000D70, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_GetRaceHUDRef_ReturnValue_4) == 0x000D80, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_GetRaceHUDRef_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000D88, "Member 'BP_RaceSequence_C_ExecuteUbergraph_BP_RaceSequence::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.FinishExitFade
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_FinishExitFade final
{
public:
	EUnionUIFadeDirection                         FadeDirection;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_FinishExitFade) == 0x000001, "Wrong alignment on BP_RaceSequence_C_FinishExitFade");
static_assert(sizeof(BP_RaceSequence_C_FinishExitFade) == 0x000001, "Wrong size on BP_RaceSequence_C_FinishExitFade");
static_assert(offsetof(BP_RaceSequence_C_FinishExitFade, FadeDirection) == 0x000000, "Member 'BP_RaceSequence_C_FinishExitFade::FadeDirection' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.GetBGMNameFromLevel
// 0x00A0 (0x00A0 - 0x0000)
struct BP_RaceSequence_C_GetBGMNameFromLevel final
{
public:
	bool                                          IsIntro;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BGMName_0;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetLevel_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_1;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_GetBGMNameFromLevel) == 0x000008, "Wrong alignment on BP_RaceSequence_C_GetBGMNameFromLevel");
static_assert(sizeof(BP_RaceSequence_C_GetBGMNameFromLevel) == 0x0000A0, "Wrong size on BP_RaceSequence_C_GetBGMNameFromLevel");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, IsIntro) == 0x000000, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::IsIntro' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, BGMName_0) == 0x000008, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::BGMName_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_FindSubstring_ReturnValue) == 0x000018, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_GetLevel_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_GetPathName_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_FindSubstring_ReturnValue_1) == 0x000038, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_FindSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_GetSubstring_ReturnValue) == 0x000068, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_Map_Find_Value) == 0x000088, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetBGMNameFromLevel, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BP_RaceSequence_C_GetBGMNameFromLevel::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.GetFooter
// 0x0030 (0x0030 - 0x0000)
struct BP_RaceSequence_C_GetFooter final
{
public:
	class UWBP_FooterMenu_C*                      FooterMenu_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonMenuFooterMenu*                  CallFunc_GetFooterMenu_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FooterMenu_C*                      K2Node_DynamicCast_AsWBP_Footer_Menu;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_GetFooter) == 0x000008, "Wrong alignment on BP_RaceSequence_C_GetFooter");
static_assert(sizeof(BP_RaceSequence_C_GetFooter) == 0x000030, "Wrong size on BP_RaceSequence_C_GetFooter");
static_assert(offsetof(BP_RaceSequence_C_GetFooter, FooterMenu_0) == 0x000000, "Member 'BP_RaceSequence_C_GetFooter::FooterMenu_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetFooter, IsValid) == 0x000008, "Member 'BP_RaceSequence_C_GetFooter::IsValid' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetFooter, CallFunc_GetFooterMenu_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_GetFooter::CallFunc_GetFooterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetFooter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_RaceSequence_C_GetFooter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetFooter, K2Node_DynamicCast_AsWBP_Footer_Menu) == 0x000020, "Member 'BP_RaceSequence_C_GetFooter::K2Node_DynamicCast_AsWBP_Footer_Menu' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetFooter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_RaceSequence_C_GetFooter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.GetMovieSkipDelaySeconds
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_GetMovieSkipDelaySeconds final
{
public:
	double                                        Seconds;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_GetMovieSkipDelaySeconds) == 0x000008, "Wrong alignment on BP_RaceSequence_C_GetMovieSkipDelaySeconds");
static_assert(sizeof(BP_RaceSequence_C_GetMovieSkipDelaySeconds) == 0x000008, "Wrong size on BP_RaceSequence_C_GetMovieSkipDelaySeconds");
static_assert(offsetof(BP_RaceSequence_C_GetMovieSkipDelaySeconds, Seconds) == 0x000000, "Member 'BP_RaceSequence_C_GetMovieSkipDelaySeconds::Seconds' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.GetRaceBGMLabel
// 0x0590 (0x0590 - 0x0000)
struct BP_RaceSequence_C_GetRaceBGMLabel final
{
public:
	bool                                          IsIntro;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Label;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TMap<EGrandPrixId, class FString>             GPLabelMap;                                        // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EGrandPrixId, class FString>             K2Node_MakeVariable_MakeVariableOutput;            // 0x0068(0x0050)()
	ERaceType                                     CallFunc_GetSelectedRaceType_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAppRaceConfigData                     CallFunc_GetAppRaceConfigData_OutData;             // 0x00C0(0x0490)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0558(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A[0x6];                                      // 0x056A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBGMNameFromLevel_BGMName;              // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnCourseEditor_Retval;                  // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_GetRaceBGMLabel) == 0x000010, "Wrong alignment on BP_RaceSequence_C_GetRaceBGMLabel");
static_assert(sizeof(BP_RaceSequence_C_GetRaceBGMLabel) == 0x000590, "Wrong size on BP_RaceSequence_C_GetRaceBGMLabel");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, IsIntro) == 0x000000, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::IsIntro' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, Label) == 0x000008, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::Label' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, GPLabelMap) == 0x000018, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::GPLabelMap' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, K2Node_MakeVariable_MakeVariableOutput) == 0x000068, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_GetSelectedRaceType_ReturnValue) == 0x0000B8, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_GetSelectedRaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_GetAppRaceConfigData_OutData) == 0x0000C0, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_GetAppRaceConfigData_OutData' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000550, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_Map_Find_Value) == 0x000558, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_Map_Find_ReturnValue) == 0x000568, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000569, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_GetBGMNameFromLevel_BGMName) == 0x000570, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_GetBGMNameFromLevel_BGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_GetRaceBGMLabel, CallFunc_IsOnCourseEditor_Retval) == 0x000580, "Member 'BP_RaceSequence_C_GetRaceBGMLabel::CallFunc_IsOnCourseEditor_Retval' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.GetRaceEndMenuContentId
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_GetRaceEndMenuContentId final
{
public:
	ECommonRaceMenuContentId                      RaceEndMenuContentId_0;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_GetRaceEndMenuContentId) == 0x000001, "Wrong alignment on BP_RaceSequence_C_GetRaceEndMenuContentId");
static_assert(sizeof(BP_RaceSequence_C_GetRaceEndMenuContentId) == 0x000001, "Wrong size on BP_RaceSequence_C_GetRaceEndMenuContentId");
static_assert(offsetof(BP_RaceSequence_C_GetRaceEndMenuContentId, RaceEndMenuContentId_0) == 0x000000, "Member 'BP_RaceSequence_C_GetRaceEndMenuContentId::RaceEndMenuContentId_0' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.HideBlackBoard
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_HideBlackBoard final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_HideBlackBoard) == 0x000008, "Wrong alignment on BP_RaceSequence_C_HideBlackBoard");
static_assert(sizeof(BP_RaceSequence_C_HideBlackBoard) == 0x000008, "Wrong size on BP_RaceSequence_C_HideBlackBoard");
static_assert(offsetof(BP_RaceSequence_C_HideBlackBoard, Delay) == 0x000000, "Member 'BP_RaceSequence_C_HideBlackBoard::Delay' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.HideLoadingWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_RaceSequence_C_HideLoadingWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_HideLoadingWidget) == 0x000008, "Wrong alignment on BP_RaceSequence_C_HideLoadingWidget");
static_assert(sizeof(BP_RaceSequence_C_HideLoadingWidget) == 0x000018, "Wrong size on BP_RaceSequence_C_HideLoadingWidget");
static_assert(offsetof(BP_RaceSequence_C_HideLoadingWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_HideLoadingWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_HideLoadingWidget, K2Node_DynamicCast_AsWBP_System_Loading_BG) == 0x000008, "Member 'BP_RaceSequence_C_HideLoadingWidget::K2Node_DynamicCast_AsWBP_System_Loading_BG' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_HideLoadingWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_RaceSequence_C_HideLoadingWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.HideRaceStandings
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_HideRaceStandings final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_HideRaceStandings) == 0x000001, "Wrong alignment on BP_RaceSequence_C_HideRaceStandings");
static_assert(sizeof(BP_RaceSequence_C_HideRaceStandings) == 0x000001, "Wrong size on BP_RaceSequence_C_HideRaceStandings");
static_assert(offsetof(BP_RaceSequence_C_HideRaceStandings, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_HideRaceStandings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.IsOnCourseEditor
// 0x0028 (0x0028 - 0x0000)
struct BP_RaceSequence_C_IsOnCourseEditor final
{
public:
	bool                                          Retval;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetLevel_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_IsOnCourseEditor) == 0x000008, "Wrong alignment on BP_RaceSequence_C_IsOnCourseEditor");
static_assert(sizeof(BP_RaceSequence_C_IsOnCourseEditor) == 0x000028, "Wrong size on BP_RaceSequence_C_IsOnCourseEditor");
static_assert(offsetof(BP_RaceSequence_C_IsOnCourseEditor, Retval) == 0x000000, "Member 'BP_RaceSequence_C_IsOnCourseEditor::Retval' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_IsOnCourseEditor, CallFunc_GetLevel_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_IsOnCourseEditor::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_IsOnCourseEditor, CallFunc_GetPathName_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_IsOnCourseEditor::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_IsOnCourseEditor, CallFunc_Contains_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_IsOnCourseEditor::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_IsOnCourseEditor, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_RaceSequence_C_IsOnCourseEditor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.KE_MonsterTruck
// 0x0004 (0x0004 - 0x0000)
struct BP_RaceSequence_C_KE_MonsterTruck final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_KE_MonsterTruck) == 0x000004, "Wrong alignment on BP_RaceSequence_C_KE_MonsterTruck");
static_assert(sizeof(BP_RaceSequence_C_KE_MonsterTruck) == 0x000004, "Wrong size on BP_RaceSequence_C_KE_MonsterTruck");
static_assert(offsetof(BP_RaceSequence_C_KE_MonsterTruck, RacerIndex) == 0x000000, "Member 'BP_RaceSequence_C_KE_MonsterTruck::RacerIndex' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.KE_YellowDrill
// 0x0004 (0x0004 - 0x0000)
struct BP_RaceSequence_C_KE_YellowDrill final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_KE_YellowDrill) == 0x000004, "Wrong alignment on BP_RaceSequence_C_KE_YellowDrill");
static_assert(sizeof(BP_RaceSequence_C_KE_YellowDrill) == 0x000004, "Wrong size on BP_RaceSequence_C_KE_YellowDrill");
static_assert(offsetof(BP_RaceSequence_C_KE_YellowDrill, RacerIndex) == 0x000000, "Member 'BP_RaceSequence_C_KE_YellowDrill::RacerIndex' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.OnLoaded_15D3E10346BF46B1108571972800063D
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D) == 0x000008, "Wrong alignment on BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D");
static_assert(sizeof(BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D) == 0x000008, "Wrong size on BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D");
static_assert(offsetof(BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D, Loaded) == 0x000000, "Member 'BP_RaceSequence_C_OnLoaded_15D3E10346BF46B1108571972800063D::Loaded' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.OnLoaded_3C57416242996D342FC890B6D0586604
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604) == 0x000008, "Wrong alignment on BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604");
static_assert(sizeof(BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604) == 0x000008, "Wrong size on BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604");
static_assert(offsetof(BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604, Loaded) == 0x000000, "Member 'BP_RaceSequence_C_OnLoaded_3C57416242996D342FC890B6D0586604::Loaded' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.OnLoaded_9588B33D4EB8ABB3F49B76B997068961
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961) == 0x000008, "Wrong alignment on BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961");
static_assert(sizeof(BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961) == 0x000008, "Wrong size on BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961");
static_assert(offsetof(BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961, Loaded) == 0x000000, "Member 'BP_RaceSequence_C_OnLoaded_9588B33D4EB8ABB3F49B76B997068961::Loaded' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2) == 0x000008, "Wrong alignment on BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2");
static_assert(sizeof(BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2) == 0x000008, "Wrong size on BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2");
static_assert(offsetof(BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2, Loaded) == 0x000000, "Member 'BP_RaceSequence_C_OnLoaded_F85D0A1C4A57623E131AA8A4E3643AF2::Loaded' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.Play BGM
// 0x0010 (0x0010 - 0x0000)
struct BP_RaceSequence_C_Play_BGM final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0008(0x0004)()
};
static_assert(alignof(BP_RaceSequence_C_Play_BGM) == 0x000008, "Wrong alignment on BP_RaceSequence_C_Play_BGM");
static_assert(sizeof(BP_RaceSequence_C_Play_BGM) == 0x000010, "Wrong size on BP_RaceSequence_C_Play_BGM");
static_assert(offsetof(BP_RaceSequence_C_Play_BGM, Sound) == 0x000000, "Member 'BP_RaceSequence_C_Play_BGM::Sound' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Play_BGM, CallFunc_SoundPlay_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_Play_BGM::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceBGMFinished
// 0x000C (0x000C - 0x0000)
struct BP_RaceSequence_C_RaceBGMFinished final
{
public:
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0000(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x0004(0x0004)()
	bool                                          CallFunc_RaceBGMFinished_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceBGMFinished) == 0x000004, "Wrong alignment on BP_RaceSequence_C_RaceBGMFinished");
static_assert(sizeof(BP_RaceSequence_C_RaceBGMFinished) == 0x00000C, "Wrong size on BP_RaceSequence_C_RaceBGMFinished");
static_assert(offsetof(BP_RaceSequence_C_RaceBGMFinished, CallFunc_SoundPlay_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceBGMFinished::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceBGMFinished, CallFunc_SoundPlay_ReturnValue_1) == 0x000004, "Member 'BP_RaceSequence_C_RaceBGMFinished::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceBGMFinished, CallFunc_RaceBGMFinished_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_RaceBGMFinished::CallFunc_RaceBGMFinished_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceBGMonCourseEditor
// 0x0020 (0x0020 - 0x0000)
struct BP_RaceSequence_C_RaceBGMonCourseEditor final
{
public:
	bool                                          FinalLap;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBGMNameFromLevel_BGMName;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayOnCourseEditor_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceBGMonCourseEditor) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RaceBGMonCourseEditor");
static_assert(sizeof(BP_RaceSequence_C_RaceBGMonCourseEditor) == 0x000020, "Wrong size on BP_RaceSequence_C_RaceBGMonCourseEditor");
static_assert(offsetof(BP_RaceSequence_C_RaceBGMonCourseEditor, FinalLap) == 0x000000, "Member 'BP_RaceSequence_C_RaceBGMonCourseEditor::FinalLap' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceBGMonCourseEditor, CallFunc_GetBGMNameFromLevel_BGMName) == 0x000008, "Member 'BP_RaceSequence_C_RaceBGMonCourseEditor::CallFunc_GetBGMNameFromLevel_BGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceBGMonCourseEditor, CallFunc_PlayOnCourseEditor_ReturnValue) == 0x000018, "Member 'BP_RaceSequence_C_RaceBGMonCourseEditor::CallFunc_PlayOnCourseEditor_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceDecideTravelRingGate
// 0x0030 (0x0030 - 0x0000)
struct BP_RaceSequence_C_RaceDecideTravelRingGate final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bRandomCourse;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Set_BGMName_OutBGMName;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeGateDecide_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceDecideTravelRingGate) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RaceDecideTravelRingGate");
static_assert(sizeof(BP_RaceSequence_C_RaceDecideTravelRingGate) == 0x000030, "Wrong size on BP_RaceSequence_C_RaceDecideTravelRingGate");
static_assert(offsetof(BP_RaceSequence_C_RaceDecideTravelRingGate, Value) == 0x000000, "Member 'BP_RaceSequence_C_RaceDecideTravelRingGate::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceDecideTravelRingGate, bRandomCourse) == 0x000010, "Member 'BP_RaceSequence_C_RaceDecideTravelRingGate::bRandomCourse' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceDecideTravelRingGate, CallFunc_MakeLiteralBool_ReturnValue) == 0x000011, "Member 'BP_RaceSequence_C_RaceDecideTravelRingGate::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceDecideTravelRingGate, CallFunc_Set_BGMName_OutBGMName) == 0x000018, "Member 'BP_RaceSequence_C_RaceDecideTravelRingGate::CallFunc_Set_BGMName_OutBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceDecideTravelRingGate, CallFunc_ChangeGateDecide_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_RaceDecideTravelRingGate::CallFunc_ChangeGateDecide_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceFinalLapLast
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceFinalLapLast final
{
public:
	bool                                          CallFunc_ChangeFinalLapLast_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceFinalLapLast) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceFinalLapLast");
static_assert(sizeof(BP_RaceSequence_C_RaceFinalLapLast) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceFinalLapLast");
static_assert(offsetof(BP_RaceSequence_C_RaceFinalLapLast, CallFunc_ChangeFinalLapLast_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceFinalLapLast::CallFunc_ChangeFinalLapLast_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceGoalWithParam
// 0x000C (0x000C - 0x0000)
struct BP_RaceSequence_C_RaceGoalWithParam final
{
public:
	struct FAppRaceEventGoalData                  GoalParam;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CallFunc_PlayGoalWithParam_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceGoalWithParam) == 0x000004, "Wrong alignment on BP_RaceSequence_C_RaceGoalWithParam");
static_assert(sizeof(BP_RaceSequence_C_RaceGoalWithParam) == 0x00000C, "Wrong size on BP_RaceSequence_C_RaceGoalWithParam");
static_assert(offsetof(BP_RaceSequence_C_RaceGoalWithParam, GoalParam) == 0x000000, "Member 'BP_RaceSequence_C_RaceGoalWithParam::GoalParam' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceGoalWithParam, CallFunc_PlayGoalWithParam_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_RaceGoalWithParam::CallFunc_PlayGoalWithParam_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacePassedToFinalLapForce
// 0x0028 (0x0028 - 0x0000)
struct BP_RaceSequence_C_RacePassedToFinalLapForce final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value2;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeFinalLapForce_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacePassedToFinalLapForce) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RacePassedToFinalLapForce");
static_assert(sizeof(BP_RaceSequence_C_RacePassedToFinalLapForce) == 0x000028, "Wrong size on BP_RaceSequence_C_RacePassedToFinalLapForce");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFinalLapForce, Value) == 0x000000, "Member 'BP_RaceSequence_C_RacePassedToFinalLapForce::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFinalLapForce, Value2) == 0x000010, "Member 'BP_RaceSequence_C_RacePassedToFinalLapForce::Value2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFinalLapForce, CallFunc_ChangeFinalLapForce_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_RacePassedToFinalLapForce::CallFunc_ChangeFinalLapForce_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacePassedToFirstLap
// 0x0040 (0x0040 - 0x0000)
struct BP_RaceSequence_C_RacePassedToFirstLap final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value2;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Set_BGMName_OutBGMName;                   // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayFirstLap_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacePassedToFirstLap) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RacePassedToFirstLap");
static_assert(sizeof(BP_RaceSequence_C_RacePassedToFirstLap) == 0x000040, "Wrong size on BP_RaceSequence_C_RacePassedToFirstLap");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFirstLap, Value) == 0x000000, "Member 'BP_RaceSequence_C_RacePassedToFirstLap::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFirstLap, Value2) == 0x000010, "Member 'BP_RaceSequence_C_RacePassedToFirstLap::Value2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFirstLap, CallFunc_MakeLiteralBool_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_RacePassedToFirstLap::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFirstLap, CallFunc_Set_BGMName_OutBGMName) == 0x000028, "Member 'BP_RaceSequence_C_RacePassedToFirstLap::CallFunc_Set_BGMName_OutBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFirstLap, CallFunc_PlayFirstLap_ReturnValue) == 0x000038, "Member 'BP_RaceSequence_C_RacePassedToFirstLap::CallFunc_PlayFirstLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacePassedToFirstLapWhenAnotherTimeTrial
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial final
{
public:
	bool                                          CallFunc_ChangeFirstLapWhenAnotherTimeTrial_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial");
static_assert(sizeof(BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial) == 0x000001, "Wrong size on BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial, CallFunc_ChangeFirstLapWhenAnotherTimeTrial_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RacePassedToFirstLapWhenAnotherTimeTrial::CallFunc_ChangeFirstLapWhenAnotherTimeTrial_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacePassedToPreFirstLapWhenAnotherTimeTrial
// 0x0030 (0x0030 - 0x0000)
struct BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Set_BGMName_OutBGMName;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayPreFirstLapWhenAnotherTimeTrial_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial");
static_assert(sizeof(BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial) == 0x000030, "Wrong size on BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial, Value) == 0x000000, "Member 'BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial, CallFunc_MakeLiteralBool_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial, CallFunc_Set_BGMName_OutBGMName) == 0x000018, "Member 'BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial::CallFunc_Set_BGMName_OutBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial, CallFunc_PlayPreFirstLapWhenAnotherTimeTrial_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_RacePassedToPreFirstLapWhenAnotherTimeTrial::CallFunc_PlayPreFirstLapWhenAnotherTimeTrial_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacePassedToSecondLap
// 0x0002 (0x0002 - 0x0000)
struct BP_RaceSequence_C_RacePassedToSecondLap final
{
public:
	bool                                          bRandomCourse;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeSecondLap_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacePassedToSecondLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RacePassedToSecondLap");
static_assert(sizeof(BP_RaceSequence_C_RacePassedToSecondLap) == 0x000002, "Wrong size on BP_RaceSequence_C_RacePassedToSecondLap");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToSecondLap, bRandomCourse) == 0x000000, "Member 'BP_RaceSequence_C_RacePassedToSecondLap::bRandomCourse' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToSecondLap, CallFunc_ChangeSecondLap_ReturnValue) == 0x000001, "Member 'BP_RaceSequence_C_RacePassedToSecondLap::CallFunc_ChangeSecondLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacePassedToSecondLapForce
// 0x0028 (0x0028 - 0x0000)
struct BP_RaceSequence_C_RacePassedToSecondLapForce final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value2;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeSecondLapForce_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacePassedToSecondLapForce) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RacePassedToSecondLapForce");
static_assert(sizeof(BP_RaceSequence_C_RacePassedToSecondLapForce) == 0x000028, "Wrong size on BP_RaceSequence_C_RacePassedToSecondLapForce");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToSecondLapForce, Value) == 0x000000, "Member 'BP_RaceSequence_C_RacePassedToSecondLapForce::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToSecondLapForce, Value2) == 0x000010, "Member 'BP_RaceSequence_C_RacePassedToSecondLapForce::Value2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacePassedToSecondLapForce, CallFunc_ChangeSecondLapForce_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_RacePassedToSecondLapForce::CallFunc_ChangeSecondLapForce_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceReturnFromDomainSubInFinalLap
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap final
{
public:
	bool                                          CallFunc_ChangeReturnFromDomainSubInFinalLap_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap");
static_assert(sizeof(BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap");
static_assert(offsetof(BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap, CallFunc_ChangeReturnFromDomainSubInFinalLap_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceReturnFromDomainSubInFinalLap::CallFunc_ChangeReturnFromDomainSubInFinalLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceReturnFromDomainSubInFirstLap
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap final
{
public:
	bool                                          CallFunc_ChangeReturnFromDomainSubInFirstLap_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap");
static_assert(sizeof(BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap");
static_assert(offsetof(BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap, CallFunc_ChangeReturnFromDomainSubInFirstLap_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceReturnFromDomainSubInFirstLap::CallFunc_ChangeReturnFromDomainSubInFirstLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceReturnFromDomainSubInSecondLap
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap final
{
public:
	bool                                          CallFunc_ChangeReturnFromDomainSubInSecondLap_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap");
static_assert(sizeof(BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap");
static_assert(offsetof(BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap, CallFunc_ChangeReturnFromDomainSubInSecondLap_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceReturnFromDomainSubInSecondLap::CallFunc_ChangeReturnFromDomainSubInSecondLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RacerInit
// 0x0148 (0x0148 - 0x0000)
struct BP_RaceSequence_C_RacerInit final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalPlayer;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERacerControlType                             ControlType;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Vehicle;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UUnionRacers*                           Racers_0;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                OutputPin;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_5;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_6;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_7;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_8;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_9;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_10;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_11;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_12;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_13;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_14;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateUIData                     CallFunc_GetRacerGadgetPlateData_OutGadgetPlateData; // 0x0040(0x0028)()
	EDriverId                                     CallFunc_GetRacerDriverId_OutId;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetRacerMachineCustomizeData_MachineCustomizeData; // 0x0070(0x0078)()
	int32                                         CallFunc_GetRacerMachineID_OutId;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRacerName_OutRacerName;                // 0x00F0(0x0010)()
	EViewSplitId                                  K2Node_Select_Default;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  K2Node_Select_Default_1;                           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  K2Node_Select_Default_2;                           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_15;                             // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedPlayerCount_ReturnValue;       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_16;                             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUnionVehicleRaceObjectInterface> K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_17;                             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacerStatusObject*                CallFunc_GetRacerStatusObject_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUnionVehicleRaceObjectInterface> K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface_1; // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitMode                                Temp_byte_Variable_18;                             // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  Temp_byte_Variable_19;                             // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  K2Node_Select_Default_3;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewSplitId                                  K2Node_Select_Default_4;                           // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RacerInit) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RacerInit");
static_assert(sizeof(BP_RaceSequence_C_RacerInit) == 0x000148, "Wrong size on BP_RaceSequence_C_RacerInit");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, RacerIndex) == 0x000000, "Member 'BP_RaceSequence_C_RacerInit::RacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, PlayerIndex) == 0x000004, "Member 'BP_RaceSequence_C_RacerInit::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, bLocalPlayer) == 0x000008, "Member 'BP_RaceSequence_C_RacerInit::bLocalPlayer' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, ControlType) == 0x000009, "Member 'BP_RaceSequence_C_RacerInit::ControlType' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Vehicle) == 0x000010, "Member 'BP_RaceSequence_C_RacerInit::Vehicle' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Racers_0) == 0x000018, "Member 'BP_RaceSequence_C_RacerInit::Racers_0' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, OutputPin) == 0x000020, "Member 'BP_RaceSequence_C_RacerInit::OutputPin' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable) == 0x000028, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_1) == 0x000029, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_2) == 0x00002A, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_3) == 0x00002B, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_4) == 0x00002C, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_5) == 0x00002D, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_6) == 0x00002E, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_7) == 0x00002F, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_8) == 0x000030, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_9) == 0x000031, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_10) == 0x000032, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_11) == 0x000033, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_12) == 0x000034, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_13) == 0x000035, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_14) == 0x000036, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_int_Variable) == 0x000038, "Member 'BP_RaceSequence_C_RacerInit::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetRacerGadgetPlateData_OutGadgetPlateData) == 0x000040, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetRacerGadgetPlateData_OutGadgetPlateData' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetRacerDriverId_OutId) == 0x000068, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetRacerDriverId_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetRacerMachineCustomizeData_MachineCustomizeData) == 0x000070, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetRacerMachineCustomizeData_MachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetRacerMachineID_OutId) == 0x0000E8, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetRacerMachineID_OutId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetRacerName_OutRacerName) == 0x0000F0, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetRacerName_OutRacerName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_Select_Default) == 0x000100, "Member 'BP_RaceSequence_C_RacerInit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_Select_Default_1) == 0x000101, "Member 'BP_RaceSequence_C_RacerInit::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_Select_Default_2) == 0x000102, "Member 'BP_RaceSequence_C_RacerInit::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_15) == 0x000103, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetSelectedPlayerCount_ReturnValue) == 0x000104, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetSelectedPlayerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_Subtract_IntInt_ReturnValue) == 0x000108, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_16) == 0x00010C, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface) == 0x000110, "Member 'BP_RaceSequence_C_RacerInit::K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_RaceSequence_C_RacerInit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_17) == 0x000121, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000122, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000123, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_GetRacerStatusObject_ReturnValue) == 0x000128, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_GetRacerStatusObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface_1) == 0x000130, "Member 'BP_RaceSequence_C_RacerInit::K2Node_DynamicCast_AsUnion_Vehicle_Race_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_RaceSequence_C_RacerInit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_18) == 0x000141, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, CallFunc_DoesImplementInterface_ReturnValue) == 0x000142, "Member 'BP_RaceSequence_C_RacerInit::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, Temp_byte_Variable_19) == 0x000143, "Member 'BP_RaceSequence_C_RacerInit::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_Select_Default_3) == 0x000144, "Member 'BP_RaceSequence_C_RacerInit::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RacerInit, K2Node_Select_Default_4) == 0x000145, "Member 'BP_RaceSequence_C_RacerInit::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceSelectTravelRingGate
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceSelectTravelRingGate final
{
public:
	bool                                          CallFunc_ChangeGateSelect_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceSelectTravelRingGate) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceSelectTravelRingGate");
static_assert(sizeof(BP_RaceSequence_C_RaceSelectTravelRingGate) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceSelectTravelRingGate");
static_assert(offsetof(BP_RaceSequence_C_RaceSelectTravelRingGate, CallFunc_ChangeGateSelect_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceSelectTravelRingGate::CallFunc_ChangeGateSelect_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceSetAisacRingGateDistanceFirstLapToSecondLap
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAisacGateDistanceFirstLapToSecondLap_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap) == 0x000004, "Wrong alignment on BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap");
static_assert(sizeof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap) == 0x000008, "Wrong size on BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap");
static_assert(offsetof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap, Value) == 0x000000, "Member 'BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap, CallFunc_SetAisacGateDistanceFirstLapToSecondLap_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_RaceSetAisacRingGateDistanceFirstLapToSecondLap::CallFunc_SetAisacGateDistanceFirstLapToSecondLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceSetAisacRingGateDistanceSecondLapToFinalLap
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAisacGateDistanceSecondLapToFinalLap_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap) == 0x000004, "Wrong alignment on BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap");
static_assert(sizeof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap) == 0x000008, "Wrong size on BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap");
static_assert(offsetof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap, Value) == 0x000000, "Member 'BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap, CallFunc_SetAisacGateDistanceSecondLapToFinalLap_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_RaceSetAisacRingGateDistanceSecondLapToFinalLap::CallFunc_SetAisacGateDistanceSecondLapToFinalLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceSetBGMNameFirstLap
// 0x0028 (0x0028 - 0x0000)
struct BP_RaceSequence_C_RaceSetBGMNameFirstLap final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Set_BGMName_OutBGMName;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceSetBGMNameFirstLap) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RaceSetBGMNameFirstLap");
static_assert(sizeof(BP_RaceSequence_C_RaceSetBGMNameFirstLap) == 0x000028, "Wrong size on BP_RaceSequence_C_RaceSetBGMNameFirstLap");
static_assert(offsetof(BP_RaceSequence_C_RaceSetBGMNameFirstLap, Value) == 0x000000, "Member 'BP_RaceSequence_C_RaceSetBGMNameFirstLap::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceSetBGMNameFirstLap, CallFunc_MakeLiteralBool_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_RaceSetBGMNameFirstLap::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RaceSetBGMNameFirstLap, CallFunc_Set_BGMName_OutBGMName) == 0x000018, "Member 'BP_RaceSequence_C_RaceSetBGMNameFirstLap::CallFunc_Set_BGMName_OutBGMName' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceTransitionToDomainSubInFinalLap
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap final
{
public:
	bool                                          CallFunc_ChangeTransitionToDomainSubInFinalLap_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap");
static_assert(sizeof(BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap");
static_assert(offsetof(BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap, CallFunc_ChangeTransitionToDomainSubInFinalLap_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceTransitionToDomainSubInFinalLap::CallFunc_ChangeTransitionToDomainSubInFinalLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceTransitionToDomainSubInFirstLap
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap final
{
public:
	bool                                          CallFunc_ChangeTransitionToDomainSubInFirstLap_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap");
static_assert(sizeof(BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap");
static_assert(offsetof(BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap, CallFunc_ChangeTransitionToDomainSubInFirstLap_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceTransitionToDomainSubInFirstLap::CallFunc_ChangeTransitionToDomainSubInFirstLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RaceTransitionToDomainSubInSecondLap
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap final
{
public:
	bool                                          CallFunc_ChangeTransitionToDomainSubInSecondLap_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap) == 0x000001, "Wrong alignment on BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap");
static_assert(sizeof(BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap) == 0x000001, "Wrong size on BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap");
static_assert(offsetof(BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap, CallFunc_ChangeTransitionToDomainSubInSecondLap_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RaceTransitionToDomainSubInSecondLap::CallFunc_ChangeTransitionToDomainSubInSecondLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_RaceSequence_C_ReceiveEndPlay");
static_assert(sizeof(BP_RaceSequence_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_RaceSequence_C_ReceiveEndPlay");
static_assert(offsetof(BP_RaceSequence_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_RaceSequence_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RecePassedToFinalLap
// 0x0030 (0x0030 - 0x0000)
struct BP_RaceSequence_C_RecePassedToFinalLap final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Set_BGMName_OutBGMName;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeFinalLap_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RecePassedToFinalLap) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RecePassedToFinalLap");
static_assert(sizeof(BP_RaceSequence_C_RecePassedToFinalLap) == 0x000030, "Wrong size on BP_RaceSequence_C_RecePassedToFinalLap");
static_assert(offsetof(BP_RaceSequence_C_RecePassedToFinalLap, Value) == 0x000000, "Member 'BP_RaceSequence_C_RecePassedToFinalLap::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RecePassedToFinalLap, CallFunc_MakeLiteralBool_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_RecePassedToFinalLap::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RecePassedToFinalLap, CallFunc_Set_BGMName_OutBGMName) == 0x000018, "Member 'BP_RaceSequence_C_RecePassedToFinalLap::CallFunc_Set_BGMName_OutBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RecePassedToFinalLap, CallFunc_ChangeFinalLap_ReturnValue) == 0x000028, "Member 'BP_RaceSequence_C_RecePassedToFinalLap::CallFunc_ChangeFinalLap_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RecePassedToFinalLapWhenTimeTrial
// 0x0018 (0x0018 - 0x0000)
struct BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeFinalLapWhenTimeTrial_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial");
static_assert(sizeof(BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial) == 0x000018, "Wrong size on BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial");
static_assert(offsetof(BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial, Value) == 0x000000, "Member 'BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial::Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial, CallFunc_ChangeFinalLapWhenTimeTrial_ReturnValue) == 0x000010, "Member 'BP_RaceSequence_C_RecePassedToFinalLapWhenTimeTrial::CallFunc_ChangeFinalLapWhenTimeTrial_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.RemoveFooter
// 0x0010 (0x0010 - 0x0000)
struct BP_RaceSequence_C_RemoveFooter final
{
public:
	class UCommonMenuFooterMenu*                  CallFunc_GetFooterMenu_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_RemoveFooter) == 0x000008, "Wrong alignment on BP_RaceSequence_C_RemoveFooter");
static_assert(sizeof(BP_RaceSequence_C_RemoveFooter) == 0x000010, "Wrong size on BP_RaceSequence_C_RemoveFooter");
static_assert(offsetof(BP_RaceSequence_C_RemoveFooter, CallFunc_GetFooterMenu_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_RemoveFooter::CallFunc_GetFooterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_RemoveFooter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_RemoveFooter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.Select Course Setting Impl
// 0x0120 (0x0120 - 0x0000)
struct BP_RaceSequence_C_Select_Course_Setting_Impl final
{
public:
	TSoftObjectPtr<class UObject>                 Texture;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	double                                        OrthoRate;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceType                                     Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRaceDebugParamFinalLap_ReturnValue;    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRaceCourseMapInfo                     CallFunc_Map_Find_Value;                           // 0x0060(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceType                                     CallFunc_GetSelectedRaceType_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMapInfo                           K2Node_Select_Default;                             // 0x00B2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMapInfo                           K2Node_Select_Default_1;                           // 0x00B3(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageCourseMapInfo                           K2Node_Select_Default_2;                           // 0x00B4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStageCourseMapParam                   CallFunc_Map_Find_Value_1;                         // 0x00B8(0x0028)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00E8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_OrthoRate_ImplicitCast;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Angle_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_Select_Course_Setting_Impl) == 0x000008, "Wrong alignment on BP_RaceSequence_C_Select_Course_Setting_Impl");
static_assert(sizeof(BP_RaceSequence_C_Select_Course_Setting_Impl) == 0x000120, "Wrong size on BP_RaceSequence_C_Select_Course_Setting_Impl");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, Texture) == 0x000000, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::Texture' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, OrthoRate) == 0x000028, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::OrthoRate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, Angle) == 0x000030, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::Angle' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, Offset) == 0x000038, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::Offset' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_MakeLiteralByte_ReturnValue) == 0x000050, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000051, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, Temp_int_Variable) == 0x000054, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, Temp_byte_Variable) == 0x000058, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000059, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_GetRaceDebugParamFinalLap_ReturnValue) == 0x00005A, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_GetRaceDebugParamFinalLap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x00005B, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x00005C, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, Temp_bool_Variable) == 0x00005D, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_GetSelectedRaceType_ReturnValue) == 0x0000B1, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_GetSelectedRaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, K2Node_Select_Default) == 0x0000B2, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, K2Node_Select_Default_1) == 0x0000B3, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, K2Node_Select_Default_2) == 0x0000B4, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_Map_Find_Value_1) == 0x0000B8, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_Map_Find_ReturnValue_1) == 0x0000E0, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000E8, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, K2Node_FunctionResult_OrthoRate_ImplicitCast) == 0x000110, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::K2Node_FunctionResult_OrthoRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Select_Course_Setting_Impl, K2Node_FunctionResult_Angle_ImplicitCast) == 0x000118, "Member 'BP_RaceSequence_C_Select_Course_Setting_Impl::K2Node_FunctionResult_Angle_ImplicitCast' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SelectCourseSetting
// 0x00A0 (0x00A0 - 0x0000)
struct BP_RaceSequence_C_SelectCourseSetting final
{
public:
	TSoftObjectPtr<class UObject>                 Texture;                                           // 0x0000(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	float                                         OrthoRate;                                         // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Select_Course_Setting_Impl_Texture;       // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_Select_Course_Setting_Impl_OrthoRate;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Select_Course_Setting_Impl_Angle;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Select_Course_Setting_Impl_Offset;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OrthoRate_ImplicitCast;      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_Angle_ImplicitCast;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SelectCourseSetting) == 0x000008, "Wrong alignment on BP_RaceSequence_C_SelectCourseSetting");
static_assert(sizeof(BP_RaceSequence_C_SelectCourseSetting) == 0x0000A0, "Wrong size on BP_RaceSequence_C_SelectCourseSetting");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, Texture) == 0x000000, "Member 'BP_RaceSequence_C_SelectCourseSetting::Texture' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, OrthoRate) == 0x000028, "Member 'BP_RaceSequence_C_SelectCourseSetting::OrthoRate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, Angle) == 0x00002C, "Member 'BP_RaceSequence_C_SelectCourseSetting::Angle' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, Offset) == 0x000030, "Member 'BP_RaceSequence_C_SelectCourseSetting::Offset' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, CallFunc_Select_Course_Setting_Impl_Texture) == 0x000048, "Member 'BP_RaceSequence_C_SelectCourseSetting::CallFunc_Select_Course_Setting_Impl_Texture' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, CallFunc_Select_Course_Setting_Impl_OrthoRate) == 0x000070, "Member 'BP_RaceSequence_C_SelectCourseSetting::CallFunc_Select_Course_Setting_Impl_OrthoRate' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, CallFunc_Select_Course_Setting_Impl_Angle) == 0x000078, "Member 'BP_RaceSequence_C_SelectCourseSetting::CallFunc_Select_Course_Setting_Impl_Angle' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, CallFunc_Select_Course_Setting_Impl_Offset) == 0x000080, "Member 'BP_RaceSequence_C_SelectCourseSetting::CallFunc_Select_Course_Setting_Impl_Offset' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, K2Node_FunctionResult_OrthoRate_ImplicitCast) == 0x000098, "Member 'BP_RaceSequence_C_SelectCourseSetting::K2Node_FunctionResult_OrthoRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SelectCourseSetting, K2Node_FunctionResult_Angle_ImplicitCast) == 0x00009C, "Member 'BP_RaceSequence_C_SelectCourseSetting::K2Node_FunctionResult_Angle_ImplicitCast' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.Set BGMName
// 0x00B0 (0x00B0 - 0x0000)
struct BP_RaceSequence_C_Set_BGMName final
{
public:
	bool                                          bMainCourse;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InBGMName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 OutBGMName;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         LocalNumber;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalEnable;                                      // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalMainCourse;                                  // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalStageNameKey;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LocalBGMName;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShippingBuild_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugCourseNumberBGM_bEnableMain;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDebugCourseNumberBGM_MainNumber;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugCourseNumberBGM_bEnableAnother;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDebugCourseNumberBGM_AnotherNumber;    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_Set_BGMName) == 0x000008, "Wrong alignment on BP_RaceSequence_C_Set_BGMName");
static_assert(sizeof(BP_RaceSequence_C_Set_BGMName) == 0x0000B0, "Wrong size on BP_RaceSequence_C_Set_BGMName");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, bMainCourse) == 0x000000, "Member 'BP_RaceSequence_C_Set_BGMName::bMainCourse' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, InBGMName) == 0x000008, "Member 'BP_RaceSequence_C_Set_BGMName::InBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, OutBGMName) == 0x000018, "Member 'BP_RaceSequence_C_Set_BGMName::OutBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, LocalNumber) == 0x000028, "Member 'BP_RaceSequence_C_Set_BGMName::LocalNumber' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, bLocalEnable) == 0x00002C, "Member 'BP_RaceSequence_C_Set_BGMName::bLocalEnable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, bLocalMainCourse) == 0x00002D, "Member 'BP_RaceSequence_C_Set_BGMName::bLocalMainCourse' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, LocalStageNameKey) == 0x000030, "Member 'BP_RaceSequence_C_Set_BGMName::LocalStageNameKey' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, LocalBGMName) == 0x000040, "Member 'BP_RaceSequence_C_Set_BGMName::LocalBGMName' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_IsShippingBuild_ReturnValue) == 0x000060, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_IsShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_GetDebugCourseNumberBGM_bEnableMain) == 0x000088, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_GetDebugCourseNumberBGM_bEnableMain' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_GetDebugCourseNumberBGM_MainNumber) == 0x00008C, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_GetDebugCourseNumberBGM_MainNumber' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_GetDebugCourseNumberBGM_bEnableAnother) == 0x000090, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_GetDebugCourseNumberBGM_bEnableAnother' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_GetDebugCourseNumberBGM_AnotherNumber) == 0x000094, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_GetDebugCourseNumberBGM_AnotherNumber' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_Map_Find_Value) == 0x000098, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_Set_BGMName, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'BP_RaceSequence_C_Set_BGMName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetCourseMapSetting
// 0x0058 (0x0058 - 0x0000)
struct BP_RaceSequence_C_SetCourseMapSetting final
{
public:
	int32                                         DomainIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRaceCourseMapInfo                     MapInfo;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_RaceSequence_C_SetCourseMapSetting) == 0x000008, "Wrong alignment on BP_RaceSequence_C_SetCourseMapSetting");
static_assert(sizeof(BP_RaceSequence_C_SetCourseMapSetting) == 0x000058, "Wrong size on BP_RaceSequence_C_SetCourseMapSetting");
static_assert(offsetof(BP_RaceSequence_C_SetCourseMapSetting, DomainIndex) == 0x000000, "Member 'BP_RaceSequence_C_SetCourseMapSetting::DomainIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetCourseMapSetting, MapInfo) == 0x000008, "Member 'BP_RaceSequence_C_SetCourseMapSetting::MapInfo' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetCourseSubMapSetting
// 0x0058 (0x0058 - 0x0000)
struct BP_RaceSequence_C_SetCourseSubMapSetting final
{
public:
	int32                                         DomainIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRaceCourseSubMapInfo                  MapInfo;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_RaceSequence_C_SetCourseSubMapSetting) == 0x000008, "Wrong alignment on BP_RaceSequence_C_SetCourseSubMapSetting");
static_assert(sizeof(BP_RaceSequence_C_SetCourseSubMapSetting) == 0x000058, "Wrong size on BP_RaceSequence_C_SetCourseSubMapSetting");
static_assert(offsetof(BP_RaceSequence_C_SetCourseSubMapSetting, DomainIndex) == 0x000000, "Member 'BP_RaceSequence_C_SetCourseSubMapSetting::DomainIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetCourseSubMapSetting, MapInfo) == 0x000008, "Member 'BP_RaceSequence_C_SetCourseSubMapSetting::MapInfo' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetEnableRaceSilenceSound
// 0x0010 (0x0010 - 0x0000)
struct BP_RaceSequence_C_SetEnableRaceSilenceSound final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_Stop_ReturnValue;                         // 0x0004(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0008(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SetEnableRaceSilenceSound) == 0x000004, "Wrong alignment on BP_RaceSequence_C_SetEnableRaceSilenceSound");
static_assert(sizeof(BP_RaceSequence_C_SetEnableRaceSilenceSound) == 0x000010, "Wrong size on BP_RaceSequence_C_SetEnableRaceSilenceSound");
static_assert(offsetof(BP_RaceSequence_C_SetEnableRaceSilenceSound, Enable) == 0x000000, "Member 'BP_RaceSequence_C_SetEnableRaceSilenceSound::Enable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableRaceSilenceSound, CallFunc_Stop_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_SetEnableRaceSilenceSound::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableRaceSilenceSound, CallFunc_SoundPlay_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_SetEnableRaceSilenceSound::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableRaceSilenceSound, CallFunc_IsPlaying_ReturnValue) == 0x00000C, "Member 'BP_RaceSequence_C_SetEnableRaceSilenceSound::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableRaceSilenceSound, CallFunc_IsPlaying_ReturnValue_1) == 0x00000D, "Member 'BP_RaceSequence_C_SetEnableRaceSilenceSound::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetEnableResultSilenceSound
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_SetEnableResultSilenceSound final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SetEnableResultSilenceSound) == 0x000001, "Wrong alignment on BP_RaceSequence_C_SetEnableResultSilenceSound");
static_assert(sizeof(BP_RaceSequence_C_SetEnableResultSilenceSound) == 0x000001, "Wrong size on BP_RaceSequence_C_SetEnableResultSilenceSound");
static_assert(offsetof(BP_RaceSequence_C_SetEnableResultSilenceSound, Enable) == 0x000000, "Member 'BP_RaceSequence_C_SetEnableResultSilenceSound::Enable' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetEnableSilenceSound
// 0x0010 (0x0010 - 0x0000)
struct BP_RaceSequence_C_SetEnableSilenceSound final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_Stop_ReturnValue;                         // 0x0004(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x000C(0x0004)()
};
static_assert(alignof(BP_RaceSequence_C_SetEnableSilenceSound) == 0x000004, "Wrong alignment on BP_RaceSequence_C_SetEnableSilenceSound");
static_assert(sizeof(BP_RaceSequence_C_SetEnableSilenceSound) == 0x000010, "Wrong size on BP_RaceSequence_C_SetEnableSilenceSound");
static_assert(offsetof(BP_RaceSequence_C_SetEnableSilenceSound, bEnable) == 0x000000, "Member 'BP_RaceSequence_C_SetEnableSilenceSound::bEnable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableSilenceSound, CallFunc_Stop_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_SetEnableSilenceSound::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableSilenceSound, CallFunc_IsPlaying_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_SetEnableSilenceSound::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableSilenceSound, CallFunc_IsPlaying_ReturnValue_1) == 0x000009, "Member 'BP_RaceSequence_C_SetEnableSilenceSound::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetEnableSilenceSound, CallFunc_SoundPlay_ReturnValue) == 0x00000C, "Member 'BP_RaceSequence_C_SetEnableSilenceSound::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetLoadingPhase
// 0x0020 (0x0020 - 0x0000)
struct BP_RaceSequence_C_SetLoadingPhase final
{
public:
	EUnionLoadingGaugeState                       LoadingGaurgeState;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_C*                  CallFunc_GetLoadingGaurgeWB_WBP_System_Loading;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SetLoadingPhase) == 0x000008, "Wrong alignment on BP_RaceSequence_C_SetLoadingPhase");
static_assert(sizeof(BP_RaceSequence_C_SetLoadingPhase) == 0x000020, "Wrong size on BP_RaceSequence_C_SetLoadingPhase");
static_assert(offsetof(BP_RaceSequence_C_SetLoadingPhase, LoadingGaurgeState) == 0x000000, "Member 'BP_RaceSequence_C_SetLoadingPhase::LoadingGaurgeState' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetLoadingPhase, K2Node_DynamicCast_AsWBP_System_Loading_BG) == 0x000008, "Member 'BP_RaceSequence_C_SetLoadingPhase::K2Node_DynamicCast_AsWBP_System_Loading_BG' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetLoadingPhase, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_RaceSequence_C_SetLoadingPhase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetLoadingPhase, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_RaceSequence_C_SetLoadingPhase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetLoadingPhase, CallFunc_GetLoadingGaurgeWB_WBP_System_Loading) == 0x000018, "Member 'BP_RaceSequence_C_SetLoadingPhase::CallFunc_GetLoadingGaurgeWB_WBP_System_Loading' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetRaceBGMVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_RaceSequence_C_SetRaceBGMVolume final
{
public:
	double                                        Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetVolume_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVolume_Value_ImplicitCast;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SetRaceBGMVolume) == 0x000008, "Wrong alignment on BP_RaceSequence_C_SetRaceBGMVolume");
static_assert(sizeof(BP_RaceSequence_C_SetRaceBGMVolume) == 0x000010, "Wrong size on BP_RaceSequence_C_SetRaceBGMVolume");
static_assert(offsetof(BP_RaceSequence_C_SetRaceBGMVolume, Volume) == 0x000000, "Member 'BP_RaceSequence_C_SetRaceBGMVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetRaceBGMVolume, CallFunc_SetVolume_ReturnValue) == 0x000008, "Member 'BP_RaceSequence_C_SetRaceBGMVolume::CallFunc_SetVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SetRaceBGMVolume, CallFunc_SetVolume_Value_ImplicitCast) == 0x00000C, "Member 'BP_RaceSequence_C_SetRaceBGMVolume::CallFunc_SetVolume_Value_ImplicitCast' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SetRaceEndMenuContentId
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_SetRaceEndMenuContentId final
{
public:
	ECommonRaceMenuContentId                      CommonRaceMenuContentId;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SetRaceEndMenuContentId) == 0x000001, "Wrong alignment on BP_RaceSequence_C_SetRaceEndMenuContentId");
static_assert(sizeof(BP_RaceSequence_C_SetRaceEndMenuContentId) == 0x000001, "Wrong size on BP_RaceSequence_C_SetRaceEndMenuContentId");
static_assert(offsetof(BP_RaceSequence_C_SetRaceEndMenuContentId, CommonRaceMenuContentId) == 0x000000, "Member 'BP_RaceSequence_C_SetRaceEndMenuContentId::CommonRaceMenuContentId' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.ShowLoadingWidget
// 0x0078 (0x0078 - 0x0000)
struct BP_RaceSequence_C_ShowLoadingWidget final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG_1;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionRacers*                           CallFunc_GetRacersRef_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_System_Loading_BG_C*               K2Node_DynamicCast_AsWBP_System_Loading_BG_2;      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EStageId>                              CallFunc_GetSelectedStageIds_ReturnValue;          // 0x0060(0x0010)(ReferenceParm)
	EStageId                                      CallFunc_Array_Get_Item;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStageId                                      K2Node_Select_Default;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_ShowLoadingWidget) == 0x000008, "Wrong alignment on BP_RaceSequence_C_ShowLoadingWidget");
static_assert(sizeof(BP_RaceSequence_C_ShowLoadingWidget) == 0x000078, "Wrong size on BP_RaceSequence_C_ShowLoadingWidget");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_DynamicCast_AsWBP_System_Loading_BG) == 0x000008, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_DynamicCast_AsWBP_System_Loading_BG' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000020, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_DynamicCast_AsWBP_System_Loading_BG_1) == 0x000030, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_DynamicCast_AsWBP_System_Loading_BG_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, Temp_bool_Variable) == 0x000039, "Member 'BP_RaceSequence_C_ShowLoadingWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_GetRacersRef_ReturnValue) == 0x000040, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_GetRacersRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_IsValid_ReturnValue_3) == 0x000049, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_DynamicCast_AsWBP_System_Loading_BG_2) == 0x000050, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_DynamicCast_AsWBP_System_Loading_BG_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_GetSelectedStageIds_ReturnValue) == 0x000060, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_GetSelectedStageIds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000071, "Member 'BP_RaceSequence_C_ShowLoadingWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_ShowLoadingWidget, K2Node_Select_Default) == 0x000072, "Member 'BP_RaceSequence_C_ShowLoadingWidget::K2Node_Select_Default' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.SpawnMachine
// 0x00B0 (0x00B0 - 0x0000)
struct BP_RaceSequence_C_SpawnMachine final
{
public:
	int32                                         InRacerIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPlayerIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCar;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AsPawn;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetRacerMachineType_OutMachineType;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleInRacePawn_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_SpawnMachine) == 0x000010, "Wrong alignment on BP_RaceSequence_C_SpawnMachine");
static_assert(sizeof(BP_RaceSequence_C_SpawnMachine) == 0x0000B0, "Wrong size on BP_RaceSequence_C_SpawnMachine");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, InRacerIndex) == 0x000000, "Member 'BP_RaceSequence_C_SpawnMachine::InRacerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, InPlayerIndex) == 0x000004, "Member 'BP_RaceSequence_C_SpawnMachine::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, bCar) == 0x000008, "Member 'BP_RaceSequence_C_SpawnMachine::bCar' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, AsPawn) == 0x000010, "Member 'BP_RaceSequence_C_SpawnMachine::AsPawn' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_RaceSequence_C_SpawnMachine::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'BP_RaceSequence_C_SpawnMachine::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, CallFunc_GetRacerMachineType_OutMachineType) == 0x000088, "Member 'BP_RaceSequence_C_SpawnMachine::CallFunc_GetRacerMachineType_OutMachineType' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_RaceSequence_C_SpawnMachine::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_RaceSequence_C_SpawnMachine::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_SpawnMachine, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A0, "Member 'BP_RaceSequence_C_SpawnMachine::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.StatusObjectEventInt
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_StatusObjectEventInt final
{
public:
	int32                                         EventId;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_StatusObjectEventInt) == 0x000004, "Wrong alignment on BP_RaceSequence_C_StatusObjectEventInt");
static_assert(sizeof(BP_RaceSequence_C_StatusObjectEventInt) == 0x000008, "Wrong size on BP_RaceSequence_C_StatusObjectEventInt");
static_assert(offsetof(BP_RaceSequence_C_StatusObjectEventInt, EventId) == 0x000000, "Member 'BP_RaceSequence_C_StatusObjectEventInt::EventId' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_StatusObjectEventInt, Value) == 0x000004, "Member 'BP_RaceSequence_C_StatusObjectEventInt::Value' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.StopBGM
// 0x0008 (0x0008 - 0x0000)
struct BP_RaceSequence_C_StopBGM final
{
public:
	struct FSoundHandle                           CallFunc_Stop_ReturnValue;                         // 0x0000(0x0004)()
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_StopBGM) == 0x000004, "Wrong alignment on BP_RaceSequence_C_StopBGM");
static_assert(sizeof(BP_RaceSequence_C_StopBGM) == 0x000008, "Wrong size on BP_RaceSequence_C_StopBGM");
static_assert(offsetof(BP_RaceSequence_C_StopBGM, CallFunc_Stop_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_StopBGM::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceSequence_C_StopBGM, CallFunc_IsPlaying_ReturnValue) == 0x000004, "Member 'BP_RaceSequence_C_StopBGM::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_RaceSequence.BP_RaceSequence_C.StopRaceBGM
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceSequence_C_StopRaceBGM final
{
public:
	bool                                          CallFunc_Stop_ReturnValue;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceSequence_C_StopRaceBGM) == 0x000001, "Wrong alignment on BP_RaceSequence_C_StopRaceBGM");
static_assert(sizeof(BP_RaceSequence_C_StopRaceBGM) == 0x000001, "Wrong size on BP_RaceSequence_C_StopRaceBGM");
static_assert(offsetof(BP_RaceSequence_C_StopRaceBGM, CallFunc_Stop_ReturnValue) == 0x000000, "Member 'BP_RaceSequence_C_StopRaceBGM::CallFunc_Stop_ReturnValue' has a wrong offset!");

}

