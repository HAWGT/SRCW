#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeTrialSequence

#include "Basic.hpp"

#include "BP_TimeTrialSequence_classes.hpp"
#include "BP_TimeTrialSequence_parameters.hpp"


namespace SDK
{

// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.BindEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::BindEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "BindEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.BndEvt__BP_TimeTrialSequence_BPC_CharaMachineState_K2Node_ComponentBoundEvent_0_OnChangeStateDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::BndEvt__BP_TimeTrialSequence_BPC_CharaMachineState_K2Node_ComponentBoundEvent_0_OnChangeStateDelegate__DelegateSignature(EMenuSequenceSubState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "BndEvt__BP_TimeTrialSequence_BPC_CharaMachineState_K2Node_ComponentBoundEvent_0_OnChangeStateDelegate__DelegateSignature");

	Params::BP_TimeTrialSequence_C_BndEvt__BP_TimeTrialSequence_BPC_CharaMachineState_K2Node_ComponentBoundEvent_0_OnChangeStateDelegate__DelegateSignature Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.BndEvt__BP_TimeTrialSequence_BPC_TimeTrialClassSelectSubState_K2Node_ComponentBoundEvent_1_OnChangeStateDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::BndEvt__BP_TimeTrialSequence_BPC_TimeTrialClassSelectSubState_K2Node_ComponentBoundEvent_1_OnChangeStateDelegate__DelegateSignature(EMenuSequenceSubState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "BndEvt__BP_TimeTrialSequence_BPC_TimeTrialClassSelectSubState_K2Node_ComponentBoundEvent_1_OnChangeStateDelegate__DelegateSignature");

	Params::BP_TimeTrialSequence_C_BndEvt__BP_TimeTrialSequence_BPC_TimeTrialClassSelectSubState_K2Node_ComponentBoundEvent_1_OnChangeStateDelegate__DelegateSignature Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.BndEvt__BP_TimeTrialSequence_BPC_TimeTrialSelectCourse_K2Node_ComponentBoundEvent_0_OnDecideTimeTrialSelectCource__DelegateSignature
// (BlueprintEvent)

void ABP_TimeTrialSequence_C::BndEvt__BP_TimeTrialSequence_BPC_TimeTrialSelectCourse_K2Node_ComponentBoundEvent_0_OnDecideTimeTrialSelectCource__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "BndEvt__BP_TimeTrialSequence_BPC_TimeTrialSelectCourse_K2Node_ComponentBoundEvent_0_OnDecideTimeTrialSelectCource__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.BndEvt__BP_TimeTrialSequence_BPC_TimeTrialSelectCourse_K2Node_ComponentBoundEvent_1_OnDecideTimeTrialSelectCource__DelegateSignature
// (BlueprintEvent)

void ABP_TimeTrialSequence_C::BndEvt__BP_TimeTrialSequence_BPC_TimeTrialSelectCourse_K2Node_ComponentBoundEvent_1_OnDecideTimeTrialSelectCource__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "BndEvt__BP_TimeTrialSequence_BPC_TimeTrialSelectCourse_K2Node_ComponentBoundEvent_1_OnDecideTimeTrialSelectCource__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.ConvertTimeTrialRaceData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRankingDataTimeTrial&     InRankingData                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_TimeTrialSequence_C::ConvertTimeTrialRaceData(const struct FRankingDataTimeTrial& InRankingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "ConvertTimeTrialRaceData");

	Params::BP_TimeTrialSequence_C_ConvertTimeTrialRaceData Parms{};

	Parms.InRankingData = std::move(InRankingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.DecideReady
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::DecideReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "DecideReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.ExecuteUbergraph_BP_TimeTrialSequence
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::ExecuteUbergraph_BP_TimeTrialSequence(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "ExecuteUbergraph_BP_TimeTrialSequence");

	Params::BP_TimeTrialSequence_C_ExecuteUbergraph_BP_TimeTrialSequence Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.FadeToRaceLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::FadeToRaceLevel(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "FadeToRaceLevel");

	Params::BP_TimeTrialSequence_C_FadeToRaceLevel Parms{};

	Parms.FadeDirection = FadeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.GadgetCustomFadeFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::GadgetCustomFadeFinished(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "GadgetCustomFadeFinished");

	Params::BP_TimeTrialSequence_C_GadgetCustomFadeFinished Parms{};

	Parms.FadeDirection = FadeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.GetLastStateIsClassSelect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   LClassSelect                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::GetLastStateIsClassSelect(bool* LClassSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "GetLastStateIsClassSelect");

	Params::BP_TimeTrialSequence_C_GetLastStateIsClassSelect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LClassSelect != nullptr)
		*LClassSelect = Parms.LClassSelect;
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.GetOwnerMenuSequence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* ABP_TimeTrialSequence_C::GetOwnerMenuSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "GetOwnerMenuSequence");

	Params::BP_TimeTrialSequence_C_GetOwnerMenuSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.GetSelectedStageId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EStageId*                               Selected_Stage_Id_Single                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::GetSelectedStageId(EStageId* Selected_Stage_Id_Single)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "GetSelectedStageId");

	Params::BP_TimeTrialSequence_C_GetSelectedStageId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Selected_Stage_Id_Single != nullptr)
		*Selected_Stage_Id_Single = Parms.Selected_Stage_Id_Single;
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.InitState
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::InitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "InitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnBackFromGadgetCustomize
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::OnBackFromGadgetCustomize(EMenuSequenceSubState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnBackFromGadgetCustomize");

	Params::BP_TimeTrialSequence_C_OnBackFromGadgetCustomize Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnCancelAndPrevSequence_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::OnCancelAndPrevSequence_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnCancelAndPrevSequence_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnDecideGhostSelect
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::OnDecideGhostSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnDecideGhostSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnDecideGhostUpload
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::OnDecideGhostUpload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnDecideGhostUpload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnFinalize
// (Event, Protected, BlueprintEvent)

void ABP_TimeTrialSequence_C::OnFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnInitialize
// (Event, Protected, BlueprintEvent)

void ABP_TimeTrialSequence_C::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnInitStateExit
// (Event, Protected, BlueprintEvent)

void ABP_TimeTrialSequence_C::OnInitStateExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnInitStateExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.OnUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::OnUpdate(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "OnUpdate");

	Params::BP_TimeTrialSequence_C_OnUpdate Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.PreloadTimeTrialStageAssets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStageId                                InStageId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::PreloadTimeTrialStageAssets(EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "PreloadTimeTrialStageAssets");

	Params::BP_TimeTrialSequence_C_PreloadTimeTrialStageAssets Parms{};

	Parms.InStageId = InStageId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.SetFooter
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::SetFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "SetFooter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.SetNextSubMenuSequenceState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PrevSequence                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::SetNextSubMenuSequenceState(EMenuSequenceSubState InState, class UObject* PrevSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "SetNextSubMenuSequenceState");

	Params::BP_TimeTrialSequence_C_SetNextSubMenuSequenceState Parms{};

	Parms.InState = InState;
	Parms.PrevSequence = PrevSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.SetSelectedStageId
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStageId                                InSelectStageId                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeTrialSequence_C::SetSelectedStageId(EStageId InSelectStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "SetSelectedStageId");

	Params::BP_TimeTrialSequence_C_SetSelectedStageId Parms{};

	Parms.InSelectStageId = InSelectStageId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.Setting Ghost Gadget Presset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FReplaySaveInfo&           InGhostData                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_TimeTrialSequence_C::Setting_Ghost_Gadget_Presset(const struct FReplaySaveInfo& InGhostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "Setting Ghost Gadget Presset");

	Params::BP_TimeTrialSequence_C_Setting_Ghost_Gadget_Presset Parms{};

	Parms.InGhostData = std::move(InGhostData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.Setup Time Trial Race Setting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::Setup_Time_Trial_Race_Setting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "Setup Time Trial Race Setting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeTrialSequence.BP_TimeTrialSequence_C.UnloadTimeTrailStageAssets
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TimeTrialSequence_C::UnloadTimeTrailStageAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeTrialSequence_C", "UnloadTimeTrailStageAssets");

	UObject::ProcessEvent(Func, nullptr);
}

}

