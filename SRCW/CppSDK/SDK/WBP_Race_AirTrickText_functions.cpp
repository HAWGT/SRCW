#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_AirTrickText

#include "Basic.hpp"

#include "WBP_Race_AirTrickText_classes.hpp"
#include "WBP_Race_AirTrickText_parameters.hpp"


namespace SDK
{

// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.ExecuteUbergraph_WBP_Race_AirTrickText
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_AirTrickText_C::ExecuteUbergraph_WBP_Race_AirTrickText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "ExecuteUbergraph_WBP_Race_AirTrickText");

	Params::WBP_Race_AirTrickText_C_ExecuteUbergraph_WBP_Race_AirTrickText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.Finished_DF2DC77240FE7757A036BAB3C4AECEF7
// (BlueprintCallable, BlueprintEvent)

void UWBP_Race_AirTrickText_C::Finished_DF2DC77240FE7757A036BAB3C4AECEF7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "Finished_DF2DC77240FE7757A036BAB3C4AECEF7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.OneTextIn
// (BlueprintCallable, BlueprintEvent)

void UWBP_Race_AirTrickText_C::OneTextIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "OneTextIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_AirTrickText_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "PreConstruct");

	Params::WBP_Race_AirTrickText_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.SetAirTrickBonusInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SuccessCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UWBP_Race_AirTrickText_C::SetAirTrickBonusInfo(int32 SuccessCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "SetAirTrickBonusInfo");

	Params::WBP_Race_AirTrickText_C_SetAirTrickBonusInfo Parms{};

	Parms.SuccessCount = SuccessCount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.SetAirTrickInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SuccessCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_AirTrickText_C::SetAirTrickInfo(int32 SuccessCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "SetAirTrickInfo");

	Params::WBP_Race_AirTrickText_C_SetAirTrickInfo Parms{};

	Parms.SuccessCount = SuccessCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.SetAirTrickInfoAndFireAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SuccessCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SuccessBonusCount                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGhostView                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_AirTrickText_C::SetAirTrickInfoAndFireAnimation(int32 SuccessCount, int32 SuccessBonusCount, bool IsGhostView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "SetAirTrickInfoAndFireAnimation");

	Params::WBP_Race_AirTrickText_C_SetAirTrickInfoAndFireAnimation Parms{};

	Parms.SuccessCount = SuccessCount;
	Parms.SuccessBonusCount = SuccessBonusCount;
	Parms.IsGhostView = IsGhostView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Race_AirTrickText.WBP_Race_AirTrickText_C.SetAirTrickText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URichTextBlock*                   Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Race_AirTrickText_C::SetAirTrickText(int32 Point, class URichTextBlock* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Race_AirTrickText_C", "SetAirTrickText");

	Params::WBP_Race_AirTrickText_C_SetAirTrickText Parms{};

	Parms.Point = Point;
	Parms.Text = Text;

	UObject::ProcessEvent(Func, &Parms);
}

}

