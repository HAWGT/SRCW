#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MachineCustom_Sub_ColorPicker_Texture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_ColorDetailWindowSurfaceItemData_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MachineCustom_Sub_ColorPicker_Texture.WBP_MachineCustom_Sub_ColorPicker_Texture_C
// 0x00E0 (0x0560 - 0x0480)
class UWBP_MachineCustom_Sub_ColorPicker_Texture_C final : public UUnionUIButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Btn_Text_Right_to_Left;                            // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Btn_Text_Left_to_Right;                            // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Btn_Select_Loop;                                   // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Btn_Active_Loop;                                   // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Btn_Active;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Btn_Arrow_Left;                                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Btn_Arrow_Right;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Btn_Cursor;                                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Btn_Cursor_Base;                                   // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Btn_Select;                                        // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BtnBase;                                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Cursor_Texture;                                // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlagWave;                                      // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlagWave_Base;                                 // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_ColorPicker_TextureText_C* WBP_MachineCustom_Sub_ColorPicker_TextureText_01; // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_ColorPicker_TextureText_C* WBP_MachineCustom_Sub_ColorPicker_TextureText_02; // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_ColorPicker_TextureText_C* WBP_MachineCustom_Sub_ColorPicker_TextureText_03; // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_ColorPicker_TextureText_C* WBP_MachineCustom_Sub_ColorPicker_TextureText_04; // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_ColorPicker_TextureText_C* WBP_MachineCustom_Sub_ColorPicker_TextureText_05; // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Btn;                                // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsScrolling;                                      // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FocusedItemDataIndex;                              // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_MachineCustom_Sub_ColorPicker_TextureText_C*> Items;                           // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FST_ColorDetailWindowSurfaceItemData> ItemDataList;                                // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(const struct FST_ColorDetailWindowSurfaceItemData& InItemData)> OnItemFocused; // 0x0550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Construct();
	void ExecuteUbergraph_WBP_MachineCustom_Sub_ColorPicker_Texture(int32 EntryPoint);
	void Finished_967225764D0CA0BD26F02393D29089DE();
	void Finished_B7413EED4165E1F36A7AB7A330DEE974();
	void LoopIndex(int32 InIndex, int32* OutIndex);
	void OnBackKeyPressed();
	void OnDownKeyPressed();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnFocusReceived_Impl(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnLeftKeyPressed();
	void OnLeftShoulderPressed();
	void OnRightKeyPressed();
	void OnRightShoulderPressed();
	void OnUpKeyPressed();
	void SetCursorVisible(bool bInIsVisible);
	void Setup(TArray<struct FST_ColorDetailWindowSurfaceItemData>& InItemDataList);
	void UpdateItems();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MachineCustom_Sub_ColorPicker_Texture_C">();
	}
	static class UWBP_MachineCustom_Sub_ColorPicker_Texture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MachineCustom_Sub_ColorPicker_Texture_C>();
	}
};
static_assert(alignof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C) == 0x000008, "Wrong alignment on UWBP_MachineCustom_Sub_ColorPicker_Texture_C");
static_assert(sizeof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C) == 0x000560, "Wrong size on UWBP_MachineCustom_Sub_ColorPicker_Texture_C");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, UberGraphFrame) == 0x000480, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Text_Right_to_Left) == 0x000488, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Text_Right_to_Left' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Text_Left_to_Right) == 0x000490, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Text_Left_to_Right' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Select_Loop) == 0x000498, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Select_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Active_Loop) == 0x0004A0, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Active_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Active) == 0x0004A8, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Active' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Arrow_Left) == 0x0004B0, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Arrow_Left' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Arrow_Right) == 0x0004B8, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Arrow_Right' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Cursor) == 0x0004C0, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Cursor' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Cursor_Base) == 0x0004C8, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Cursor_Base' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Btn_Select) == 0x0004D0, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, BtnBase) == 0x0004D8, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::BtnBase' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, DSP_Cursor_Texture) == 0x0004E0, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::DSP_Cursor_Texture' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, RaceFlagWave) == 0x0004E8, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::RaceFlagWave' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, RaceFlagWave_Base) == 0x0004F0, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::RaceFlagWave_Base' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, WBP_MachineCustom_Sub_ColorPicker_TextureText_01) == 0x0004F8, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::WBP_MachineCustom_Sub_ColorPicker_TextureText_01' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, WBP_MachineCustom_Sub_ColorPicker_TextureText_02) == 0x000500, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::WBP_MachineCustom_Sub_ColorPicker_TextureText_02' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, WBP_MachineCustom_Sub_ColorPicker_TextureText_03) == 0x000508, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::WBP_MachineCustom_Sub_ColorPicker_TextureText_03' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, WBP_MachineCustom_Sub_ColorPicker_TextureText_04) == 0x000510, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::WBP_MachineCustom_Sub_ColorPicker_TextureText_04' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, WBP_MachineCustom_Sub_ColorPicker_TextureText_05) == 0x000518, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::WBP_MachineCustom_Sub_ColorPicker_TextureText_05' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, WidgetSwitcher_Btn) == 0x000520, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::WidgetSwitcher_Btn' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, bIsScrolling) == 0x000528, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::bIsScrolling' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, FocusedItemDataIndex) == 0x00052C, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::FocusedItemDataIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, Items) == 0x000530, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::Items' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, ItemDataList) == 0x000540, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::ItemDataList' has a wrong offset!");
static_assert(offsetof(UWBP_MachineCustom_Sub_ColorPicker_Texture_C, OnItemFocused) == 0x000550, "Member 'UWBP_MachineCustom_Sub_ColorPicker_Texture_C::OnItemFocused' has a wrong offset!");

}

