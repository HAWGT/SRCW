#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_CourseMap

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_CourseMap.WBP_Race_HUD_CourseMap_C
// 0x0068 (0x0420 - 0x03B8)
class UWBP_Race_HUD_CourseMap_C final : public UUnionRaceMinimap
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CourseMap_Out;                                     // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CourseMap_Loop;                                    // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CourseMap_In;                                      // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DMY_CourseMapTexture;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_CourseMapTextureRT;                            // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        CourseRate;                                        // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              PanelDebugTexture;                                 // 0x03F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void CalcCourseRate(double InOrthoValue);
	void Construct();
	void DebugIconChange();
	void ExecuteUbergraph_WBP_Race_HUD_CourseMap(int32 EntryPoint);
	struct FLinearColor GetGroupColor(int32 GouupIndex);
	void OnLoaded_2734C97647CC07CC458348BACAE44190(class UObject* Loaded);
	void OnLoaded_3373138B4097631D9D5970993F01FC16(class UObject* Loaded);
	void PreConstruct(bool IsDesignTime);
	void SetCourseSetting(const TSoftObjectPtr<class UObject>& CourseTexture, float InOrthoRate, float InAngle, const struct FVector& InOffset);
	void SetCourseTextureAndOrthoRate(TSoftObjectPtr<class UObject> InLoadedPrimaryTextureAsset, double InOrthoRatePerCourse);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_CourseMap_C">();
	}
	static class UWBP_Race_HUD_CourseMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_CourseMap_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_CourseMap_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_CourseMap_C");
static_assert(sizeof(UWBP_Race_HUD_CourseMap_C) == 0x000420, "Wrong size on UWBP_Race_HUD_CourseMap_C");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, UberGraphFrame) == 0x0003B8, "Member 'UWBP_Race_HUD_CourseMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, CourseMap_Out) == 0x0003C0, "Member 'UWBP_Race_HUD_CourseMap_C::CourseMap_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, CourseMap_Loop) == 0x0003C8, "Member 'UWBP_Race_HUD_CourseMap_C::CourseMap_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, CourseMap_In) == 0x0003D0, "Member 'UWBP_Race_HUD_CourseMap_C::CourseMap_In' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, DMY_CourseMapTexture) == 0x0003D8, "Member 'UWBP_Race_HUD_CourseMap_C::DMY_CourseMapTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, DMY_CourseMapTextureRT) == 0x0003E0, "Member 'UWBP_Race_HUD_CourseMap_C::DMY_CourseMapTextureRT' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, Overlay_0) == 0x0003E8, "Member 'UWBP_Race_HUD_CourseMap_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, CourseRate) == 0x0003F0, "Member 'UWBP_Race_HUD_CourseMap_C::CourseRate' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_CourseMap_C, PanelDebugTexture) == 0x0003F8, "Member 'UWBP_Race_HUD_CourseMap_C::PanelDebugTexture' has a wrong offset!");

}

