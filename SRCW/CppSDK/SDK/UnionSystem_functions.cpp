#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnionSystem

#include "Basic.hpp"

#include "UnionSystem_classes.hpp"
#include "UnionSystem_parameters.hpp"


namespace SDK
{

// Function UnionSystem.UnionStaticMeshComponent.ChangeMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bChange                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InMaterial                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionStaticMeshComponent::ChangeMaterial(int32 MaterialID, bool bChange, class UMaterialInterface* InMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStaticMeshComponent", "ChangeMaterial");

	Params::UnionStaticMeshComponent_ChangeMaterial Parms{};

	Parms.MaterialID = MaterialID;
	Parms.bChange = bChange;
	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStaticMeshComponent.ResetMaterialAll
// (Final, Native, Public, BlueprintCallable)

void UUnionStaticMeshComponent::ResetMaterialAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStaticMeshComponent", "ResetMaterialAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStaticMeshComponent.IsNotChangedMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   MaterialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionStaticMeshComponent::IsNotChangedMaterial(int32 MaterialID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStaticMeshComponent", "IsNotChangedMaterial");

	Params::UnionStaticMeshComponent_IsNotChangedMaterial Parms{};

	Parms.MaterialID = MaterialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppControllerInputManager.GetMenuPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMenuPlayerController*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMenuPlayerController* UAppControllerInputManager::GetMenuPlayerController(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppControllerInputManager", "GetMenuPlayerController");

	Params::AppControllerInputManager_GetMenuPlayerController Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppControllerInputManager.GetPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAppPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAppPlayerController* UAppControllerInputManager::GetPlayerController(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppControllerInputManager", "GetPlayerController");

	Params::AppControllerInputManager_GetPlayerController Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppControllerInputManager.IsMenuMouseInputMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppControllerInputManager::IsMenuMouseInputMode(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppControllerInputManager", "IsMenuMouseInputMode");

	Params::AppControllerInputManager_IsMenuMouseInputMode Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppControllerInputManager.RemovePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppControllerInputManager::RemovePlayer(class APlayerController* PlayerController, bool bDestroyPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppControllerInputManager", "RemovePlayer");

	Params::AppControllerInputManager_RemovePlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.bDestroyPawn = bDestroyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppControllerInputManager.SetTickable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTickable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppControllerInputManager::SetTickable(bool bTickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppControllerInputManager", "SetTickable");

	Params::AppControllerInputManager_SetTickable Parms{};

	Parms.bTickable = bTickable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.BackupSequenceType
// (Final, Native, Public, BlueprintCallable)

void UAppSequenceLogManagerSubsystem::BackupSequenceType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "BackupSequenceType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.GetBackupSequenceMainType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESequenceMainType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESequenceMainType UAppSequenceLogManagerSubsystem::GetBackupSequenceMainType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "GetBackupSequenceMainType");

	Params::AppSequenceLogManagerSubsystem_GetBackupSequenceMainType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.GetBackupSequenceSubType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESequenceSubType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESequenceSubType UAppSequenceLogManagerSubsystem::GetBackupSequenceSubType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "GetBackupSequenceSubType");

	Params::AppSequenceLogManagerSubsystem_GetBackupSequenceSubType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.GetSequenceMainType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESequenceMainType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESequenceMainType UAppSequenceLogManagerSubsystem::GetSequenceMainType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "GetSequenceMainType");

	Params::AppSequenceLogManagerSubsystem_GetSequenceMainType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.GetSequenceSubType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESequenceSubType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESequenceSubType UAppSequenceLogManagerSubsystem::GetSequenceSubType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "GetSequenceSubType");

	Params::AppSequenceLogManagerSubsystem_GetSequenceSubType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.SetSequenceSubType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESequenceSubType                        SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSequenceLogManagerSubsystem::SetSequenceSubType(ESequenceSubType SubType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "SetSequenceSubType");

	Params::AppSequenceLogManagerSubsystem_SetSequenceSubType Parms{};

	Parms.SubType = SubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.SetSequenceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESequenceMainType                       MainType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESequenceSubType                        SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSequenceLogManagerSubsystem::SetSequenceType(ESequenceMainType MainType, ESequenceSubType SubType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "SetSequenceType");

	Params::AppSequenceLogManagerSubsystem_SetSequenceType Parms{};

	Parms.MainType = MainType;
	Parms.SubType = SubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSequenceLogManagerSubsystem.GetSequenceTypeNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSequenceLogManagerSubsystem::GetSequenceTypeNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppSequenceLogManagerSubsystem", "GetSequenceTypeNum");

	Params::AppSequenceLogManagerSubsystem_GetSequenceTypeNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetClampUserNameLength
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppFunctionLibrary::GetClampUserNameLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetClampUserNameLength");

	Params::AppFunctionLibrary_GetClampUserNameLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetDateString
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 DateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::GetDateString(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetDateString");

	Params::AppFunctionLibrary_GetDateString Parms{};

	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetDateTimeString
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 DateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::GetDateTimeString(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetDateTimeString");

	Params::AppFunctionLibrary_GetDateTimeString Parms{};

	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetDateTimeStringWithoutSecond
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 DateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::GetDateTimeStringWithoutSecond(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetDateTimeStringWithoutSecond");

	Params::AppFunctionLibrary_GetDateTimeStringWithoutSecond Parms{};

	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetHexString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AddZero                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::GetHexString(int32 Input, int32 Length, bool AddZero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetHexString");

	Params::AppFunctionLibrary_GetHexString Parms{};

	Parms.Input = Input;
	Parms.Length = Length;
	Parms.AddZero = AddZero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetLocalDateTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   UnixTimestampFromServer                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UAppFunctionLibrary::GetLocalDateTime(int64 UnixTimestampFromServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetLocalDateTime");

	Params::AppFunctionLibrary_GetLocalDateTime Parms{};

	Parms.UnixTimestampFromServer = UnixTimestampFromServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetLocalDateTimeString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   UnixTimestampFromServer                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::GetLocalDateTimeString(int64 UnixTimestampFromServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetLocalDateTimeString");

	Params::AppFunctionLibrary_GetLocalDateTimeString Parms{};

	Parms.UnixTimestampFromServer = UnixTimestampFromServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetMileStoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMilestoneVersion                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMilestoneVersion UAppFunctionLibrary::GetMileStoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetMileStoneVersion");

	Params::AppFunctionLibrary_GetMileStoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetMileStoneVersionWithWorldContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMilestoneVersion                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMilestoneVersion UAppFunctionLibrary::GetMileStoneVersionWithWorldContext(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetMileStoneVersionWithWorldContext");

	Params::AppFunctionLibrary_GetMileStoneVersionWithWorldContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAppSupportedPlatform                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAppSupportedPlatform UAppFunctionLibrary::GetPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetPlatform");

	Params::AppFunctionLibrary_GetPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetPlatformGroup
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECrossplayPlatform                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECrossplayPlatform UAppFunctionLibrary::GetPlatformGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetPlatformGroup");

	Params::AppFunctionLibrary_GetPlatformGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.GetUtcDateTimeString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   UnixTimestampFromServer                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::GetUtcDateTimeString(int64 UnixTimestampFromServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "GetUtcDateTimeString");

	Params::AppFunctionLibrary_GetUtcDateTimeString Parms{};

	Parms.UnixTimestampFromServer = UnixTimestampFromServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.HexToNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppFunctionLibrary::HexToNumber(const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "HexToNumber");

	Params::AppFunctionLibrary_HexToNumber Parms{};

	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.Is2ndRom
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::Is2ndRom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "Is2ndRom");

	Params::AppFunctionLibrary_Is2ndRom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.Is2ndRomWithWorldContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::Is2ndRomWithWorldContext(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "Is2ndRomWithWorldContext");

	Params::AppFunctionLibrary_Is2ndRomWithWorldContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsDevelopmentBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsDevelopmentBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsDevelopmentBuild");

	Params::AppFunctionLibrary_IsDevelopmentBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsMasterLaunchOptionEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsMasterLaunchOptionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsMasterLaunchOptionEnabled");

	Params::AppFunctionLibrary_IsMasterLaunchOptionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsPlayInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsPlayInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsPlayInEditor");

	Params::AppFunctionLibrary_IsPlayInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsPlayStation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsPlayStation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsPlayStation");

	Params::AppFunctionLibrary_IsPlayStation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsPre2ndRom
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsPre2ndRom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsPre2ndRom");

	Params::AppFunctionLibrary_IsPre2ndRom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsShippingBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsShippingBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsShippingBuild");

	Params::AppFunctionLibrary_IsShippingBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsSupportHDVibration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsSupportHDVibration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsSupportHDVibration");

	Params::AppFunctionLibrary_IsSupportHDVibration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsSwitch
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsSwitch");

	Params::AppFunctionLibrary_IsSwitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsTestBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsTestBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsTestBuild");

	Params::AppFunctionLibrary_IsTestBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsVersionOverThan10100
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsVersionOverThan10100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsVersionOverThan10100");

	Params::AppFunctionLibrary_IsVersionOverThan10100 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsWindows
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsWindows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsWindows");

	Params::AppFunctionLibrary_IsWindows Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.IsXbox
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppFunctionLibrary::IsXbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "IsXbox");

	Params::AppFunctionLibrary_IsXbox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.OutputUE_LOG
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAppLogLevel                            InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppFunctionLibrary::OutputUE_LOG(EAppLogLevel InLevel, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "OutputUE_LOG");

	Params::AppFunctionLibrary_OutputUE_LOG Parms{};

	Parms.InLevel = InLevel;
	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppFunctionLibrary.SetMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMilestoneVersion                       NewMilestoneVersion                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppFunctionLibrary::SetMilestoneVersion(EMilestoneVersion NewMilestoneVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "SetMilestoneVersion");

	Params::AppFunctionLibrary_SetMilestoneVersion Parms{};

	Parms.NewMilestoneVersion = NewMilestoneVersion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppFunctionLibrary.TruncateStringWithEllipsis
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppFunctionLibrary::TruncateStringWithEllipsis(const class FString& str, int32 Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "TruncateStringWithEllipsis");

	Params::AppFunctionLibrary_TruncateStringWithEllipsis Parms{};

	Parms.str = std::move(str);
	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.TruncateTextWithEllipsis
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FText&                      Text                                                   (Parm, NativeAccessSpecifierPublic)
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAppFunctionLibrary::TruncateTextWithEllipsis(const class FText& Text, int32 Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "TruncateTextWithEllipsis");

	Params::AppFunctionLibrary_TruncateTextWithEllipsis Parms{};

	Parms.Text = std::move(Text);
	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppFunctionLibrary.TryLoadAsset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UAppFunctionLibrary::TryLoadAsset(const class FString& AssetPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppFunctionLibrary", "TryLoadAsset");

	Params::AppFunctionLibrary_TryLoadAsset Parms{};

	Parms.AssetPath = std::move(AssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.AddChallengeStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EChallengeId                            InChallengeId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengeStatsUtility::AddChallengeStats(EChallengeId InChallengeId, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "AddChallengeStats");

	Params::ChallengeStatsUtility_AddChallengeStats Parms{};

	Parms.InChallengeId = InChallengeId;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ChallengeStatsUtility.ChallengeProgressUpdateCategory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengeStatsUtility::ChallengeProgressUpdateCategory(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "ChallengeProgressUpdateCategory");

	Params::ChallengeStatsUtility_ChallengeProgressUpdateCategory Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ChallengeStatsUtility.CheckAllChallengeStats
// (Final, Native, Static, Public, BlueprintCallable)

void UChallengeStatsUtility::CheckAllChallengeStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "CheckAllChallengeStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ChallengeStatsUtility.GetCategoryChallenge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EChallengeId>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EChallengeId> UChallengeStatsUtility::GetCategoryChallenge(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetCategoryChallenge");

	Params::ChallengeStatsUtility_GetCategoryChallenge Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetCategoryChallengeData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FChallengeStruct>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChallengeStruct> UChallengeStatsUtility::GetCategoryChallengeData(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetCategoryChallengeData");

	Params::ChallengeStatsUtility_GetCategoryChallengeData Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetCategoryClearCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallengeStatsUtility::GetCategoryClearCount(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetCategoryClearCount");

	Params::ChallengeStatsUtility_GetCategoryClearCount Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetCategoryStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FChallengeStatsData>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChallengeStatsData> UChallengeStatsUtility::GetCategoryStats(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetCategoryStats");

	Params::ChallengeStatsUtility_GetCategoryStats Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetChallengeCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EChallengeId                      InId                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EChallengeCategory                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EChallengeCategory UChallengeStatsUtility::GetChallengeCategory(const EChallengeId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetChallengeCategory");

	Params::ChallengeStatsUtility_GetChallengeCategory Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetChallengeData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeId                      InChallengeId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FChallengeStruct                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FChallengeStruct UChallengeStatsUtility::GetChallengeData(const EChallengeId InChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetChallengeData");

	Params::ChallengeStatsUtility_GetChallengeData Parms{};

	Parms.InChallengeId = InChallengeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetChallengeProgressCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallengeStatsUtility::GetChallengeProgressCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetChallengeProgressCount");

	Params::ChallengeStatsUtility_GetChallengeProgressCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetChallengeProgressState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeId                      InChallengeId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EChallengeProgressState                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EChallengeProgressState UChallengeStatsUtility::GetChallengeProgressState(const EChallengeId InChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetChallengeProgressState");

	Params::ChallengeStatsUtility_GetChallengeProgressState Parms{};

	Parms.InChallengeId = InChallengeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetChallengeStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeId                      InChallengeId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FChallengeStatsData              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FChallengeStatsData UChallengeStatsUtility::GetChallengeStats(const EChallengeId InChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetChallengeStats");

	Params::ChallengeStatsUtility_GetChallengeStats Parms{};

	Parms.InChallengeId = InChallengeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetChallengeStatsCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeId                      InChallengeId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallengeStatsUtility::GetChallengeStatsCount(const EChallengeId InChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetChallengeStatsCount");

	Params::ChallengeStatsUtility_GetChallengeStatsCount Parms{};

	Parms.InChallengeId = InChallengeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetPointReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ItemGetBgIdx                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemGetPointIdx                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FChallengePointReward            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FChallengePointReward UChallengeStatsUtility::GetPointReward(int32 ItemGetBgIdx, int32 ItemGetPointIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetPointReward");

	Params::ChallengeStatsUtility_GetPointReward Parms{};

	Parms.ItemGetBgIdx = ItemGetBgIdx;
	Parms.ItemGetPointIdx = ItemGetPointIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.GetSpecialChallengeClearCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallengeStatsUtility::GetSpecialChallengeClearCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "GetSpecialChallengeClearCount");

	Params::ChallengeStatsUtility_GetSpecialChallengeClearCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.IsChallengeAcquiredStateCheck
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChallengeStatsUtility::IsChallengeAcquiredStateCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "IsChallengeAcquiredStateCheck");

	Params::ChallengeStatsUtility_IsChallengeAcquiredStateCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.IsChallengeCategoryNewIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChallengeStatsUtility::IsChallengeCategoryNewIcon(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "IsChallengeCategoryNewIcon");

	Params::ChallengeStatsUtility_IsChallengeCategoryNewIcon Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.IsCompleteChallenge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeId                      InChallengeId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChallengeStatsUtility::IsCompleteChallenge(const EChallengeId InChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "IsCompleteChallenge");

	Params::ChallengeStatsUtility_IsCompleteChallenge Parms{};

	Parms.InChallengeId = InChallengeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.IsCompleteChallengeCategory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeCategory                InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChallengeStatsUtility::IsCompleteChallengeCategory(const EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "IsCompleteChallengeCategory");

	Params::ChallengeStatsUtility_IsCompleteChallengeCategory Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ChallengeStatsUtility.SetChallengeProgressState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EChallengeId                      InChallengeId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EChallengeProgressState           InProgressState                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengeStatsUtility::SetChallengeProgressState(const EChallengeId InChallengeId, const EChallengeProgressState InProgressState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "SetChallengeProgressState");

	Params::ChallengeStatsUtility_SetChallengeProgressState Parms{};

	Parms.InChallengeId = InChallengeId;
	Parms.InProgressState = InProgressState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ChallengeStatsUtility.SetChallengeStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EChallengeId                            InChallengeId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengeStatsUtility::SetChallengeStats(EChallengeId InChallengeId, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChallengeStatsUtility", "SetChallengeStats");

	Params::ChallengeStatsUtility_SetChallengeStats Parms{};

	Parms.InChallengeId = InChallengeId;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MilestoneUtil.GetEnablePrelaunchAnotherStageLotteryMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMilestoneVersion                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMilestoneVersion UMilestoneUtil::GetEnablePrelaunchAnotherStageLotteryMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "GetEnablePrelaunchAnotherStageLotteryMilestoneVersion");

	Params::MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.GetGrandPrixRivalDriverIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<EDriverId>                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<EDriverId> UMilestoneUtil::GetGrandPrixRivalDriverIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "GetGrandPrixRivalDriverIds");

	Params::MilestoneUtil_GetGrandPrixRivalDriverIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.GetRivalByMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDriverId UMilestoneUtil::GetRivalByMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "GetRivalByMilestoneVersion");

	Params::MilestoneUtil_GetRivalByMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsAlreadyGrandPrixLeast1Play
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsAlreadyGrandPrixLeast1Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsAlreadyGrandPrixLeast1Play");

	Params::MilestoneUtil_IsAlreadyGrandPrixLeast1Play Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsCharaIconLockCover
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsCharaIconLockCover(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsCharaIconLockCover");

	Params::MilestoneUtil_IsCharaIconLockCover Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsCloseCourseInRaceParkCustomMatchMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsCloseCourseInRaceParkCustomMatchMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsCloseCourseInRaceParkCustomMatchMilestoneVersion");

	Params::MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableDecisionInRaceParkMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableDecisionInRaceParkMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableDecisionInRaceParkMilestoneVersion");

	Params::MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableEtceteraChallengeMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableEtceteraChallengeMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableEtceteraChallengeMilestoneVersion");

	Params::MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableEtceteraHintMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableEtceteraHintMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableEtceteraHintMilestoneVersion");

	Params::MilestoneUtil_IsDisableEtceteraHintMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableEtceteraOthersMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableEtceteraOthersMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableEtceteraOthersMilestoneVersion");

	Params::MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableEtceteraStoreMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableEtceteraStoreMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableEtceteraStoreMilestoneVersion");

	Params::MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableEtceteraTitleMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableEtceteraTitleMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableEtceteraTitleMilestoneVersion");

	Params::MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableFestaMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableFestaMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableFestaMilestoneVersion");

	Params::MilestoneUtil_IsDisableFestaMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableFriendlistMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableFriendlistMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableFriendlistMilestoneVersion");

	Params::MilestoneUtil_IsDisableFriendlistMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixCourse2MilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableGrandPrixCourse2MilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableGrandPrixCourse2MilestoneVersion");

	Params::MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixCourse3MilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableGrandPrixCourse3MilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableGrandPrixCourse3MilestoneVersion");

	Params::MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixCourseMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableGrandPrixCourseMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableGrandPrixCourseMilestoneVersion");

	Params::MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableGrandPrixMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableGrandPrixMilestoneVersion");

	Params::MilestoneUtil_IsDisableGrandPrixMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableHornAuraTabMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableHornAuraTabMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableHornAuraTabMilestoneVersion");

	Params::MilestoneUtil_IsDisableHornAuraTabMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableRaceParkMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableRaceParkMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableRaceParkMilestoneVersion");

	Params::MilestoneUtil_IsDisableRaceParkMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableRaceParkRivalOnOffMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableRaceParkRivalOnOffMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableRaceParkRivalOnOffMilestoneVersion");

	Params::MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableSelectTimeTrialMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableSelectTimeTrialMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableSelectTimeTrialMilestoneVersion");

	Params::MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableTimeTrialMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableTimeTrialMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableTimeTrialMilestoneVersion");

	Params::MilestoneUtil_IsDisableTimeTrialMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableTopMenuFestaRuleMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableTopMenuFestaRuleMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableTopMenuFestaRuleMilestoneVersion");

	Params::MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableTopMenuNewsMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableTopMenuNewsMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableTopMenuNewsMilestoneVersion");

	Params::MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsDisableTrialMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsDisableTrialMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsDisableTrialMilestoneVersion");

	Params::MilestoneUtil_IsDisableTrialMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableAdvertiseRatingMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableAdvertiseRatingMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableAdvertiseRatingMilestoneVersion");

	Params::MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableEtceteraFullGameStoreMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableEtceteraFullGameStoreMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableEtceteraFullGameStoreMilestoneVersion");

	Params::MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableResetSaveDataMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableResetSaveDataMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableResetSaveDataMilestoneVersion");

	Params::MilestoneUtil_IsEnableResetSaveDataMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableSpecificTitleDebugCommandMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableSpecificTitleDebugCommandMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableSpecificTitleDebugCommandMilestoneVersion");

	Params::MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableThumbnailCollaboRaceMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableThumbnailCollaboRaceMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableThumbnailCollaboRaceMilestoneVersion");

	Params::MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableTitleDemoMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableTitleDemoMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableTitleDemoMilestoneVersion");

	Params::MilestoneUtil_IsEnableTitleDemoMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableTitleStoreMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableTitleStoreMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableTitleStoreMilestoneVersion");

	Params::MilestoneUtil_IsEnableTitleStoreMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableTopMenuStoreMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableTopMenuStoreMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableTopMenuStoreMilestoneVersion");

	Params::MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsEnableTopMenuStorePopupAutoMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsEnableTopMenuStorePopupAutoMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsEnableTopMenuStorePopupAutoMilestoneVersion");

	Params::MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsExclusionGhostUpDownloadEventMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsExclusionGhostUpDownloadEventMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsExclusionGhostUpDownloadEventMilestoneVersion");

	Params::MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsForceEnableTopMenuNewsMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsForceEnableTopMenuNewsMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsForceEnableTopMenuNewsMilestoneVersion");

	Params::MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsHiddenCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsHiddenCharacter(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsHiddenCharacter");

	Params::MilestoneUtil_IsHiddenCharacter Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsHiddenMachineParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              MachineId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsHiddenMachineParts(EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsHiddenMachineParts");

	Params::MilestoneUtil_IsHiddenMachineParts Parms{};

	Parms.MachineId = MachineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsHiddenRomVerMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsHiddenRomVerMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsHiddenRomVerMilestoneVersion");

	Params::MilestoneUtil_IsHiddenRomVerMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsHiddenWebManualQRcodeMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsHiddenWebManualQRcodeMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsHiddenWebManualQRcodeMilestoneVersion");

	Params::MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsInitialMachineParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              MachineId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FrontPrice                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RearPrice                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TirePrice                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsInitialMachineParts(EMachineId MachineId, int32 FrontPrice, int32 RearPrice, int32 TirePrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsInitialMachineParts");

	Params::MilestoneUtil_IsInitialMachineParts Parms{};

	Parms.MachineId = MachineId;
	Parms.FrontPrice = FrontPrice;
	Parms.RearPrice = RearPrice;
	Parms.TirePrice = TirePrice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsLimitDonpaTicketMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsLimitDonpaTicketMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsLimitDonpaTicketMilestoneVersion");

	Params::MilestoneUtil_IsLimitDonpaTicketMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsLimitRewardInRaceParkMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsLimitRewardInRaceParkMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsLimitRewardInRaceParkMilestoneVersion");

	Params::MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsOfflineMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsOfflineMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsOfflineMilestoneVersion");

	Params::MilestoneUtil_IsOfflineMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsRaceUnLockedMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EGameModeId                       InGameModeId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsRaceUnLockedMilestoneVersion(const EGameModeId InGameModeId, const EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsRaceUnLockedMilestoneVersion");

	Params::MilestoneUtil_IsRaceUnLockedMilestoneVersion Parms{};

	Parms.InGameModeId = InGameModeId;
	Parms.InStageId = InStageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsSkipDodonpaEventMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsSkipDodonpaEventMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsSkipDodonpaEventMilestoneVersion");

	Params::MilestoneUtil_IsSkipDodonpaEventMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsSkipSelectPlayNumMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsSkipSelectPlayNumMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsSkipSelectPlayNumMilestoneVersion");

	Params::MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsTopMenuAccessLoginSuccessOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsTopMenuAccessLoginSuccessOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsTopMenuAccessLoginSuccessOnly");

	Params::MilestoneUtil_IsTopMenuAccessLoginSuccessOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MilestoneUtil.IsVisibleCompanyNameMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMilestoneUtil::IsVisibleCompanyNameMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MilestoneUtil", "IsVisibleCompanyNameMilestoneVersion");

	Params::MilestoneUtil_IsVisibleCompanyNameMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppGameInstance.ReadVCSChangelistFromFile
// (Final, Native, Public, BlueprintCallable)

void UAppGameInstance::ReadVCSChangelistFromFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppGameInstance", "ReadVCSChangelistFromFile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppGameInstance.Set2ndRom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Is2ndRom                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppGameInstance::Set2ndRom(bool Is2ndRom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppGameInstance", "Set2ndRom");

	Params::AppGameInstance_Set2ndRom Parms{};

	Parms.Is2ndRom = Is2ndRom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppGameInstance.GetVCSRevisionNum
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32*                                  OutVCSRevisionNum                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppGameInstance::GetVCSRevisionNum(int32* OutVCSRevisionNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppGameInstance", "GetVCSRevisionNum");

	Params::AppGameInstance_GetVCSRevisionNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVCSRevisionNum != nullptr)
		*OutVCSRevisionNum = Parms.OutVCSRevisionNum;
}


// Function UnionSystem.AppGameInstance.GetVCSRevisionStr
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString*                          OutVCSString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppGameInstance::GetVCSRevisionStr(class FString* OutVCSString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppGameInstance", "GetVCSRevisionStr");

	Params::AppGameInstance_GetVCSRevisionStr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVCSString != nullptr)
		*OutVCSString = std::move(Parms.OutVCSString);
}


// Function UnionSystem.HonorTitleListDataAsset.ClearData
// (Final, Native, Public, BlueprintCallable)

void UHonorTitleListDataAsset::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "ClearData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HonorTitleListDataAsset.Update
// (Final, Native, Public, BlueprintCallable)

void UHonorTitleListDataAsset::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HonorTitleListDataAsset.GetAllHonorTitleAndIdWithRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>*                          outHonorTitleIdArray                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FHonorTitleListData>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FHonorTitleListData> UHonorTitleListDataAsset::GetAllHonorTitleAndIdWithRarity(int32 Rarity, TArray<int32>* outHonorTitleIdArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "GetAllHonorTitleAndIdWithRarity");

	Params::HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outHonorTitleIdArray != nullptr)
		*outHonorTitleIdArray = std::move(Parms.outHonorTitleIdArray);

	return Parms.ReturnValue;
}


// Function UnionSystem.HonorTitleListDataAsset.GetAllHonorTitleWithRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHonorTitleListData>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FHonorTitleListData> UHonorTitleListDataAsset::GetAllHonorTitleWithRarity(int32 Rarity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "GetAllHonorTitleWithRarity");

	Params::HonorTitleListDataAsset_GetAllHonorTitleWithRarity Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HonorTitleListDataAsset.GetHonorTitlePlate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   HonorTitleId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UHonorTitleListDataAsset::GetHonorTitlePlate(int32 HonorTitleId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "GetHonorTitlePlate");

	Params::HonorTitleListDataAsset_GetHonorTitlePlate Parms{};

	Parms.HonorTitleId = HonorTitleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HonorTitleListDataAsset.GetHonorTitleRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   HonorTitleId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHonorTitleListDataAsset::GetHonorTitleRarity(int32 HonorTitleId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "GetHonorTitleRarity");

	Params::HonorTitleListDataAsset_GetHonorTitleRarity Parms{};

	Parms.HonorTitleId = HonorTitleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HonorTitleListDataAsset.GetHonorTitleVBName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   HonorTitleId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHonorTitleListDataAsset::GetHonorTitleVBName(int32 HonorTitleId, bool* IsValid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "GetHonorTitleVBName");

	Params::HonorTitleListDataAsset_GetHonorTitleVBName Parms{};

	Parms.HonorTitleId = HonorTitleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function UnionSystem.HonorTitleListDataAsset.GetIsHonorTitleDLC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   HonorTitleIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHonorTitleListDataAsset::GetIsHonorTitleDLC(int32 HonorTitleIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HonorTitleListDataAsset", "GetIsHonorTitleDLC");

	Params::HonorTitleListDataAsset_GetIsHonorTitleDLC Parms{};

	Parms.HonorTitleIndex = HonorTitleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AtomListenerFocusPointForCamera.OnCameraActivated
// (Final, Native, Private)

void UAtomListenerFocusPointForCamera::OnCameraActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AtomListenerFocusPointForCamera", "OnCameraActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AtomListenerFocusPointForCamera.SetCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCameraComponent*                 NewCamera                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAtomListenerFocusPointForCamera::SetCamera(class UCameraComponent* NewCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AtomListenerFocusPointForCamera", "SetCamera");

	Params::AtomListenerFocusPointForCamera_SetCamera Parms{};

	Parms.NewCamera = NewCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppListenerFocusPoint.SetupComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLocalPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppListenerFocusPoint::SetupComponent(int32 PlayerIndex, int32 NumLocalPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppListenerFocusPoint", "SetupComponent");

	Params::AppListenerFocusPoint_SetupComponent Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.NumLocalPlayers = NumLocalPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.AllowCrossPlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::AllowCrossPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "AllowCrossPlay");

	Params::AppOptionConfigSaveGameHelper_AllowCrossPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.AllowCrossPlayOnlyAppSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::AllowCrossPlayOnlyAppSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "AllowCrossPlayOnlyAppSetting");

	Params::AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyAmbientOcclusion
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyAmbientOcclusion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyAmbientOcclusion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyAntiAliasMethod
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyAntiAliasMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyAntiAliasMethod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyAudioSettings
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyAudioSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyAudioSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyBlur
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyBlur");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyFrameRateLimit
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyFrameRateLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyFrameRateLimit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyFullscreenMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ApplyImmediately                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::ApplyFullscreenMode(bool ApplyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyFullscreenMode");

	Params::AppOptionConfigSaveGameHelper_ApplyFullscreenMode Parms{};

	Parms.ApplyImmediately = ApplyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyGraphicMode
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyGraphicMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyGraphicMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyGraphicQuality
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyGraphicQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyGraphicQuality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyGraphicsSettings
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyGraphicsSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyGraphicsSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyModelQuality
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyModelQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyModelQuality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyReflectionQuality
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyReflectionQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyReflectionQuality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyRenderingScale
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyRenderingScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyRenderingScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyResolutionSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ApplyImmediately                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::ApplyResolutionSize(bool ApplyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyResolutionSize");

	Params::AppOptionConfigSaveGameHelper_ApplyResolutionSize Parms{};

	Parms.ApplyImmediately = ApplyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyScreenBrightness
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyScreenBrightness()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyScreenBrightness");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyShadowQuality
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ApplyShadowQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyShadowQuality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyUseDisplay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ApplyImmediately                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::ApplyUseDisplay(bool ApplyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyUseDisplay");

	Params::AppOptionConfigSaveGameHelper_ApplyUseDisplay Parms{};

	Parms.ApplyImmediately = ApplyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyVSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ApplyImmediately                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::ApplyVSync(bool ApplyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ApplyVSync");

	Params::AppOptionConfigSaveGameHelper_ApplyVSync Parms{};

	Parms.ApplyImmediately = ApplyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.CalcGetUserAssistData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FUserAssistData>*         OutAssistData                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::CalcGetUserAssistData(TArray<struct FUserAssistData>* OutAssistData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "CalcGetUserAssistData");

	Params::AppOptionConfigSaveGameHelper_CalcGetUserAssistData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAssistData != nullptr)
		*OutAssistData = std::move(Parms.OutAssistData);
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.GetCaptionVisibility
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECaptionVisible                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECaptionVisible UAppOptionConfigSaveGameHelper::GetCaptionVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "GetCaptionVisibility");

	Params::AppOptionConfigSaveGameHelper_GetCaptionVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.GetControllerOperationType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyConfigOperationType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKeyConfigOperationType UAppOptionConfigSaveGameHelper::GetControllerOperationType(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "GetControllerOperationType");

	Params::AppOptionConfigSaveGameHelper_GetControllerOperationType Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.GetForceFeedbackLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EForceFeedbackLevel                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EForceFeedbackLevel UAppOptionConfigSaveGameHelper::GetForceFeedbackLevel(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "GetForceFeedbackLevel");

	Params::AppOptionConfigSaveGameHelper_GetForceFeedbackLevel Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.GetTextLangFromSave
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage UAppOptionConfigSaveGameHelper::GetTextLangFromSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "GetTextLangFromSave");

	Params::AppOptionConfigSaveGameHelper_GetTextLangFromSave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.GetVoiceLangFromSave
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage UAppOptionConfigSaveGameHelper::GetVoiceLangFromSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "GetVoiceLangFromSave");

	Params::AppOptionConfigSaveGameHelper_GetVoiceLangFromSave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.InitTextLangIfInvalid
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::InitTextLangIfInvalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "InitTextLangIfInvalid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.InitVoiceLangIfInvalid
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::InitVoiceLangIfInvalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "InitVoiceLangIfInvalid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.IsControllerGyroAssistEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::IsControllerGyroAssistEnabled(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "IsControllerGyroAssistEnabled");

	Params::AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.IsControllerOperationTypeCustom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::IsControllerOperationTypeCustom(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "IsControllerOperationTypeCustom");

	Params::AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.IsDiffUserAssistDataWithSaveData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FUserAssistData>&   InAssistData                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::IsDiffUserAssistDataWithSaveData(const TArray<struct FUserAssistData>& InAssistData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "IsDiffUserAssistDataWithSaveData");

	Params::AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData Parms{};

	Parms.InAssistData = std::move(InAssistData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.IsInverseAcceptAndCancel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::IsInverseAcceptAndCancel(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "IsInverseAcceptAndCancel");

	Params::AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.IsInverseFlyModeUpDown
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::IsInverseFlyModeUpDown(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "IsInverseFlyModeUpDown");

	Params::AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.IsRunningOnSteamDeck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::IsRunningOnSteamDeck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "IsRunningOnSteamDeck");

	Params::AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.ResetControllerSettingsForLocalMultiPlayer
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::ResetControllerSettingsForLocalMultiPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "ResetControllerSettingsForLocalMultiPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetAllPlayerForceFeedbackLevelFromSave
// (Final, Native, Static, Public, BlueprintCallable)

void UAppOptionConfigSaveGameHelper::SetAllPlayerForceFeedbackLevelFromSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetAllPlayerForceFeedbackLevelFromSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetControllerGyroAssistEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::SetControllerGyroAssistEnabled(int32 InPlayerIndex, bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetControllerGyroAssistEnabled");

	Params::AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetControllerOperationType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyConfigOperationType                 InOperationType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::SetControllerOperationType(int32 InPlayerIndex, EKeyConfigOperationType InOperationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetControllerOperationType");

	Params::AppOptionConfigSaveGameHelper_SetControllerOperationType Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InOperationType = InOperationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetForceFeedbackLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EForceFeedbackLevel                     VibrationLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::SetForceFeedbackLevel(int32 PlayerIndex, EForceFeedbackLevel VibrationLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetForceFeedbackLevel");

	Params::AppOptionConfigSaveGameHelper_SetForceFeedbackLevel Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.VibrationLevel = VibrationLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetInverseAcceptAndCancel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InInverse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::SetInverseAcceptAndCancel(int32 InPlayerIndex, bool InInverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetInverseAcceptAndCancel");

	Params::AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InInverse = InInverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetTextLangToSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELanguage                               NewLanguage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::SetTextLangToSave(ELanguage NewLanguage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetTextLangToSave");

	Params::AppOptionConfigSaveGameHelper_SetTextLangToSave Parms{};

	Parms.NewLanguage = NewLanguage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.SetVoiceLangToSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELanguage                               NewLanguage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppOptionConfigSaveGameHelper::SetVoiceLangToSave(ELanguage NewLanguage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "SetVoiceLangToSave");

	Params::AppOptionConfigSaveGameHelper_SetVoiceLangToSave Parms{};

	Parms.NewLanguage = NewLanguage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppOptionConfigSaveGameHelper.UpdateGraphicSettingsAtFirstTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppOptionConfigSaveGameHelper::UpdateGraphicSettingsAtFirstTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppOptionConfigSaveGameHelper", "UpdateGraphicSettingsAtFirstTime");

	Params::AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.AddRegisterSubMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InMenuObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::AddRegisterSubMenu(class UObject* InMenuObject, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "AddRegisterSubMenu");

	Params::AppPlayerController_AddRegisterSubMenu Parms{};

	Parms.InMenuObject = InMenuObject;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.ApplyOptionControllerSettings
// (Final, Native, Public, BlueprintCallable)

void AAppPlayerController::ApplyOptionControllerSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "ApplyOptionControllerSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.CalcIsMousePositionInViewport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::CalcIsMousePositionInViewport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "CalcIsMousePositionInViewport");

	Params::AppPlayerController_CalcIsMousePositionInViewport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.CalcTutorialControllerType
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// uint8*                                  Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8*                                  Platform                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::CalcTutorialControllerType(uint8* Type, uint8* Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "CalcTutorialControllerType");

	Params::AppPlayerController_CalcTutorialControllerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Type != nullptr)
		*Type = Parms.Type;

	if (Platform != nullptr)
		*Platform = Parms.Platform;
}


// Function UnionSystem.AppPlayerController.ClearUserFocus
// (Final, Native, Public, BlueprintCallable)

void AAppPlayerController::ClearUserFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "ClearUserFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.DoInputMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMenuInputKey                           InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::DoInputMenu(EMenuInputKey InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "DoInputMenu");

	Params::AppPlayerController_DoInputMenu Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.GetCurrentInputType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAppControllerInputType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAppControllerInputType AAppPlayerController::GetCurrentInputType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetCurrentInputType");

	Params::AppPlayerController_GetCurrentInputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetLastHoveredObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* AAppPlayerController::GetLastHoveredObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetLastHoveredObject");

	Params::AppPlayerController_GetLastHoveredObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetMappableKeyByMappingName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      MappingName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey AAppPlayerController::GetMappableKeyByMappingName(const class FName& MappingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetMappableKeyByMappingName");

	Params::AppPlayerController_GetMappableKeyByMappingName Parms{};

	Parms.MappingName = MappingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetMenuConfigKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InActionName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsGamepad                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsAnalog                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey AAppPlayerController::GetMenuConfigKey(const class FName& InActionName, bool IsGamepad, bool IsAnalog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetMenuConfigKey");

	Params::AppPlayerController_GetMenuConfigKey Parms{};

	Parms.InActionName = InActionName;
	Parms.IsGamepad = IsGamepad;
	Parms.IsAnalog = IsAnalog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetRaceConfigKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InActionName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPrimary                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsGamepad                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey AAppPlayerController::GetRaceConfigKey(const class FName& InActionName, bool IsPrimary, bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetRaceConfigKey");

	Params::AppPlayerController_GetRaceConfigKey Parms{};

	Parms.InActionName = InActionName;
	Parms.IsPrimary = IsPrimary;
	Parms.IsGamepad = IsGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.OnApplicationHasReactivated
// (Final, Native, Private)

void AAppPlayerController::OnApplicationHasReactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnApplicationHasReactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.OnChangeControllerInputType
// (Event, Public, BlueprintEvent)
// Parameters:
// EAppControllerInputType                 BeforeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAppControllerInputType                 AfterType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::OnChangeControllerInputType(EAppControllerInputType BeforeType, EAppControllerInputType AfterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnChangeControllerInputType");

	Params::AppPlayerController_OnChangeControllerInputType Parms{};

	Parms.BeforeType = BeforeType;
	Parms.AfterType = AfterType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionSystem.AppPlayerController.OnLeftMousePressed
// (Final, Native, Private)

void AAppPlayerController::OnLeftMousePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnLeftMousePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.OnLeftStickVectorAxisEvent
// (Final, Native, Private, HasDefaults)
// Parameters:
// const struct FVector&                   InStickVector                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::OnLeftStickVectorAxisEvent(const struct FVector& InStickVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnLeftStickVectorAxisEvent");

	Params::AppPlayerController_OnLeftStickVectorAxisEvent Parms{};

	Parms.InStickVector = std::move(InStickVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.OnMousePointer
// (Native, Protected)
// Parameters:
// const struct FPointerEvent&             InPointerEvent                                         (Parm, NativeAccessSpecifierPublic)

void AAppPlayerController::OnMousePointer(const struct FPointerEvent& InPointerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnMousePointer");

	Params::AppPlayerController_OnMousePointer Parms{};

	Parms.InPointerEvent = std::move(InPointerEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.OnMousePointerEventBP
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             InPointerEvent                                         (Parm, NativeAccessSpecifierPublic)

void AAppPlayerController::OnMousePointerEventBP(const struct FPointerEvent& InPointerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnMousePointerEventBP");

	Params::AppPlayerController_OnMousePointerEventBP Parms{};

	Parms.InPointerEvent = std::move(InPointerEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionSystem.AppPlayerController.OnMousePointerUp
// (Native, Protected)
// Parameters:
// const struct FPointerEvent&             InPointerEvent                                         (Parm, NativeAccessSpecifierPublic)

void AAppPlayerController::OnMousePointerUp(const struct FPointerEvent& InPointerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnMousePointerUp");

	Params::AppPlayerController_OnMousePointerUp Parms{};

	Parms.InPointerEvent = std::move(InPointerEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.RegisterMainMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMainMenuRegistPriority                 InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::RegisterMainMenu(class UObject* InObject, EMainMenuRegistPriority InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "RegisterMainMenu");

	Params::AppPlayerController_RegisterMainMenu Parms{};

	Parms.InObject = InObject;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.RegisterMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InMenuObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::RegisterMenu(class UObject* InMenuObject, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "RegisterMenu");

	Params::AppPlayerController_RegisterMenu Parms{};

	Parms.InMenuObject = InMenuObject;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetCurrentInputConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputConfigName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetCurrentInputConfig(const class FName InputConfigName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetCurrentInputConfig");

	Params::AppPlayerController_SetCurrentInputConfig Parms{};

	Parms.InputConfigName = InputConfigName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableMainMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableMainMenu(const class UObject* InObject, bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableMainMenu");

	Params::AppPlayerController_SetEnableMainMenu Parms{};

	Parms.InObject = InObject;
	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableMainMenuAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableMainMenuAll(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableMainMenuAll");

	Params::AppPlayerController_SetEnableMainMenuAll Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableMainMenuLowerPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrioirty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableMainMenuLowerPriority(bool IsEnable, int32 InPrioirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableMainMenuLowerPriority");

	Params::AppPlayerController_SetEnableMainMenuLowerPriority Parms{};

	Parms.IsEnable = IsEnable;
	Parms.InPrioirty = InPrioirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableMainMenuUpperPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrioirty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableMainMenuUpperPriority(bool IsEnable, int32 InPrioirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableMainMenuUpperPriority");

	Params::AppPlayerController_SetEnableMainMenuUpperPriority Parms{};

	Parms.IsEnable = IsEnable;
	Parms.InPrioirty = InPrioirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableSubMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableSubMenu(const class UObject* InObject, bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableSubMenu");

	Params::AppPlayerController_SetEnableSubMenu Parms{};

	Parms.InObject = InObject;
	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableSubMenuAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableSubMenuAll(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableSubMenuAll");

	Params::AppPlayerController_SetEnableSubMenuAll Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableSubMenuLowerPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrioirty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableSubMenuLowerPriority(bool IsEnable, int32 InPrioirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableSubMenuLowerPriority");

	Params::AppPlayerController_SetEnableSubMenuLowerPriority Parms{};

	Parms.IsEnable = IsEnable;
	Parms.InPrioirty = InPrioirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetEnableSubMenuUpperPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrioirty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetEnableSubMenuUpperPriority(bool IsEnable, int32 InPrioirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetEnableSubMenuUpperPriority");

	Params::AppPlayerController_SetEnableSubMenuUpperPriority Parms{};

	Parms.IsEnable = IsEnable;
	Parms.InPrioirty = InPrioirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetForceNonConsumeMouseEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetForceNonConsumeMouseEvent(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetForceNonConsumeMouseEvent");

	Params::AppPlayerController_SetForceNonConsumeMouseEvent Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetInputBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InBlocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetInputBlocked(bool InBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetInputBlocked");

	Params::AppPlayerController_SetInputBlocked Parms{};

	Parms.InBlocked = InBlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.SetLastHoveredObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          HoveredObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAppPlayerController::SetLastHoveredObject(class UObject* HoveredObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "SetLastHoveredObject");

	Params::AppPlayerController_SetLastHoveredObject Parms{};

	Parms.HoveredObject = HoveredObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.UnregisterMainMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::UnregisterMainMenu(const class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "UnregisterMainMenu");

	Params::AppPlayerController_UnregisterMainMenu Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.UnregisterMainMenuAll
// (Final, Native, Public, BlueprintCallable)

void AAppPlayerController::UnregisterMainMenuAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "UnregisterMainMenuAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.UnregisterMenu
// (Final, Native, Public, BlueprintCallable)

void AAppPlayerController::UnregisterMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "UnregisterMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.UnregisterSingleMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InMenuObject                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::UnregisterSingleMenu(const class UObject* InMenuObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "UnregisterSingleMenu");

	Params::AppPlayerController_UnregisterSingleMenu Parms{};

	Parms.InMenuObject = InMenuObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.UnregisterSingleSubMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InMenuObject                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::UnregisterSingleSubMenu(const class UObject* InMenuObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "UnregisterSingleSubMenu");

	Params::AppPlayerController_UnregisterSingleSubMenu Parms{};

	Parms.InMenuObject = InMenuObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.UnregisterSubMenu
// (Final, Native, Public, BlueprintCallable)

void AAppPlayerController::UnregisterSubMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "UnregisterSubMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerController.GetLeftMouseButtonPressing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::GetLeftMouseButtonPressing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetLeftMouseButtonPressing");

	Params::AppPlayerController_GetLeftMouseButtonPressing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetLeftStickAxisValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AAppPlayerController::GetLeftStickAxisValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetLeftStickAxisValue");

	Params::AppPlayerController_GetLeftStickAxisValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetRegisteredMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* AAppPlayerController::GetRegisteredMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetRegisteredMenu");

	Params::AppPlayerController_GetRegisteredMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetRegisteredSubMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> AAppPlayerController::GetRegisteredSubMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetRegisteredSubMenu");

	Params::AppPlayerController_GetRegisteredSubMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.GetSystemFocusedWidgetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AAppPlayerController::GetSystemFocusedWidgetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "GetSystemFocusedWidgetName");

	Params::AppPlayerController_GetSystemFocusedWidgetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.OnIsMenuInputEnabled
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::OnIsMenuInputEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnIsMenuInputEnabled");

	Params::AppPlayerController_OnIsMenuInputEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerController.OnIsSubMenuInputEnabled
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAppPlayerController::OnIsSubMenuInputEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerController", "OnIsSubMenuInputEnabled");

	Params::AppPlayerController_OnIsSubMenuInputEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.AddDeviceChangeInterface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InIFObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::AddDeviceChangeInterface(int32 InPlayerControllerIndex, class UObject* InIFObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "AddDeviceChangeInterface");

	Params::AppPlayerControllerSubsystem_AddDeviceChangeInterface Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InIFObject = InIFObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.CalcCurrentDeviceButtonTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D**                      OutTexure                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAppControllerInputType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAppControllerInputType UAppPlayerControllerSubsystem::CalcCurrentDeviceButtonTexture(int32 PlayerControllerIndex, class UTexture2D** OutTexure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "CalcCurrentDeviceButtonTexture");

	Params::AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTexure != nullptr)
		*OutTexure = Parms.OutTexure;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.CallChangeControllerInputType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAppControllerInputType                 InControllerInputType                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::CallChangeControllerInputType(int32 InPlayerControllerIndex, EAppControllerInputType InControllerInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "CallChangeControllerInputType");

	Params::AppPlayerControllerSubsystem_CallChangeControllerInputType Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InControllerInputType = InControllerInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.CreatePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ControllerId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawnPlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAppPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAppPlayerController* UAppPlayerControllerSubsystem::CreatePlayer(int32 ControllerId, bool bSpawnPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "CreatePlayer");

	Params::AppPlayerControllerSubsystem_CreatePlayer Parms{};

	Parms.ControllerId = ControllerId;
	Parms.bSpawnPlayerController = bSpawnPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetAppPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ControllerId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAppPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAppPlayerController* UAppPlayerControllerSubsystem::GetAppPlayerController(int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetAppPlayerController");

	Params::AppPlayerControllerSubsystem_GetAppPlayerController Parms{};

	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetControllerTextureIndexFromFKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppPlayerControllerSubsystem::GetControllerTextureIndexFromFKey(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetControllerTextureIndexFromFKey");

	Params::AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetCurrentButtonTextureType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EControllerButtonTextureType            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EControllerButtonTextureType UAppPlayerControllerSubsystem::GetCurrentButtonTextureType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetCurrentButtonTextureType");

	Params::AppPlayerControllerSubsystem_GetCurrentButtonTextureType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetCurrentDeviceTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UAppPlayerControllerSubsystem::GetCurrentDeviceTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetCurrentDeviceTexture");

	Params::AppPlayerControllerSubsystem_GetCurrentDeviceTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetMenuKeyboardButtonTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UAppPlayerControllerSubsystem::GetMenuKeyboardButtonTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetMenuKeyboardButtonTexture");

	Params::AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetMenuMouseButtonTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UAppPlayerControllerSubsystem::GetMenuMouseButtonTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetMenuMouseButtonTexture");

	Params::AppPlayerControllerSubsystem_GetMenuMouseButtonTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.RemoveDeviceChangeInterface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InIFObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::RemoveDeviceChangeInterface(int32 InPlayerControllerIndex, class UObject* InIFObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "RemoveDeviceChangeInterface");

	Params::AppPlayerControllerSubsystem_RemoveDeviceChangeInterface Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InIFObject = InIFObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.RemovePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ControllerId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::RemovePlayer(int32 ControllerId, bool bDestroyPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "RemovePlayer");

	Params::AppPlayerControllerSubsystem_RemovePlayer Parms{};

	Parms.ControllerId = ControllerId;
	Parms.bDestroyPawn = bDestroyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.SetButtonTextureType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EControllerButtonTextureType            InTextureType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::SetButtonTextureType(EControllerButtonTextureType InTextureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "SetButtonTextureType");

	Params::AppPlayerControllerSubsystem_SetButtonTextureType Parms{};

	Parms.InTextureType = InTextureType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.SetPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ControllerId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAppPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAppPlayerController* UAppPlayerControllerSubsystem::SetPlayer(int32 ControllerId, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "SetPlayer");

	Params::AppPlayerControllerSubsystem_SetPlayer Parms{};

	Parms.ControllerId = ControllerId;
	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppPlayerControllerSubsystem.SetTextureForButtonMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InTextureObj                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::SetTextureForButtonMaterials(class UObject* InTextureObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "SetTextureForButtonMaterials");

	Params::AppPlayerControllerSubsystem_SetTextureForButtonMaterials Parms{};

	Parms.InTextureObj = InTextureObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.UpdateButtonMaterialByDeviceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   DeviceType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppPlayerControllerSubsystem::UpdateButtonMaterialByDeviceType(uint8 DeviceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "UpdateButtonMaterialByDeviceType");

	Params::AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType Parms{};

	Parms.DeviceType = DeviceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.UpdateCurrentButtonTextureType
// (Final, Native, Public, BlueprintCallable)

void UAppPlayerControllerSubsystem::UpdateCurrentButtonTextureType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "UpdateCurrentButtonTextureType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppPlayerControllerSubsystem.GetCurrentDisplayKeytopPattern
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UAppPlayerControllerSubsystem::GetCurrentDisplayKeytopPattern(int32 InPlayerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppPlayerControllerSubsystem", "GetCurrentDisplayKeytopPattern");

	Params::AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppRaceEventManager.SetTickable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTickable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppRaceEventManager::SetTickable(bool bTickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppRaceEventManager", "SetTickable");

	Params::AppRaceEventManager_SetTickable Parms{};

	Parms.bTickable = bTickable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.AddALLRivalWinCount
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::AddALLRivalWinCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "AddALLRivalWinCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.AddCompensationData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::AddCompensationData(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "AddCompensationData");

	Params::AppSaveGameHelper_AddCompensationData Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.AddRaceStatsValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     InStatsId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::AddRaceStatsValue(const EStatsEventId InStatsId, const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "AddRaceStatsValue");

	Params::AppSaveGameHelper_AddRaceStatsValue Parms{};

	Parms.InStatsId = InStatsId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.AddRewardGetDisplayRequestData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERewardAchievementType                  InRewardAchievementType                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::AddRewardGetDisplayRequestData(ERewardAchievementType InRewardAchievementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "AddRewardGetDisplayRequestData");

	Params::AppSaveGameHelper_AddRewardGetDisplayRequestData Parms{};

	Parms.InRewardAchievementType = InRewardAchievementType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.AddRivalWinCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::AddRivalWinCount(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "AddRivalWinCount");

	Params::AppSaveGameHelper_AddRivalWinCount Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.CheckRewardGetDisplayRequest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERewardAchievementType                  InRewardAchievementType                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::CheckRewardGetDisplayRequest(ERewardAchievementType InRewardAchievementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "CheckRewardGetDisplayRequest");

	Params::AppSaveGameHelper_CheckRewardGetDisplayRequest Parms{};

	Parms.InRewardAchievementType = InRewardAchievementType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.CheckRewardGetDisplayRequestData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::CheckRewardGetDisplayRequestData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "CheckRewardGetDisplayRequestData");

	Params::AppSaveGameHelper_CheckRewardGetDisplayRequestData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.ClearDriverNew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ClearDriverNew(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ClearDriverNew");

	Params::AppSaveGameHelper_ClearDriverNew Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ClearHintRead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ClearHintRead(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ClearHintRead");

	Params::AppSaveGameHelper_ClearHintRead Parms{};

	Parms.InHintId = InHintId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ClearIncompleteCollaboGPVictoryPopupRequired
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::ClearIncompleteCollaboGPVictoryPopupRequired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ClearIncompleteCollaboGPVictoryPopupRequired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ClearRewardGetDisplayRequestData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERewardAchievementType                  InRewardAchievementType                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ClearRewardGetDisplayRequestData(ERewardAchievementType InRewardAchievementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ClearRewardGetDisplayRequestData");

	Params::AppSaveGameHelper_ClearRewardGetDisplayRequestData Parms{};

	Parms.InRewardAchievementType = InRewardAchievementType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ClearRewardGetDisplayRequestDataAll
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::ClearRewardGetDisplayRequestDataAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ClearRewardGetDisplayRequestDataAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ConvertItemSwitchSettingSaveToTableStruct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FItemSwitchSettingSave&    InSetting                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FItemSwitchSetting*              OutSetting                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ConvertItemSwitchSettingSaveToTableStruct(const struct FItemSwitchSettingSave& InSetting, struct FItemSwitchSetting* OutSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ConvertItemSwitchSettingSaveToTableStruct");

	Params::AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct Parms{};

	Parms.InSetting = std::move(InSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSetting != nullptr)
		*OutSetting = std::move(Parms.OutSetting);
}


// Function UnionSystem.AppSaveGameHelper.ConvertPartyRacePresetSettingSaveToTableStruct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPartyRacePresetSettingSave&InSetting                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FPartyRacePresetSetting*         OutSetting                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ConvertPartyRacePresetSettingSaveToTableStruct(const struct FPartyRacePresetSettingSave& InSetting, struct FPartyRacePresetSetting* OutSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ConvertPartyRacePresetSettingSaveToTableStruct");

	Params::AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct Parms{};

	Parms.InSetting = std::move(InSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSetting != nullptr)
		*OutSetting = std::move(Parms.OutSetting);
}


// Function UnionSystem.AppSaveGameHelper.Debug_AllSetHintRead
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::Debug_AllSetHintRead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "Debug_AllSetHintRead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.Debug_InitUserHintData
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::Debug_InitUserHintData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "Debug_InitUserHintData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ExecuteSaveDataHealthCheck
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::ExecuteSaveDataHealthCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ExecuteSaveDataHealthCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.GetAlbumAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetAlbumAvailable(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetAlbumAvailable");

	Params::AppSaveGameHelper_GetAlbumAvailable Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetAllHonorTitleUnlock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UAppSaveGameHelper::GetAllHonorTitleUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetAllHonorTitleUnlock");

	Params::AppSaveGameHelper_GetAllHonorTitleUnlock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetAllNewHonorTitleUnlocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UAppSaveGameHelper::GetAllNewHonorTitleUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetAllNewHonorTitleUnlocked");

	Params::AppSaveGameHelper_GetAllNewHonorTitleUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetChallengeLastShowProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAppSaveGameHelper::GetChallengeLastShowProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetChallengeLastShowProgress");

	Params::AppSaveGameHelper_GetChallengeLastShowProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetChallengeShowProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetChallengeShowProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetChallengeShowProgress");

	Params::AppSaveGameHelper_GetChallengeShowProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetCompensationIdArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UAppSaveGameHelper::GetCompensationIdArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetCompensationIdArray");

	Params::AppSaveGameHelper_GetCompensationIdArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetCourseSwitchSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EStageId>                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EStageId> UAppSaveGameHelper::GetCourseSwitchSetting(EGameModeId InGameModeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetCourseSwitchSetting");

	Params::AppSaveGameHelper_GetCourseSwitchSetting Parms{};

	Parms.InGameModeId = InGameModeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetCustomLapBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserAlbumTrackID                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUserAlbumTrackID UAppSaveGameHelper::GetCustomLapBGM(int32 Lap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetCustomLapBGM");

	Params::AppSaveGameHelper_GetCustomLapBGM Parms{};

	Parms.Lap = Lap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetDodonpaEventCompleteFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGrandPrixEventFlag                     SaveDataFlagId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetDodonpaEventCompleteFlag(EGrandPrixEventFlag SaveDataFlagId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetDodonpaEventCompleteFlag");

	Params::AppSaveGameHelper_GetDodonpaEventCompleteFlag Parms{};

	Parms.SaveDataFlagId = SaveDataFlagId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetFriendShipGivedTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetFriendShipGivedTicket(EDriverId ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetFriendShipGivedTicket");

	Params::AppSaveGameHelper_GetFriendShipGivedTicket Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetGadgetCustomizeData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FUserGadgetCustomizeData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUserGadgetCustomizeData UAppSaveGameHelper::GetGadgetCustomizeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetGadgetCustomizeData");

	Params::AppSaveGameHelper_GetGadgetCustomizeData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetGrandPrixBeforeRivalLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMenuSpeedClassId                       SpeedClassId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetGrandPrixBeforeRivalLevel(EMenuSpeedClassId SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetGrandPrixBeforeRivalLevel");

	Params::AppSaveGameHelper_GetGrandPrixBeforeRivalLevel Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetGrandPrixClassClearedCountByMenuSpeedClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EMenuSpeedClassId&                SpeedClassId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetGrandPrixClassClearedCountByMenuSpeedClass(const EMenuSpeedClassId& SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetGrandPrixClassClearedCountByMenuSpeedClass");

	Params::AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EMenuSpeedClassId&                SpeedClassId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity(const EMenuSpeedClassId& SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity");

	Params::AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetGrandPrixRivalLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMenuSpeedClassId                       SpeedClassId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetGrandPrixRivalLevel(EMenuSpeedClassId SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetGrandPrixRivalLevel");

	Params::AppSaveGameHelper_GetGrandPrixRivalLevel Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetGrandPrixWinCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetGrandPrixWinCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetGrandPrixWinCount");

	Params::AppSaveGameHelper_GetGrandPrixWinCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetHonorTitleIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetHonorTitleIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetHonorTitleIndex");

	Params::AppSaveGameHelper_GetHonorTitleIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetHonorTitleInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FHonorTitleListData              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHonorTitleListData UAppSaveGameHelper::GetHonorTitleInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetHonorTitleInfo");

	Params::AppSaveGameHelper_GetHonorTitleInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetHonorTitleUnlock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetHonorTitleUnlock(int32 HonorTitleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetHonorTitleUnlock");

	Params::AppSaveGameHelper_GetHonorTitleUnlock Parms{};

	Parms.HonorTitleIndex = HonorTitleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetIsGhostUploaded
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsValid                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetIsGhostUploaded(const EStageId InStageId, const ESpeedClassId InSpeedClassId, bool* bOutIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetIsGhostUploaded");

	Params::AppSaveGameHelper_GetIsGhostUploaded Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutIsValid != nullptr)
		*bOutIsValid = Parms.bOutIsValid;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetIsValidGhost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetIsValidGhost(const EStageId InStageId, const ESpeedClassId InSpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetIsValidGhost");

	Params::AppSaveGameHelper_GetIsValidGhost Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetItemSwitchSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemSwitchSetting               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FItemSwitchSetting UAppSaveGameHelper::GetItemSwitchSetting(EGameModeId InGameModeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetItemSwitchSetting");

	Params::AppSaveGameHelper_GetItemSwitchSetting Parms{};

	Parms.InGameModeId = InGameModeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetItemSwitchSettingSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemSwitchSettingSave           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FItemSwitchSettingSave UAppSaveGameHelper::GetItemSwitchSettingSave(EGameModeId InGameModeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetItemSwitchSettingSave");

	Params::AppSaveGameHelper_GetItemSwitchSettingSave Parms{};

	Parms.InGameModeId = InGameModeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetMachineColorPresetAll
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EMachineColorPresetId>*          OutMachineColorPresetId                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetMachineColorPresetAll(TArray<EMachineColorPresetId>* OutMachineColorPresetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetMachineColorPresetAll");

	Params::AppSaveGameHelper_GetMachineColorPresetAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMachineColorPresetId != nullptr)
		*OutMachineColorPresetId = std::move(Parms.OutMachineColorPresetId);
}


// Function UnionSystem.AppSaveGameHelper.GetMachinePartsAll
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EMachineId>*                     OutFrontPartsId                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<EMachineId>*                     OutRearPartsId                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<EMachineId>*                     OutTirePartsId                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetMachinePartsAll(TArray<EMachineId>* OutFrontPartsId, TArray<EMachineId>* OutRearPartsId, TArray<EMachineId>* OutTirePartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetMachinePartsAll");

	Params::AppSaveGameHelper_GetMachinePartsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFrontPartsId != nullptr)
		*OutFrontPartsId = std::move(Parms.OutFrontPartsId);

	if (OutRearPartsId != nullptr)
		*OutRearPartsId = std::move(Parms.OutRearPartsId);

	if (OutTirePartsId != nullptr)
		*OutTirePartsId = std::move(Parms.OutTirePartsId);
}


// Function UnionSystem.AppSaveGameHelper.GetNewHonorTitleUnlocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetNewHonorTitleUnlocked(int32 HonorTitleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetNewHonorTitleUnlocked");

	Params::AppSaveGameHelper_GetNewHonorTitleUnlocked Parms{};

	Parms.HonorTitleIndex = HonorTitleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetNoticeLobbyInvitationOnRace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetNoticeLobbyInvitationOnRace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetNoticeLobbyInvitationOnRace");

	Params::AppSaveGameHelper_GetNoticeLobbyInvitationOnRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetPlayerIconBgColorId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetPlayerIconBgColorId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetPlayerIconBgColorId");

	Params::AppSaveGameHelper_GetPlayerIconBgColorId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetPlayerIconId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetPlayerIconId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetPlayerIconId");

	Params::AppSaveGameHelper_GetPlayerIconId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetProgressIdGrandPrixAnyClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGrandPrixId                            GrandPrixId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGrandPrixProgressId                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGrandPrixProgressId UAppSaveGameHelper::GetProgressIdGrandPrixAnyClass(EGrandPrixId GrandPrixId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetProgressIdGrandPrixAnyClass");

	Params::AppSaveGameHelper_GetProgressIdGrandPrixAnyClass Parms{};

	Parms.GrandPrixId = GrandPrixId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetProgressIdGrandPrixMenuSpeedClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EGrandPrixId&                     GrandPirxId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMenuSpeedClassId&                MenuSpeedClassId                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGrandPrixProgressId                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGrandPrixProgressId UAppSaveGameHelper::GetProgressIdGrandPrixMenuSpeedClass(const EGrandPrixId& GrandPirxId, const EMenuSpeedClassId& MenuSpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetProgressIdGrandPrixMenuSpeedClass");

	Params::AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass Parms{};

	Parms.GrandPirxId = GrandPirxId;
	Parms.MenuSpeedClassId = MenuSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRaceParkCustomRaceSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyRacePresetSetting*         OutSetting                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetRaceParkCustomRaceSetting(struct FPartyRacePresetSetting* OutSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRaceParkCustomRaceSetting");

	Params::AppSaveGameHelper_GetRaceParkCustomRaceSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSetting != nullptr)
		*OutSetting = std::move(Parms.OutSetting);
}


// Function UnionSystem.AppSaveGameHelper.GetRaceStatsValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     InStatsId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetRaceStatsValue(const EStatsEventId InStatsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRaceStatsValue");

	Params::AppSaveGameHelper_GetRaceStatsValue Parms{};

	Parms.InStatsId = InStatsId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRedStarRingAcquisitionPerStage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> UAppSaveGameHelper::GetRedStarRingAcquisitionPerStage(const EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRedStarRingAcquisitionPerStage");

	Params::AppSaveGameHelper_GetRedStarRingAcquisitionPerStage Parms{};

	Parms.InStageId = InStageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRivalAppearanceCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetRivalAppearanceCount(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRivalAppearanceCount");

	Params::AppSaveGameHelper_GetRivalAppearanceCount Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRivalAppearanceCountMin
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<EDriverId>&                CheckDriverIds                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<EDriverId>&                IgnoreDriverIds                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetRivalAppearanceCountMin(const TArray<EDriverId>& CheckDriverIds, const TArray<EDriverId>& IgnoreDriverIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRivalAppearanceCountMin");

	Params::AppSaveGameHelper_GetRivalAppearanceCountMin Parms{};

	Parms.CheckDriverIds = std::move(CheckDriverIds);
	Parms.IgnoreDriverIds = std::move(IgnoreDriverIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRivalLevelAdjust
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetRivalLevelAdjust()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRivalLevelAdjust");

	Params::AppSaveGameHelper_GetRivalLevelAdjust Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRivalWinCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetRivalWinCount(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRivalWinCount");

	Params::AppSaveGameHelper_GetRivalWinCount Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetRivalWinRewardEventCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetRivalWinRewardEventCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetRivalWinRewardEventCount");

	Params::AppSaveGameHelper_GetRivalWinRewardEventCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetSelectedGadgetPresetId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetSelectedGadgetPresetId(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetSelectedGadgetPresetId");

	Params::AppSaveGameHelper_GetSelectedGadgetPresetId Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetSelectedGadgetPresetIdsAllPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UAppSaveGameHelper::GetSelectedGadgetPresetIdsAllPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetSelectedGadgetPresetIdsAllPlayer");

	Params::AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTimeTrialLastResultId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETimeTrialWinLoseDispId                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETimeTrialWinLoseDispId UAppSaveGameHelper::GetTimeTrialLastResultId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTimeTrialLastResultId");

	Params::AppSaveGameHelper_GetTimeTrialLastResultId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTimeTrialMedalAcquisition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetTimeTrialMedalAcquisition(const EStageId InStageId, const ESpeedClassId InSpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTimeTrialMedalAcquisition");

	Params::AppSaveGameHelper_GetTimeTrialMedalAcquisition Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTimeTrialRaceData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsGhostValid                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserTimeTrialRaceData           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUserTimeTrialRaceData UAppSaveGameHelper::GetTimeTrialRaceData(const EStageId InStageId, const ESpeedClassId InSpeedClassId, bool* bOutIsGhostValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTimeTrialRaceData");

	Params::AppSaveGameHelper_GetTimeTrialRaceData Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutIsGhostValid != nullptr)
		*bOutIsGhostValid = Parms.bOutIsGhostValid;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTimeTrialRewardCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetTimeTrialRewardCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTimeTrialRewardCount");

	Params::AppSaveGameHelper_GetTimeTrialRewardCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTipsDisplayIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UAppSaveGameHelper::GetTipsDisplayIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTipsDisplayIndex");

	Params::AppSaveGameHelper_GetTipsDisplayIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTopKnockdownRivalLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EMenuSpeedClassId                 SpeedClassId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EDriverId                         DriverId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UAppSaveGameHelper::GetTopKnockdownRivalLevel(const EMenuSpeedClassId SpeedClassId, const EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTopKnockdownRivalLevel");

	Params::AppSaveGameHelper_GetTopKnockdownRivalLevel Parms{};

	Parms.SpeedClassId = SpeedClassId;
	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTopKnockdownRivalLevelArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EMenuSpeedClassId                 SpeedClassId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UAppSaveGameHelper::GetTopKnockdownRivalLevelArray(const EMenuSpeedClassId SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTopKnockdownRivalLevelArray");

	Params::AppSaveGameHelper_GetTopKnockdownRivalLevelArray Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTrackAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetTrackAvailable(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTrackAvailable");

	Params::AppSaveGameHelper_GetTrackAvailable Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTutorialActionCompletedFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ETutorialAction                   tutorialAction                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetTutorialActionCompletedFlag(const ETutorialAction tutorialAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTutorialActionCompletedFlag");

	Params::AppSaveGameHelper_GetTutorialActionCompletedFlag Parms{};

	Parms.tutorialAction = tutorialAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTutorialCompletedFlagPerStage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetTutorialCompletedFlagPerStage(const EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTutorialCompletedFlagPerStage");

	Params::AppSaveGameHelper_GetTutorialCompletedFlagPerStage Parms{};

	Parms.InStageId = InStageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetTutorialPopupDispFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::GetTutorialPopupDispFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetTutorialPopupDispFlag");

	Params::AppSaveGameHelper_GetTutorialPopupDispFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetUserCommonData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserCommonData*                 OutUserCommonData                                      (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserCommonData(struct FUserCommonData* OutUserCommonData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserCommonData");

	Params::AppSaveGameHelper_GetUserCommonData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserCommonData != nullptr)
		*OutUserCommonData = std::move(Parms.OutUserCommonData);
}


// Function UnionSystem.AppSaveGameHelper.GetUserDriverData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserDriverData*                 OutUserDriverData                                      (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserDriverData(struct FUserDriverData* OutUserDriverData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserDriverData");

	Params::AppSaveGameHelper_GetUserDriverData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserDriverData != nullptr)
		*OutUserDriverData = std::move(Parms.OutUserDriverData);
}


// Function UnionSystem.AppSaveGameHelper.GetUserDriverProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserDriverProperty*             OutUserDriverProperty                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserDriverProperty(EDriverId InDriverId, struct FUserDriverProperty* OutUserDriverProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserDriverProperty");

	Params::AppSaveGameHelper_GetUserDriverProperty Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserDriverProperty != nullptr)
		*OutUserDriverProperty = std::move(Parms.OutUserDriverProperty);
}


// Function UnionSystem.AppSaveGameHelper.GetUserHintData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserHintData*                   OutUserHintData                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserHintData(struct FUserHintData* OutUserHintData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserHintData");

	Params::AppSaveGameHelper_GetUserHintData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserHintData != nullptr)
		*OutUserHintData = std::move(Parms.OutUserHintData);
}


// Function UnionSystem.AppSaveGameHelper.GetUserHintProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserHintProperty*               OutUserHintProperty                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserHintProperty(EHintId InHintId, struct FUserHintProperty* OutUserHintProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserHintProperty");

	Params::AppSaveGameHelper_GetUserHintProperty Parms{};

	Parms.InHintId = InHintId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserHintProperty != nullptr)
		*OutUserHintProperty = std::move(Parms.OutUserHintProperty);
}


// Function UnionSystem.AppSaveGameHelper.GetUserMachineCustomizeData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserMachineCustomizeData*       OutUserMachineCustomizeData                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserMachineCustomizeData(EMachineId InMachineID, struct FUserMachineCustomizeData* OutUserMachineCustomizeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserMachineCustomizeData");

	Params::AppSaveGameHelper_GetUserMachineCustomizeData Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserMachineCustomizeData != nullptr)
		*OutUserMachineCustomizeData = std::move(Parms.OutUserMachineCustomizeData);
}


// Function UnionSystem.AppSaveGameHelper.GetUserNiceCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAppSaveGameHelper::GetUserNiceCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserNiceCount");

	Params::AppSaveGameHelper_GetUserNiceCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetUserRewardGetDisplayRequestData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserRewardGetDisplayRequestData*OutUserRewardGetDisplayRequestData                     (Parm, OutParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::GetUserRewardGetDisplayRequestData(struct FUserRewardGetDisplayRequestData* OutUserRewardGetDisplayRequestData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserRewardGetDisplayRequestData");

	Params::AppSaveGameHelper_GetUserRewardGetDisplayRequestData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserRewardGetDisplayRequestData != nullptr)
		*OutUserRewardGetDisplayRequestData = std::move(Parms.OutUserRewardGetDisplayRequestData);
}


// Function UnionSystem.AppSaveGameHelper.GetUserSelectedDriverId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDriverId                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDriverId UAppSaveGameHelper::GetUserSelectedDriverId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserSelectedDriverId");

	Params::AppSaveGameHelper_GetUserSelectedDriverId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.GetUserSelectedMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMachineId UAppSaveGameHelper::GetUserSelectedMachineId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "GetUserSelectedMachineId");

	Params::AppSaveGameHelper_GetUserSelectedMachineId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.HasAgreedNoticeAgreement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::HasAgreedNoticeAgreement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "HasAgreedNoticeAgreement");

	Params::AppSaveGameHelper_HasAgreedNoticeAgreement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.HasEnteredMachineCustomizeSequence
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::HasEnteredMachineCustomizeSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "HasEnteredMachineCustomizeSequence");

	Params::AppSaveGameHelper_HasEnteredMachineCustomizeSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsClearedGrandPrixAnySpeedClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGrandPrixId                            GrandPrixId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsClearedGrandPrixAnySpeedClass(EGrandPrixId GrandPrixId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsClearedGrandPrixAnySpeedClass");

	Params::AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass Parms{};

	Parms.GrandPrixId = GrandPrixId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsClearedGrandPrixMenuSpeedClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const EGrandPrixId&                     GrandPirxId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMenuSpeedClassId&                SpeedClassId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsClearedGrandPrixMenuSpeedClass(const EGrandPrixId& GrandPirxId, const EMenuSpeedClassId& SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsClearedGrandPrixMenuSpeedClass");

	Params::AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass Parms{};

	Parms.GrandPirxId = GrandPirxId;
	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsCompletedGrandPrixEvent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGrandPrixEventFlag                     EventFlagId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsCompletedGrandPrixEvent(EGrandPrixEventFlag EventFlagId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsCompletedGrandPrixEvent");

	Params::AppSaveGameHelper_IsCompletedGrandPrixEvent Parms{};

	Parms.EventFlagId = EventFlagId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsCompletedMachineParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsCompletedMachineParts(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsCompletedMachineParts");

	Params::AppSaveGameHelper_IsCompletedMachineParts Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsCompleteMainChallenge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsCompleteMainChallenge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsCompleteMainChallenge");

	Params::AppSaveGameHelper_IsCompleteMainChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsCompleteSpecialChallenge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsCompleteSpecialChallenge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsCompleteSpecialChallenge");

	Params::AppSaveGameHelper_IsCompleteSpecialChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsDiffGadgetPresetIds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    GadgetPresetIds                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsDiffGadgetPresetIds(const TArray<int32>& GadgetPresetIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsDiffGadgetPresetIds");

	Params::AppSaveGameHelper_IsDiffGadgetPresetIds Parms{};

	Parms.GadgetPresetIds = std::move(GadgetPresetIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsFinishedAdvertiseLogoFlow
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsFinishedAdvertiseLogoFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsFinishedAdvertiseLogoFlow");

	Params::AppSaveGameHelper_IsFinishedAdvertiseLogoFlow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGetFrontParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGetFrontParts(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGetFrontParts");

	Params::AppSaveGameHelper_IsGetFrontParts Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGetMachineColorPreset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineColorPresetId                   InMachineColorPresetId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGetMachineColorPreset(EMachineColorPresetId InMachineColorPresetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGetMachineColorPreset");

	Params::AppSaveGameHelper_IsGetMachineColorPreset Parms{};

	Parms.InMachineColorPresetId = InMachineColorPresetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGetRearParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGetRearParts(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGetRearParts");

	Params::AppSaveGameHelper_IsGetRearParts Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGetTireParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGetTireParts(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGetTireParts");

	Params::AppSaveGameHelper_IsGetTireParts Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGrandPrixFirstIrregularAppeared
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGrandPrixFirstIrregularAppeared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGrandPrixFirstIrregularAppeared");

	Params::AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGrandPrixLeast1Play
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGrandPrixLeast1Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGrandPrixLeast1Play");

	Params::AppSaveGameHelper_IsGrandPrixLeast1Play Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGrandPrixLeast1PlayEachGrandPrix
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGrandPrixId                            GrandPrixId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGrandPrixLeast1PlayEachGrandPrix(EGrandPrixId GrandPrixId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGrandPrixLeast1PlayEachGrandPrix");

	Params::AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix Parms{};

	Parms.GrandPrixId = GrandPrixId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGrandPrixSelectTimeTrialLinkFirst
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGrandPrixSelectTimeTrialLinkFirst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGrandPrixSelectTimeTrialLinkFirst");

	Params::AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsGrandPrixWinRewardOverTiming
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsGrandPrixWinRewardOverTiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsGrandPrixWinRewardOverTiming");

	Params::AppSaveGameHelper_IsGrandPrixWinRewardOverTiming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsIncompleteCollaboGPVictoryPopupRequired
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsIncompleteCollaboGPVictoryPopupRequired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsIncompleteCollaboGPVictoryPopupRequired");

	Params::AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsNewDriver
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsNewDriver(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsNewDriver");

	Params::AppSaveGameHelper_IsNewDriver Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsNewHint
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsNewHint(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsNewHint");

	Params::AppSaveGameHelper_IsNewHint Parms{};

	Parms.InHintId = InHintId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsOpenedMirrorClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsOpenedMirrorClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsOpenedMirrorClass");

	Params::AppSaveGameHelper_IsOpenedMirrorClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsOpenMirror
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsOpenMirror()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsOpenMirror");

	Params::AppSaveGameHelper_IsOpenMirror Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsOpenSuperSonicSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsOpenSuperSonicSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsOpenSuperSonicSpeed");

	Params::AppSaveGameHelper_IsOpenSuperSonicSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsPatchUpdate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsPatchUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsPatchUpdate");

	Params::AppSaveGameHelper_IsPatchUpdate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsReadHint
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsReadHint(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsReadHint");

	Params::AppSaveGameHelper_IsReadHint Parms{};

	Parms.InHintId = InHintId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsSelectableDriver
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsSelectableDriver(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsSelectableDriver");

	Params::AppSaveGameHelper_IsSelectableDriver Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsSpawnGrandPrixLevelDownUIFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EMenuSpeedClassId                 SpeedClassId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsSpawnGrandPrixLevelDownUIFlag(const EMenuSpeedClassId SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsSpawnGrandPrixLevelDownUIFlag");

	Params::AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsSpawnPowerRivalFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsSpawnPowerRivalFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsSpawnPowerRivalFlag");

	Params::AppSaveGameHelper_IsSpawnPowerRivalFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.IsStickerUnlocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InStickerId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::IsStickerUnlocked(int32 InStickerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "IsStickerUnlocked");

	Params::AppSaveGameHelper_IsStickerUnlocked Parms{};

	Parms.InStickerId = InStickerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.ReflectRivalLose
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EMenuSpeedClassId                 SpeedClassId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ReflectRivalLose(const EMenuSpeedClassId SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ReflectRivalLose");

	Params::AppSaveGameHelper_ReflectRivalLose Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ReflectRivalWin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EMenuSpeedClassId                 SpeedClassId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EDriverId                         DriverId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             MaxRivalLevel                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             PowerRivalAddLevel                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             KnockdownRivalLevel                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSpawnedPowRival                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ReflectRivalWin(const EMenuSpeedClassId SpeedClassId, const EDriverId DriverId, const int32 MaxRivalLevel, const int32 PowerRivalAddLevel, const int32 KnockdownRivalLevel, const bool bSpawnedPowRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ReflectRivalWin");

	Params::AppSaveGameHelper_ReflectRivalWin Parms{};

	Parms.SpeedClassId = SpeedClassId;
	Parms.DriverId = DriverId;
	Parms.MaxRivalLevel = MaxRivalLevel;
	Parms.PowerRivalAddLevel = PowerRivalAddLevel;
	Parms.KnockdownRivalLevel = KnockdownRivalLevel;
	Parms.bSpawnedPowRival = bSpawnedPowRival;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.RemoveCompensationData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::RemoveCompensationData(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "RemoveCompensationData");

	Params::AppSaveGameHelper_RemoveCompensationData Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ResetCompensationData
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::ResetCompensationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetCompensationData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ResetCourseSwitchSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ResetCourseSwitchSetting(EGameModeId InGameModeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetCourseSwitchSetting");

	Params::AppSaveGameHelper_ResetCourseSwitchSetting Parms{};

	Parms.InGameModeId = InGameModeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ResetItemSwitchSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ResetItemSwitchSetting(EGameModeId InGameModeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetItemSwitchSetting");

	Params::AppSaveGameHelper_ResetItemSwitchSetting Parms{};

	Parms.InGameModeId = InGameModeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ResetNewHonorTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::ResetNewHonorTitle(int32 HonorTitleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetNewHonorTitle");

	Params::AppSaveGameHelper_ResetNewHonorTitle Parms{};

	Parms.HonorTitleIndex = HonorTitleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ResetRaceParkCustomRaceSetting
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::ResetRaceParkCustomRaceSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetRaceParkCustomRaceSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.ResetSaveDataIfSpecificMilestoneVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppSaveGameHelper::ResetSaveDataIfSpecificMilestoneVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetSaveDataIfSpecificMilestoneVersion");

	Params::AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppSaveGameHelper.ResetTimeTrialData
// (Final, Native, Static, Public)

void UAppSaveGameHelper::ResetTimeTrialData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "ResetTimeTrialData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.RollbackRivalResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMenuSpeedClassId                       SpeedClassId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::RollbackRivalResult(EMenuSpeedClassId SpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "RollbackRivalResult");

	Params::AppSaveGameHelper_RollbackRivalResult Parms{};

	Parms.SpeedClassId = SpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveAgreedNoticeAgreement
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::SaveAgreedNoticeAgreement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveAgreedNoticeAgreement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveFinishedAdvertiseLogoFlow
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::SaveFinishedAdvertiseLogoFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveFinishedAdvertiseLogoFlow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveNoticeCheckTime
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::SaveNoticeCheckTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveNoticeCheckTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveOnceRomVersionId
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::SaveOnceRomVersionId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveOnceRomVersionId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveTimeTrialMedalAcquisition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInAcquisition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SaveTimeTrialMedalAcquisition(const EStageId InStageId, const ESpeedClassId InSpeedClassId, const bool bInAcquisition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveTimeTrialMedalAcquisition");

	Params::AppSaveGameHelper_SaveTimeTrialMedalAcquisition Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;
	Parms.bInAcquisition = bInAcquisition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveTimeTrialRaceData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserTimeTrialRaceData&    UserTimeTrialRaceData                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SaveTimeTrialRaceData(const struct FUserTimeTrialRaceData& UserTimeTrialRaceData, const EStageId InStageId, const ESpeedClassId InSpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveTimeTrialRaceData");

	Params::AppSaveGameHelper_SaveTimeTrialRaceData Parms{};

	Parms.UserTimeTrialRaceData = std::move(UserTimeTrialRaceData);
	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SaveTimeTrialRewardCountUp
// (Final, Native, Static, Public, BlueprintCallable)

void UAppSaveGameHelper::SaveTimeTrialRewardCountUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SaveTimeTrialRewardCountUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetAlbumAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetAlbumAvailable(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetAlbumAvailable");

	Params::AppSaveGameHelper_SetAlbumAvailable Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetChallengeLastShowProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetChallengeLastShowProgress(float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetChallengeLastShowProgress");

	Params::AppSaveGameHelper_SetChallengeLastShowProgress Parms{};

	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetChallengeShowProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetChallengeShowProgress(int32 InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetChallengeShowProgress");

	Params::AppSaveGameHelper_SetChallengeShowProgress Parms{};

	Parms.InProgress = InProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetCompleteMainChallenge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    InComplete                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetCompleteMainChallenge(bool InComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetCompleteMainChallenge");

	Params::AppSaveGameHelper_SetCompleteMainChallenge Parms{};

	Parms.InComplete = InComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetCompleteSpecialChallenge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    InComplete                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetCompleteSpecialChallenge(bool InComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetCompleteSpecialChallenge");

	Params::AppSaveGameHelper_SetCompleteSpecialChallenge Parms{};

	Parms.InComplete = InComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetCourseSwitchSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EStageId>&                 InStageIds                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetCourseSwitchSetting(EGameModeId InGameModeId, const TArray<EStageId>& InStageIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetCourseSwitchSetting");

	Params::AppSaveGameHelper_SetCourseSwitchSetting Parms{};

	Parms.InGameModeId = InGameModeId;
	Parms.InStageIds = std::move(InStageIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetCustomLapBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserAlbumTrackID&         AlbumTrack                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetCustomLapBGM(int32 Lap, const struct FUserAlbumTrackID& AlbumTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetCustomLapBGM");

	Params::AppSaveGameHelper_SetCustomLapBGM Parms{};

	Parms.Lap = Lap;
	Parms.AlbumTrack = std::move(AlbumTrack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetDodonpaEventCompleteFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGrandPrixEventFlag                     SaveDataFlagId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsComplete                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetDodonpaEventCompleteFlag(EGrandPrixEventFlag SaveDataFlagId, bool IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetDodonpaEventCompleteFlag");

	Params::AppSaveGameHelper_SetDodonpaEventCompleteFlag Parms{};

	Parms.SaveDataFlagId = SaveDataFlagId;
	Parms.IsComplete = IsComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetDriverSelectable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetDriverSelectable(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetDriverSelectable");

	Params::AppSaveGameHelper_SetDriverSelectable Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetDriverUnselectable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetDriverUnselectable(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetDriverUnselectable");

	Params::AppSaveGameHelper_SetDriverUnselectable Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGadgetCustomizeDataSelectedIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGadgetCustomizeDataSelectedIndex(int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGadgetCustomizeDataSelectedIndex");

	Params::AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex Parms{};

	Parms.SelectedIndex = SelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGrandPrixALLKnockDownRivalLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const uint8                             SetValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGrandPrixALLKnockDownRivalLevel(const uint8 SetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGrandPrixALLKnockDownRivalLevel");

	Params::AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel Parms{};

	Parms.SetValue = SetValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGrandPrixALLRivalLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const uint8                             SetValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGrandPrixALLRivalLevel(const uint8 SetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGrandPrixALLRivalLevel");

	Params::AppSaveGameHelper_SetGrandPrixALLRivalLevel Parms{};

	Parms.SetValue = SetValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGrandPrixFirstIrregularAppeared
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bAppeared                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGrandPrixFirstIrregularAppeared(bool bAppeared)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGrandPrixFirstIrregularAppeared");

	Params::AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared Parms{};

	Parms.bAppeared = bAppeared;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGrandPrixLeast1Play
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGrandPrixLeast1Play(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGrandPrixLeast1Play");

	Params::AppSaveGameHelper_SetGrandPrixLeast1Play Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGrandPrixLeast1PlayEachGrandPrix
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGrandPrixId                            GrandPrixId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLeast1Play                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGrandPrixLeast1PlayEachGrandPrix(EGrandPrixId GrandPrixId, bool InLeast1Play)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGrandPrixLeast1PlayEachGrandPrix");

	Params::AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix Parms{};

	Parms.GrandPrixId = GrandPrixId;
	Parms.InLeast1Play = InLeast1Play;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetGrandPrixSelectTimeTrialLinkFirst
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    First                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetGrandPrixSelectTimeTrialLinkFirst(bool First)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetGrandPrixSelectTimeTrialLinkFirst");

	Params::AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst Parms{};

	Parms.First = First;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetHasEnteredMachineCustomizeSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHasEntered                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetHasEnteredMachineCustomizeSequence(bool bInHasEntered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetHasEnteredMachineCustomizeSequence");

	Params::AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence Parms{};

	Parms.bInHasEntered = bInHasEntered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetHintNew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsNew                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetHintNew(EHintId InHintId, bool bInIsNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetHintNew");

	Params::AppSaveGameHelper_SetHintNew Parms{};

	Parms.InHintId = InHintId;
	Parms.bInIsNew = bInIsNew;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetHintRead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetHintRead(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetHintRead");

	Params::AppSaveGameHelper_SetHintRead Parms{};

	Parms.InHintId = InHintId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetHonorTitleIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetHonorTitleIndex(int32 HonorTitleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetHonorTitleIndex");

	Params::AppSaveGameHelper_SetHonorTitleIndex Parms{};

	Parms.HonorTitleIndex = HonorTitleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetIsGhostUploaded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsGhostUploaded                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetIsGhostUploaded(const EStageId InStageId, const ESpeedClassId InSpeedClassId, bool bInIsGhostUploaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetIsGhostUploaded");

	Params::AppSaveGameHelper_SetIsGhostUploaded Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;
	Parms.bInIsGhostUploaded = bInIsGhostUploaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetIsValidGhost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsValidGhost                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetIsValidGhost(const EStageId InStageId, const ESpeedClassId InSpeedClassId, bool bInIsValidGhost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetIsValidGhost");

	Params::AppSaveGameHelper_SetIsValidGhost Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;
	Parms.bInIsValidGhost = bInIsValidGhost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetItemSwitchSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FItemSwitchSettingSave&    InItemSwitchSetting                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetItemSwitchSetting(EGameModeId InGameModeId, const struct FItemSwitchSettingSave& InItemSwitchSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetItemSwitchSetting");

	Params::AppSaveGameHelper_SetItemSwitchSetting Parms{};

	Parms.InGameModeId = InGameModeId;
	Parms.InItemSwitchSetting = std::move(InItemSwitchSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetItemSwitchSettingSave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGameModeId                             InGameModeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FItemSwitchSettingSave&    InItemSwitchSetting                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetItemSwitchSettingSave(EGameModeId InGameModeId, const struct FItemSwitchSettingSave& InItemSwitchSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetItemSwitchSettingSave");

	Params::AppSaveGameHelper_SetItemSwitchSettingSave Parms{};

	Parms.InGameModeId = InGameModeId;
	Parms.InItemSwitchSetting = std::move(InItemSwitchSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetNoticeLobbyInvitationOnRace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetNoticeLobbyInvitationOnRace(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetNoticeLobbyInvitationOnRace");

	Params::AppSaveGameHelper_SetNoticeLobbyInvitationOnRace Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetOpenMirror
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetOpenMirror(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetOpenMirror");

	Params::AppSaveGameHelper_SetOpenMirror Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetOpenSuperSonicSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetOpenSuperSonicSpeed(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetOpenSuperSonicSpeed");

	Params::AppSaveGameHelper_SetOpenSuperSonicSpeed Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetPlayerIconBgColorId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetPlayerIconBgColorId(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetPlayerIconBgColorId");

	Params::AppSaveGameHelper_SetPlayerIconBgColorId Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetPlayerIconId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetPlayerIconId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetPlayerIconId");

	Params::AppSaveGameHelper_SetPlayerIconId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetRaceParkCustomRaceSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPartyRacePresetSetting&   PartyRacePresetSetting                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetRaceParkCustomRaceSetting(const struct FPartyRacePresetSetting& PartyRacePresetSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetRaceParkCustomRaceSetting");

	Params::AppSaveGameHelper_SetRaceParkCustomRaceSetting Parms{};

	Parms.PartyRacePresetSetting = std::move(PartyRacePresetSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetRedStarRingAcquisitionPerStage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<bool>&                     InAcquisition                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetRedStarRingAcquisitionPerStage(const EStageId InStageId, const TArray<bool>& InAcquisition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetRedStarRingAcquisitionPerStage");

	Params::AppSaveGameHelper_SetRedStarRingAcquisitionPerStage Parms{};

	Parms.InStageId = InStageId;
	Parms.InAcquisition = std::move(InAcquisition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetRivalAppearanceCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetRivalAppearanceCount(EDriverId DriverId, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetRivalAppearanceCount");

	Params::AppSaveGameHelper_SetRivalAppearanceCount Parms{};

	Parms.DriverId = DriverId;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetRivalLevelAdjust
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   NewAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetRivalLevelAdjust(int32 NewAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetRivalLevelAdjust");

	Params::AppSaveGameHelper_SetRivalLevelAdjust Parms{};

	Parms.NewAmount = NewAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetRivalWinCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetRivalWinCount(EDriverId DriverId, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetRivalWinCount");

	Params::AppSaveGameHelper_SetRivalWinCount Parms{};

	Parms.DriverId = DriverId;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetSelectedGadgetPresetId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPresetId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetSelectedGadgetPresetId(int32 InPlayerIndex, int32 InPresetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetSelectedGadgetPresetId");

	Params::AppSaveGameHelper_SetSelectedGadgetPresetId Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InPresetId = InPresetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetSpawnGrandPrixALLLevelDownUIFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              SetEnabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetSpawnGrandPrixALLLevelDownUIFlag(const bool SetEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetSpawnGrandPrixALLLevelDownUIFlag");

	Params::AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag Parms{};

	Parms.SetEnabled = SetEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetSpawnGrandPrixLevelDownUIFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EMenuSpeedClassId                 SpeedClassId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              SetEnabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetSpawnGrandPrixLevelDownUIFlag(const EMenuSpeedClassId SpeedClassId, const bool SetEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetSpawnGrandPrixLevelDownUIFlag");

	Params::AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag Parms{};

	Parms.SpeedClassId = SpeedClassId;
	Parms.SetEnabled = SetEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetSpawnPowerRivalFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              SetValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetSpawnPowerRivalFlag(const bool SetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetSpawnPowerRivalFlag");

	Params::AppSaveGameHelper_SetSpawnPowerRivalFlag Parms{};

	Parms.SetValue = SetValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetTimeTrialLastResultId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ETimeTrialWinLoseDispId           InResultId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetTimeTrialLastResultId(const ETimeTrialWinLoseDispId InResultId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetTimeTrialLastResultId");

	Params::AppSaveGameHelper_SetTimeTrialLastResultId Parms{};

	Parms.InResultId = InResultId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetTipsDisplayIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// uint8                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetTipsDisplayIndex(uint8 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetTipsDisplayIndex");

	Params::AppSaveGameHelper_SetTipsDisplayIndex Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetTrackAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetTrackAvailable(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetTrackAvailable");

	Params::AppSaveGameHelper_SetTrackAvailable Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetTutorialActionCompletedFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ETutorialAction                   tutorialAction                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCompleted                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetTutorialActionCompletedFlag(const ETutorialAction tutorialAction, const bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetTutorialActionCompletedFlag");

	Params::AppSaveGameHelper_SetTutorialActionCompletedFlag Parms{};

	Parms.tutorialAction = tutorialAction;
	Parms.bCompleted = bCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetTutorialCompletedFlagPerStage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCompleted                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetTutorialCompletedFlagPerStage(const EStageId InStageId, const bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetTutorialCompletedFlagPerStage");

	Params::AppSaveGameHelper_SetTutorialCompletedFlagPerStage Parms{};

	Parms.InStageId = InStageId;
	Parms.bCompleted = bCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetTutorialPopupDispFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bDisped                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetTutorialPopupDispFlag(const bool bDisped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetTutorialPopupDispFlag");

	Params::AppSaveGameHelper_SetTutorialPopupDispFlag Parms{};

	Parms.bDisped = bDisped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetUserDriverProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserDriverProperty&       InUserDriverProperty                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetUserDriverProperty(EDriverId InDriverId, const struct FUserDriverProperty& InUserDriverProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetUserDriverProperty");

	Params::AppSaveGameHelper_SetUserDriverProperty Parms{};

	Parms.InDriverId = InDriverId;
	Parms.InUserDriverProperty = std::move(InUserDriverProperty);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetUserHintProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EHintId                                 InHintId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserHintProperty&         InUserHintProperty                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetUserHintProperty(EHintId InHintId, const struct FUserHintProperty& InUserHintProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetUserHintProperty");

	Params::AppSaveGameHelper_SetUserHintProperty Parms{};

	Parms.InHintId = InHintId;
	Parms.InUserHintProperty = std::move(InUserHintProperty);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetUserMachineCustomizeData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserMachineCustomizeData& InUserMachineCustomizeData                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetUserMachineCustomizeData(EMachineId InMachineID, const struct FUserMachineCustomizeData& InUserMachineCustomizeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetUserMachineCustomizeData");

	Params::AppSaveGameHelper_SetUserMachineCustomizeData Parms{};

	Parms.InMachineID = InMachineID;
	Parms.InUserMachineCustomizeData = std::move(InUserMachineCustomizeData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetUserNiceCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InNiceCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetUserNiceCount(int32 InNiceCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetUserNiceCount");

	Params::AppSaveGameHelper_SetUserNiceCount Parms{};

	Parms.InNiceCount = InNiceCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetUserSelectedDriverId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetUserSelectedDriverId(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetUserSelectedDriverId");

	Params::AppSaveGameHelper_SetUserSelectedDriverId Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.SetUserSelectedMachineId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::SetUserSelectedMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "SetUserSelectedMachineId");

	Params::AppSaveGameHelper_SetUserSelectedMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppSaveGameHelper.UnlockHonorTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppSaveGameHelper::UnlockHonorTitle(int32 HonorTitleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppSaveGameHelper", "UnlockHonorTitle");

	Params::AppSaveGameHelper_UnlockHonorTitle Parms{};

	Parms.HonorTitleIndex = HonorTitleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppTimeSubsystem.AddNamedDateTimeNow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InTimeName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppTimeSubsystem::AddNamedDateTimeNow(const class FName& InTimeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppTimeSubsystem", "AddNamedDateTimeNow");

	Params::AppTimeSubsystem_AddNamedDateTimeNow Parms{};

	Parms.InTimeName = InTimeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppTimeSubsystem.GetTimeSpanMillisecondsByNamedDateTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InBeginTimeName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InEndTimeName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutTimeSpan                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppTimeSubsystem::GetTimeSpanMillisecondsByNamedDateTimes(const class FName& InBeginTimeName, const class FName& InEndTimeName, int32* OutTimeSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppTimeSubsystem", "GetTimeSpanMillisecondsByNamedDateTimes");

	Params::AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes Parms{};

	Parms.InBeginTimeName = InBeginTimeName;
	Parms.InEndTimeName = InEndTimeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTimeSpan != nullptr)
		*OutTimeSpan = Parms.OutTimeSpan;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppTimeSubsystem.LogTimeSpanMillisecondsByNamedDateTimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InBeginTimeName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InEndTimeName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppTimeSubsystem::LogTimeSpanMillisecondsByNamedDateTimes(const class FName& InBeginTimeName, const class FName& InEndTimeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AppTimeSubsystem", "LogTimeSpanMillisecondsByNamedDateTimes");

	Params::AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes Parms{};

	Parms.InBeginTimeName = InBeginTimeName;
	Parms.InEndTimeName = InEndTimeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppTimeUtil.AddNamedDateTimeNow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InTimeName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppTimeUtil::AddNamedDateTimeNow(const class FName& InTimeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "AddNamedDateTimeNow");

	Params::AppTimeUtil_AddNamedDateTimeNow Parms{};

	Parms.InTimeName = InTimeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppTimeUtil.LocalizeDateTimePlaceholder
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FText&                      BaseText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FDateTime&                 StartDateUTCTime                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDateTime&                 EndDateUTCTime                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAppTimeUtil::LocalizeDateTimePlaceholder(const class FText& BaseText, const struct FDateTime& StartDateUTCTime, const struct FDateTime& EndDateUTCTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "LocalizeDateTimePlaceholder");

	Params::AppTimeUtil_LocalizeDateTimePlaceholder Parms{};

	Parms.BaseText = std::move(BaseText);
	Parms.StartDateUTCTime = std::move(StartDateUTCTime);
	Parms.EndDateUTCTime = std::move(EndDateUTCTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppTimeUtil.LogTimeSpanMillisecondsByNamedDateTimes
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InBeginTimeName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InEndTimeName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppTimeUtil::LogTimeSpanMillisecondsByNamedDateTimes(const class FName& InBeginTimeName, const class FName& InEndTimeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "LogTimeSpanMillisecondsByNamedDateTimes");

	Params::AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes Parms{};

	Parms.InBeginTimeName = InBeginTimeName;
	Parms.InEndTimeName = InEndTimeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AppTimeUtil.MakeDateText
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 DateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAppTimeUtil::MakeDateText(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "MakeDateText");

	Params::AppTimeUtil_MakeDateText Parms{};

	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppTimeUtil.MakeDateTimeText
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 DateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAppTimeUtil::MakeDateTimeText(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "MakeDateTimeText");

	Params::AppTimeUtil_MakeDateTimeText Parms{};

	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppTimeUtil.Sub_DateTimeDateTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDateTime&                 B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UAppTimeUtil::Sub_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "Sub_DateTimeDateTime");

	Params::AppTimeUtil_Sub_DateTimeDateTime Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AppTimeUtil.UnionDateTimeParse
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString&                          DateTimeString                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime*                       OutDateTime                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppTimeUtil::UnionDateTimeParse(class FString& DateTimeString, struct FDateTime* OutDateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppTimeUtil", "UnionDateTimeParse");

	Params::AppTimeUtil_UnionDateTimeParse Parms{};

	Parms.DateTimeString = std::move(DateTimeString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	DateTimeString = std::move(Parms.DateTimeString);

	if (OutDateTime != nullptr)
		*OutDateTime = std::move(Parms.OutDateTime);

	return Parms.ReturnValue;
}


// Function UnionSystem.AppViewUtil.CalcViewSplitId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSelectedPlayerCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewSplitId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EViewSplitId UAppViewUtil::CalcViewSplitId(int32 InPlayerControllerIndex, int32 InSelectedPlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppViewUtil", "CalcViewSplitId");

	Params::AppViewUtil_CalcViewSplitId Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InSelectedPlayerCount = InSelectedPlayerCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.DebugGetOnlineToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Endpoint                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAuthSubsystem::DebugGetOnlineToken(const class FString& Endpoint, int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "DebugGetOnlineToken");

	Params::AuthSubsystem_DebugGetOnlineToken Parms{};

	Parms.Endpoint = std::move(Endpoint);
	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.DebugPrintLoggedInUserInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAuthSubsystem::DebugPrintLoggedInUserInfo(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "DebugPrintLoggedInUserInfo");

	Params::AuthSubsystem_DebugPrintLoggedInUserInfo Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.GetOnlineToken
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          outToken                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAuthSubsystem::GetOnlineToken(int32 LocalUserNum, class FString* outToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetOnlineToken");

	Params::AuthSubsystem_GetOnlineToken Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outToken != nullptr)
		*outToken = std::move(Parms.outToken);

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetOnlineTokenFromnUniqueNetId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          outToken                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAuthSubsystem::GetOnlineTokenFromnUniqueNetId(const struct FUniqueNetIdRepl& UserId, class FString* outToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetOnlineTokenFromnUniqueNetId");

	Params::AuthSubsystem_GetOnlineTokenFromnUniqueNetId Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outToken != nullptr)
		*outToken = std::move(Parms.outToken);

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.OnCompleteUserGetDataRequest
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAuthSubsystem::OnCompleteUserGetDataRequest(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "OnCompleteUserGetDataRequest");

	Params::AuthSubsystem_OnCompleteUserGetDataRequest Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.SetCachedAppUserBaseData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetDataResponse&      Response                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAuthSubsystem::SetCachedAppUserBaseData(const struct FUserGetDataResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "SetCachedAppUserBaseData");

	Params::AuthSubsystem_SetCachedAppUserBaseData Parms{};

	Parms.Response = std::move(Response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.SetCachedAppUserFairPlayPointData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointCheckFairPointResponse&Response                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAuthSubsystem::SetCachedAppUserFairPlayPointData(const struct FFairPointCheckFairPointResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "SetCachedAppUserFairPlayPointData");

	Params::AuthSubsystem_SetCachedAppUserFairPlayPointData Parms{};

	Parms.Response = std::move(Response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.SetupCachedAppUserBaseData
// (Final, Native, Public, BlueprintCallable)

void UAuthSubsystem::SetupCachedAppUserBaseData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "SetupCachedAppUserBaseData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.StartLogin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 LocalUserNum, bool bWasSuccessful, const class FString& ErrorMessage)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAuthSubsystem::StartLogin(int32 LocalUserNum, TDelegate<void(int32 LocalUserNum, bool bWasSuccessful, const class FString& ErrorMessage)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "StartLogin");

	Params::AuthSubsystem_StartLogin Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.StartLogout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 LocalUserNum, bool bWasSuccessful)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAuthSubsystem::StartLogout(int32 LocalUserNum, TDelegate<void(int32 LocalUserNum, bool bWasSuccessful)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "StartLogout");

	Params::AuthSubsystem_StartLogout Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.AuthSubsystem.CreatePlatformUniquePlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    PlayerIdString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UAuthSubsystem::CreatePlatformUniquePlayerId(const class FString& PlayerIdString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "CreatePlatformUniquePlayerId");

	Params::AuthSubsystem_CreatePlatformUniquePlayerId Parms{};

	Parms.PlayerIdString = std::move(PlayerIdString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.CreateUniquePlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    PlayerIdString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UAuthSubsystem::CreateUniquePlayerId(const class FString& PlayerIdString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "CreateUniquePlayerId");

	Params::AuthSubsystem_CreateUniquePlayerId Parms{};

	Parms.PlayerIdString = std::move(PlayerIdString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetAuthenticatedWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetAuthenticatedWith(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetAuthenticatedWith");

	Params::AuthSubsystem_GetAuthenticatedWith Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetCachedAppUserBaseData
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const struct FAppUserBaseData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FAppUserBaseData UAuthSubsystem::GetCachedAppUserBaseData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetCachedAppUserBaseData");

	Params::AuthSubsystem_GetCachedAppUserBaseData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetEOSAuthToken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetEOSAuthToken(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetEOSAuthToken");

	Params::AuthSubsystem_GetEOSAuthToken Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetExternalAccountId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetExternalAccountId(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetExternalAccountId");

	Params::AuthSubsystem_GetExternalAccountId Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetLoggedInPlayerNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetLoggedInPlayerNickname(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetLoggedInPlayerNickname");

	Params::AuthSubsystem_GetLoggedInPlayerNickname Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetLoggedInUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UAuthSubsystem::GetLoggedInUserId(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetLoggedInUserId");

	Params::AuthSubsystem_GetLoggedInUserId Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetLoggedInUserIdString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetLoggedInUserIdString(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetLoggedInUserIdString");

	Params::AuthSubsystem_GetLoggedInUserIdString Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetOnlineEnvironment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetOnlineEnvironment(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetOnlineEnvironment");

	Params::AuthSubsystem_GetOnlineEnvironment Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.GetPlatformToken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAuthSubsystem::GetPlatformToken(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "GetPlatformToken");

	Params::AuthSubsystem_GetPlatformToken Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.IsLoggedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAuthSubsystem::IsLoggedIn(int32 LocalUserNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "IsLoggedIn");

	Params::AuthSubsystem_IsLoggedIn Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.AuthSubsystem.IsMatchLoggedInUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAuthSubsystem::IsMatchLoggedInUserId(const class FString& ProductUserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuthSubsystem", "IsMatchLoggedInUserId");

	Params::AuthSubsystem_IsMatchLoggedInUserId Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.BPFL_AppInputUtil.GetAppPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ControllerId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAppPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAppPlayerController* UBPFL_AppInputUtil::GetAppPlayerController(int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AppInputUtil", "GetAppPlayerController");

	Params::BPFL_AppInputUtil_GetAppPlayerController Parms{};

	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.BPFL_AppInputUtil.IsRegisteredMenuObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          MenuObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBPFL_AppInputUtil::IsRegisteredMenuObject(int32 InPlayerIndex, class UObject* MenuObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AppInputUtil", "IsRegisteredMenuObject");

	Params::BPFL_AppInputUtil_IsRegisteredMenuObject Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.MenuObject = MenuObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.BPFL_AppInputUtil.UnRegisterMenuObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          MenuObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAppInputValid*                         OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_AppInputUtil::UnRegisterMenuObject(int32 InPlayerIndex, class UObject* MenuObject, EAppInputValid* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AppInputUtil", "UnRegisterMenuObject");

	Params::BPFL_AppInputUtil_UnRegisterMenuObject Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.MenuObject = MenuObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function UnionSystem.BPFL_AutoPlay.DoInputKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKey&                      Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGamepad                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_AutoPlay::DoInputKey(class APlayerController* Controller, const struct FKey& Key, EInputEvent EventType, double Delta, bool bGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AutoPlay", "DoInputKey");

	Params::BPFL_AutoPlay_DoInputKey Parms{};

	Parms.Controller = Controller;
	Parms.Key = std::move(Key);
	Parms.EventType = EventType;
	Parms.Delta = Delta;
	Parms.bGamepad = bGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.BPFL_AutoPlay.DoInputMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAppPlayerController*             AppController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMenuInputKey                           InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_AutoPlay::DoInputMenu(class AAppPlayerController* AppController, EMenuInputKey InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AutoPlay", "DoInputMenu");

	Params::BPFL_AutoPlay_DoInputMenu Parms{};

	Parms.AppController = AppController;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.BPFL_AutoPlay.DoInputRacePressed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARacePlayerController*            RaceController                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERaceInputKey                           InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_AutoPlay::DoInputRacePressed(class ARacePlayerController* RaceController, ERaceInputKey InKey, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AutoPlay", "DoInputRacePressed");

	Params::BPFL_AutoPlay_DoInputRacePressed Parms{};

	Parms.RaceController = RaceController;
	Parms.InKey = InKey;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.BPFL_AutoPlay.DoInputRaceReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARacePlayerController*            RaceController                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERaceInputKey                           InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_AutoPlay::DoInputRaceReleased(class ARacePlayerController* RaceController, ERaceInputKey InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_AutoPlay", "DoInputRaceReleased");

	Params::BPFL_AutoPlay_DoInputRaceReleased Parms{};

	Parms.RaceController = RaceController;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.CollectHelper.CollectBytesData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Suffix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCollectHelper::CollectBytesData(const class FString& Name_0, const class FString& Suffix, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectBytesData");

	Params::CollectHelper_CollectBytesData Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Suffix = std::move(Suffix);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CollectHelper.CollectCacheDirectory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCollectHelper::CollectCacheDirectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectCacheDirectory");

	Params::CollectHelper_CollectCacheDirectory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CollectHelper.CollectChangeList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCollectHelper::CollectChangeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectChangeList");

	Params::CollectHelper_CollectChangeList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CollectHelper.CollectCheckEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCollectHelper::CollectCheckEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectCheckEnabled");

	Params::CollectHelper_CollectCheckEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CollectHelper.CollectLevelName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCollectHelper::CollectLevelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectLevelName");

	Params::CollectHelper_CollectLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CollectHelper.CollectScreenShot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCollectHelper::CollectScreenShot(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectScreenShot");

	Params::CollectHelper_CollectScreenShot Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CollectHelper.CollectStringData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Suffix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCollectHelper::CollectStringData(const class FString& Name_0, const class FString& Suffix, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CollectHelper", "CollectStringData");

	Params::CollectHelper_CollectStringData Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Suffix = std::move(Suffix);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CryptoHelper.DecryptFromTextString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    HexKey                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Vector                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptoHelper::DecryptFromTextString(const class FString& Data, const class FString& HexKey, const class FString& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptoHelper", "DecryptFromTextString");

	Params::CryptoHelper_DecryptFromTextString Parms{};

	Parms.Data = std::move(Data);
	Parms.HexKey = std::move(HexKey);
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CryptoHelper.EncryptFromByteArrayIntoTextString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    HexKey                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Vector                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptoHelper::EncryptFromByteArrayIntoTextString(const TArray<uint8>& Bytes, const class FString& HexKey, const class FString& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptoHelper", "EncryptFromByteArrayIntoTextString");

	Params::CryptoHelper_EncryptFromByteArrayIntoTextString Parms{};

	Parms.Bytes = std::move(Bytes);
	Parms.HexKey = std::move(HexKey);
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.CryptoHelper.EncryptIntoTextString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    HexKey                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Vector                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptoHelper::EncryptIntoTextString(const class FString& Data, const class FString& HexKey, const class FString& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptoHelper", "EncryptIntoTextString");

	Params::CryptoHelper_EncryptIntoTextString Parms{};

	Parms.Data = std::move(Data);
	Parms.HexKey = std::move(HexKey);
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectBytesData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Suffix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDataCollectSubsystem::CollectBytesData(const class FString& Name_0, const class FString& Suffix, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectBytesData");

	Params::DataCollectSubsystem_CollectBytesData Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Suffix = std::move(Suffix);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectCacheDirectory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDataCollectSubsystem::CollectCacheDirectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectCacheDirectory");

	Params::DataCollectSubsystem_CollectCacheDirectory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectCheckEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataCollectSubsystem::CollectCheckEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectCheckEnabled");

	Params::DataCollectSubsystem_CollectCheckEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDataCollectSubsystem::CollectLevelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectLevelName");

	Params::DataCollectSubsystem_CollectLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectScreenShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDataCollectSubsystem::CollectScreenShot(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectScreenShot");

	Params::DataCollectSubsystem_CollectScreenShot Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectStringData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Suffix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDataCollectSubsystem::CollectStringData(const class FString& Name_0, const class FString& Suffix, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectStringData");

	Params::DataCollectSubsystem_CollectStringData Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Suffix = std::move(Suffix);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DataCollectSubsystem.CollectChangeList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDataCollectSubsystem::CollectChangeList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataCollectSubsystem", "CollectChangeList");

	Params::DataCollectSubsystem_CollectChangeList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DebugImportantLogLine.SetLog
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LogString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DateTimeString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogLine::SetLog(const class FString& ClassName, const class FString& LogString, const class FString& DateTimeString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugImportantLogLine", "SetLog");

	Params::DebugImportantLogLine_SetLog Parms{};

	Parms.ClassName = std::move(ClassName);
	Parms.LogString = std::move(LogString);
	Parms.DateTimeString = std::move(DateTimeString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionSystem.DebugImportantLogPanel.AddLog
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LogString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DateTimeString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogPanel::AddLog(const class FString& ClassName, const class FString& LogString, const class FString& DateTimeString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugImportantLogPanel", "AddLog");

	Params::DebugImportantLogPanel_AddLog Parms{};

	Parms.ClassName = std::move(ClassName);
	Parms.LogString = std::move(LogString);
	Parms.DateTimeString = std::move(DateTimeString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionSystem.DebugImportantLogSubsystem.AddImportantLog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LogLocation                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LogString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogSubsystem::AddImportantLog(const class FString& LogLocation, const class FString& LogString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugImportantLogSubsystem", "AddImportantLog");

	Params::DebugImportantLogSubsystem_AddImportantLog Parms{};

	Parms.LogLocation = std::move(LogLocation);
	Parms.LogString = std::move(LogString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugImportantLogSubsystem.GetImportantLogPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDebugImportantLogPanel*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDebugImportantLogPanel* UDebugImportantLogSubsystem::GetImportantLogPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugImportantLogSubsystem", "GetImportantLogPanel");

	Params::DebugImportantLogSubsystem_GetImportantLogPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DebugImportantLogSubsystem.SetImportantLogCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogSubsystem::SetImportantLogCount(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugImportantLogSubsystem", "SetImportantLogCount");

	Params::DebugImportantLogSubsystem_SetImportantLogCount Parms{};

	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugImportantLogSubsystem.SetImportantLogPanelVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogSubsystem::SetImportantLogPanelVisible(bool bNewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugImportantLogSubsystem", "SetImportantLogPanelVisible");

	Params::DebugImportantLogSubsystem_SetImportantLogPanelVisible Parms{};

	Parms.bNewVisible = bNewVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugImportantLogUtil.AddImportantLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LogLocation                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LogString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogUtil::AddImportantLog(const class FString& LogLocation, const class FString& LogString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugImportantLogUtil", "AddImportantLog");

	Params::DebugImportantLogUtil_AddImportantLog Parms{};

	Parms.LogLocation = std::move(LogLocation);
	Parms.LogString = std::move(LogString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugImportantLogUtil.SetImportantLogCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogUtil::SetImportantLogCount(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugImportantLogUtil", "SetImportantLogCount");

	Params::DebugImportantLogUtil_SetImportantLogCount Parms{};

	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugImportantLogUtil.SetImportantLogVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugImportantLogUtil::SetImportantLogVisible(bool bNewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugImportantLogUtil", "SetImportantLogVisible");

	Params::DebugImportantLogUtil_SetImportantLogVisible Parms{};

	Parms.bNewVisible = bNewVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugOnlineAutoPlaySetting.GetDebugAutoPlayMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDebugOnlineAutoPlaySetting::GetDebugAutoPlayMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugOnlineAutoPlaySetting", "GetDebugAutoPlayMode");

	Params::DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DebugOnlineAutoPlaySetting.IsDebugAutoPlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDebugOnlineAutoPlaySetting::IsDebugAutoPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugOnlineAutoPlaySetting", "IsDebugAutoPlay");

	Params::DebugOnlineAutoPlaySetting_IsDebugAutoPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DebugOnlineAutoPlaySetting.IsDebugAutoPlayShortRace
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDebugOnlineAutoPlaySetting::IsDebugAutoPlayShortRace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugOnlineAutoPlaySetting", "IsDebugAutoPlayShortRace");

	Params::DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DebugOnlineAutoPlaySetting.SetDebugAutoPlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugOnlineAutoPlaySetting::SetDebugAutoPlay(bool flg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugOnlineAutoPlaySetting", "SetDebugAutoPlay");

	Params::DebugOnlineAutoPlaySetting_SetDebugAutoPlay Parms{};

	Parms.flg = flg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugOnlineAutoPlaySetting.SetDebugAutoPlayMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugOnlineAutoPlaySetting::SetDebugAutoPlayMode(int32 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugOnlineAutoPlaySetting", "SetDebugAutoPlayMode");

	Params::DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugOnlineAutoPlaySetting.SetDebugAutoPlayShortRace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugOnlineAutoPlaySetting::SetDebugAutoPlayShortRace(bool flg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugOnlineAutoPlaySetting", "SetDebugAutoPlayShortRace");

	Params::DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace Parms{};

	Parms.flg = flg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DeviceChangeInterface.ChangeInputTypeIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAppControllerInputType                 InNewControllerInputType                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IDeviceChangeInterface::ChangeInputTypeIF(EAppControllerInputType InNewControllerInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("DeviceChangeInterface", "ChangeInputTypeIF");

	Params::DeviceChangeInterface_ChangeInputTypeIF Parms{};

	Parms.InNewControllerInputType = InNewControllerInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DeviceChangeInterface.ChangeKeyboardLayoutIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InNewKeyboardLayout                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InNewKeytopPattern                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IDeviceChangeInterface::ChangeKeyboardLayoutIF(uint8 InNewKeyboardLayout, uint8 InNewKeytopPattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("DeviceChangeInterface", "ChangeKeyboardLayoutIF");

	Params::DeviceChangeInterface_ChangeKeyboardLayoutIF Parms{};

	Parms.InNewKeyboardLayout = InNewKeyboardLayout;
	Parms.InNewKeytopPattern = InNewKeytopPattern;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DriverIdUtilityLibrary.GetRaceRivalDriverId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameModeId                             GameModeID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDriverId UDriverIdUtilityLibrary::GetRaceRivalDriverId(EGameModeId GameModeID, EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DriverIdUtilityLibrary", "GetRaceRivalDriverId");

	Params::DriverIdUtilityLibrary_GetRaceRivalDriverId Parms{};

	Parms.GameModeID = GameModeID;
	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DriverIdUtilityLibrary.GetRivalDriverId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDriverId UDriverIdUtilityLibrary::GetRivalDriverId(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DriverIdUtilityLibrary", "GetRivalDriverId");

	Params::DriverIdUtilityLibrary_GetRivalDriverId Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.BeginTransaction
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::BeginTransaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "BeginTransaction");

	Params::LobbyMemberContextBase_BeginTransaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.EndTransaction
// (Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::EndTransaction(TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "EndTransaction");

	Params::LobbyMemberContextBase_EndTransaction Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.EndTransaction_NoCallback
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::EndTransaction_NoCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "EndTransaction_NoCallback");

	Params::LobbyMemberContextBase_EndTransaction_NoCallback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.OnMemberUpdateInternal
// (Native, Event, Protected, BlueprintEvent)

void ULobbyMemberContextBase::OnMemberUpdateInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "OnMemberUpdateInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberContextBase.OnUpdateMemberSelfComplete
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyOperationResult&     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberContextBase::OnUpdateMemberSelfComplete(bool bSuccessful, const struct FLobbyOperationResult& Result, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "OnUpdateMemberSelfComplete");

	Params::LobbyMemberContextBase_OnUpdateMemberSelfComplete Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberContextBase.SetupLocalMemberAttributeInternal
// (Native, Event, Protected, BlueprintEvent)

void ULobbyMemberContextBase::SetupLocalMemberAttributeInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "SetupLocalMemberAttributeInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberContextBase.Compare
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULobbyMemberContextBase*          Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::Compare(class ULobbyMemberContextBase* Other) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "Compare");

	Params::LobbyMemberContextBase_Compare Parms{};

	Parms.Other = Other;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.GetAppUserBaseData
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FAppUserBaseData*                OutAppUserBaseData                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::GetAppUserBaseData(struct FAppUserBaseData* OutAppUserBaseData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "GetAppUserBaseData");

	Params::LobbyMemberContextBase_GetAppUserBaseData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppUserBaseData != nullptr)
		*OutAppUserBaseData = std::move(Parms.OutAppUserBaseData);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.GetInternalUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyMemberContextBase::GetInternalUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "GetInternalUserId");

	Params::LobbyMemberContextBase_GetInternalUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.GetLobbyMemberIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbyMemberContextBase::GetLobbyMemberIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "GetLobbyMemberIndex");

	Params::LobbyMemberContextBase_GetLobbyMemberIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.GetSystemMiscVersions
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32*                                  romType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  RomVersion                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  MasterDataVersion                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::GetSystemMiscVersions(int32* romType, int32* RomVersion, int32* MasterDataVersion) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "GetSystemMiscVersions");

	Params::LobbyMemberContextBase_GetSystemMiscVersions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (romType != nullptr)
		*romType = Parms.romType;

	if (RomVersion != nullptr)
		*RomVersion = Parms.RomVersion;

	if (MasterDataVersion != nullptr)
		*MasterDataVersion = Parms.MasterDataVersion;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.GetUserIdRepl
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl*                OutResult                                              (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberContextBase::GetUserIdRepl(struct FUniqueNetIdRepl* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "GetUserIdRepl");

	Params::LobbyMemberContextBase_GetUserIdRepl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.LobbyMemberContextBase.GetUserIdString
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString*                          OutResult                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberContextBase::GetUserIdString(class FString* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "GetUserIdString");

	Params::LobbyMemberContextBase_GetUserIdString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.LobbyMemberContextBase.IsCom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::IsCom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "IsCom");

	Params::LobbyMemberContextBase_IsCom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.IsLobbyHost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::IsLobbyHost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "IsLobbyHost");

	Params::LobbyMemberContextBase_IsLobbyHost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.IsLocalUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::IsLocalUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "IsLocalUser");

	Params::LobbyMemberContextBase_IsLocalUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyMemberContextBase.IsValetCom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyMemberContextBase::IsValetCom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberContextBase", "IsValetCom");

	Params::LobbyMemberContextBase_IsValetCom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.EnhancedInputHelper.ExchangeInputKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UInputMappingContext*             InputMappingContext                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEnhancedActionKeyMapping& BeforeMapping                                          (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKey&                      AfterKey                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEnhancedInputHelper::ExchangeInputKey(class UInputMappingContext* InputMappingContext, const struct FEnhancedActionKeyMapping& BeforeMapping, const struct FKey& AfterKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EnhancedInputHelper", "ExchangeInputKey");

	Params::EnhancedInputHelper_ExchangeInputKey Parms{};

	Parms.InputMappingContext = InputMappingContext;
	Parms.BeforeMapping = std::move(BeforeMapping);
	Parms.AfterKey = std::move(AfterKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.EnhancedInputHelper.GetEnhancedActionKeyMappingByName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UInputMappingContext*             InputMappingContext                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InputName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FEnhancedActionKeyMapping>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FEnhancedActionKeyMapping> UEnhancedInputHelper::GetEnhancedActionKeyMappingByName(class UInputMappingContext* InputMappingContext, const class FName& InputName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EnhancedInputHelper", "GetEnhancedActionKeyMappingByName");

	Params::EnhancedInputHelper_GetEnhancedActionKeyMappingByName Parms{};

	Parms.InputMappingContext = InputMappingContext;
	Parms.InputName = InputName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUIDataAsset.ClearData
// (Final, Native, Public, BlueprintCallable)

void UFestaUIDataAsset::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "ClearData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FestaUIDataAsset.GetFestaUITableDataTeamUIDataArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InFestaId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FFestaTeamUIData>   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FFestaTeamUIData> UFestaUIDataAsset::GetFestaUITableDataTeamUIDataArray(int32 InFestaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "GetFestaUITableDataTeamUIDataArray");

	Params::FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray Parms{};

	Parms.InFestaId = InFestaId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUIDataAsset.GetFestaUITableDataTeamUIDataArrayIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FFestaTeamUIData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FFestaTeamUIData UFestaUIDataAsset::GetFestaUITableDataTeamUIDataArrayIndex(class FName RowName, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "GetFestaUITableDataTeamUIDataArrayIndex");

	Params::FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex Parms{};

	Parms.RowName = RowName;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUIDataAsset.GetFestaUITableSignageTex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UTexture2D>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftObjectPtr<class UTexture2D>> UFestaUIDataAsset::GetFestaUITableSignageTex(class FName RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "GetFestaUITableSignageTex");

	Params::FestaUIDataAsset_GetFestaUITableSignageTex Parms{};

	Parms.RowName = RowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUIDataAsset.GetFestaUITeamUIDataByGroupColorId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGroupColorId                           GroupColorID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFestaTeamUIData>*        ArrayData                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool*                                   IsFound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFestaUIDataAsset::GetFestaUITeamUIDataByGroupColorId(int32 TeamId, EGroupColorId GroupColorID, TArray<struct FFestaTeamUIData>* ArrayData, bool* IsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "GetFestaUITeamUIDataByGroupColorId");

	Params::FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId Parms{};

	Parms.TeamId = TeamId;
	Parms.GroupColorID = GroupColorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ArrayData != nullptr)
		*ArrayData = std::move(Parms.ArrayData);

	if (IsFound != nullptr)
		*IsFound = Parms.IsFound;
}


// Function UnionSystem.FestaUIDataAsset.IsFestaUITableDataTeamUIDataArrayIndexFound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFestaUIDataAsset::IsFestaUITableDataTeamUIDataArrayIndexFound(class FName RowName, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "IsFestaUITableDataTeamUIDataArrayIndexFound");

	Params::FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound Parms{};

	Parms.RowName = RowName;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUIDataAsset.Update
// (Final, Native, Public, BlueprintCallable)

void UFestaUIDataAsset::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FestaUIDataAsset.GetFestaUIData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   festaId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bFoundData                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFestaUIData*                    FestaUIData                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UFestaUIDataAsset::GetFestaUIData(int32 festaId, bool* bFoundData, struct FFestaUIData* FestaUIData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestaUIDataAsset", "GetFestaUIData");

	Params::FestaUIDataAsset_GetFestaUIData Parms{};

	Parms.festaId = festaId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFoundData != nullptr)
		*bFoundData = Parms.bFoundData;

	if (FestaUIData != nullptr)
		*FestaUIData = std::move(Parms.FestaUIData);
}


// Function UnionSystem.FestaUtil.ConvertFestaIdToTypeId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             festaId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFestaUtil::ConvertFestaIdToTypeId(const int32 festaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "ConvertFestaIdToTypeId");

	Params::FestaUtil_ConvertFestaIdToTypeId Parms{};

	Parms.festaId = festaId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaChanceUpRatioText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFestaUtil::GetFestaChanceUpRatioText(int32 Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaChanceUpRatioText");

	Params::FestaUtil_GetFestaChanceUpRatioText Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaGroupColorId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   festaId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGroupColorId                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGroupColorId UFestaUtil::GetFestaGroupColorId(int32 festaId, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaGroupColorId");

	Params::FestaUtil_GetFestaGroupColorId Parms{};

	Parms.festaId = festaId;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaIdUtil
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFestaUtil::GetFestaIdUtil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaIdUtil");

	Params::FestaUtil_GetFestaIdUtil Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaMainColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UFestaUtil::GetFestaMainColor(int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaMainColor");

	Params::FestaUtil_GetFestaMainColor Parms{};

	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaPointText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFestaUtil::GetFestaPointText(int32 Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaPointText");

	Params::FestaUtil_GetFestaPointText Parms{};

	Parms.Point = Point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaRentalPlateText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TargetGadgetname                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFestaUtil::GetFestaRentalPlateText(const class FText& TargetGadgetname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaRentalPlateText");

	Params::FestaUtil_GetFestaRentalPlateText Parms{};

	Parms.TargetGadgetname = std::move(TargetGadgetname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FestaUtil.GetFestaUIColorInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   festaId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIColorInfo                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUIColorInfo UFestaUtil::GetFestaUIColorInfo(int32 festaId, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FestaUtil", "GetFestaUIColorInfo");

	Params::FestaUtil_GetFestaUIColorInfo Parms{};

	Parms.festaId = festaId;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.AddBlockPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EBlockPlayerErrorCode ErrorCode, const class FString& ProductUserId)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::AddBlockPlayer(const class FString& ProductUserId, TDelegate<void(EBlockPlayerErrorCode ErrorCode, const class FString& ProductUserId)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "AddBlockPlayer");

	Params::FriendSubsystem_AddBlockPlayer Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.AddReceivedLobbyInvitationCount
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::AddReceivedLobbyInvitationCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "AddReceivedLobbyInvitationCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.AddRecentPlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FUniqueNetIdRepl>&        IdList                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Date                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::AddRecentPlayers(int32 LocalUserNum, TArray<struct FUniqueNetIdRepl>& IdList, const class FString& Date)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "AddRecentPlayers");

	Params::FriendSubsystem_AddRecentPlayers Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.IdList = std::move(IdList);
	Parms.Date = std::move(Date);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	IdList = std::move(Parms.IdList);
}


// Function UnionSystem.FriendSubsystem.CallOnGetFriendInfoComplete
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExternalIds                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ConvertedIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendSubsystem::CallOnGetFriendInfoComplete(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "CallOnGetFriendInfoComplete");

	Params::FriendSubsystem_CallOnGetFriendInfoComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ExternalIds = std::move(ExternalIds);
	Parms.ConvertedIds = std::move(ConvertedIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.ClearFinishedForceUpdateFriendListFlag
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::ClearFinishedForceUpdateFriendListFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ClearFinishedForceUpdateFriendListFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.ClearRecentPlayer
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::ClearRecentPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ClearRecentPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.ContainsBlockPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            ProductUserIds                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutBlockPlayerIds                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::ContainsBlockPlayer(const TArray<class FString>& ProductUserIds, TArray<class FString>* OutBlockPlayerIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ContainsBlockPlayer");

	Params::FriendSubsystem_ContainsBlockPlayer Parms{};

	Parms.ProductUserIds = std::move(ProductUserIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBlockPlayerIds != nullptr)
		*OutBlockPlayerIds = std::move(Parms.OutBlockPlayerIds);

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.ConvertPlatformIdToUserIdRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FUniqueNetIdRepl>&        IdList                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForceConvert                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::ConvertPlatformIdToUserIdRequest(TArray<struct FUniqueNetIdRepl>& IdList, TDelegate<void(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)> OnComplete, bool ForceConvert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ConvertPlatformIdToUserIdRequest");

	Params::FriendSubsystem_ConvertPlatformIdToUserIdRequest Parms{};

	Parms.IdList = std::move(IdList);
	Parms.OnComplete = OnComplete;
	Parms.ForceConvert = ForceConvert;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	IdList = std::move(Parms.IdList);

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.DebugToggleBlockPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::DebugToggleBlockPlayerState(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "DebugToggleBlockPlayerState");

	Params::FriendSubsystem_DebugToggleBlockPlayerState Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.DeleteBlockPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::DeleteBlockPlayer(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "DeleteBlockPlayer");

	Params::FriendSubsystem_DeleteBlockPlayer Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.DeleteRecentPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::DeleteRecentPlayer(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "DeleteRecentPlayer");

	Params::FriendSubsystem_DeleteRecentPlayer Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.ForceUpdateFriendList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::ForceUpdateFriendList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ForceUpdateFriendList");

	Params::FriendSubsystem_ForceUpdateFriendList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetAppSupportedPlatformByStringData
// (Final, Native, Private)
// Parameters:
// const class FString&                    InPlatformStr                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAppSupportedPlatform                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAppSupportedPlatform UFriendSubsystem::GetAppSupportedPlatformByStringData(const class FString& InPlatformStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetAppSupportedPlatformByStringData");

	Params::FriendSubsystem_GetAppSupportedPlatformByStringData Parms{};

	Parms.InPlatformStr = std::move(InPlatformStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetBlockPlayerList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>*                  OutBlockPlayers                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EBlockPlayerFilter                      Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::GetBlockPlayerList(TArray<class FString>* OutBlockPlayers, EBlockPlayerFilter Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetBlockPlayerList");

	Params::FriendSubsystem_GetBlockPlayerList Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBlockPlayers != nullptr)
		*OutBlockPlayers = std::move(Parms.OutBlockPlayers);
}


// Function UnionSystem.FriendSubsystem.GetBlockPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBlockPlayerState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBlockPlayerState UFriendSubsystem::GetBlockPlayerState(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetBlockPlayerState");

	Params::FriendSubsystem_GetBlockPlayerState Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetFriendInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool PlatformFriend, bool TerraFriend, const class FString& userName, const struct FFriendCommonPart_FriendData& FriendData)>OnCompleted                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::GetFriendInfo(const class FString& ProductUserId, TDelegate<void(bool PlatformFriend, bool TerraFriend, const class FString& userName, const struct FFriendCommonPart_FriendData& FriendData)> OnCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetFriendInfo");

	Params::FriendSubsystem_GetFriendInfo Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.OnCompleted = OnCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.GetPlatformTypeByStringData
// (Final, Native, Private)
// Parameters:
// const class FString&                    InPlatformStr                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECrossplayPlatform                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECrossplayPlatform UFriendSubsystem::GetPlatformTypeByStringData(const class FString& InPlatformStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetPlatformTypeByStringData");

	Params::FriendSubsystem_GetPlatformTypeByStringData Parms{};

	Parms.InPlatformStr = std::move(InPlatformStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetRecentPlayerList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString>*     OutRecentPlayers                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::GetRecentPlayerList(TMap<class FString, class FString>* OutRecentPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetRecentPlayerList");

	Params::FriendSubsystem_GetRecentPlayerList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRecentPlayers != nullptr)
		*OutRecentPlayers = std::move(Parms.OutRecentPlayers);

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetRecentPlayerStatsSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::GetRecentPlayerStatsSimple(TDelegate<void(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetRecentPlayerStatsSimple");

	Params::FriendSubsystem_GetRecentPlayerStatsSimple Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.GetTerraFriendCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FFriendGetFriendListResponse&list                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendSubsystem::GetTerraFriendCallback(bool bWasSuccessful, const struct FFriendGetFriendListResponse& list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetTerraFriendCallback");

	Params::FriendSubsystem_GetTerraFriendCallback Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.list = std::move(list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.GetTerraFriendList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bWasSuccessful, const struct FFriendGetFriendListResponse& list)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::GetTerraFriendList(TDelegate<void(bool bWasSuccessful, const struct FFriendGetFriendListResponse& list)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetTerraFriendList");

	Params::FriendSubsystem_GetTerraFriendList Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetTerraFriendNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFriendSubsystem::GetTerraFriendNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetTerraFriendNum");

	Params::FriendSubsystem_GetTerraFriendNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetUserProfileGDK
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>&                  XuidStrings                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, EGetUserProfileError Error, const TArray<class FString>& GamerTags)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::GetUserProfileGDK(int32 LocalUserNum, TArray<class FString>& XuidStrings, TDelegate<void(bool bWasSuccessful, EGetUserProfileError Error, const TArray<class FString>& GamerTags)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetUserProfileGDK");

	Params::FriendSubsystem_GetUserProfileGDK Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.XuidStrings = std::move(XuidStrings);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	XuidStrings = std::move(Parms.XuidStrings);
}


// Function UnionSystem.FriendSubsystem.IsAcceptWaitPlayerExist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsAcceptWaitPlayerExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsAcceptWaitPlayerExist");

	Params::FriendSubsystem_IsAcceptWaitPlayerExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsBlocked(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsBlocked");

	Params::FriendSubsystem_IsBlocked Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsEnableGetUserProfileGDK
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsEnableGetUserProfileGDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsEnableGetUserProfileGDK");

	Params::FriendSubsystem_IsEnableGetUserProfileGDK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsFinishedForceUpdateFriendList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsFinishedForceUpdateFriendList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsFinishedForceUpdateFriendList");

	Params::FriendSubsystem_IsFinishedForceUpdateFriendList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsFriend(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsFriend");

	Params::FriendSubsystem_IsFriend Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsFriendRequestBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InFriendRequestErrorCode                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsFriendRequestBlocked(int32 InFriendRequestErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsFriendRequestBlocked");

	Params::FriendSubsystem_IsFriendRequestBlocked Parms{};

	Parms.InFriendRequestErrorCode = InFriendRequestErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsPlatformFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsPlatformFriend(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsPlatformFriend");

	Params::FriendSubsystem_IsPlatformFriend Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsSetPlatformBlockPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsSetPlatformBlockPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsSetPlatformBlockPlayers");

	Params::FriendSubsystem_IsSetPlatformBlockPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsTerraFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsTerraFriend(const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsTerraFriend");

	Params::FriendSubsystem_IsTerraFriend Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.IsValidLobbyInvitation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::IsValidLobbyInvitation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "IsValidLobbyInvitation");

	Params::FriendSubsystem_IsValidLobbyInvitation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.LobbyInvitationGetUserSearchData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FUserGetUserSearchRequest& SearchRequest                                          (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool SearchError)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::LobbyInvitationGetUserSearchData(const struct FUserGetUserSearchRequest& SearchRequest, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool SearchError)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "LobbyInvitationGetUserSearchData");

	Params::FriendSubsystem_LobbyInvitationGetUserSearchData Parms{};

	Parms.SearchRequest = std::move(SearchRequest);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.MinusReceivedLobbyInvitationCount
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::MinusReceivedLobbyInvitationCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "MinusReceivedLobbyInvitationCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnBlockPlayerIdMappingsComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExternalIds                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ConvertedIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnBlockPlayerIdMappingsComplete(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnBlockPlayerIdMappingsComplete");

	Params::FriendSubsystem_OnBlockPlayerIdMappingsComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ExternalIds = std::move(ExternalIds);
	Parms.ConvertedIds = std::move(ConvertedIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnCompleteRequestCheckFairPoint
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnCompleteRequestCheckFairPoint(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnCompleteRequestCheckFairPoint");

	Params::FriendSubsystem_OnCompleteRequestCheckFairPoint Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnConvertBlockPlayerPuidToTerraIdComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnConvertBlockPlayerPuidToTerraIdComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnConvertBlockPlayerPuidToTerraIdComplete");

	Params::FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnConvertPuidToTerraIdComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnConvertPuidToTerraIdComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnConvertPuidToTerraIdComplete");

	Params::FriendSubsystem_OnConvertPuidToTerraIdComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnGetTerraFriendLastDateComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnGetTerraFriendLastDateComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnGetTerraFriendLastDateComplete");

	Params::FriendSubsystem_OnGetTerraFriendLastDateComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnGetTerraFriendListCheckPlayerNameComplete
// (Final, Native, Private)
// Parameters:
// bool                                    bGetTerraFriendListError                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnGetTerraFriendListCheckPlayerNameComplete(bool bGetTerraFriendListError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnGetTerraFriendListCheckPlayerNameComplete");

	Params::FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete Parms{};

	Parms.bGetTerraFriendListError = bGetTerraFriendListError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnGetTerraFriendListComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnGetTerraFriendListComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnGetTerraFriendListComplete");

	Params::FriendSubsystem_OnGetTerraFriendListComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnLobbyInvitationGetUserSearchComplete
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnLobbyInvitationGetUserSearchComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnLobbyInvitationGetUserSearchComplete");

	Params::FriendSubsystem_OnLobbyInvitationGetUserSearchComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnPlatformFriendIdMappingsComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExternalIds                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ConvertedIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnPlatformFriendIdMappingsComplete(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnPlatformFriendIdMappingsComplete");

	Params::FriendSubsystem_OnPlatformFriendIdMappingsComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ExternalIds = std::move(ExternalIds);
	Parms.ConvertedIds = std::move(ConvertedIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnProductUserIdFriendRequestConvertComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ExternalIds                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            ConvertedIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnProductUserIdFriendRequestConvertComplete(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnProductUserIdFriendRequestConvertComplete");

	Params::FriendSubsystem_OnProductUserIdFriendRequestConvertComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ExternalIds = std::move(ExternalIds);
	Parms.ConvertedIds = std::move(ConvertedIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnRequestCancelByBlockingCompleted
// (Final, Native, Public)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnRequestCancelByBlockingCompleted(bool bWasSuccessful, int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnRequestCancelByBlockingCompleted");

	Params::FriendSubsystem_OnRequestCancelByBlockingCompleted Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraFriendCommonComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraFriendCommonComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraFriendCommonComplete");

	Params::FriendSubsystem_OnTerraFriendCommonComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraFriendListCheckPlayerNameComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            PlayerNameList                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bGetTerraFriendListError                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraFriendListCheckPlayerNameComplete(bool bSuccess, const TArray<class FString>& PlayerNameList, bool bGetTerraFriendListError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraFriendListCheckPlayerNameComplete");

	Params::FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.PlayerNameList = std::move(PlayerNameList);
	Parms.bGetTerraFriendListError = bGetTerraFriendListError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraFriendRequestComplete
// (Final, Native, Private)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraFriendRequestComplete(bool bWasSuccessful, int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraFriendRequestComplete");

	Params::FriendSubsystem_OnTerraFriendRequestComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCheckPlayerNameComplete
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bCheckPlayerNameSuccess                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            PlayerNameList                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EFriendsListUserSearchCacheType         CacheType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EResponseCodeAbstract                   ResponseCodeAbstract                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSearchPlayerDataSuccess                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCheckPlayerNameComplete(bool bCheckPlayerNameSuccess, const TArray<class FString>& PlayerNameList, EFriendsListUserSearchCacheType CacheType, EResponseCodeAbstract ResponseCodeAbstract, bool bSearchPlayerDataSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCheckPlayerNameComplete");

	Params::FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete Parms{};

	Parms.bCheckPlayerNameSuccess = bCheckPlayerNameSuccess;
	Parms.PlayerNameList = std::move(PlayerNameList);
	Parms.CacheType = CacheType;
	Parms.ResponseCodeAbstract = ResponseCodeAbstract;
	Parms.bSearchPlayerDataSuccess = bSearchPlayerDataSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteBlockPlayer
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCompleteBlockPlayer(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCompleteBlockPlayer");

	Params::FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteLobbyInvitation
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCompleteLobbyInvitation(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCompleteLobbyInvitation");

	Params::FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompletePFFriend
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCompletePFFriend(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCompletePFFriend");

	Params::FriendSubsystem_OnTerraGetUserSearchCompletePFFriend Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteRecentPlayer
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCompleteRecentPlayer(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCompleteRecentPlayer");

	Params::FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteSearchLobbyID
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCompleteSearchLobbyID(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCompleteSearchLobbyID");

	Params::FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteSearchPlayerID
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnTerraGetUserSearchCompleteSearchPlayerID(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnTerraGetUserSearchCompleteSearchPlayerID");

	Params::FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnUnfriendByBlockingCompleted
// (Final, Native, Public)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnUnfriendByBlockingCompleted(bool bWasSuccessful, int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnUnfriendByBlockingCompleted");

	Params::FriendSubsystem_OnUnfriendByBlockingCompleted Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.OnUnfriendByPFBlockingCompleted
// (Final, Native, Public)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::OnUnfriendByPFBlockingCompleted(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "OnUnfriendByPFBlockingCompleted");

	Params::FriendSubsystem_OnUnfriendByPFBlockingCompleted Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.QueryReadPlatformBlockPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bWasSuccessful)>    OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::QueryReadPlatformBlockPlayers(TDelegate<void(bool bWasSuccessful)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "QueryReadPlatformBlockPlayers");

	Params::FriendSubsystem_QueryReadPlatformBlockPlayers Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.QueryReadPlatformFriends
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful)>    OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::QueryReadPlatformFriends(int32 LocalUserNum, TDelegate<void(bool bWasSuccessful)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "QueryReadPlatformFriends");

	Params::FriendSubsystem_QueryReadPlatformFriends Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.RefreshBlockPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bWasSuccessful)>    OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::RefreshBlockPlayers(TDelegate<void(bool bWasSuccessful)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "RefreshBlockPlayers");

	Params::FriendSubsystem_RefreshBlockPlayers Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.RequestCheckFairPoint
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::RequestCheckFairPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "RequestCheckFairPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.ResetAllRequestDelegate
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::ResetAllRequestDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ResetAllRequestDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.ResetReceivedLobbyInvitationCount
// (Final, Native, Public, BlueprintCallable)

void UFriendSubsystem::ResetReceivedLobbyInvitationCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "ResetReceivedLobbyInvitationCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.SetCacheExpiration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Minutes                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::SetCacheExpiration(int32 Minutes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "SetCacheExpiration");

	Params::FriendSubsystem_SetCacheExpiration Parms{};

	Parms.Minutes = Minutes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.SetReceivedLobbyInvitationCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LobbyInvitationCount                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSubsystem::SetReceivedLobbyInvitationCount(int32 LobbyInvitationCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "SetReceivedLobbyInvitationCount");

	Params::FriendSubsystem_SetReceivedLobbyInvitationCount Parms{};

	Parms.LobbyInvitationCount = LobbyInvitationCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.FriendSubsystem.TerraFriendAccept
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendAccept(const class FString& TargetID, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendAccept");

	Params::FriendSubsystem_TerraFriendAccept Parms{};

	Parms.TargetID = std::move(TargetID);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraFriendReject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendReject(const class FString& TargetID, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendReject");

	Params::FriendSubsystem_TerraFriendReject Parms{};

	Parms.TargetID = std::move(TargetID);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraFriendRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendRequest(const class FString& TargetID, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendRequest");

	Params::FriendSubsystem_TerraFriendRequest Parms{};

	Parms.TargetID = std::move(TargetID);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraFriendRequestByUserSearchData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FCommon_UserSearchData>&UserSearchData                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendRequestByUserSearchData(const TArray<struct FCommon_UserSearchData>& UserSearchData, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendRequestByUserSearchData");

	Params::FriendSubsystem_TerraFriendRequestByUserSearchData Parms{};

	Parms.UserSearchData = std::move(UserSearchData);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraFriendRequestCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendRequestCancel(const class FString& TargetID, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendRequestCancel");

	Params::FriendSubsystem_TerraFriendRequestCancel Parms{};

	Parms.TargetID = std::move(TargetID);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraFriendsRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            targetIds                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendsRequest(const TArray<class FString>& targetIds, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendsRequest");

	Params::FriendSubsystem_TerraFriendsRequest Parms{};

	Parms.targetIds = std::move(targetIds);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraFriendUnfriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraFriendUnfriend(const class FString& TargetID, TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraFriendUnfriend");

	Params::FriendSubsystem_TerraFriendUnfriend Parms{};

	Parms.TargetID = std::move(TargetID);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.TerraGetUserSearchRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            TargetUserIds                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   selectFlg                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFriendsListUserSearchCacheType         CacheType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::TerraGetUserSearchRequest(const TArray<class FString>& TargetUserIds, int32 selectFlg, TDelegate<void(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)> Delegate, EFriendsListUserSearchCacheType CacheType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "TerraGetUserSearchRequest");

	Params::FriendSubsystem_TerraGetUserSearchRequest Parms{};

	Parms.TargetUserIds = std::move(TargetUserIds);
	Parms.selectFlg = selectFlg;
	Parms.Delegate = Delegate;
	Parms.CacheType = CacheType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetNotifyFriendInvite
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::GetNotifyFriendInvite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetNotifyFriendInvite");

	Params::FriendSubsystem_GetNotifyFriendInvite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetPlatformFriendDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutResult                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::GetPlatformFriendDisplayName(const struct FUniqueNetIdRepl& UserId, class FString* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetPlatformFriendDisplayName");

	Params::FriendSubsystem_GetPlatformFriendDisplayName Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetPlatformFriendList
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FUniqueNetIdRepl>*        OutPlatformFriendList                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::GetPlatformFriendList(TArray<struct FUniqueNetIdRepl>* OutPlatformFriendList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetPlatformFriendList");

	Params::FriendSubsystem_GetPlatformFriendList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlatformFriendList != nullptr)
		*OutPlatformFriendList = std::move(Parms.OutPlatformFriendList);

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetReceivedLobbyInvitationCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFriendSubsystem::GetReceivedLobbyInvitationCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetReceivedLobbyInvitationCount");

	Params::FriendSubsystem_GetReceivedLobbyInvitationCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.FriendSubsystem.GetUserSearchDataByProductUserId
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCommon_UserSearchData*          OutUserSearchData                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFriendSubsystem::GetUserSearchDataByProductUserId(const class FString& ProductUserId, struct FCommon_UserSearchData* OutUserSearchData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSubsystem", "GetUserSearchDataByProductUserId");

	Params::FriendSubsystem_GetUserSearchDataByProductUserId Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserSearchData != nullptr)
		*OutUserSearchData = std::move(Parms.OutUserSearchData);

	return Parms.ReturnValue;
}


// Function UnionSystem.GameActivitySubsystem.ChangeActivityAvailability
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FActivityObjectIdData&     ActivityIdData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, bool bSuccess)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameActivitySubsystem::ChangeActivityAvailability(int32 LocalUserNum, const struct FActivityObjectIdData& ActivityIdData, TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, bool bSuccess)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameActivitySubsystem", "ChangeActivityAvailability");

	Params::GameActivitySubsystem_ChangeActivityAvailability Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ActivityIdData = std::move(ActivityIdData);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GameActivitySubsystem.EndActivity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FActivityObjectIdData&     ActivityIdData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FEndActivityOption&        Option                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, EGameModeId ActivityId, EGameActivityOutcomeType Outcome, bool bSuccess)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameActivitySubsystem::EndActivity(int32 LocalUserNum, const struct FActivityObjectIdData& ActivityIdData, const struct FEndActivityOption& Option, TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, EGameModeId ActivityId, EGameActivityOutcomeType Outcome, bool bSuccess)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameActivitySubsystem", "EndActivity");

	Params::GameActivitySubsystem_EndActivity Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ActivityIdData = std::move(ActivityIdData);
	Parms.Option = std::move(Option);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GameActivitySubsystem.StartActivity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FActivityObjectIdData&     ActivityIdData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FStartActivityOption&      Option                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, EGameModeId ActivityId, bool bSuccess)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameActivitySubsystem::StartActivity(int32 LocalUserNum, const struct FActivityObjectIdData& ActivityIdData, const struct FStartActivityOption& Option, TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, EGameModeId ActivityId, bool bSuccess)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameActivitySubsystem", "StartActivity");

	Params::GameActivitySubsystem_StartActivity Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ActivityIdData = std::move(ActivityIdData);
	Parms.Option = std::move(Option);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GameHttpSubsystem.ReceiveFromServerRaw
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutData                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameHttpSubsystem::ReceiveFromServerRaw(int32 Handle, class FString* OutData, bool* OutError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameHttpSubsystem", "ReceiveFromServerRaw");

	Params::GameHttpSubsystem_ReceiveFromServerRaw Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	return Parms.ReturnValue;
}


// Function UnionSystem.GameHttpSubsystem.SendToServerRaw
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameHttpRequestOption&    Option                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameHttpSubsystem::SendToServerRaw(const struct FGameHttpRequestOption& Option, const class FString& ApiName, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameHttpSubsystem", "SendToServerRaw");

	Params::GameHttpSubsystem_SendToServerRaw Parms{};

	Parms.Option = std::move(Option);
	Parms.ApiName = std::move(ApiName);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GameHttpSubsystem.SendToServerRawCallbacked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameHttpRequestOption&    Option                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameHttpSubsystem::SendToServerRawCallbacked(const struct FGameHttpRequestOption& Option, const class FString& ApiName, const class FString& Data, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameHttpSubsystem", "SendToServerRawCallbacked");

	Params::GameHttpSubsystem_SendToServerRawCallbacked Parms{};

	Parms.Option = std::move(Option);
	Parms.ApiName = std::move(ApiName);
	Parms.Data = std::move(Data);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostDataController.CancelUpload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostDataController::CancelUpload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "CancelUpload");

	Params::GhostDataController_CancelUpload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.Deinitialize
// (Final, Native, Public, BlueprintCallable)

void UGhostDataController::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "Deinitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostDataController.SetCurrentStageVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InCurrentStageVersion                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostDataController::SetCurrentStageVersion(const int32& InCurrentStageVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "SetCurrentStageVersion");

	Params::GhostDataController_SetCurrentStageVersion Parms{};

	Parms.InCurrentStageVersion = InCurrentStageVersion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostDataController.SetUploadStageIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const ESpeedClassId                     SpeedClass                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EStageId>&                 StageIds                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGhostDataController::SetUploadStageIds(const ESpeedClassId SpeedClass, const TArray<EStageId>& StageIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "SetUploadStageIds");

	Params::GhostDataController_SetUploadStageIds Parms{};

	Parms.SpeedClass = SpeedClass;
	Parms.StageIds = std::move(StageIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostDataController.StartUpload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostDataController::StartUpload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "StartUpload");

	Params::GhostDataController_StartUpload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetResponseCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EResponseCodeAbstract                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResponseCodeAbstract UGhostDataController::GetResponseCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetResponseCode");

	Params::GhostDataController_GetResponseCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetUploadCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGhostDataController::GetUploadCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetUploadCount");

	Params::GhostDataController_GetUploadCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetUploadDateTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGhostDataController::GetUploadDateTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetUploadDateTime");

	Params::GhostDataController_GetUploadDateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetUploadMaxCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGhostDataController::GetUploadMaxCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetUploadMaxCount");

	Params::GhostDataController_GetUploadMaxCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetUploadRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGhostDataController::GetUploadRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetUploadRate");

	Params::GhostDataController_GetUploadRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetUploadSpeedClassId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpeedClassId                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESpeedClassId UGhostDataController::GetUploadSpeedClassId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetUploadSpeedClassId");

	Params::GhostDataController_GetUploadSpeedClassId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.GetUploadStageId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EStageId                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStageId UGhostDataController::GetUploadStageId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "GetUploadStageId");

	Params::GhostDataController_GetUploadStageId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.IsBusy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostDataController::IsBusy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "IsBusy");

	Params::GhostDataController_IsBusy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.IsCancel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostDataController::IsCancel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "IsCancel");

	Params::GhostDataController_IsCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.IsGhostDataError
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostDataController::IsGhostDataError() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "IsGhostDataError");

	Params::GhostDataController_IsGhostDataError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDataController.IsResponceCheat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostDataController::IsResponceCheat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDataController", "IsResponceCheat");

	Params::GhostDataController_IsResponceCheat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.CancelDownload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGhostDonwnloadController::CancelDownload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "CancelDownload");

	Params::GhostDonwnloadController_CancelDownload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.ConvertGhostData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FReplaySaveInfo*                 OutGhostData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGhostDonwnloadController::ConvertGhostData(struct FReplaySaveInfo* OutGhostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "ConvertGhostData");

	Params::GhostDonwnloadController_ConvertGhostData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGhostData != nullptr)
		*OutGhostData = std::move(Parms.OutGhostData);

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.GetDownloadRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGhostDonwnloadController::GetDownloadRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "GetDownloadRate");

	Params::GhostDonwnloadController_GetDownloadRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.StartDownload
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    UserId                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     SpeedClass                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          StageId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DateTime                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            StageVersion                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGhostDonwnloadController::StartDownload(const class FString& UserId, const ESpeedClassId SpeedClass, const EStageId StageId, const class FString& DateTime, const int32& StageVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "StartDownload");

	Params::GhostDonwnloadController_StartDownload Parms{};

	Parms.UserId = std::move(UserId);
	Parms.SpeedClass = SpeedClass;
	Parms.StageId = StageId;
	Parms.DateTime = std::move(DateTime);
	Parms.StageVersion = StageVersion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.GetResponseCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EResponseCodeAbstract                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResponseCodeAbstract AGhostDonwnloadController::GetResponseCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "GetResponseCode");

	Params::GhostDonwnloadController_GetResponseCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.IsBusy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGhostDonwnloadController::IsBusy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "IsBusy");

	Params::GhostDonwnloadController_IsBusy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.IsCancel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGhostDonwnloadController::IsCancel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "IsCancel");

	Params::GhostDonwnloadController_IsCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDonwnloadController.IsGhostDownloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGhostDonwnloadController::IsGhostDownloading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDonwnloadController", "IsGhostDownloading");

	Params::GhostDonwnloadController_IsGhostDownloading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostDownloader.OnCompleteDelegate
// (Final, Native, Private)
// Parameters:
// int32                                   ResCode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ContentLength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ElapsedTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostDownloader::OnCompleteDelegate(int32 ResCode, int32 ContentLength, float ElapsedTime, bool bIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDownloader", "OnCompleteDelegate");

	Params::GhostDownloader_OnCompleteDelegate Parms{};

	Parms.ResCode = ResCode;
	Parms.ContentLength = ContentLength;
	Parms.ElapsedTime = ElapsedTime;
	Parms.bIsError = bIsError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostDownloader.OnProgressDelegate
// (Final, Native, Private)
// Parameters:
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostDownloader::OnProgressDelegate(int32 Length, float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostDownloader", "OnProgressDelegate");

	Params::GhostDownloader_OnProgressDelegate Parms{};

	Parms.Length = Length;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostSubSystem.CheckCachedGhostDataUserMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InUserId                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClass                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InDateTime                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostSubSystem::CheckCachedGhostDataUserMatch(const class FString& InUserId, const ESpeedClassId InSpeedClass, const EStageId InStageId, const class FString& InDateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostSubSystem", "CheckCachedGhostDataUserMatch");

	Params::GhostSubSystem_CheckCachedGhostDataUserMatch Parms{};

	Parms.InUserId = std::move(InUserId);
	Parms.InSpeedClass = InSpeedClass;
	Parms.InStageId = InStageId;
	Parms.InDateTime = std::move(InDateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostSubSystem.GetDownloadGhostData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FReplaySaveInfo*                 OutGhostData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostSubSystem::GetDownloadGhostData(struct FReplaySaveInfo* OutGhostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostSubSystem", "GetDownloadGhostData");

	Params::GhostSubSystem_GetDownloadGhostData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGhostData != nullptr)
		*OutGhostData = std::move(Parms.OutGhostData);

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostSubSystem.ResetDownloadGhostData
// (Final, Native, Public, BlueprintCallable)

void UGhostSubSystem::ResetDownloadGhostData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostSubSystem", "ResetDownloadGhostData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostSubSystem.SetDownloadGhostData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InUserId                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClass                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InDateTime                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InRankingName                                          (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FReplaySaveInfo&           InGhostData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGhostSubSystem::SetDownloadGhostData(const class FString& InUserId, const ESpeedClassId InSpeedClass, const EStageId InStageId, const class FString& InDateTime, const class FString& InRankingName, const struct FReplaySaveInfo& InGhostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostSubSystem", "SetDownloadGhostData");

	Params::GhostSubSystem_SetDownloadGhostData Parms{};

	Parms.InUserId = std::move(InUserId);
	Parms.InSpeedClass = InSpeedClass;
	Parms.InStageId = InStageId;
	Parms.InDateTime = std::move(InDateTime);
	Parms.InRankingName = std::move(InRankingName);
	Parms.InGhostData = std::move(InGhostData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostSubSystem.SetGhostRequestFailed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFailed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostSubSystem::SetGhostRequestFailed(bool InFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostSubSystem", "SetGhostRequestFailed");

	Params::GhostSubSystem_SetGhostRequestFailed Parms{};

	Parms.InFailed = InFailed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostSubSystem.IsGhostRequestFailed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostSubSystem::IsGhostRequestFailed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostSubSystem", "IsGhostRequestFailed");

	Params::GhostSubSystem_IsGhostRequestFailed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.GhostUploader.OnCompleteDelegate
// (Final, Native, Private)
// Parameters:
// int32                                   ResCode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ContentLength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ElapsedTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostUploader::OnCompleteDelegate(int32 ResCode, int32 ContentLength, float ElapsedTime, bool bIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostUploader", "OnCompleteDelegate");

	Params::GhostUploader_OnCompleteDelegate Parms{};

	Parms.ResCode = ResCode;
	Parms.ContentLength = ContentLength;
	Parms.ElapsedTime = ElapsedTime;
	Parms.bIsError = bIsError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.GhostUploader.OnProgressDelegate
// (Final, Native, Private)
// Parameters:
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostUploader::OnProgressDelegate(int32 Length, float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostUploader", "OnProgressDelegate");

	Params::GhostUploader_OnProgressDelegate Parms{};

	Parms.Length = Length;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UIColorInfoDataAsset.ClearData
// (Final, Native, Public, BlueprintCallable)

void UUIColorInfoDataAsset::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIColorInfoDataAsset", "ClearData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UIColorInfoDataAsset.GetUIColorInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGroupColorId                           colorId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUIColorInfo               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FUIColorInfo UUIColorInfoDataAsset::GetUIColorInfo(EGroupColorId colorId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIColorInfoDataAsset", "GetUIColorInfo");

	Params::UIColorInfoDataAsset_GetUIColorInfo Parms{};

	Parms.colorId = colorId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UIColorInfoDataAsset.Update
// (Final, Native, Public, BlueprintCallable)

void UUIColorInfoDataAsset::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIColorInfoDataAsset", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HashHelper.HashIntoByteArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UHashHelper::HashIntoByteArray(const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashHelper", "HashIntoByteArray");

	Params::HashHelper_HashIntoByteArray Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HashHelper.HashIntoByteArrayFromByteArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UHashHelper::HashIntoByteArrayFromByteArray(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashHelper", "HashIntoByteArrayFromByteArray");

	Params::HashHelper_HashIntoByteArrayFromByteArray Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HashHelper.HashIntoTextString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHashHelper::HashIntoTextString(const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashHelper", "HashIntoTextString");

	Params::HashHelper_HashIntoTextString Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HashHelper.HashIntoTextStringFromByteArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHashHelper::HashIntoTextStringFromByteArray(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashHelper", "HashIntoTextStringFromByteArray");

	Params::HashHelper_HashIntoTextStringFromByteArray Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.GetCurrentUserId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                          UserId                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::GetCurrentUserId(class FString* UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "GetCurrentUserId");

	Params::HttpHelper_GetCurrentUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (UserId != nullptr)
		*UserId = std::move(Parms.UserId);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.GetIntplServerDateTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime*                       OutDateTime                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::GetIntplServerDateTime(struct FDateTime* OutDateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "GetIntplServerDateTime");

	Params::HttpHelper_GetIntplServerDateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDateTime != nullptr)
		*OutDateTime = std::move(Parms.OutDateTime);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.GetLastMaintenanceData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                          StartTime                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          endTime                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  noticeId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::GetLastMaintenanceData(class FString* StartTime, class FString* endTime, int32* noticeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "GetLastMaintenanceData");

	Params::HttpHelper_GetLastMaintenanceData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StartTime != nullptr)
		*StartTime = std::move(Parms.StartTime);

	if (endTime != nullptr)
		*endTime = std::move(Parms.endTime);

	if (noticeId != nullptr)
		*noticeId = Parms.noticeId;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.GetLastServerTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                          ServerTime                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::GetLastServerTime(class FString* ServerTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "GetLastServerTime");

	Params::HttpHelper_GetLastServerTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ServerTime != nullptr)
		*ServerTime = std::move(Parms.ServerTime);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.LoginContextInitialize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::LoginContextInitialize(const class FString& ProductUserId, const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "LoginContextInitialize");

	Params::HttpHelper_LoginContextInitialize Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.LoginContextInitializeForMaintenance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProviderId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::LoginContextInitializeForMaintenance(const class FString& ProviderId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "LoginContextInitializeForMaintenance");

	Params::HttpHelper_LoginContextInitializeForMaintenance Parms{};

	Parms.ProviderId = std::move(ProviderId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.LoginContextUpdate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLoginCheckResponse&       Response                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHttpHelper::LoginContextUpdate(const struct FLoginCheckResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "LoginContextUpdate");

	Params::HttpHelper_LoginContextUpdate Parms{};

	Parms.Response = std::move(Response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Parse_CntReplayGetSignedUrl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCntReplayGetSignedUrlResponse*  Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_CntReplayGetSignedUrl(const class FString& OutData, int32* ResCode, struct FCntReplayGetSignedUrlResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_CntReplayGetSignedUrl");

	Params::HttpHelper_Parse_CntReplayGetSignedUrl Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_CompensationGetCompensations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCompensationGetCompensationsResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_CompensationGetCompensations(const class FString& OutData, int32* ResCode, struct FCompensationGetCompensationsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_CompensationGetCompensations");

	Params::HttpHelper_Parse_CompensationGetCompensations Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_DebugChangeFairPlayPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugChangeFairPlayPointResponse*Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_DebugChangeFairPlayPoint(const class FString& OutData, int32* ResCode, struct FDebugChangeFairPlayPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_DebugChangeFairPlayPoint");

	Params::HttpHelper_Parse_DebugChangeFairPlayPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_DebugChangeRankMatchRate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugChangeRankMatchRateResponse*Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_DebugChangeRankMatchRate(const class FString& OutData, int32* ResCode, struct FDebugChangeRankMatchRateResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_DebugChangeRankMatchRate");

	Params::HttpHelper_Parse_DebugChangeRankMatchRate Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_DebugConnectTest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugConnectTestResponse*       Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_DebugConnectTest(const class FString& OutData, int32* ResCode, struct FDebugConnectTestResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_DebugConnectTest");

	Params::HttpHelper_Parse_DebugConnectTest Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_DebugMatchmakingSubscribeFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugMatchmakingSubscribeFestaResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_DebugMatchmakingSubscribeFesta(const class FString& OutData, int32* ResCode, struct FDebugMatchmakingSubscribeFestaResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_DebugMatchmakingSubscribeFesta");

	Params::HttpHelper_Parse_DebugMatchmakingSubscribeFesta Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_DebugMatchmakingSubscribeLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugMatchmakingSubscribeLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_DebugMatchmakingSubscribeLegendCompe(const class FString& OutData, int32* ResCode, struct FDebugMatchmakingSubscribeLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_DebugMatchmakingSubscribeLegendCompe");

	Params::HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_DebugMatchmakingSubscribeRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugMatchmakingSubscribeRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_DebugMatchmakingSubscribeRankMatch(const class FString& OutData, int32* ResCode, struct FDebugMatchmakingSubscribeRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_DebugMatchmakingSubscribeRankMatch");

	Params::HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FairPointAddFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFairPointAddFairPointResponse*  Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FairPointAddFairPoint(const class FString& OutData, int32* ResCode, struct FFairPointAddFairPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FairPointAddFairPoint");

	Params::HttpHelper_Parse_FairPointAddFairPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FairPointCheckFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFairPointCheckFairPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FairPointCheckFairPoint(const class FString& OutData, int32* ResCode, struct FFairPointCheckFairPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FairPointCheckFairPoint");

	Params::HttpHelper_Parse_FairPointCheckFairPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FairPointSubFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFairPointSubFairPointResponse*  Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FairPointSubFairPoint(const class FString& OutData, int32* ResCode, struct FFairPointSubFairPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FairPointSubFairPoint");

	Params::HttpHelper_Parse_FairPointSubFairPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FestaCheckFestaReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFestaCheckFestaRewardResponse*  Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FestaCheckFestaReward(const class FString& OutData, int32* ResCode, struct FFestaCheckFestaRewardResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FestaCheckFestaReward");

	Params::HttpHelper_Parse_FestaCheckFestaReward Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FestaFestaTop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFestaFestaTopResponse*          Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FestaFestaTop(const class FString& OutData, int32* ResCode, struct FFestaFestaTopResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FestaFestaTop");

	Params::HttpHelper_Parse_FestaFestaTop Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendAcceptFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendAcceptFriendResponse*     Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendAcceptFriend(const class FString& OutData, int32* ResCode, struct FFriendAcceptFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendAcceptFriend");

	Params::HttpHelper_Parse_FriendAcceptFriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendApplyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendApplyFriendResponse*      Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendApplyFriend(const class FString& OutData, int32* ResCode, struct FFriendApplyFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendApplyFriend");

	Params::HttpHelper_Parse_FriendApplyFriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendCancelFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendCancelFriendResponse*     Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendCancelFriend(const class FString& OutData, int32* ResCode, struct FFriendCancelFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendCancelFriend");

	Params::HttpHelper_Parse_FriendCancelFriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendGetFriendLastDate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendGetFriendLastDateResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendGetFriendLastDate(const class FString& OutData, int32* ResCode, struct FFriendGetFriendLastDateResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendGetFriendLastDate");

	Params::HttpHelper_Parse_FriendGetFriendLastDate Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendGetFriendList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendGetFriendListResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendGetFriendList(const class FString& OutData, int32* ResCode, struct FFriendGetFriendListResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendGetFriendList");

	Params::HttpHelper_Parse_FriendGetFriendList Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendNotifyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendNotifyFriendResponse*     Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendNotifyFriend(const class FString& OutData, int32* ResCode, struct FFriendNotifyFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendNotifyFriend");

	Params::HttpHelper_Parse_FriendNotifyFriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendRejectFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendRejectFriendResponse*     Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendRejectFriend(const class FString& OutData, int32* ResCode, struct FFriendRejectFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendRejectFriend");

	Params::HttpHelper_Parse_FriendRejectFriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendRequestFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendRequestFriendResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendRequestFriend(const class FString& OutData, int32* ResCode, struct FFriendRequestFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendRequestFriend");

	Params::HttpHelper_Parse_FriendRequestFriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_FriendUnfriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendUnfriendResponse*         Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_FriendUnfriend(const class FString& OutData, int32* ResCode, struct FFriendUnfriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_FriendUnfriend");

	Params::HttpHelper_Parse_FriendUnfriend Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_GhostGetFriendGhostData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGhostGetFriendGhostDataResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_GhostGetFriendGhostData(const class FString& OutData, int32* ResCode, struct FGhostGetFriendGhostDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_GhostGetFriendGhostData");

	Params::HttpHelper_Parse_GhostGetFriendGhostData Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_GhostGetRankingGhostData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGhostGetRankingGhostDataResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_GhostGetRankingGhostData(const class FString& OutData, int32* ResCode, struct FGhostGetRankingGhostDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_GhostGetRankingGhostData");

	Params::HttpHelper_Parse_GhostGetRankingGhostData Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_HealthCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHealthCheckResponse*            Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_HealthCheck(const class FString& OutData, int32* ResCode, struct FHealthCheckResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_HealthCheck");

	Params::HttpHelper_Parse_HealthCheck Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_LegendCompeCheckLegendCompeReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLegendCompeCheckLegendCompeRewardResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_LegendCompeCheckLegendCompeReward(const class FString& OutData, int32* ResCode, struct FLegendCompeCheckLegendCompeRewardResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_LegendCompeCheckLegendCompeReward");

	Params::HttpHelper_Parse_LegendCompeCheckLegendCompeReward Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_LobbyGenerateLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyGenerateLobbyResponse*     Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_LobbyGenerateLobby(const class FString& OutData, int32* ResCode, struct FLobbyGenerateLobbyResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_LobbyGenerateLobby");

	Params::HttpHelper_Parse_LobbyGenerateLobby Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_LobbyGetEosLobbyId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyGetEosLobbyIdResponse*     Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_LobbyGetEosLobbyId(const class FString& OutData, int32* ResCode, struct FLobbyGetEosLobbyIdResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_LobbyGetEosLobbyId");

	Params::HttpHelper_Parse_LobbyGetEosLobbyId Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_LobbyKeepAlive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyKeepAliveResponse*         Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_LobbyKeepAlive(const class FString& OutData, int32* ResCode, struct FLobbyKeepAliveResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_LobbyKeepAlive");

	Params::HttpHelper_Parse_LobbyKeepAlive Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_LobbyRemoveLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyRemoveLobbyResponse*       Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_LobbyRemoveLobby(const class FString& OutData, int32* ResCode, struct FLobbyRemoveLobbyResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_LobbyRemoveLobby");

	Params::HttpHelper_Parse_LobbyRemoveLobby Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_LoginCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLoginCheckResponse*             Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_LoginCheck(const class FString& OutData, int32* ResCode, struct FLoginCheckResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_LoginCheck");

	Params::HttpHelper_Parse_LoginCheck Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MasterDataGetMaintenanceSchedule
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetMaintenanceScheduleResponse*Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MasterDataGetMaintenanceSchedule(const class FString& OutData, int32* ResCode, struct FMasterDataGetMaintenanceScheduleResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MasterDataGetMaintenanceSchedule");

	Params::HttpHelper_Parse_MasterDataGetMaintenanceSchedule Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MasterDataGetMasterData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetMasterDataResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MasterDataGetMasterData(const class FString& OutData, int32* ResCode, struct FMasterDataGetMasterDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MasterDataGetMasterData");

	Params::HttpHelper_Parse_MasterDataGetMasterData Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MasterDataGetVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetVersionResponse*   Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MasterDataGetVersion(const class FString& OutData, int32* ResCode, struct FMasterDataGetVersionResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MasterDataGetVersion");

	Params::HttpHelper_Parse_MasterDataGetVersion Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MatchmakingDescribe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingDescribeResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MatchmakingDescribe(const class FString& OutData, int32* ResCode, struct FMatchmakingDescribeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MatchmakingDescribe");

	Params::HttpHelper_Parse_MatchmakingDescribe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MatchmakingStop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingStopResponse*        Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MatchmakingStop(const class FString& OutData, int32* ResCode, struct FMatchmakingStopResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MatchmakingStop");

	Params::HttpHelper_Parse_MatchmakingStop Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MatchmakingSubscribeFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingSubscribeFestaResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MatchmakingSubscribeFesta(const class FString& OutData, int32* ResCode, struct FMatchmakingSubscribeFestaResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MatchmakingSubscribeFesta");

	Params::HttpHelper_Parse_MatchmakingSubscribeFesta Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MatchmakingSubscribeLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingSubscribeLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MatchmakingSubscribeLegendCompe(const class FString& OutData, int32* ResCode, struct FMatchmakingSubscribeLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MatchmakingSubscribeLegendCompe");

	Params::HttpHelper_Parse_MatchmakingSubscribeLegendCompe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MatchmakingSubscribeRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingSubscribeRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MatchmakingSubscribeRankMatch(const class FString& OutData, int32* ResCode, struct FMatchmakingSubscribeRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MatchmakingSubscribeRankMatch");

	Params::HttpHelper_Parse_MatchmakingSubscribeRankMatch Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_MatchmakingUnsubscribe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingUnsubscribeResponse* Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_MatchmakingUnsubscribe(const class FString& OutData, int32* ResCode, struct FMatchmakingUnsubscribeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_MatchmakingUnsubscribe");

	Params::HttpHelper_Parse_MatchmakingUnsubscribe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_OntSaveOntParticipantUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOntSaveOntParticipantUserResponse*Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_OntSaveOntParticipantUser(const class FString& OutData, int32* ResCode, struct FOntSaveOntParticipantUserResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_OntSaveOntParticipantUser");

	Params::HttpHelper_Parse_OntSaveOntParticipantUser Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_OperationSaveAutoReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOperationSaveAutoReportResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_OperationSaveAutoReport(const class FString& OutData, int32* ResCode, struct FOperationSaveAutoReportResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_OperationSaveAutoReport");

	Params::HttpHelper_Parse_OperationSaveAutoReport Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_OperationSaveOperatorReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOperationSaveOperatorReportResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_OperationSaveOperatorReport(const class FString& OutData, int32* ResCode, struct FOperationSaveOperatorReportResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_OperationSaveOperatorReport");

	Params::HttpHelper_Parse_OperationSaveOperatorReport Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetFriendRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetFriendRankingFestaPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetFriendRankingFestaPoint(const class FString& OutData, int32* ResCode, struct FRankingGetFriendRankingFestaPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetFriendRankingFestaPoint");

	Params::HttpHelper_Parse_RankingGetFriendRankingFestaPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetFriendRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetFriendRankingLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetFriendRankingLegendCompe(const class FString& OutData, int32* ResCode, struct FRankingGetFriendRankingLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetFriendRankingLegendCompe");

	Params::HttpHelper_Parse_RankingGetFriendRankingLegendCompe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetFriendRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetFriendRankingRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetFriendRankingRankMatch(const class FString& OutData, int32* ResCode, struct FRankingGetFriendRankingRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetFriendRankingRankMatch");

	Params::HttpHelper_Parse_RankingGetFriendRankingRankMatch Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingFestaPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetMyRankingFestaPoint(const class FString& OutData, int32* ResCode, struct FRankingGetMyRankingFestaPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetMyRankingFestaPoint");

	Params::HttpHelper_Parse_RankingGetMyRankingFestaPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetMyRankingLegendCompe(const class FString& OutData, int32* ResCode, struct FRankingGetMyRankingLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetMyRankingLegendCompe");

	Params::HttpHelper_Parse_RankingGetMyRankingLegendCompe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetMyRankingRankMatch(const class FString& OutData, int32* ResCode, struct FRankingGetMyRankingRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetMyRankingRankMatch");

	Params::HttpHelper_Parse_RankingGetMyRankingRankMatch Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingTimeTrialResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetMyRankingTimeTrial(const class FString& OutData, int32* ResCode, struct FRankingGetMyRankingTimeTrialResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetMyRankingTimeTrial");

	Params::HttpHelper_Parse_RankingGetMyRankingTimeTrial Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingFestaPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetRankingFestaPoint(const class FString& OutData, int32* ResCode, struct FRankingGetRankingFestaPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetRankingFestaPoint");

	Params::HttpHelper_Parse_RankingGetRankingFestaPoint Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetRankingLegendCompe(const class FString& OutData, int32* ResCode, struct FRankingGetRankingLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetRankingLegendCompe");

	Params::HttpHelper_Parse_RankingGetRankingLegendCompe Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetRankingRankMatch(const class FString& OutData, int32* ResCode, struct FRankingGetRankingRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetRankingRankMatch");

	Params::HttpHelper_Parse_RankingGetRankingRankMatch Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RankingGetRankingTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingTimeTrialResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RankingGetRankingTimeTrial(const class FString& OutData, int32* ResCode, struct FRankingGetRankingTimeTrialResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RankingGetRankingTimeTrial");

	Params::HttpHelper_Parse_RankingGetRankingTimeTrial Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_ResultSaveFestaResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveFestaResultResponse*  Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_ResultSaveFestaResult(const class FString& OutData, int32* ResCode, struct FResultSaveFestaResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_ResultSaveFestaResult");

	Params::HttpHelper_Parse_ResultSaveFestaResult Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_ResultSaveLegendCompeResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveLegendCompeResultResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_ResultSaveLegendCompeResult(const class FString& OutData, int32* ResCode, struct FResultSaveLegendCompeResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_ResultSaveLegendCompeResult");

	Params::HttpHelper_Parse_ResultSaveLegendCompeResult Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_ResultSaveRankMatchResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveRankMatchResultResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_ResultSaveRankMatchResult(const class FString& OutData, int32* ResCode, struct FResultSaveRankMatchResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_ResultSaveRankMatchResult");

	Params::HttpHelper_Parse_ResultSaveRankMatchResult Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_ResultSaveTimeTrialResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveTimeTrialResultResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_ResultSaveTimeTrialResult(const class FString& OutData, int32* ResCode, struct FResultSaveTimeTrialResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_ResultSaveTimeTrialResult");

	Params::HttpHelper_Parse_ResultSaveTimeTrialResult Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_RomCheckRomVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRomCheckRomVersionResponse*     Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_RomCheckRomVersion(const class FString& OutData, int32* ResCode, struct FRomCheckRomVersionResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_RomCheckRomVersion");

	Params::HttpHelper_Parse_RomCheckRomVersion Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_SamplePart1
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSamplePart1Response*            Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_SamplePart1(const class FString& OutData, int32* ResCode, struct FSamplePart1Response* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_SamplePart1");

	Params::HttpHelper_Parse_SamplePart1 Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_SessionKeepalive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSessionKeepaliveResponse*       Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_SessionKeepalive(const class FString& OutData, int32* ResCode, struct FSessionKeepaliveResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_SessionKeepalive");

	Params::HttpHelper_Parse_SessionKeepalive Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_StartSaveFestaStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartSaveFestaStartResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_StartSaveFestaStart(const class FString& OutData, int32* ResCode, struct FStartSaveFestaStartResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_StartSaveFestaStart");

	Params::HttpHelper_Parse_StartSaveFestaStart Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_StartSaveLegendCompeStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartSaveLegendCompeStartResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_StartSaveLegendCompeStart(const class FString& OutData, int32* ResCode, struct FStartSaveLegendCompeStartResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_StartSaveLegendCompeStart");

	Params::HttpHelper_Parse_StartSaveLegendCompeStart Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_StartSaveRankMatchStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartSaveRankMatchStartResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_StartSaveRankMatchStart(const class FString& OutData, int32* ResCode, struct FStartSaveRankMatchStartResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_StartSaveRankMatchStart");

	Params::HttpHelper_Parse_StartSaveRankMatchStart Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserGetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetDataResponse*            Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserGetData(const class FString& OutData, int32* ResCode, struct FUserGetDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserGetData");

	Params::HttpHelper_Parse_UserGetData Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserGetPartsData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetPartsDataResponse*       Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserGetPartsData(const class FString& OutData, int32* ResCode, struct FUserGetPartsDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserGetPartsData");

	Params::HttpHelper_Parse_UserGetPartsData Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserGetUserIdsByPuid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserIdsByPuidResponse*   Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserGetUserIdsByPuid(const class FString& OutData, int32* ResCode, struct FUserGetUserIdsByPuidResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserGetUserIdsByPuid");

	Params::HttpHelper_Parse_UserGetUserIdsByPuid Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserGetUserIdsByUid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserIdsByUidResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserGetUserIdsByUid(const class FString& OutData, int32* ResCode, struct FUserGetUserIdsByUidResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserGetUserIdsByUid");

	Params::HttpHelper_Parse_UserGetUserIdsByUid Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserGetUserNetworkSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserNetworkSettingsResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserGetUserNetworkSettings(const class FString& OutData, int32* ResCode, struct FUserGetUserNetworkSettingsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserGetUserNetworkSettings");

	Params::HttpHelper_Parse_UserGetUserNetworkSettings Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserGetUserSearch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserSearchResponse*      Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserGetUserSearch(const class FString& OutData, int32* ResCode, struct FUserGetUserSearchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserGetUserSearch");

	Params::HttpHelper_Parse_UserGetUserSearch Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserNintendoSwitchOnlineCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserNintendoSwitchOnlineCheckResponse*Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserNintendoSwitchOnlineCheck(const class FString& OutData, int32* ResCode, struct FUserNintendoSwitchOnlineCheckResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserNintendoSwitchOnlineCheck");

	Params::HttpHelper_Parse_UserNintendoSwitchOnlineCheck Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserSavePaidDlcOwnerships
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserSavePaidDlcOwnershipsResponse*Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserSavePaidDlcOwnerships(const class FString& OutData, int32* ResCode, struct FUserSavePaidDlcOwnershipsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserSavePaidDlcOwnerships");

	Params::HttpHelper_Parse_UserSavePaidDlcOwnerships Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.Parse_UserSaveUserNetworkSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    OutData                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserSaveUserNetworkSettingsResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHttpHelper::Parse_UserSaveUserNetworkSettings(const class FString& OutData, int32* ResCode, struct FUserSaveUserNetworkSettingsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Parse_UserSaveUserNetworkSettings");

	Params::HttpHelper_Parse_UserSaveUserNetworkSettings Parms{};

	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);
}


// Function UnionSystem.HttpHelper.QueryServerTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FDateTime& Timestamp, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::QueryServerTime(TDelegate<void(const struct FDateTime& Timestamp, bool Error)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "QueryServerTime");

	Params::HttpHelper_QueryServerTime Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Receive_CntReplayGetSignedUrl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCntReplayGetSignedUrlResponse*  Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_CntReplayGetSignedUrl(int32 Handle, bool* OutError, int32* ResCode, struct FCntReplayGetSignedUrlResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_CntReplayGetSignedUrl");

	Params::HttpHelper_Receive_CntReplayGetSignedUrl Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_CompensationGetCompensations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCompensationGetCompensationsResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_CompensationGetCompensations(int32 Handle, bool* OutError, int32* ResCode, struct FCompensationGetCompensationsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_CompensationGetCompensations");

	Params::HttpHelper_Receive_CompensationGetCompensations Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_DebugChangeFairPlayPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugChangeFairPlayPointResponse*Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_DebugChangeFairPlayPoint(int32 Handle, bool* OutError, int32* ResCode, struct FDebugChangeFairPlayPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_DebugChangeFairPlayPoint");

	Params::HttpHelper_Receive_DebugChangeFairPlayPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_DebugChangeRankMatchRate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugChangeRankMatchRateResponse*Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_DebugChangeRankMatchRate(int32 Handle, bool* OutError, int32* ResCode, struct FDebugChangeRankMatchRateResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_DebugChangeRankMatchRate");

	Params::HttpHelper_Receive_DebugChangeRankMatchRate Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_DebugConnectTest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugConnectTestResponse*       Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_DebugConnectTest(int32 Handle, bool* OutError, int32* ResCode, struct FDebugConnectTestResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_DebugConnectTest");

	Params::HttpHelper_Receive_DebugConnectTest Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_DebugMatchmakingSubscribeFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugMatchmakingSubscribeFestaResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_DebugMatchmakingSubscribeFesta(int32 Handle, bool* OutError, int32* ResCode, struct FDebugMatchmakingSubscribeFestaResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_DebugMatchmakingSubscribeFesta");

	Params::HttpHelper_Receive_DebugMatchmakingSubscribeFesta Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_DebugMatchmakingSubscribeLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugMatchmakingSubscribeLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_DebugMatchmakingSubscribeLegendCompe(int32 Handle, bool* OutError, int32* ResCode, struct FDebugMatchmakingSubscribeLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_DebugMatchmakingSubscribeLegendCompe");

	Params::HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_DebugMatchmakingSubscribeRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDebugMatchmakingSubscribeRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_DebugMatchmakingSubscribeRankMatch(int32 Handle, bool* OutError, int32* ResCode, struct FDebugMatchmakingSubscribeRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_DebugMatchmakingSubscribeRankMatch");

	Params::HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FairPointAddFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFairPointAddFairPointResponse*  Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FairPointAddFairPoint(int32 Handle, bool* OutError, int32* ResCode, struct FFairPointAddFairPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FairPointAddFairPoint");

	Params::HttpHelper_Receive_FairPointAddFairPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FairPointCheckFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFairPointCheckFairPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FairPointCheckFairPoint(int32 Handle, bool* OutError, int32* ResCode, struct FFairPointCheckFairPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FairPointCheckFairPoint");

	Params::HttpHelper_Receive_FairPointCheckFairPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FairPointSubFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFairPointSubFairPointResponse*  Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FairPointSubFairPoint(int32 Handle, bool* OutError, int32* ResCode, struct FFairPointSubFairPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FairPointSubFairPoint");

	Params::HttpHelper_Receive_FairPointSubFairPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FestaCheckFestaReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFestaCheckFestaRewardResponse*  Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FestaCheckFestaReward(int32 Handle, bool* OutError, int32* ResCode, struct FFestaCheckFestaRewardResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FestaCheckFestaReward");

	Params::HttpHelper_Receive_FestaCheckFestaReward Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FestaFestaTop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFestaFestaTopResponse*          Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FestaFestaTop(int32 Handle, bool* OutError, int32* ResCode, struct FFestaFestaTopResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FestaFestaTop");

	Params::HttpHelper_Receive_FestaFestaTop Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendAcceptFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendAcceptFriendResponse*     Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendAcceptFriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendAcceptFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendAcceptFriend");

	Params::HttpHelper_Receive_FriendAcceptFriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendApplyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendApplyFriendResponse*      Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendApplyFriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendApplyFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendApplyFriend");

	Params::HttpHelper_Receive_FriendApplyFriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendCancelFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendCancelFriendResponse*     Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendCancelFriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendCancelFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendCancelFriend");

	Params::HttpHelper_Receive_FriendCancelFriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendGetFriendLastDate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendGetFriendLastDateResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendGetFriendLastDate(int32 Handle, bool* OutError, int32* ResCode, struct FFriendGetFriendLastDateResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendGetFriendLastDate");

	Params::HttpHelper_Receive_FriendGetFriendLastDate Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendGetFriendList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendGetFriendListResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendGetFriendList(int32 Handle, bool* OutError, int32* ResCode, struct FFriendGetFriendListResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendGetFriendList");

	Params::HttpHelper_Receive_FriendGetFriendList Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendNotifyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendNotifyFriendResponse*     Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendNotifyFriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendNotifyFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendNotifyFriend");

	Params::HttpHelper_Receive_FriendNotifyFriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendRejectFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendRejectFriendResponse*     Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendRejectFriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendRejectFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendRejectFriend");

	Params::HttpHelper_Receive_FriendRejectFriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendRequestFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendRequestFriendResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendRequestFriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendRequestFriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendRequestFriend");

	Params::HttpHelper_Receive_FriendRequestFriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_FriendUnfriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendUnfriendResponse*         Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_FriendUnfriend(int32 Handle, bool* OutError, int32* ResCode, struct FFriendUnfriendResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_FriendUnfriend");

	Params::HttpHelper_Receive_FriendUnfriend Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_GhostGetFriendGhostData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGhostGetFriendGhostDataResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_GhostGetFriendGhostData(int32 Handle, bool* OutError, int32* ResCode, struct FGhostGetFriendGhostDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_GhostGetFriendGhostData");

	Params::HttpHelper_Receive_GhostGetFriendGhostData Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_GhostGetRankingGhostData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGhostGetRankingGhostDataResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_GhostGetRankingGhostData(int32 Handle, bool* OutError, int32* ResCode, struct FGhostGetRankingGhostDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_GhostGetRankingGhostData");

	Params::HttpHelper_Receive_GhostGetRankingGhostData Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_HealthCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHealthCheckResponse*            Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_HealthCheck(int32 Handle, bool* OutError, int32* ResCode, struct FHealthCheckResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_HealthCheck");

	Params::HttpHelper_Receive_HealthCheck Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_LegendCompeCheckLegendCompeReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLegendCompeCheckLegendCompeRewardResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_LegendCompeCheckLegendCompeReward(int32 Handle, bool* OutError, int32* ResCode, struct FLegendCompeCheckLegendCompeRewardResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_LegendCompeCheckLegendCompeReward");

	Params::HttpHelper_Receive_LegendCompeCheckLegendCompeReward Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_LobbyGenerateLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyGenerateLobbyResponse*     Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_LobbyGenerateLobby(int32 Handle, bool* OutError, int32* ResCode, struct FLobbyGenerateLobbyResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_LobbyGenerateLobby");

	Params::HttpHelper_Receive_LobbyGenerateLobby Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_LobbyGetEosLobbyId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyGetEosLobbyIdResponse*     Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_LobbyGetEosLobbyId(int32 Handle, bool* OutError, int32* ResCode, struct FLobbyGetEosLobbyIdResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_LobbyGetEosLobbyId");

	Params::HttpHelper_Receive_LobbyGetEosLobbyId Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_LobbyKeepAlive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyKeepAliveResponse*         Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_LobbyKeepAlive(int32 Handle, bool* OutError, int32* ResCode, struct FLobbyKeepAliveResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_LobbyKeepAlive");

	Params::HttpHelper_Receive_LobbyKeepAlive Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_LobbyRemoveLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyRemoveLobbyResponse*       Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_LobbyRemoveLobby(int32 Handle, bool* OutError, int32* ResCode, struct FLobbyRemoveLobbyResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_LobbyRemoveLobby");

	Params::HttpHelper_Receive_LobbyRemoveLobby Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_LoginCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLoginCheckResponse*             Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_LoginCheck(int32 Handle, bool* OutError, int32* ResCode, struct FLoginCheckResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_LoginCheck");

	Params::HttpHelper_Receive_LoginCheck Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MasterDataGetMaintenanceSchedule
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetMaintenanceScheduleResponse*Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MasterDataGetMaintenanceSchedule(int32 Handle, bool* OutError, int32* ResCode, struct FMasterDataGetMaintenanceScheduleResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MasterDataGetMaintenanceSchedule");

	Params::HttpHelper_Receive_MasterDataGetMaintenanceSchedule Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MasterDataGetMasterData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetMasterDataResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MasterDataGetMasterData(int32 Handle, bool* OutError, int32* ResCode, struct FMasterDataGetMasterDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MasterDataGetMasterData");

	Params::HttpHelper_Receive_MasterDataGetMasterData Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MasterDataGetVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetVersionResponse*   Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MasterDataGetVersion(int32 Handle, bool* OutError, int32* ResCode, struct FMasterDataGetVersionResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MasterDataGetVersion");

	Params::HttpHelper_Receive_MasterDataGetVersion Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MatchmakingDescribe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingDescribeResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MatchmakingDescribe(int32 Handle, bool* OutError, int32* ResCode, struct FMatchmakingDescribeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MatchmakingDescribe");

	Params::HttpHelper_Receive_MatchmakingDescribe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MatchmakingStop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingStopResponse*        Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MatchmakingStop(int32 Handle, bool* OutError, int32* ResCode, struct FMatchmakingStopResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MatchmakingStop");

	Params::HttpHelper_Receive_MatchmakingStop Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MatchmakingSubscribeFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingSubscribeFestaResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MatchmakingSubscribeFesta(int32 Handle, bool* OutError, int32* ResCode, struct FMatchmakingSubscribeFestaResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MatchmakingSubscribeFesta");

	Params::HttpHelper_Receive_MatchmakingSubscribeFesta Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MatchmakingSubscribeLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingSubscribeLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MatchmakingSubscribeLegendCompe(int32 Handle, bool* OutError, int32* ResCode, struct FMatchmakingSubscribeLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MatchmakingSubscribeLegendCompe");

	Params::HttpHelper_Receive_MatchmakingSubscribeLegendCompe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MatchmakingSubscribeRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingSubscribeRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MatchmakingSubscribeRankMatch(int32 Handle, bool* OutError, int32* ResCode, struct FMatchmakingSubscribeRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MatchmakingSubscribeRankMatch");

	Params::HttpHelper_Receive_MatchmakingSubscribeRankMatch Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_MatchmakingUnsubscribe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakingUnsubscribeResponse* Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_MatchmakingUnsubscribe(int32 Handle, bool* OutError, int32* ResCode, struct FMatchmakingUnsubscribeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_MatchmakingUnsubscribe");

	Params::HttpHelper_Receive_MatchmakingUnsubscribe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_OntSaveOntParticipantUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOntSaveOntParticipantUserResponse*Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_OntSaveOntParticipantUser(int32 Handle, bool* OutError, int32* ResCode, struct FOntSaveOntParticipantUserResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_OntSaveOntParticipantUser");

	Params::HttpHelper_Receive_OntSaveOntParticipantUser Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_OperationSaveAutoReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOperationSaveAutoReportResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_OperationSaveAutoReport(int32 Handle, bool* OutError, int32* ResCode, struct FOperationSaveAutoReportResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_OperationSaveAutoReport");

	Params::HttpHelper_Receive_OperationSaveAutoReport Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_OperationSaveOperatorReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOperationSaveOperatorReportResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_OperationSaveOperatorReport(int32 Handle, bool* OutError, int32* ResCode, struct FOperationSaveOperatorReportResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_OperationSaveOperatorReport");

	Params::HttpHelper_Receive_OperationSaveOperatorReport Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetFriendRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetFriendRankingFestaPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetFriendRankingFestaPoint(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetFriendRankingFestaPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetFriendRankingFestaPoint");

	Params::HttpHelper_Receive_RankingGetFriendRankingFestaPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetFriendRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetFriendRankingLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetFriendRankingLegendCompe(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetFriendRankingLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetFriendRankingLegendCompe");

	Params::HttpHelper_Receive_RankingGetFriendRankingLegendCompe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetFriendRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetFriendRankingRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetFriendRankingRankMatch(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetFriendRankingRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetFriendRankingRankMatch");

	Params::HttpHelper_Receive_RankingGetFriendRankingRankMatch Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingFestaPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetMyRankingFestaPoint(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetMyRankingFestaPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetMyRankingFestaPoint");

	Params::HttpHelper_Receive_RankingGetMyRankingFestaPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetMyRankingLegendCompe(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetMyRankingLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetMyRankingLegendCompe");

	Params::HttpHelper_Receive_RankingGetMyRankingLegendCompe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetMyRankingRankMatch(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetMyRankingRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetMyRankingRankMatch");

	Params::HttpHelper_Receive_RankingGetMyRankingRankMatch Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetMyRankingTimeTrialResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetMyRankingTimeTrial(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetMyRankingTimeTrialResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetMyRankingTimeTrial");

	Params::HttpHelper_Receive_RankingGetMyRankingTimeTrial Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingFestaPointResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetRankingFestaPoint(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetRankingFestaPointResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetRankingFestaPoint");

	Params::HttpHelper_Receive_RankingGetRankingFestaPoint Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingLegendCompeResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetRankingLegendCompe(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetRankingLegendCompeResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetRankingLegendCompe");

	Params::HttpHelper_Receive_RankingGetRankingLegendCompe Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingRankMatchResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetRankingRankMatch(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetRankingRankMatchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetRankingRankMatch");

	Params::HttpHelper_Receive_RankingGetRankingRankMatch Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RankingGetRankingTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRankingGetRankingTimeTrialResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RankingGetRankingTimeTrial(int32 Handle, bool* OutError, int32* ResCode, struct FRankingGetRankingTimeTrialResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RankingGetRankingTimeTrial");

	Params::HttpHelper_Receive_RankingGetRankingTimeTrial Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_ResultSaveFestaResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveFestaResultResponse*  Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_ResultSaveFestaResult(int32 Handle, bool* OutError, int32* ResCode, struct FResultSaveFestaResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_ResultSaveFestaResult");

	Params::HttpHelper_Receive_ResultSaveFestaResult Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_ResultSaveLegendCompeResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveLegendCompeResultResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_ResultSaveLegendCompeResult(int32 Handle, bool* OutError, int32* ResCode, struct FResultSaveLegendCompeResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_ResultSaveLegendCompeResult");

	Params::HttpHelper_Receive_ResultSaveLegendCompeResult Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_ResultSaveRankMatchResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveRankMatchResultResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_ResultSaveRankMatchResult(int32 Handle, bool* OutError, int32* ResCode, struct FResultSaveRankMatchResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_ResultSaveRankMatchResult");

	Params::HttpHelper_Receive_ResultSaveRankMatchResult Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_ResultSaveTimeTrialResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FResultSaveTimeTrialResultResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_ResultSaveTimeTrialResult(int32 Handle, bool* OutError, int32* ResCode, struct FResultSaveTimeTrialResultResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_ResultSaveTimeTrialResult");

	Params::HttpHelper_Receive_ResultSaveTimeTrialResult Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_RomCheckRomVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRomCheckRomVersionResponse*     Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_RomCheckRomVersion(int32 Handle, bool* OutError, int32* ResCode, struct FRomCheckRomVersionResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_RomCheckRomVersion");

	Params::HttpHelper_Receive_RomCheckRomVersion Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_SamplePart1
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSamplePart1Response*            Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_SamplePart1(int32 Handle, bool* OutError, int32* ResCode, struct FSamplePart1Response* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_SamplePart1");

	Params::HttpHelper_Receive_SamplePart1 Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_SessionKeepalive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSessionKeepaliveResponse*       Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_SessionKeepalive(int32 Handle, bool* OutError, int32* ResCode, struct FSessionKeepaliveResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_SessionKeepalive");

	Params::HttpHelper_Receive_SessionKeepalive Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_StartSaveFestaStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartSaveFestaStartResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_StartSaveFestaStart(int32 Handle, bool* OutError, int32* ResCode, struct FStartSaveFestaStartResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_StartSaveFestaStart");

	Params::HttpHelper_Receive_StartSaveFestaStart Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_StartSaveLegendCompeStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartSaveLegendCompeStartResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_StartSaveLegendCompeStart(int32 Handle, bool* OutError, int32* ResCode, struct FStartSaveLegendCompeStartResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_StartSaveLegendCompeStart");

	Params::HttpHelper_Receive_StartSaveLegendCompeStart Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_StartSaveRankMatchStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartSaveRankMatchStartResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_StartSaveRankMatchStart(int32 Handle, bool* OutError, int32* ResCode, struct FStartSaveRankMatchStartResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_StartSaveRankMatchStart");

	Params::HttpHelper_Receive_StartSaveRankMatchStart Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserGetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetDataResponse*            Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserGetData(int32 Handle, bool* OutError, int32* ResCode, struct FUserGetDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserGetData");

	Params::HttpHelper_Receive_UserGetData Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserGetPartsData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetPartsDataResponse*       Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserGetPartsData(int32 Handle, bool* OutError, int32* ResCode, struct FUserGetPartsDataResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserGetPartsData");

	Params::HttpHelper_Receive_UserGetPartsData Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserGetUserIdsByPuid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserIdsByPuidResponse*   Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserGetUserIdsByPuid(int32 Handle, bool* OutError, int32* ResCode, struct FUserGetUserIdsByPuidResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserGetUserIdsByPuid");

	Params::HttpHelper_Receive_UserGetUserIdsByPuid Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserGetUserIdsByUid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserIdsByUidResponse*    Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserGetUserIdsByUid(int32 Handle, bool* OutError, int32* ResCode, struct FUserGetUserIdsByUidResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserGetUserIdsByUid");

	Params::HttpHelper_Receive_UserGetUserIdsByUid Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserGetUserNetworkSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserNetworkSettingsResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserGetUserNetworkSettings(int32 Handle, bool* OutError, int32* ResCode, struct FUserGetUserNetworkSettingsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserGetUserNetworkSettings");

	Params::HttpHelper_Receive_UserGetUserNetworkSettings Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserGetUserSearch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserGetUserSearchResponse*      Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserGetUserSearch(int32 Handle, bool* OutError, int32* ResCode, struct FUserGetUserSearchResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserGetUserSearch");

	Params::HttpHelper_Receive_UserGetUserSearch Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserNintendoSwitchOnlineCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserNintendoSwitchOnlineCheckResponse*Response                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserNintendoSwitchOnlineCheck(int32 Handle, bool* OutError, int32* ResCode, struct FUserNintendoSwitchOnlineCheckResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserNintendoSwitchOnlineCheck");

	Params::HttpHelper_Receive_UserNintendoSwitchOnlineCheck Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserSavePaidDlcOwnerships
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserSavePaidDlcOwnershipsResponse*Response                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserSavePaidDlcOwnerships(int32 Handle, bool* OutError, int32* ResCode, struct FUserSavePaidDlcOwnershipsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserSavePaidDlcOwnerships");

	Params::HttpHelper_Receive_UserSavePaidDlcOwnerships Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Receive_UserSaveUserNetworkSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutError                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResCode                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserSaveUserNetworkSettingsResponse*Response                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::Receive_UserSaveUserNetworkSettings(int32 Handle, bool* OutError, int32* ResCode, struct FUserSaveUserNetworkSettingsResponse* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Receive_UserSaveUserNetworkSettings");

	Params::HttpHelper_Receive_UserSaveUserNetworkSettings Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = Parms.OutError;

	if (ResCode != nullptr)
		*ResCode = Parms.ResCode;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCntReplayGetSignedUrlRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_CntReplayGetSignedUrl(const struct FCntReplayGetSignedUrlRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CntReplayGetSignedUrl");

	Params::HttpHelper_Send_CntReplayGetSignedUrl Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCntReplayGetSignedUrlRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_CntReplayGetSignedUrl_Callbacked(const struct FCntReplayGetSignedUrlRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CntReplayGetSignedUrl_Callbacked");

	Params::HttpHelper_Send_CntReplayGetSignedUrl_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCntReplayGetSignedUrlRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_CntReplayGetSignedUrl_Callbacked_NoResend(const struct FCntReplayGetSignedUrlRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CntReplayGetSignedUrl_Callbacked_NoResend");

	Params::HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCntReplayGetSignedUrlRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_CntReplayGetSignedUrl_NoResend(const struct FCntReplayGetSignedUrlRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CntReplayGetSignedUrl_NoResend");

	Params::HttpHelper_Send_CntReplayGetSignedUrl_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCompensationGetCompensationsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_CompensationGetCompensations(const struct FCompensationGetCompensationsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CompensationGetCompensations");

	Params::HttpHelper_Send_CompensationGetCompensations Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCompensationGetCompensationsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_CompensationGetCompensations_Callbacked(const struct FCompensationGetCompensationsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CompensationGetCompensations_Callbacked");

	Params::HttpHelper_Send_CompensationGetCompensations_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCompensationGetCompensationsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_CompensationGetCompensations_Callbacked_NoResend(const struct FCompensationGetCompensationsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CompensationGetCompensations_Callbacked_NoResend");

	Params::HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCompensationGetCompensationsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_CompensationGetCompensations_NoResend(const struct FCompensationGetCompensationsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_CompensationGetCompensations_NoResend");

	Params::HttpHelper_Send_CompensationGetCompensations_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeFairPlayPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugChangeFairPlayPoint(const struct FDebugChangeFairPlayPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeFairPlayPoint");

	Params::HttpHelper_Send_DebugChangeFairPlayPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeFairPlayPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugChangeFairPlayPoint_Callbacked(const struct FDebugChangeFairPlayPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeFairPlayPoint_Callbacked");

	Params::HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeFairPlayPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugChangeFairPlayPoint_Callbacked_NoResend(const struct FDebugChangeFairPlayPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeFairPlayPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeFairPlayPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugChangeFairPlayPoint_NoResend(const struct FDebugChangeFairPlayPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeFairPlayPoint_NoResend");

	Params::HttpHelper_Send_DebugChangeFairPlayPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeRankMatchRateRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugChangeRankMatchRate(const struct FDebugChangeRankMatchRateRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeRankMatchRate");

	Params::HttpHelper_Send_DebugChangeRankMatchRate Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeRankMatchRateRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugChangeRankMatchRate_Callbacked(const struct FDebugChangeRankMatchRateRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeRankMatchRate_Callbacked");

	Params::HttpHelper_Send_DebugChangeRankMatchRate_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeRankMatchRateRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugChangeRankMatchRate_Callbacked_NoResend(const struct FDebugChangeRankMatchRateRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeRankMatchRate_Callbacked_NoResend");

	Params::HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugChangeRankMatchRateRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugChangeRankMatchRate_NoResend(const struct FDebugChangeRankMatchRateRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugChangeRankMatchRate_NoResend");

	Params::HttpHelper_Send_DebugChangeRankMatchRate_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugConnectTest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugConnectTestRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugConnectTest(const struct FDebugConnectTestRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugConnectTest");

	Params::HttpHelper_Send_DebugConnectTest Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugConnectTest_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugConnectTestRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugConnectTest_Callbacked(const struct FDebugConnectTestRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugConnectTest_Callbacked");

	Params::HttpHelper_Send_DebugConnectTest_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugConnectTest_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugConnectTestRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugConnectTest_Callbacked_NoResend(const struct FDebugConnectTestRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugConnectTest_Callbacked_NoResend");

	Params::HttpHelper_Send_DebugConnectTest_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugConnectTest_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugConnectTestRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugConnectTest_NoResend(const struct FDebugConnectTestRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugConnectTest_NoResend");

	Params::HttpHelper_Send_DebugConnectTest_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugMatchmakingSubscribeFesta(const struct FDebugMatchmakingSubscribeFestaRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeFesta");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeFesta Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugMatchmakingSubscribeFesta_Callbacked(const struct FDebugMatchmakingSubscribeFestaRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeFesta_Callbacked");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend(const struct FDebugMatchmakingSubscribeFestaRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugMatchmakingSubscribeFesta_NoResend(const struct FDebugMatchmakingSubscribeFestaRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeFesta_NoResend");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugMatchmakingSubscribeLegendCompe(const struct FDebugMatchmakingSubscribeLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeLegendCompe");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugMatchmakingSubscribeLegendCompe_Callbacked(const struct FDebugMatchmakingSubscribeLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeLegendCompe_Callbacked");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend(const struct FDebugMatchmakingSubscribeLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugMatchmakingSubscribeLegendCompe_NoResend(const struct FDebugMatchmakingSubscribeLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeLegendCompe_NoResend");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugMatchmakingSubscribeRankMatch(const struct FDebugMatchmakingSubscribeRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeRankMatch");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeRankMatch Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugMatchmakingSubscribeRankMatch_Callbacked(const struct FDebugMatchmakingSubscribeRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeRankMatch_Callbacked");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend(const struct FDebugMatchmakingSubscribeRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_DebugMatchmakingSubscribeRankMatch_NoResend(const struct FDebugMatchmakingSubscribeRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_DebugMatchmakingSubscribeRankMatch_NoResend");

	Params::HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointAddFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FairPointAddFairPoint(const struct FFairPointAddFairPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointAddFairPoint");

	Params::HttpHelper_Send_FairPointAddFairPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointAddFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FairPointAddFairPoint_Callbacked(const struct FFairPointAddFairPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointAddFairPoint_Callbacked");

	Params::HttpHelper_Send_FairPointAddFairPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointAddFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FairPointAddFairPoint_Callbacked_NoResend(const struct FFairPointAddFairPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointAddFairPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointAddFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FairPointAddFairPoint_NoResend(const struct FFairPointAddFairPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointAddFairPoint_NoResend");

	Params::HttpHelper_Send_FairPointAddFairPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointCheckFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FairPointCheckFairPoint(const struct FFairPointCheckFairPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointCheckFairPoint");

	Params::HttpHelper_Send_FairPointCheckFairPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointCheckFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FairPointCheckFairPoint_Callbacked(const struct FFairPointCheckFairPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointCheckFairPoint_Callbacked");

	Params::HttpHelper_Send_FairPointCheckFairPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointCheckFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FairPointCheckFairPoint_Callbacked_NoResend(const struct FFairPointCheckFairPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointCheckFairPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointCheckFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FairPointCheckFairPoint_NoResend(const struct FFairPointCheckFairPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointCheckFairPoint_NoResend");

	Params::HttpHelper_Send_FairPointCheckFairPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointSubFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FairPointSubFairPoint(const struct FFairPointSubFairPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointSubFairPoint");

	Params::HttpHelper_Send_FairPointSubFairPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointSubFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FairPointSubFairPoint_Callbacked(const struct FFairPointSubFairPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointSubFairPoint_Callbacked");

	Params::HttpHelper_Send_FairPointSubFairPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointSubFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FairPointSubFairPoint_Callbacked_NoResend(const struct FFairPointSubFairPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointSubFairPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFairPointSubFairPointRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FairPointSubFairPoint_NoResend(const struct FFairPointSubFairPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FairPointSubFairPoint_NoResend");

	Params::HttpHelper_Send_FairPointSubFairPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaCheckFestaRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FestaCheckFestaReward(const struct FFestaCheckFestaRewardRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaCheckFestaReward");

	Params::HttpHelper_Send_FestaCheckFestaReward Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaCheckFestaRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FestaCheckFestaReward_Callbacked(const struct FFestaCheckFestaRewardRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaCheckFestaReward_Callbacked");

	Params::HttpHelper_Send_FestaCheckFestaReward_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaCheckFestaRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FestaCheckFestaReward_Callbacked_NoResend(const struct FFestaCheckFestaRewardRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaCheckFestaReward_Callbacked_NoResend");

	Params::HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaCheckFestaRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FestaCheckFestaReward_NoResend(const struct FFestaCheckFestaRewardRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaCheckFestaReward_NoResend");

	Params::HttpHelper_Send_FestaCheckFestaReward_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FestaFestaTop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaFestaTopRequest&     Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FestaFestaTop(const struct FFestaFestaTopRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaFestaTop");

	Params::HttpHelper_Send_FestaFestaTop Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FestaFestaTop_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaFestaTopRequest&     Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FestaFestaTop_Callbacked(const struct FFestaFestaTopRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaFestaTop_Callbacked");

	Params::HttpHelper_Send_FestaFestaTop_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FestaFestaTop_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaFestaTopRequest&     Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FestaFestaTop_Callbacked_NoResend(const struct FFestaFestaTopRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaFestaTop_Callbacked_NoResend");

	Params::HttpHelper_Send_FestaFestaTop_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FestaFestaTop_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFestaFestaTopRequest&     Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FestaFestaTop_NoResend(const struct FFestaFestaTopRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FestaFestaTop_NoResend");

	Params::HttpHelper_Send_FestaFestaTop_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendAcceptFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendAcceptFriend(const struct FFriendAcceptFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendAcceptFriend");

	Params::HttpHelper_Send_FriendAcceptFriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendAcceptFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendAcceptFriend_Callbacked(const struct FFriendAcceptFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendAcceptFriend_Callbacked");

	Params::HttpHelper_Send_FriendAcceptFriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendAcceptFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendAcceptFriend_Callbacked_NoResend(const struct FFriendAcceptFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendAcceptFriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendAcceptFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendAcceptFriend_NoResend(const struct FFriendAcceptFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendAcceptFriend_NoResend");

	Params::HttpHelper_Send_FriendAcceptFriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendApplyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendApplyFriendRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendApplyFriend(const struct FFriendApplyFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendApplyFriend");

	Params::HttpHelper_Send_FriendApplyFriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendApplyFriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendApplyFriendRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendApplyFriend_Callbacked(const struct FFriendApplyFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendApplyFriend_Callbacked");

	Params::HttpHelper_Send_FriendApplyFriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendApplyFriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendApplyFriendRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendApplyFriend_Callbacked_NoResend(const struct FFriendApplyFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendApplyFriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendApplyFriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendApplyFriendRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendApplyFriend_NoResend(const struct FFriendApplyFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendApplyFriend_NoResend");

	Params::HttpHelper_Send_FriendApplyFriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendCancelFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendCancelFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendCancelFriend(const struct FFriendCancelFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendCancelFriend");

	Params::HttpHelper_Send_FriendCancelFriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendCancelFriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendCancelFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendCancelFriend_Callbacked(const struct FFriendCancelFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendCancelFriend_Callbacked");

	Params::HttpHelper_Send_FriendCancelFriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendCancelFriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendCancelFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendCancelFriend_Callbacked_NoResend(const struct FFriendCancelFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendCancelFriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendCancelFriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendCancelFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendCancelFriend_NoResend(const struct FFriendCancelFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendCancelFriend_NoResend");

	Params::HttpHelper_Send_FriendCancelFriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendLastDateRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendGetFriendLastDate(const struct FFriendGetFriendLastDateRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendLastDate");

	Params::HttpHelper_Send_FriendGetFriendLastDate Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendLastDateRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendGetFriendLastDate_Callbacked(const struct FFriendGetFriendLastDateRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendLastDate_Callbacked");

	Params::HttpHelper_Send_FriendGetFriendLastDate_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendLastDateRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendGetFriendLastDate_Callbacked_NoResend(const struct FFriendGetFriendLastDateRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendLastDate_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendLastDateRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendGetFriendLastDate_NoResend(const struct FFriendGetFriendLastDateRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendLastDate_NoResend");

	Params::HttpHelper_Send_FriendGetFriendLastDate_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendListRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendGetFriendList(const struct FFriendGetFriendListRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendList");

	Params::HttpHelper_Send_FriendGetFriendList Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendList_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendListRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendGetFriendList_Callbacked(const struct FFriendGetFriendListRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendList_Callbacked");

	Params::HttpHelper_Send_FriendGetFriendList_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendList_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendListRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendGetFriendList_Callbacked_NoResend(const struct FFriendGetFriendListRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendList_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendGetFriendList_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendGetFriendListRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendGetFriendList_NoResend(const struct FFriendGetFriendListRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendGetFriendList_NoResend");

	Params::HttpHelper_Send_FriendGetFriendList_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendNotifyFriendRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendNotifyFriend(const struct FFriendNotifyFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendNotifyFriend");

	Params::HttpHelper_Send_FriendNotifyFriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendNotifyFriendRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendNotifyFriend_Callbacked(const struct FFriendNotifyFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendNotifyFriend_Callbacked");

	Params::HttpHelper_Send_FriendNotifyFriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendNotifyFriendRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendNotifyFriend_Callbacked_NoResend(const struct FFriendNotifyFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendNotifyFriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendNotifyFriendRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendNotifyFriend_NoResend(const struct FFriendNotifyFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendNotifyFriend_NoResend");

	Params::HttpHelper_Send_FriendNotifyFriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendRejectFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRejectFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendRejectFriend(const struct FFriendRejectFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRejectFriend");

	Params::HttpHelper_Send_FriendRejectFriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendRejectFriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRejectFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendRejectFriend_Callbacked(const struct FFriendRejectFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRejectFriend_Callbacked");

	Params::HttpHelper_Send_FriendRejectFriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendRejectFriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRejectFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendRejectFriend_Callbacked_NoResend(const struct FFriendRejectFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRejectFriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendRejectFriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRejectFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendRejectFriend_NoResend(const struct FFriendRejectFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRejectFriend_NoResend");

	Params::HttpHelper_Send_FriendRejectFriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendRequestFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRequestFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendRequestFriend(const struct FFriendRequestFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRequestFriend");

	Params::HttpHelper_Send_FriendRequestFriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendRequestFriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRequestFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendRequestFriend_Callbacked(const struct FFriendRequestFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRequestFriend_Callbacked");

	Params::HttpHelper_Send_FriendRequestFriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendRequestFriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRequestFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendRequestFriend_Callbacked_NoResend(const struct FFriendRequestFriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRequestFriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendRequestFriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendRequestFriendRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendRequestFriend_NoResend(const struct FFriendRequestFriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendRequestFriend_NoResend");

	Params::HttpHelper_Send_FriendRequestFriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendUnfriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendUnfriendRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendUnfriend(const struct FFriendUnfriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendUnfriend");

	Params::HttpHelper_Send_FriendUnfriend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_FriendUnfriend_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendUnfriendRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendUnfriend_Callbacked(const struct FFriendUnfriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendUnfriend_Callbacked");

	Params::HttpHelper_Send_FriendUnfriend_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendUnfriend_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendUnfriendRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_FriendUnfriend_Callbacked_NoResend(const struct FFriendUnfriendRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendUnfriend_Callbacked_NoResend");

	Params::HttpHelper_Send_FriendUnfriend_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_FriendUnfriend_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFriendUnfriendRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_FriendUnfriend_NoResend(const struct FFriendUnfriendRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_FriendUnfriend_NoResend");

	Params::HttpHelper_Send_FriendUnfriend_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetFriendGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_GhostGetFriendGhostData(const struct FGhostGetFriendGhostDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetFriendGhostData");

	Params::HttpHelper_Send_GhostGetFriendGhostData Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetFriendGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_GhostGetFriendGhostData_Callbacked(const struct FGhostGetFriendGhostDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetFriendGhostData_Callbacked");

	Params::HttpHelper_Send_GhostGetFriendGhostData_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetFriendGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_GhostGetFriendGhostData_Callbacked_NoResend(const struct FGhostGetFriendGhostDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetFriendGhostData_Callbacked_NoResend");

	Params::HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetFriendGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_GhostGetFriendGhostData_NoResend(const struct FGhostGetFriendGhostDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetFriendGhostData_NoResend");

	Params::HttpHelper_Send_GhostGetFriendGhostData_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetRankingGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_GhostGetRankingGhostData(const struct FGhostGetRankingGhostDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetRankingGhostData");

	Params::HttpHelper_Send_GhostGetRankingGhostData Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetRankingGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_GhostGetRankingGhostData_Callbacked(const struct FGhostGetRankingGhostDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetRankingGhostData_Callbacked");

	Params::HttpHelper_Send_GhostGetRankingGhostData_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetRankingGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_GhostGetRankingGhostData_Callbacked_NoResend(const struct FGhostGetRankingGhostDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetRankingGhostData_Callbacked_NoResend");

	Params::HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGhostGetRankingGhostDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_GhostGetRankingGhostData_NoResend(const struct FGhostGetRankingGhostDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_GhostGetRankingGhostData_NoResend");

	Params::HttpHelper_Send_GhostGetRankingGhostData_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_HealthCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHealthCheckRequest&       Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_HealthCheck(const struct FHealthCheckRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_HealthCheck");

	Params::HttpHelper_Send_HealthCheck Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_HealthCheck_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHealthCheckRequest&       Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_HealthCheck_Callbacked(const struct FHealthCheckRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_HealthCheck_Callbacked");

	Params::HttpHelper_Send_HealthCheck_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_HealthCheck_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHealthCheckRequest&       Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_HealthCheck_Callbacked_NoResend(const struct FHealthCheckRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_HealthCheck_Callbacked_NoResend");

	Params::HttpHelper_Send_HealthCheck_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_HealthCheck_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHealthCheckRequest&       Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_HealthCheck_NoResend(const struct FHealthCheckRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_HealthCheck_NoResend");

	Params::HttpHelper_Send_HealthCheck_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLegendCompeCheckLegendCompeRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LegendCompeCheckLegendCompeReward(const struct FLegendCompeCheckLegendCompeRewardRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LegendCompeCheckLegendCompeReward");

	Params::HttpHelper_Send_LegendCompeCheckLegendCompeReward Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLegendCompeCheckLegendCompeRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LegendCompeCheckLegendCompeReward_Callbacked(const struct FLegendCompeCheckLegendCompeRewardRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LegendCompeCheckLegendCompeReward_Callbacked");

	Params::HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLegendCompeCheckLegendCompeRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend(const struct FLegendCompeCheckLegendCompeRewardRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend");

	Params::HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLegendCompeCheckLegendCompeRewardRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LegendCompeCheckLegendCompeReward_NoResend(const struct FLegendCompeCheckLegendCompeRewardRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LegendCompeCheckLegendCompeReward_NoResend");

	Params::HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGenerateLobbyRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyGenerateLobby(const struct FLobbyGenerateLobbyRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGenerateLobby");

	Params::HttpHelper_Send_LobbyGenerateLobby Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGenerateLobbyRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyGenerateLobby_Callbacked(const struct FLobbyGenerateLobbyRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGenerateLobby_Callbacked");

	Params::HttpHelper_Send_LobbyGenerateLobby_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGenerateLobbyRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyGenerateLobby_Callbacked_NoResend(const struct FLobbyGenerateLobbyRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGenerateLobby_Callbacked_NoResend");

	Params::HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGenerateLobbyRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyGenerateLobby_NoResend(const struct FLobbyGenerateLobbyRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGenerateLobby_NoResend");

	Params::HttpHelper_Send_LobbyGenerateLobby_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGetEosLobbyIdRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyGetEosLobbyId(const struct FLobbyGetEosLobbyIdRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGetEosLobbyId");

	Params::HttpHelper_Send_LobbyGetEosLobbyId Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGetEosLobbyIdRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyGetEosLobbyId_Callbacked(const struct FLobbyGetEosLobbyIdRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGetEosLobbyId_Callbacked");

	Params::HttpHelper_Send_LobbyGetEosLobbyId_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGetEosLobbyIdRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyGetEosLobbyId_Callbacked_NoResend(const struct FLobbyGetEosLobbyIdRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGetEosLobbyId_Callbacked_NoResend");

	Params::HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyGetEosLobbyIdRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyGetEosLobbyId_NoResend(const struct FLobbyGetEosLobbyIdRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyGetEosLobbyId_NoResend");

	Params::HttpHelper_Send_LobbyGetEosLobbyId_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyKeepAliveRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyKeepAlive(const struct FLobbyKeepAliveRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyKeepAlive");

	Params::HttpHelper_Send_LobbyKeepAlive Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyKeepAliveRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyKeepAlive_Callbacked(const struct FLobbyKeepAliveRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyKeepAlive_Callbacked");

	Params::HttpHelper_Send_LobbyKeepAlive_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyKeepAliveRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyKeepAlive_Callbacked_NoResend(const struct FLobbyKeepAliveRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyKeepAlive_Callbacked_NoResend");

	Params::HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyKeepAliveRequest&    Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyKeepAlive_NoResend(const struct FLobbyKeepAliveRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyKeepAlive_NoResend");

	Params::HttpHelper_Send_LobbyKeepAlive_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyRemoveLobbyRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyRemoveLobby(const struct FLobbyRemoveLobbyRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyRemoveLobby");

	Params::HttpHelper_Send_LobbyRemoveLobby Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyRemoveLobbyRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyRemoveLobby_Callbacked(const struct FLobbyRemoveLobbyRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyRemoveLobby_Callbacked");

	Params::HttpHelper_Send_LobbyRemoveLobby_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyRemoveLobbyRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LobbyRemoveLobby_Callbacked_NoResend(const struct FLobbyRemoveLobbyRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyRemoveLobby_Callbacked_NoResend");

	Params::HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyRemoveLobbyRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LobbyRemoveLobby_NoResend(const struct FLobbyRemoveLobbyRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LobbyRemoveLobby_NoResend");

	Params::HttpHelper_Send_LobbyRemoveLobby_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LoginCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLoginCheckRequest&        Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LoginCheck(const struct FLoginCheckRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LoginCheck");

	Params::HttpHelper_Send_LoginCheck Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_LoginCheck_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLoginCheckRequest&        Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LoginCheck_Callbacked(const struct FLoginCheckRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LoginCheck_Callbacked");

	Params::HttpHelper_Send_LoginCheck_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LoginCheck_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLoginCheckRequest&        Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_LoginCheck_Callbacked_NoResend(const struct FLoginCheckRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LoginCheck_Callbacked_NoResend");

	Params::HttpHelper_Send_LoginCheck_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_LoginCheck_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLoginCheckRequest&        Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_LoginCheck_NoResend(const struct FLoginCheckRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_LoginCheck_NoResend");

	Params::HttpHelper_Send_LoginCheck_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMaintenanceScheduleRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MasterDataGetMaintenanceSchedule(const struct FMasterDataGetMaintenanceScheduleRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMaintenanceSchedule");

	Params::HttpHelper_Send_MasterDataGetMaintenanceSchedule Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMaintenanceScheduleRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MasterDataGetMaintenanceSchedule_Callbacked(const struct FMasterDataGetMaintenanceScheduleRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMaintenanceSchedule_Callbacked");

	Params::HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMaintenanceScheduleRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend(const struct FMasterDataGetMaintenanceScheduleRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend");

	Params::HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMaintenanceScheduleRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MasterDataGetMaintenanceSchedule_NoResend(const struct FMasterDataGetMaintenanceScheduleRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMaintenanceSchedule_NoResend");

	Params::HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMasterDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MasterDataGetMasterData(const struct FMasterDataGetMasterDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMasterData");

	Params::HttpHelper_Send_MasterDataGetMasterData Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMasterDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MasterDataGetMasterData_Callbacked(const struct FMasterDataGetMasterDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMasterData_Callbacked");

	Params::HttpHelper_Send_MasterDataGetMasterData_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMasterDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MasterDataGetMasterData_Callbacked_NoResend(const struct FMasterDataGetMasterDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMasterData_Callbacked_NoResend");

	Params::HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetMasterDataRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MasterDataGetMasterData_NoResend(const struct FMasterDataGetMasterDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetMasterData_NoResend");

	Params::HttpHelper_Send_MasterDataGetMasterData_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetVersionRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MasterDataGetVersion(const struct FMasterDataGetVersionRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetVersion");

	Params::HttpHelper_Send_MasterDataGetVersion Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetVersionRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MasterDataGetVersion_Callbacked(const struct FMasterDataGetVersionRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetVersion_Callbacked");

	Params::HttpHelper_Send_MasterDataGetVersion_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetVersionRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MasterDataGetVersion_Callbacked_NoResend(const struct FMasterDataGetVersionRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetVersion_Callbacked_NoResend");

	Params::HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMasterDataGetVersionRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MasterDataGetVersion_NoResend(const struct FMasterDataGetVersionRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MasterDataGetVersion_NoResend");

	Params::HttpHelper_Send_MasterDataGetVersion_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingDescribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingDescribe(const struct FMatchmakingDescribeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingDescribe");

	Params::HttpHelper_Send_MatchmakingDescribe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingDescribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingDescribe_Callbacked(const struct FMatchmakingDescribeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingDescribe_Callbacked");

	Params::HttpHelper_Send_MatchmakingDescribe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingDescribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingDescribe_Callbacked_NoResend(const struct FMatchmakingDescribeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingDescribe_Callbacked_NoResend");

	Params::HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingDescribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingDescribe_NoResend(const struct FMatchmakingDescribeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingDescribe_NoResend");

	Params::HttpHelper_Send_MatchmakingDescribe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingStop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingStopRequest&   Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingStop(const struct FMatchmakingStopRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingStop");

	Params::HttpHelper_Send_MatchmakingStop Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingStop_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingStopRequest&   Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingStop_Callbacked(const struct FMatchmakingStopRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingStop_Callbacked");

	Params::HttpHelper_Send_MatchmakingStop_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingStop_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingStopRequest&   Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingStop_Callbacked_NoResend(const struct FMatchmakingStopRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingStop_Callbacked_NoResend");

	Params::HttpHelper_Send_MatchmakingStop_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingStop_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingStopRequest&   Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingStop_NoResend(const struct FMatchmakingStopRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingStop_NoResend");

	Params::HttpHelper_Send_MatchmakingStop_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingSubscribeFesta(const struct FMatchmakingSubscribeFestaRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeFesta");

	Params::HttpHelper_Send_MatchmakingSubscribeFesta Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingSubscribeFesta_Callbacked(const struct FMatchmakingSubscribeFestaRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeFesta_Callbacked");

	Params::HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingSubscribeFesta_Callbacked_NoResend(const struct FMatchmakingSubscribeFestaRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeFesta_Callbacked_NoResend");

	Params::HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeFestaRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingSubscribeFesta_NoResend(const struct FMatchmakingSubscribeFestaRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeFesta_NoResend");

	Params::HttpHelper_Send_MatchmakingSubscribeFesta_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingSubscribeLegendCompe(const struct FMatchmakingSubscribeLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeLegendCompe");

	Params::HttpHelper_Send_MatchmakingSubscribeLegendCompe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingSubscribeLegendCompe_Callbacked(const struct FMatchmakingSubscribeLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeLegendCompe_Callbacked");

	Params::HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend(const struct FMatchmakingSubscribeLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend");

	Params::HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingSubscribeLegendCompe_NoResend(const struct FMatchmakingSubscribeLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeLegendCompe_NoResend");

	Params::HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingSubscribeRankMatch(const struct FMatchmakingSubscribeRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeRankMatch");

	Params::HttpHelper_Send_MatchmakingSubscribeRankMatch Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingSubscribeRankMatch_Callbacked(const struct FMatchmakingSubscribeRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeRankMatch_Callbacked");

	Params::HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend(const struct FMatchmakingSubscribeRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend");

	Params::HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingSubscribeRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingSubscribeRankMatch_NoResend(const struct FMatchmakingSubscribeRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingSubscribeRankMatch_NoResend");

	Params::HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingUnsubscribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingUnsubscribe(const struct FMatchmakingUnsubscribeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingUnsubscribe");

	Params::HttpHelper_Send_MatchmakingUnsubscribe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingUnsubscribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingUnsubscribe_Callbacked(const struct FMatchmakingUnsubscribeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingUnsubscribe_Callbacked");

	Params::HttpHelper_Send_MatchmakingUnsubscribe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingUnsubscribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_MatchmakingUnsubscribe_Callbacked_NoResend(const struct FMatchmakingUnsubscribeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingUnsubscribe_Callbacked_NoResend");

	Params::HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMatchmakingUnsubscribeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_MatchmakingUnsubscribe_NoResend(const struct FMatchmakingUnsubscribeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_MatchmakingUnsubscribe_NoResend");

	Params::HttpHelper_Send_MatchmakingUnsubscribe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOntSaveOntParticipantUserRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_OntSaveOntParticipantUser(const struct FOntSaveOntParticipantUserRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OntSaveOntParticipantUser");

	Params::HttpHelper_Send_OntSaveOntParticipantUser Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOntSaveOntParticipantUserRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_OntSaveOntParticipantUser_Callbacked(const struct FOntSaveOntParticipantUserRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OntSaveOntParticipantUser_Callbacked");

	Params::HttpHelper_Send_OntSaveOntParticipantUser_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOntSaveOntParticipantUserRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_OntSaveOntParticipantUser_Callbacked_NoResend(const struct FOntSaveOntParticipantUserRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OntSaveOntParticipantUser_Callbacked_NoResend");

	Params::HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOntSaveOntParticipantUserRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_OntSaveOntParticipantUser_NoResend(const struct FOntSaveOntParticipantUserRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OntSaveOntParticipantUser_NoResend");

	Params::HttpHelper_Send_OntSaveOntParticipantUser_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveAutoReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_OperationSaveAutoReport(const struct FOperationSaveAutoReportRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveAutoReport");

	Params::HttpHelper_Send_OperationSaveAutoReport Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveAutoReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_OperationSaveAutoReport_Callbacked(const struct FOperationSaveAutoReportRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveAutoReport_Callbacked");

	Params::HttpHelper_Send_OperationSaveAutoReport_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveAutoReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_OperationSaveAutoReport_Callbacked_NoResend(const struct FOperationSaveAutoReportRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveAutoReport_Callbacked_NoResend");

	Params::HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveAutoReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_OperationSaveAutoReport_NoResend(const struct FOperationSaveAutoReportRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveAutoReport_NoResend");

	Params::HttpHelper_Send_OperationSaveAutoReport_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveOperatorReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_OperationSaveOperatorReport(const struct FOperationSaveOperatorReportRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveOperatorReport");

	Params::HttpHelper_Send_OperationSaveOperatorReport Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveOperatorReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_OperationSaveOperatorReport_Callbacked(const struct FOperationSaveOperatorReportRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveOperatorReport_Callbacked");

	Params::HttpHelper_Send_OperationSaveOperatorReport_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveOperatorReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_OperationSaveOperatorReport_Callbacked_NoResend(const struct FOperationSaveOperatorReportRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveOperatorReport_Callbacked_NoResend");

	Params::HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FOperationSaveOperatorReportRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_OperationSaveOperatorReport_NoResend(const struct FOperationSaveOperatorReportRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_OperationSaveOperatorReport_NoResend");

	Params::HttpHelper_Send_OperationSaveOperatorReport_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetFriendRankingFestaPoint(const struct FRankingGetFriendRankingFestaPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingFestaPoint");

	Params::HttpHelper_Send_RankingGetFriendRankingFestaPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetFriendRankingFestaPoint_Callbacked(const struct FRankingGetFriendRankingFestaPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingFestaPoint_Callbacked");

	Params::HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend(const struct FRankingGetFriendRankingFestaPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetFriendRankingFestaPoint_NoResend(const struct FRankingGetFriendRankingFestaPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingFestaPoint_NoResend");

	Params::HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetFriendRankingLegendCompe(const struct FRankingGetFriendRankingLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingLegendCompe");

	Params::HttpHelper_Send_RankingGetFriendRankingLegendCompe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetFriendRankingLegendCompe_Callbacked(const struct FRankingGetFriendRankingLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingLegendCompe_Callbacked");

	Params::HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend(const struct FRankingGetFriendRankingLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetFriendRankingLegendCompe_NoResend(const struct FRankingGetFriendRankingLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingLegendCompe_NoResend");

	Params::HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetFriendRankingRankMatch(const struct FRankingGetFriendRankingRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingRankMatch");

	Params::HttpHelper_Send_RankingGetFriendRankingRankMatch Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetFriendRankingRankMatch_Callbacked(const struct FRankingGetFriendRankingRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingRankMatch_Callbacked");

	Params::HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend(const struct FRankingGetFriendRankingRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetFriendRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetFriendRankingRankMatch_NoResend(const struct FRankingGetFriendRankingRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetFriendRankingRankMatch_NoResend");

	Params::HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingFestaPoint(const struct FRankingGetMyRankingFestaPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingFestaPoint");

	Params::HttpHelper_Send_RankingGetMyRankingFestaPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingFestaPoint_Callbacked(const struct FRankingGetMyRankingFestaPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingFestaPoint_Callbacked");

	Params::HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend(const struct FRankingGetMyRankingFestaPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingFestaPoint_NoResend(const struct FRankingGetMyRankingFestaPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingFestaPoint_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingLegendCompe(const struct FRankingGetMyRankingLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingLegendCompe");

	Params::HttpHelper_Send_RankingGetMyRankingLegendCompe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingLegendCompe_Callbacked(const struct FRankingGetMyRankingLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingLegendCompe_Callbacked");

	Params::HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend(const struct FRankingGetMyRankingLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingLegendCompe_NoResend(const struct FRankingGetMyRankingLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingLegendCompe_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingRankMatch(const struct FRankingGetMyRankingRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingRankMatch");

	Params::HttpHelper_Send_RankingGetMyRankingRankMatch Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingRankMatch_Callbacked(const struct FRankingGetMyRankingRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingRankMatch_Callbacked");

	Params::HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingRankMatch_Callbacked_NoResend(const struct FRankingGetMyRankingRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingRankMatch_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingRankMatch_NoResend(const struct FRankingGetMyRankingRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingRankMatch_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingTimeTrial(const struct FRankingGetMyRankingTimeTrialRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingTimeTrial");

	Params::HttpHelper_Send_RankingGetMyRankingTimeTrial Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingTimeTrial_Callbacked(const struct FRankingGetMyRankingTimeTrialRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingTimeTrial_Callbacked");

	Params::HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend(const struct FRankingGetMyRankingTimeTrialRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetMyRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetMyRankingTimeTrial_NoResend(const struct FRankingGetMyRankingTimeTrialRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetMyRankingTimeTrial_NoResend");

	Params::HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingFestaPoint(const struct FRankingGetRankingFestaPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingFestaPoint");

	Params::HttpHelper_Send_RankingGetRankingFestaPoint Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingFestaPoint_Callbacked(const struct FRankingGetRankingFestaPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingFestaPoint_Callbacked");

	Params::HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingFestaPoint_Callbacked_NoResend(const struct FRankingGetRankingFestaPointRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingFestaPoint_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingFestaPointRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingFestaPoint_NoResend(const struct FRankingGetRankingFestaPointRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingFestaPoint_NoResend");

	Params::HttpHelper_Send_RankingGetRankingFestaPoint_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingLegendCompe(const struct FRankingGetRankingLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingLegendCompe");

	Params::HttpHelper_Send_RankingGetRankingLegendCompe Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingLegendCompe_Callbacked(const struct FRankingGetRankingLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingLegendCompe_Callbacked");

	Params::HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingLegendCompe_Callbacked_NoResend(const struct FRankingGetRankingLegendCompeRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingLegendCompe_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingLegendCompeRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingLegendCompe_NoResend(const struct FRankingGetRankingLegendCompeRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingLegendCompe_NoResend");

	Params::HttpHelper_Send_RankingGetRankingLegendCompe_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingRankMatch(const struct FRankingGetRankingRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingRankMatch");

	Params::HttpHelper_Send_RankingGetRankingRankMatch Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingRankMatch_Callbacked(const struct FRankingGetRankingRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingRankMatch_Callbacked");

	Params::HttpHelper_Send_RankingGetRankingRankMatch_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingRankMatch_Callbacked_NoResend(const struct FRankingGetRankingRankMatchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingRankMatch_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingRankMatchRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingRankMatch_NoResend(const struct FRankingGetRankingRankMatchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingRankMatch_NoResend");

	Params::HttpHelper_Send_RankingGetRankingRankMatch_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingTimeTrial(const struct FRankingGetRankingTimeTrialRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingTimeTrial");

	Params::HttpHelper_Send_RankingGetRankingTimeTrial Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingTimeTrial_Callbacked(const struct FRankingGetRankingTimeTrialRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingTimeTrial_Callbacked");

	Params::HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RankingGetRankingTimeTrial_Callbacked_NoResend(const struct FRankingGetRankingTimeTrialRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingTimeTrial_Callbacked_NoResend");

	Params::HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRankingGetRankingTimeTrialRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RankingGetRankingTimeTrial_NoResend(const struct FRankingGetRankingTimeTrialRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RankingGetRankingTimeTrial_NoResend");

	Params::HttpHelper_Send_RankingGetRankingTimeTrial_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveFestaResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveFestaResult(const struct FResultSaveFestaResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveFestaResult");

	Params::HttpHelper_Send_ResultSaveFestaResult Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveFestaResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveFestaResult_Callbacked(const struct FResultSaveFestaResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveFestaResult_Callbacked");

	Params::HttpHelper_Send_ResultSaveFestaResult_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveFestaResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveFestaResult_Callbacked_NoResend(const struct FResultSaveFestaResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveFestaResult_Callbacked_NoResend");

	Params::HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveFestaResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveFestaResult_NoResend(const struct FResultSaveFestaResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveFestaResult_NoResend");

	Params::HttpHelper_Send_ResultSaveFestaResult_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveLegendCompeResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveLegendCompeResult(const struct FResultSaveLegendCompeResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveLegendCompeResult");

	Params::HttpHelper_Send_ResultSaveLegendCompeResult Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveLegendCompeResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveLegendCompeResult_Callbacked(const struct FResultSaveLegendCompeResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveLegendCompeResult_Callbacked");

	Params::HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveLegendCompeResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveLegendCompeResult_Callbacked_NoResend(const struct FResultSaveLegendCompeResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveLegendCompeResult_Callbacked_NoResend");

	Params::HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveLegendCompeResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveLegendCompeResult_NoResend(const struct FResultSaveLegendCompeResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveLegendCompeResult_NoResend");

	Params::HttpHelper_Send_ResultSaveLegendCompeResult_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveRankMatchResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveRankMatchResult(const struct FResultSaveRankMatchResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveRankMatchResult");

	Params::HttpHelper_Send_ResultSaveRankMatchResult Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveRankMatchResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveRankMatchResult_Callbacked(const struct FResultSaveRankMatchResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveRankMatchResult_Callbacked");

	Params::HttpHelper_Send_ResultSaveRankMatchResult_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveRankMatchResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveRankMatchResult_Callbacked_NoResend(const struct FResultSaveRankMatchResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveRankMatchResult_Callbacked_NoResend");

	Params::HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveRankMatchResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveRankMatchResult_NoResend(const struct FResultSaveRankMatchResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveRankMatchResult_NoResend");

	Params::HttpHelper_Send_ResultSaveRankMatchResult_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveTimeTrialResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveTimeTrialResult(const struct FResultSaveTimeTrialResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveTimeTrialResult");

	Params::HttpHelper_Send_ResultSaveTimeTrialResult Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveTimeTrialResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveTimeTrialResult_Callbacked(const struct FResultSaveTimeTrialResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveTimeTrialResult_Callbacked");

	Params::HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveTimeTrialResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_ResultSaveTimeTrialResult_Callbacked_NoResend(const struct FResultSaveTimeTrialResultRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveTimeTrialResult_Callbacked_NoResend");

	Params::HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FResultSaveTimeTrialResultRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_ResultSaveTimeTrialResult_NoResend(const struct FResultSaveTimeTrialResultRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_ResultSaveTimeTrialResult_NoResend");

	Params::HttpHelper_Send_ResultSaveTimeTrialResult_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRomCheckRomVersionRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RomCheckRomVersion(const struct FRomCheckRomVersionRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RomCheckRomVersion");

	Params::HttpHelper_Send_RomCheckRomVersion Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRomCheckRomVersionRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RomCheckRomVersion_Callbacked(const struct FRomCheckRomVersionRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RomCheckRomVersion_Callbacked");

	Params::HttpHelper_Send_RomCheckRomVersion_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRomCheckRomVersionRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_RomCheckRomVersion_Callbacked_NoResend(const struct FRomCheckRomVersionRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RomCheckRomVersion_Callbacked_NoResend");

	Params::HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRomCheckRomVersionRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_RomCheckRomVersion_NoResend(const struct FRomCheckRomVersionRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_RomCheckRomVersion_NoResend");

	Params::HttpHelper_Send_RomCheckRomVersion_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_SamplePart1
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSamplePart1Request&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_SamplePart1(const struct FSamplePart1Request& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SamplePart1");

	Params::HttpHelper_Send_SamplePart1 Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_SamplePart1_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSamplePart1Request&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_SamplePart1_Callbacked(const struct FSamplePart1Request& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SamplePart1_Callbacked");

	Params::HttpHelper_Send_SamplePart1_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_SamplePart1_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSamplePart1Request&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_SamplePart1_Callbacked_NoResend(const struct FSamplePart1Request& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SamplePart1_Callbacked_NoResend");

	Params::HttpHelper_Send_SamplePart1_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_SamplePart1_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSamplePart1Request&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_SamplePart1_NoResend(const struct FSamplePart1Request& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SamplePart1_NoResend");

	Params::HttpHelper_Send_SamplePart1_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_SessionKeepalive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSessionKeepaliveRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_SessionKeepalive(const struct FSessionKeepaliveRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SessionKeepalive");

	Params::HttpHelper_Send_SessionKeepalive Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_SessionKeepalive_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSessionKeepaliveRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_SessionKeepalive_Callbacked(const struct FSessionKeepaliveRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SessionKeepalive_Callbacked");

	Params::HttpHelper_Send_SessionKeepalive_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_SessionKeepalive_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSessionKeepaliveRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_SessionKeepalive_Callbacked_NoResend(const struct FSessionKeepaliveRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SessionKeepalive_Callbacked_NoResend");

	Params::HttpHelper_Send_SessionKeepalive_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_SessionKeepalive_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSessionKeepaliveRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_SessionKeepalive_NoResend(const struct FSessionKeepaliveRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_SessionKeepalive_NoResend");

	Params::HttpHelper_Send_SessionKeepalive_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveFestaStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_StartSaveFestaStart(const struct FStartSaveFestaStartRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveFestaStart");

	Params::HttpHelper_Send_StartSaveFestaStart Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveFestaStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_StartSaveFestaStart_Callbacked(const struct FStartSaveFestaStartRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveFestaStart_Callbacked");

	Params::HttpHelper_Send_StartSaveFestaStart_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveFestaStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_StartSaveFestaStart_Callbacked_NoResend(const struct FStartSaveFestaStartRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveFestaStart_Callbacked_NoResend");

	Params::HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveFestaStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_StartSaveFestaStart_NoResend(const struct FStartSaveFestaStartRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveFestaStart_NoResend");

	Params::HttpHelper_Send_StartSaveFestaStart_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveLegendCompeStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_StartSaveLegendCompeStart(const struct FStartSaveLegendCompeStartRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveLegendCompeStart");

	Params::HttpHelper_Send_StartSaveLegendCompeStart Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveLegendCompeStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_StartSaveLegendCompeStart_Callbacked(const struct FStartSaveLegendCompeStartRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveLegendCompeStart_Callbacked");

	Params::HttpHelper_Send_StartSaveLegendCompeStart_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveLegendCompeStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_StartSaveLegendCompeStart_Callbacked_NoResend(const struct FStartSaveLegendCompeStartRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveLegendCompeStart_Callbacked_NoResend");

	Params::HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveLegendCompeStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_StartSaveLegendCompeStart_NoResend(const struct FStartSaveLegendCompeStartRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveLegendCompeStart_NoResend");

	Params::HttpHelper_Send_StartSaveLegendCompeStart_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveRankMatchStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_StartSaveRankMatchStart(const struct FStartSaveRankMatchStartRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveRankMatchStart");

	Params::HttpHelper_Send_StartSaveRankMatchStart Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveRankMatchStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_StartSaveRankMatchStart_Callbacked(const struct FStartSaveRankMatchStartRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveRankMatchStart_Callbacked");

	Params::HttpHelper_Send_StartSaveRankMatchStart_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveRankMatchStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_StartSaveRankMatchStart_Callbacked_NoResend(const struct FStartSaveRankMatchStartRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveRankMatchStart_Callbacked_NoResend");

	Params::HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FStartSaveRankMatchStartRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_StartSaveRankMatchStart_NoResend(const struct FStartSaveRankMatchStartRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_StartSaveRankMatchStart_NoResend");

	Params::HttpHelper_Send_StartSaveRankMatchStart_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetDataRequest&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetData(const struct FUserGetDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetData");

	Params::HttpHelper_Send_UserGetData Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetData_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetDataRequest&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetData_Callbacked(const struct FUserGetDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetData_Callbacked");

	Params::HttpHelper_Send_UserGetData_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetData_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetDataRequest&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetData_Callbacked_NoResend(const struct FUserGetDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetData_Callbacked_NoResend");

	Params::HttpHelper_Send_UserGetData_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetData_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetDataRequest&       Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetData_NoResend(const struct FUserGetDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetData_NoResend");

	Params::HttpHelper_Send_UserGetData_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetPartsData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetPartsDataRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetPartsData(const struct FUserGetPartsDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetPartsData");

	Params::HttpHelper_Send_UserGetPartsData Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetPartsData_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetPartsDataRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetPartsData_Callbacked(const struct FUserGetPartsDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetPartsData_Callbacked");

	Params::HttpHelper_Send_UserGetPartsData_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetPartsData_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetPartsDataRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetPartsData_Callbacked_NoResend(const struct FUserGetPartsDataRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetPartsData_Callbacked_NoResend");

	Params::HttpHelper_Send_UserGetPartsData_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetPartsData_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetPartsDataRequest&  Request                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetPartsData_NoResend(const struct FUserGetPartsDataRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetPartsData_NoResend");

	Params::HttpHelper_Send_UserGetPartsData_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByPuidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserIdsByPuid(const struct FUserGetUserIdsByPuidRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByPuid");

	Params::HttpHelper_Send_UserGetUserIdsByPuid Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByPuidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserIdsByPuid_Callbacked(const struct FUserGetUserIdsByPuidRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByPuid_Callbacked");

	Params::HttpHelper_Send_UserGetUserIdsByPuid_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByPuidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserIdsByPuid_Callbacked_NoResend(const struct FUserGetUserIdsByPuidRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByPuid_Callbacked_NoResend");

	Params::HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByPuidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserIdsByPuid_NoResend(const struct FUserGetUserIdsByPuidRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByPuid_NoResend");

	Params::HttpHelper_Send_UserGetUserIdsByPuid_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByUidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserIdsByUid(const struct FUserGetUserIdsByUidRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByUid");

	Params::HttpHelper_Send_UserGetUserIdsByUid Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByUidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserIdsByUid_Callbacked(const struct FUserGetUserIdsByUidRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByUid_Callbacked");

	Params::HttpHelper_Send_UserGetUserIdsByUid_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByUidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserIdsByUid_Callbacked_NoResend(const struct FUserGetUserIdsByUidRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByUid_Callbacked_NoResend");

	Params::HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserIdsByUidRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserIdsByUid_NoResend(const struct FUserGetUserIdsByUidRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserIdsByUid_NoResend");

	Params::HttpHelper_Send_UserGetUserIdsByUid_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserNetworkSettings(const struct FUserGetUserNetworkSettingsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserNetworkSettings");

	Params::HttpHelper_Send_UserGetUserNetworkSettings Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserNetworkSettings_Callbacked(const struct FUserGetUserNetworkSettingsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserNetworkSettings_Callbacked");

	Params::HttpHelper_Send_UserGetUserNetworkSettings_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserNetworkSettings_Callbacked_NoResend(const struct FUserGetUserNetworkSettingsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserNetworkSettings_Callbacked_NoResend");

	Params::HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserNetworkSettings_NoResend(const struct FUserGetUserNetworkSettingsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserNetworkSettings_NoResend");

	Params::HttpHelper_Send_UserGetUserNetworkSettings_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserSearch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserSearchRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserSearch(const struct FUserGetUserSearchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserSearch");

	Params::HttpHelper_Send_UserGetUserSearch Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserSearch_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserSearchRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserSearch_Callbacked(const struct FUserGetUserSearchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserSearch_Callbacked");

	Params::HttpHelper_Send_UserGetUserSearch_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserSearch_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserSearchRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserGetUserSearch_Callbacked_NoResend(const struct FUserGetUserSearchRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserSearch_Callbacked_NoResend");

	Params::HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserGetUserSearch_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserGetUserSearchRequest& Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserGetUserSearch_NoResend(const struct FUserGetUserSearchRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserGetUserSearch_NoResend");

	Params::HttpHelper_Send_UserGetUserSearch_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserNintendoSwitchOnlineCheckRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserNintendoSwitchOnlineCheck(const struct FUserNintendoSwitchOnlineCheckRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserNintendoSwitchOnlineCheck");

	Params::HttpHelper_Send_UserNintendoSwitchOnlineCheck Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserNintendoSwitchOnlineCheckRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserNintendoSwitchOnlineCheck_Callbacked(const struct FUserNintendoSwitchOnlineCheckRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserNintendoSwitchOnlineCheck_Callbacked");

	Params::HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserNintendoSwitchOnlineCheckRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend(const struct FUserNintendoSwitchOnlineCheckRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend");

	Params::HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserNintendoSwitchOnlineCheckRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserNintendoSwitchOnlineCheck_NoResend(const struct FUserNintendoSwitchOnlineCheckRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserNintendoSwitchOnlineCheck_NoResend");

	Params::HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSavePaidDlcOwnershipsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserSavePaidDlcOwnerships(const struct FUserSavePaidDlcOwnershipsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSavePaidDlcOwnerships");

	Params::HttpHelper_Send_UserSavePaidDlcOwnerships Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSavePaidDlcOwnershipsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserSavePaidDlcOwnerships_Callbacked(const struct FUserSavePaidDlcOwnershipsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSavePaidDlcOwnerships_Callbacked");

	Params::HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSavePaidDlcOwnershipsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserSavePaidDlcOwnerships_Callbacked_NoResend(const struct FUserSavePaidDlcOwnershipsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSavePaidDlcOwnerships_Callbacked_NoResend");

	Params::HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSavePaidDlcOwnershipsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserSavePaidDlcOwnerships_NoResend(const struct FUserSavePaidDlcOwnershipsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSavePaidDlcOwnerships_NoResend");

	Params::HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSaveUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserSaveUserNetworkSettings(const struct FUserSaveUserNetworkSettingsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSaveUserNetworkSettings");

	Params::HttpHelper_Send_UserSaveUserNetworkSettings Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings_Callbacked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSaveUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserSaveUserNetworkSettings_Callbacked(const struct FUserSaveUserNetworkSettingsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSaveUserNetworkSettings_Callbacked");

	Params::HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings_Callbacked_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSaveUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::Send_UserSaveUserNetworkSettings_Callbacked_NoResend(const struct FUserSaveUserNetworkSettingsRequest& Request, TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSaveUserNetworkSettings_Callbacked_NoResend");

	Params::HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend Parms{};

	Parms.Request = std::move(Request);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings_NoResend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserSaveUserNetworkSettingsRequest&Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::Send_UserSaveUserNetworkSettings_NoResend(const struct FUserSaveUserNetworkSettingsRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "Send_UserSaveUserNetworkSettings_NoResend");

	Params::HttpHelper_Send_UserSaveUserNetworkSettings_NoResend Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferDataForDownload
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Uri                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          Bytes                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResCode, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Length, float Rate)>OnProgress                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::TransferDataForDownload(const class FString& Uri, TArray<uint8>* Bytes, TDelegate<void(int32 ResCode, bool Error)> OnComplete, TDelegate<void(int32 Length, float Rate)> OnProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferDataForDownload");

	Params::HttpHelper_TransferDataForDownload Parms{};

	Parms.Uri = std::move(Uri);
	Parms.OnComplete = OnComplete;
	Parms.OnProgress = OnProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Bytes != nullptr)
		*Bytes = std::move(Parms.Bytes);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferDataForDownloadDetail
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Uri                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          Bytes                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Length, float Rate)>OnProgress                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::TransferDataForDownloadDetail(const class FString& Uri, TArray<uint8>* Bytes, TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)> OnComplete, TDelegate<void(int32 Length, float Rate)> OnProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferDataForDownloadDetail");

	Params::HttpHelper_TransferDataForDownloadDetail Parms{};

	Parms.Uri = std::move(Uri);
	Parms.OnComplete = OnComplete;
	Parms.OnProgress = OnProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Bytes != nullptr)
		*Bytes = std::move(Parms.Bytes);

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferDataGetInvalidHandle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UHttpHelper::TransferDataGetInvalidHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferDataGetInvalidHandle");

	Params::HttpHelper_TransferDataGetInvalidHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferDataTryCancel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Handle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHttpHelper::TransferDataTryCancel(int32 Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferDataTryCancel");

	Params::HttpHelper_TransferDataTryCancel Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.HttpHelper.TransferGhostDataForUpload
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Uri                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResCode, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Length, float Rate)>OnProgress                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   courseId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   speedType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Date                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::TransferGhostDataForUpload(const class FString& Uri, const TArray<uint8>& Bytes, TDelegate<void(int32 ResCode, bool Error)> OnComplete, TDelegate<void(int32 Length, float Rate)> OnProgress, int32 courseId, int32 speedType, const class FString& Date)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferGhostDataForUpload");

	Params::HttpHelper_TransferGhostDataForUpload Parms{};

	Parms.Uri = std::move(Uri);
	Parms.Bytes = std::move(Bytes);
	Parms.OnComplete = OnComplete;
	Parms.OnProgress = OnProgress;
	Parms.courseId = courseId;
	Parms.speedType = speedType;
	Parms.Date = std::move(Date);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferGhostDataForUploadDetail
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Uri                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Length, float Rate)>OnProgress                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   courseId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   speedType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Date                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::TransferGhostDataForUploadDetail(const class FString& Uri, const TArray<uint8>& Bytes, TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)> OnComplete, TDelegate<void(int32 Length, float Rate)> OnProgress, int32 courseId, int32 speedType, const class FString& Date)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferGhostDataForUploadDetail");

	Params::HttpHelper_TransferGhostDataForUploadDetail Parms{};

	Parms.Uri = std::move(Uri);
	Parms.Bytes = std::move(Bytes);
	Parms.OnComplete = OnComplete;
	Parms.OnProgress = OnProgress;
	Parms.courseId = courseId;
	Parms.speedType = speedType;
	Parms.Date = std::move(Date);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferGhostDataGetUriForUpload
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHttpHelper::TransferGhostDataGetUriForUpload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferGhostDataGetUriForUpload");

	Params::HttpHelper_TransferGhostDataGetUriForUpload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferMakeRandomBytes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UHttpHelper::TransferMakeRandomBytes(int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferMakeRandomBytes");

	Params::HttpHelper_TransferMakeRandomBytes Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferReplayDataForUpload
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Uri                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResCode, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Length, float Rate)>OnProgress                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::TransferReplayDataForUpload(const class FString& Uri, const TArray<uint8>& Bytes, TDelegate<void(int32 ResCode, bool Error)> OnComplete, TDelegate<void(int32 Length, float Rate)> OnProgress, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferReplayDataForUpload");

	Params::HttpHelper_TransferReplayDataForUpload Parms{};

	Parms.Uri = std::move(Uri);
	Parms.Bytes = std::move(Bytes);
	Parms.OnComplete = OnComplete;
	Parms.OnProgress = OnProgress;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferReplayDataForUploadDetail
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Uri                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Length, float Rate)>OnProgress                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHttpHelper::TransferReplayDataForUploadDetail(const class FString& Uri, const TArray<uint8>& Bytes, TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)> OnComplete, TDelegate<void(int32 Length, float Rate)> OnProgress, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferReplayDataForUploadDetail");

	Params::HttpHelper_TransferReplayDataForUploadDetail Parms{};

	Parms.Uri = std::move(Uri);
	Parms.Bytes = std::move(Bytes);
	Parms.OnComplete = OnComplete;
	Parms.OnProgress = OnProgress;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.TransferSaveBytesToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::TransferSaveBytesToFile(const TArray<uint8>& Bytes, const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "TransferSaveBytesToFile");

	Params::HttpHelper_TransferSaveBytesToFile Parms{};

	Parms.Bytes = std::move(Bytes);
	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.HttpHelper.ValidateResCode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    OutError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResCode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EResponseCodeAbstract*                  ResCodeAbstract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHttpHelper::ValidateResCode(bool OutError, int32 ResCode, EResponseCodeAbstract* ResCodeAbstract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HttpHelper", "ValidateResCode");

	Params::HttpHelper_ValidateResCode Parms{};

	Parms.OutError = OutError;
	Parms.ResCode = ResCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResCodeAbstract != nullptr)
		*ResCodeAbstract = Parms.ResCodeAbstract;

	return Parms.ReturnValue;
}


// Function UnionSystem.InformManager.InformAboutAbuse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetUserId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   reasonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    reasonMemo                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    entryRaceId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInformManager::InformAboutAbuse(const class FString& TargetUserId, int32 reasonId, int32 Location, const class FString& reasonMemo, int32 GameMode, const class FString& entryRaceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InformManager", "InformAboutAbuse");

	Params::InformManager_InformAboutAbuse Parms{};

	Parms.TargetUserId = std::move(TargetUserId);
	Parms.reasonId = reasonId;
	Parms.Location = Location;
	Parms.reasonMemo = std::move(reasonMemo);
	Parms.GameMode = GameMode;
	Parms.entryRaceId = std::move(entryRaceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.InputProcessInterface.SilentFocus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IInputProcessInterface::SilentFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("InputProcessInterface", "SilentFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.JukeboxDataAsset.ClearData
// (Final, Native, Public, BlueprintCallable)

void UJukeboxDataAsset::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JukeboxDataAsset", "ClearData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.JukeboxDataAsset.GetAlbumData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AlbumID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAlbumData                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAlbumData UJukeboxDataAsset::GetAlbumData(int32 AlbumID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JukeboxDataAsset", "GetAlbumData");

	Params::JukeboxDataAsset_GetAlbumData Parms{};

	Parms.AlbumID = AlbumID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.JukeboxDataAsset.GetTrackData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TrackID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTrackData                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTrackData UJukeboxDataAsset::GetTrackData(int32 TrackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JukeboxDataAsset", "GetTrackData");

	Params::JukeboxDataAsset_GetTrackData Parms{};

	Parms.TrackID = TrackID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.JukeboxDataAsset.Update
// (Final, Native, Public, BlueprintCallable)

void UJukeboxDataAsset::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JukeboxDataAsset", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigItem.ResetToDefault
// (Final, Native, Public, BlueprintCallable)

void UKeyConfigItem::ResetToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "ResetToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigItem.SetPrimaryKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigItem::SetPrimaryKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "SetPrimaryKey");

	Params::KeyConfigItem_SetPrimaryKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigItem.SetSecondaryKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigItem::SetSecondaryKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "SetSecondaryKey");

	Params::KeyConfigItem_SetSecondaryKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigItem.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UKeyConfigItem::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetDisplayName");

	Params::KeyConfigItem_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.GetPrimaryDefaultKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyConfigItem::GetPrimaryDefaultKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetPrimaryDefaultKey");

	Params::KeyConfigItem_GetPrimaryDefaultKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.GetPrimaryKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyConfigItem::GetPrimaryKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetPrimaryKey");

	Params::KeyConfigItem_GetPrimaryKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.GetPrimaryMappingName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UKeyConfigItem::GetPrimaryMappingName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetPrimaryMappingName");

	Params::KeyConfigItem_GetPrimaryMappingName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.GetSecondaryDefaultKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyConfigItem::GetSecondaryDefaultKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetSecondaryDefaultKey");

	Params::KeyConfigItem_GetSecondaryDefaultKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.GetSecondaryKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyConfigItem::GetSecondaryKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetSecondaryKey");

	Params::KeyConfigItem_GetSecondaryKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.GetSecondaryMappingName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UKeyConfigItem::GetSecondaryMappingName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "GetSecondaryMappingName");

	Params::KeyConfigItem_GetSecondaryMappingName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.IsCustomized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigItem::IsCustomized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "IsCustomized");

	Params::KeyConfigItem_IsCustomized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.IsCustomizedPrimaryKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigItem::IsCustomizedPrimaryKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "IsCustomizedPrimaryKey");

	Params::KeyConfigItem_IsCustomizedPrimaryKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.IsCustomizedSecondaryKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigItem::IsCustomizedSecondaryKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "IsCustomizedSecondaryKey");

	Params::KeyConfigItem_IsCustomizedSecondaryKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.IsValidPrimaryKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigItem::IsValidPrimaryKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "IsValidPrimaryKey");

	Params::KeyConfigItem_IsValidPrimaryKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigItem.IsValidSecondaryKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigItem::IsValidSecondaryKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigItem", "IsValidSecondaryKey");

	Params::KeyConfigItem_IsValidSecondaryKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.CalcButtonViewTypeByKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EControllerButtonType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EControllerButtonType UKeyConfigHelpers::CalcButtonViewTypeByKey(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "CalcButtonViewTypeByKey");

	Params::KeyConfigHelpers_CalcButtonViewTypeByKey Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.ClearAssignedKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      MappingName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigHelpers::ClearAssignedKey(int32 InPlayerControllerIndex, const class FName& MappingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "ClearAssignedKey");

	Params::KeyConfigHelpers_ClearAssignedKey Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.MappingName = MappingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigHelpers.ClearCustomKeyConfigs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigHelpers::ClearCustomKeyConfigs(int32 InPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "ClearCustomKeyConfigs");

	Params::KeyConfigHelpers_ClearCustomKeyConfigs Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigHelpers.CompareCustomKeyConfigs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, struct FKey>&   CustomKeyConfigs1                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FKey>&   CustomKeyConfigs2                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigHelpers::CompareCustomKeyConfigs(const TMap<class FName, struct FKey>& CustomKeyConfigs1, const TMap<class FName, struct FKey>& CustomKeyConfigs2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "CompareCustomKeyConfigs");

	Params::KeyConfigHelpers_CompareCustomKeyConfigs Parms{};

	Parms.CustomKeyConfigs1 = std::move(CustomKeyConfigs1);
	Parms.CustomKeyConfigs2 = std::move(CustomKeyConfigs2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.FindInputConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UInputDataAsset*                  InputDataAsset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyConfigOperationType                 OperationType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputConfig*                    OutInputConfig                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigHelpers::FindInputConfig(class UInputDataAsset* InputDataAsset, EKeyConfigOperationType OperationType, struct FInputConfig* OutInputConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "FindInputConfig");

	Params::KeyConfigHelpers_FindInputConfig Parms{};

	Parms.InputDataAsset = InputDataAsset;
	Parms.OperationType = OperationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInputConfig != nullptr)
		*OutInputConfig = std::move(Parms.OutInputConfig);

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.GetAssignedKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      MappingName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsFound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyConfigHelpers::GetAssignedKey(int32 InPlayerControllerIndex, const class FName& MappingName, bool* IsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "GetAssignedKey");

	Params::KeyConfigHelpers_GetAssignedKey Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.MappingName = MappingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsFound != nullptr)
		*IsFound = Parms.IsFound;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.GetCustomKeyConfigs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FName, struct FKey>*         OutCustomKeyConfigs                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigHelpers::GetCustomKeyConfigs(int32 InPlayerControllerIndex, TMap<class FName, struct FKey>* OutCustomKeyConfigs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "GetCustomKeyConfigs");

	Params::KeyConfigHelpers_GetCustomKeyConfigs Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCustomKeyConfigs != nullptr)
		*OutCustomKeyConfigs = std::move(Parms.OutCustomKeyConfigs);

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.GetInputConfigNameFromOperationType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EKeyConfigOperationType                 OperationType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UKeyConfigHelpers::GetInputConfigNameFromOperationType(EKeyConfigOperationType OperationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "GetInputConfigNameFromOperationType");

	Params::KeyConfigHelpers_GetInputConfigNameFromOperationType Parms{};

	Parms.OperationType = OperationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigHelpers.GetKeyConfigItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInputConfig&              InputConfig                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EKeyConfigDeviceType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FName, class UKeyConfigItem*>*OutKeyConfigItems                                      (Parm, OutParm, NativeAccessSpecifierPublic)

void UKeyConfigHelpers::GetKeyConfigItems(int32 InPlayerControllerIndex, const struct FInputConfig& InputConfig, EKeyConfigDeviceType Type, TMap<class FName, class UKeyConfigItem*>* OutKeyConfigItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "GetKeyConfigItems");

	Params::KeyConfigHelpers_GetKeyConfigItems Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InputConfig = std::move(InputConfig);
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKeyConfigItems != nullptr)
		*OutKeyConfigItems = std::move(Parms.OutKeyConfigItems);
}


// Function UnionSystem.KeyConfigHelpers.SetAssignedKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      MappingName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKey&                      NewKey                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigHelpers::SetAssignedKey(int32 InPlayerControllerIndex, const class FName& MappingName, const struct FKey& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "SetAssignedKey");

	Params::KeyConfigHelpers_SetAssignedKey Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.MappingName = MappingName;
	Parms.NewKey = std::move(NewKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigHelpers.SetCustomKeyConfigs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FKey>&   InCustomKeyConfigs                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UKeyConfigHelpers::SetCustomKeyConfigs(int32 InPlayerControllerIndex, const TMap<class FName, struct FKey>& InCustomKeyConfigs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyConfigHelpers", "SetCustomKeyConfigs");

	Params::KeyConfigHelpers_SetCustomKeyConfigs Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;
	Parms.InCustomKeyConfigs = std::move(InCustomKeyConfigs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigPressAnyKey.AssignKey
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FKey&                      NewKey                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigPressAnyKey::AssignKey(const struct FKey& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigPressAnyKey", "AssignKey");

	Params::KeyConfigPressAnyKey_AssignKey Parms{};

	Parms.NewKey = std::move(NewKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigPressAnyKey.Cancel
// (Final, Native, Private)

void UKeyConfigPressAnyKey::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigPressAnyKey", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigPressAnyKey.SetCurrentKey
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigPressAnyKey::SetCurrentKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigPressAnyKey", "SetCurrentKey");

	Params::KeyConfigPressAnyKey_SetCurrentKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigPressAnyKey.SetIsGamepadKey
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bInIsGamepadKey                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyConfigPressAnyKey::SetIsGamepadKey(const bool bInIsGamepadKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigPressAnyKey", "SetIsGamepadKey");

	Params::KeyConfigPressAnyKey_SetIsGamepadKey Parms{};

	Parms.bInIsGamepadKey = bInIsGamepadKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.KeyConfigPressAnyKey.GetCurrentKey
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyConfigPressAnyKey::GetCurrentKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigPressAnyKey", "GetCurrentKey");

	Params::KeyConfigPressAnyKey_GetCurrentKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.KeyConfigPressAnyKey.IsGamepadKey
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyConfigPressAnyKey::IsGamepadKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyConfigPressAnyKey", "IsGamepadKey");

	Params::KeyConfigPressAnyKey_IsGamepadKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.BeginTransaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::BeginTransaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "BeginTransaction");

	Params::LobbyContextBase_BeginTransaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.ClearAllLobbyContextDelegates
// (Final, Native, Protected, BlueprintCallable)

void ULobbyContextBase::ClearAllLobbyContextDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "ClearAllLobbyContextDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.Create
// (Native, Public, BlueprintCallable)
// Parameters:
// class ULobbyTransactionParam*           Param                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::Create(class ULobbyTransactionParam* Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "Create");

	Params::LobbyContextBase_Create Parms{};

	Parms.Param = Param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.CreateSession
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TDelegate<void(bool bSuccess)>&   OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::CreateSession(const TDelegate<void(bool bSuccess)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "CreateSession");

	Params::LobbyContextBase_CreateSession Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.CreateShortLobbyId
// (Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const class FString& ShortLobbyId)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::CreateShortLobbyId(TDelegate<void(const class FString& ShortLobbyId)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "CreateShortLobbyId");

	Params::LobbyContextBase_CreateShortLobbyId Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.CreateSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPublic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHostMigration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::CreateSimple(bool bLocked, bool bPublic, bool bHostMigration, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "CreateSimple");

	Params::LobbyContextBase_CreateSimple Parms{};

	Parms.bLocked = bLocked;
	Parms.bPublic = bPublic;
	Parms.bHostMigration = bHostMigration;
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.Destroy
// (Native, Public, BlueprintCallable)

void ULobbyContextBase::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "Destroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.DestroySession
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TDelegate<void(bool bSuccess)>&   OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::DestroySession(const TDelegate<void(bool bSuccess)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "DestroySession");

	Params::LobbyContextBase_DestroySession Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.EndTransaction
// (Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::EndTransaction(TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "EndTransaction");

	Params::LobbyContextBase_EndTransaction Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.EndTransaction_NoCallback
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::EndTransaction_NoCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "EndTransaction_NoCallback");

	Params::LobbyContextBase_EndTransaction_NoCallback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.Exit
// (Final, Native, Public, BlueprintCallable)

void ULobbyContextBase::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "Exit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.Finalize
// (Native, Public, BlueprintCallable)

void ULobbyContextBase::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "Finalize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.GetHostUserIdStringByLobbyId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  InLobbyId                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString*                          OutHostUserId                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::GetHostUserIdStringByLobbyId(int32 InLocalUserNum, const struct FLobbyId& InLobbyId, class FString* OutHostUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetHostUserIdStringByLobbyId");

	Params::LobbyContextBase_GetHostUserIdStringByLobbyId Parms{};

	Parms.InLocalUserNum = InLocalUserNum;
	Parms.InLobbyId = std::move(InLobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHostUserId != nullptr)
		*OutHostUserId = std::move(Parms.OutHostUserId);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetLocalMemberDefaultDummy
// (Native, Public, BlueprintCallable)
// Parameters:
// class ULobbyMemberContextBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULobbyMemberContextBase* ULobbyContextBase::GetLocalMemberDefaultDummy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetLocalMemberDefaultDummy");

	Params::LobbyContextBase_GetLocalMemberDefaultDummy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.Initialize
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          OwnerUserId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::Initialize(int32 LocalUserNum, const struct FUniqueNetIdRepl& UserId, const struct FUniqueNetIdRepl& OwnerUserId, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "Initialize");

	Params::LobbyContextBase_Initialize Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.UserId = std::move(UserId);
	Parms.OwnerUserId = std::move(OwnerUserId);
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.InitializeNoLobbyInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::InitializeNoLobbyInfo(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "InitializeNoLobbyInfo");

	Params::LobbyContextBase_InitializeNoLobbyInfo Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.Join
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::Join(const struct FLobbyId& LobbyId, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "Join");

	Params::LobbyContextBase_Join Parms{};

	Parms.LobbyId = std::move(LobbyId);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.KeepAliveShortLobbyId
// (Native, Public, BlueprintCallable)

void ULobbyContextBase::KeepAliveShortLobbyId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "KeepAliveShortLobbyId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.KickMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULobbyMemberContextBase*          MemberContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::KickMember(class ULobbyMemberContextBase* MemberContext, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "KickMember");

	Params::LobbyContextBase_KickMember Parms{};

	Parms.MemberContext = MemberContext;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnConnectLobbyCompletedInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOnlineErrorBP&            Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnConnectLobbyCompletedInternal(bool bSuccessful, const struct FOnlineErrorBP& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnConnectLobbyCompletedInternal");

	Params::LobbyContextBase_OnConnectLobbyCompletedInternal Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnCreateLobbyCompletedInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOnlineErrorBP&            Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnCreateLobbyCompletedInternal(bool bSuccessful, const struct FOnlineErrorBP& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnCreateLobbyCompletedInternal");

	Params::LobbyContextBase_OnCreateLobbyCompletedInternal Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnCreateShortLobbyIdComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnCreateShortLobbyIdComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnCreateShortLobbyIdComplete");

	Params::LobbyContextBase_OnCreateShortLobbyIdComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnDeleteLobbyComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyOperationResult&     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnDeleteLobbyComplete(bool bSuccessful, const struct FLobbyOperationResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnDeleteLobbyComplete");

	Params::LobbyContextBase_OnDeleteLobbyComplete Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnDeleteLobbyCompletedInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOnlineErrorBP&            Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnDeleteLobbyCompletedInternal(bool bSuccessful, const struct FOnlineErrorBP& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnDeleteLobbyCompletedInternal");

	Params::LobbyContextBase_OnDeleteLobbyCompletedInternal Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnDestroiedSession
// (Final, Native, Private)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnDestroiedSession(bool bSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnDestroiedSession");

	Params::LobbyContextBase_OnDestroiedSession Parms{};

	Parms.bSuccessful = bSuccessful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnDisconnectLobbyCompletedInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOnlineErrorBP&            Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnDisconnectLobbyCompletedInternal(bool bSuccessful, const struct FOnlineErrorBP& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnDisconnectLobbyCompletedInternal");

	Params::LobbyContextBase_OnDisconnectLobbyCompletedInternal Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnGetLobbyHostCallbackInternal
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FCommon_UserSearchData>&SearchDatas                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EResponseCodeAbstract                   ResCodeAbstract                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnGetLobbyHostCallbackInternal(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnGetLobbyHostCallbackInternal");

	Params::LobbyContextBase_OnGetLobbyHostCallbackInternal Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.SearchDatas = std::move(SearchDatas);
	Parms.ResCodeAbstract = ResCodeAbstract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnKeepAliveShortLobbyIdComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnKeepAliveShortLobbyIdComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnKeepAliveShortLobbyIdComplete");

	Params::LobbyContextBase_OnKeepAliveShortLobbyIdComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnKickMemberComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyOperationResult&     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnKickMemberComplete(bool bSuccessful, const struct FLobbyOperationResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnKickMemberComplete");

	Params::LobbyContextBase_OnKickMemberComplete Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnLobbyDelete
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnLobbyDelete(const struct FUniqueNetIdRepl& UserId, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnLobbyDelete");

	Params::LobbyContextBase_OnLobbyDelete Parms{};

	Parms.UserId = std::move(UserId);
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnLobbyDeleteInternal
// (Native, Event, Protected, BlueprintEvent)

void ULobbyContextBase::OnLobbyDeleteInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnLobbyDeleteInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnLobbyUpdate
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnLobbyUpdate(const struct FUniqueNetIdRepl& UserId, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnLobbyUpdate");

	Params::LobbyContextBase_OnLobbyUpdate Parms{};

	Parms.UserId = std::move(UserId);
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnLobbyUpdateInternal
// (Native, Event, Protected, BlueprintEvent)

void ULobbyContextBase::OnLobbyUpdateInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnLobbyUpdateInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberConnect
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberConnect(const struct FUniqueNetIdRepl& UserId, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberConnect");

	Params::LobbyContextBase_OnMemberConnect Parms{};

	Parms.UserId = std::move(UserId);
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberConnectInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ULobbyMemberContextBase*          MemberContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberConnectInternal(class ULobbyMemberContextBase* MemberContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberConnectInternal");

	Params::LobbyContextBase_OnMemberConnectInternal Parms{};

	Parms.MemberContext = MemberContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberDisconnect
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasKicked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberDisconnect(const struct FUniqueNetIdRepl& UserId, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, bool bWasKicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberDisconnect");

	Params::LobbyContextBase_OnMemberDisconnect Parms{};

	Parms.UserId = std::move(UserId);
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.bWasKicked = bWasKicked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberDisconnectInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ULobbyMemberContextBase*          MemberContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasKicked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberDisconnectInternal(class ULobbyMemberContextBase* MemberContext, bool bWasKicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberDisconnectInternal");

	Params::LobbyContextBase_OnMemberDisconnectInternal Parms{};

	Parms.MemberContext = MemberContext;
	Parms.bWasKicked = bWasKicked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberPromote
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          NewLeaderId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberPromote(const struct FUniqueNetIdRepl& UserId, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& NewLeaderId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberPromote");

	Params::LobbyContextBase_OnMemberPromote Parms{};

	Parms.UserId = std::move(UserId);
	Parms.LobbyId = std::move(LobbyId);
	Parms.NewLeaderId = std::move(NewLeaderId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberPromoteInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ULobbyMemberContextBase*          MemberContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberPromoteInternal(class ULobbyMemberContextBase* MemberContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberPromoteInternal");

	Params::LobbyContextBase_OnMemberPromoteInternal Parms{};

	Parms.MemberContext = MemberContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberUpdate
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberUpdate(const struct FUniqueNetIdRepl& UserId, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberUpdate");

	Params::LobbyContextBase_OnMemberUpdate Parms{};

	Parms.UserId = std::move(UserId);
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnMemberUpdateInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ULobbyMemberContextBase*          MemberContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnMemberUpdateInternal(class ULobbyMemberContextBase* MemberContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnMemberUpdateInternal");

	Params::LobbyContextBase_OnMemberUpdateInternal Parms{};

	Parms.MemberContext = MemberContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnPlatformEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FUnionPlatformEventInfo&   EventInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnPlatformEvent(const struct FUnionPlatformEventInfo& EventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnPlatformEvent");

	Params::LobbyContextBase_OnPlatformEvent Parms{};

	Parms.EventInfo = std::move(EventInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnSearchLobbyCompletedInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSearchLobbyResult&        Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnSearchLobbyCompletedInternal(bool bSuccessful, const struct FSearchLobbyResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnSearchLobbyCompletedInternal");

	Params::LobbyContextBase_OnSearchLobbyCompletedInternal Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.OnUpdateLobbyComplete
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyOperationResult&     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::OnUpdateLobbyComplete(bool bSuccessful, const struct FLobbyOperationResult& Result, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "OnUpdateLobbyComplete");

	Params::LobbyContextBase_OnUpdateLobbyComplete Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.RemoveComMemberContext
// (Final, Native, Public, BlueprintCallable)

void ULobbyContextBase::RemoveComMemberContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "RemoveComMemberContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.RemoveShortLobbyId
// (Native, Public, BlueprintCallable)

void ULobbyContextBase::RemoveShortLobbyId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "RemoveShortLobbyId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.ResetShortLobbyId
// (Native, Public, BlueprintCallable)

void ULobbyContextBase::ResetShortLobbyId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "ResetShortLobbyId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.SearchByShortLobbyId
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ShortLobbyId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::SearchByShortLobbyId(const class FString& ShortLobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "SearchByShortLobbyId");

	Params::LobbyContextBase_SearchByShortLobbyId Parms{};

	Parms.ShortLobbyId = std::move(ShortLobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.SearchByShortLobbyIdNoLobbyType
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ShortLobbyId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::SearchByShortLobbyIdNoLobbyType(const class FString& ShortLobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "SearchByShortLobbyIdNoLobbyType");

	Params::LobbyContextBase_SearchByShortLobbyIdNoLobbyType Parms{};

	Parms.ShortLobbyId = std::move(ShortLobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.SendSessionInvite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUniqueNetIdRepl&          FriendId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::SendSessionInvite(const struct FUniqueNetIdRepl& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "SendSessionInvite");

	Params::LobbyContextBase_SendSessionInvite Parms{};

	Parms.FriendId = std::move(FriendId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.SetLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInLock                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::SetLocked(bool bInLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "SetLocked");

	Params::LobbyContextBase_SetLocked Parms{};

	Parms.bInLock = bInLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.SetPublic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPublic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::SetPublic(bool bInPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "SetPublic");

	Params::LobbyContextBase_SetPublic Parms{};

	Parms.bInPublic = bInPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.WaitAddMemberInitComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::WaitAddMemberInitComplete(TDelegate<void()> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "WaitAddMemberInitComplete");

	Params::LobbyContextBase_WaitAddMemberInitComplete Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyContextBase.GetAllMemberInternalUserIds
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class FString>*                  OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULobbyContextBase::GetAllMemberInternalUserIds(TArray<class FString>* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetAllMemberInternalUserIds");

	Params::LobbyContextBase_GetAllMemberInternalUserIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.LobbyContextBase.GetAllMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ULobbyMemberContextBase*>* OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULobbyContextBase::GetAllMembers(TArray<class ULobbyMemberContextBase*>* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetAllMembers");

	Params::LobbyContextBase_GetAllMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.LobbyContextBase.GetAllMemberUserIds
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class FString>*                  OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULobbyContextBase::GetAllMemberUserIds(TArray<class FString>* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetAllMemberUserIds");

	Params::LobbyContextBase_GetAllMemberUserIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.LobbyContextBase.GetHasValidInitDataMemerContextCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbyContextBase::GetHasValidInitDataMemerContextCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetHasValidInitDataMemerContextCount");

	Params::LobbyContextBase_GetHasValidInitDataMemerContextCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetHostMember
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULobbyMemberContextBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULobbyMemberContextBase* ULobbyContextBase::GetHostMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetHostMember");

	Params::LobbyContextBase_GetHostMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetLobbyId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FLobbyId                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FLobbyId ULobbyContextBase::GetLobbyId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetLobbyId");

	Params::LobbyContextBase_GetLobbyId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetLobbyTypeByLobbyId
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  InLobbyId                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64*                                  OutLobbyType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::GetLobbyTypeByLobbyId(int32 InLocalUserNum, const struct FLobbyId& InLobbyId, int64* OutLobbyType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetLobbyTypeByLobbyId");

	Params::LobbyContextBase_GetLobbyTypeByLobbyId Parms{};

	Parms.InLocalUserNum = InLocalUserNum;
	Parms.InLobbyId = std::move(InLobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLobbyType != nullptr)
		*OutLobbyType = Parms.OutLobbyType;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetLocalMember
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULobbyMemberContextBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULobbyMemberContextBase* ULobbyContextBase::GetLocalMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetLocalMember");

	Params::LobbyContextBase_GetLocalMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetLocalUserId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl*                OutUserId                                              (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::GetLocalUserId(struct FUniqueNetIdRepl* OutUserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetLocalUserId");

	Params::LobbyContextBase_GetLocalUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserId != nullptr)
		*OutUserId = std::move(Parms.OutUserId);
}


// Function UnionSystem.LobbyContextBase.GetMaxLobbyMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbyContextBase::GetMaxLobbyMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetMaxLobbyMember");

	Params::LobbyContextBase_GetMaxLobbyMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetMember
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyMemberContextBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULobbyMemberContextBase* ULobbyContextBase::GetMember(const struct FUniqueNetIdRepl& MemberId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetMember");

	Params::LobbyContextBase_GetMember Parms{};

	Parms.MemberId = std::move(MemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetMemberCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbyContextBase::GetMemberCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetMemberCount");

	Params::LobbyContextBase_GetMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetMemberFromLobbyMemberIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LobbyMemberIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyMemberContextBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULobbyMemberContextBase* ULobbyContextBase::GetMemberFromLobbyMemberIndex(int32 LobbyMemberIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetMemberFromLobbyMemberIndex");

	Params::LobbyContextBase_GetMemberFromLobbyMemberIndex Parms{};

	Parms.LobbyMemberIndex = LobbyMemberIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetOwnerUserId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl*                OutUserId                                              (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyContextBase::GetOwnerUserId(struct FUniqueNetIdRepl* OutUserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetOwnerUserId");

	Params::LobbyContextBase_GetOwnerUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserId != nullptr)
		*OutUserId = std::move(Parms.OutUserId);
}


// Function UnionSystem.LobbyContextBase.GetShortLobbyId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyContextBase::GetShortLobbyId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetShortLobbyId");

	Params::LobbyContextBase_GetShortLobbyId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetShortLobbyIdExpirationTimeSec
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULobbyContextBase::GetShortLobbyIdExpirationTimeSec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetShortLobbyIdExpirationTimeSec");

	Params::LobbyContextBase_GetShortLobbyIdExpirationTimeSec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.GetSortedAllMembersByLobbyMemberIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ULobbyMemberContextBase*>* OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULobbyContextBase::GetSortedAllMembersByLobbyMemberIndex(TArray<class ULobbyMemberContextBase*>* OutResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "GetSortedAllMembersByLobbyMemberIndex");

	Params::LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.LobbyContextBase.HasSession
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::HasSession() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "HasSession");

	Params::LobbyContextBase_HasSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.IsJoining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::IsJoining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "IsJoining");

	Params::LobbyContextBase_IsJoining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.IsLobbyHostLocalMember
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::IsLobbyHostLocalMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "IsLobbyHostLocalMember");

	Params::LobbyContextBase_IsLobbyHostLocalMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.IsSameLobby
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ULobbyContextBase*          OtherContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyContextBase::IsSameLobby(const class ULobbyContextBase* OtherContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "IsSameLobby");

	Params::LobbyContextBase_IsSameLobby Parms{};

	Parms.OtherContext = OtherContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyContextBase.ToString
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyContextBase::ToString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyContextBase", "ToString");

	Params::LobbyContextBase_ToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.CallInvitationReceivedDelegates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbySubsystem::CallInvitationReceivedDelegates(int32 LocalUserNum, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "CallInvitationReceivedDelegates");

	Params::LobbySubsystem_CallInvitationReceivedDelegates Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.ClearAllDelegates
// (Final, Native, Public, BlueprintCallable)

void ULobbySubsystem::ClearAllDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "ClearAllDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.ConfirmMatchingUsers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbySubsystem::ConfirmMatchingUsers(int32 LocalUserNum, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "ConfirmMatchingUsers");

	Params::LobbySubsystem_ConfirmMatchingUsers Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.ConnectLobby
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::ConnectLobby(int32 LocalUserNum, const struct FLobbyId& LobbyId, const class FString& Password, TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "ConnectLobby");

	Params::LobbySubsystem_ConnectLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.Password = std::move(Password);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.ConnectP2PAsync
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbySubsystem::ConnectP2PAsync(int32 LocalUserNum, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "ConnectP2PAsync");

	Params::LobbySubsystem_ConnectP2PAsync Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.ConnectP2PLobbyUsers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IsHost                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EnableAllClientConnect                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbySubsystem::ConnectP2PLobbyUsers(int32 LocalUserNum, const struct FLobbyId& LobbyId, bool IsHost, bool EnableAllClientConnect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "ConnectP2PLobbyUsers");

	Params::LobbySubsystem_ConnectP2PLobbyUsers Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.IsHost = IsHost;
	Parms.EnableAllClientConnect = EnableAllClientConnect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.CreateLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULobbyTransactionParam*     TransactionParam                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::CreateLobby(int32 LocalUserNum, const class ULobbyTransactionParam* TransactionParam, TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "CreateLobby");

	Params::LobbySubsystem_CreateLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.TransactionParam = TransactionParam;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.DeleteLobby
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::DeleteLobby(int32 LocalUserNum, const struct FLobbyId& LobbyId, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "DeleteLobby");

	Params::LobbySubsystem_DeleteLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueBool
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutAttrValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetLobbyAttributeValueBool(int32 LocalUserNum, const struct FLobbyId& LobbyId, const class FString& AttrKey, bool* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetLobbyAttributeValueBool");

	Params::LobbySubsystem_GetLobbyAttributeValueBool Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = Parms.OutAttrValue;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutAttrValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetLobbyAttributeValueFloat(int32 LocalUserNum, const struct FLobbyId& LobbyId, const class FString& AttrKey, float* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetLobbyAttributeValueFloat");

	Params::LobbySubsystem_GetLobbyAttributeValueFloat Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = Parms.OutAttrValue;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueInt64
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  OutAttrValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetLobbyAttributeValueInt64(int32 LocalUserNum, const struct FLobbyId& LobbyId, const class FString& AttrKey, int64* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetLobbyAttributeValueInt64");

	Params::LobbySubsystem_GetLobbyAttributeValueInt64 Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = Parms.OutAttrValue;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutAttrValue                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetLobbyAttributeValueString(int32 LocalUserNum, const struct FLobbyId& LobbyId, const class FString& AttrKey, class FString* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetLobbyAttributeValueString");

	Params::LobbySubsystem_GetLobbyAttributeValueString Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = std::move(Parms.OutAttrValue);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueBool
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutAttrValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetMemberAttributeValueBool(int32 LocalUserNum, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, const class FString& AttrKey, bool* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberAttributeValueBool");

	Params::LobbySubsystem_GetMemberAttributeValueBool Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = Parms.OutAttrValue;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutAttrValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetMemberAttributeValueFloat(int32 LocalUserNum, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, const class FString& AttrKey, float* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberAttributeValueFloat");

	Params::LobbySubsystem_GetMemberAttributeValueFloat Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = Parms.OutAttrValue;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueInt64
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  OutAttrValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetMemberAttributeValueInt64(int32 LocalUserNum, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, const class FString& AttrKey, int64* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberAttributeValueInt64");

	Params::LobbySubsystem_GetMemberAttributeValueInt64 Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = Parms.OutAttrValue;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AttrKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutAttrValue                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLobbyAttribute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetMemberAttributeValueString(int32 LocalUserNum, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, const class FString& AttrKey, class FString* OutAttrValue, bool bUseLobbyAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberAttributeValueString");

	Params::LobbySubsystem_GetMemberAttributeValueString Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.AttrKey = std::move(AttrKey);
	Parms.bUseLobbyAttribute = bUseLobbyAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttrValue != nullptr)
		*OutAttrValue = std::move(Parms.OutAttrValue);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetPendingInviteInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ULobbyJoinInfo*>*          OutPendingInvites                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetPendingInviteInfo(int32 LocalUserNum, TArray<class ULobbyJoinInfo*>* OutPendingInvites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetPendingInviteInfo");

	Params::LobbySubsystem_GetPendingInviteInfo Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPendingInvites != nullptr)
		*OutPendingInvites = std::move(Parms.OutPendingInvites);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetSessionInviteInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ULobbyJoinInfo*>*          OutPendingInvites                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetSessionInviteInfo(int32 LocalUserNum, TArray<class ULobbyJoinInfo*>* OutPendingInvites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetSessionInviteInfo");

	Params::LobbySubsystem_GetSessionInviteInfo Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPendingInvites != nullptr)
		*OutPendingInvites = std::move(Parms.OutPendingInvites);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.IsRequiredPassword
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::IsRequiredPassword(int32 LocalUserNum, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "IsRequiredPassword");

	Params::LobbySubsystem_IsRequiredPassword Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.KickMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::KickMember(int32 LocalUserNum, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "KickMember");

	Params::LobbySubsystem_KickMember Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.PromoteMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::PromoteMember(int32 LocalUserNum, const struct FLobbyId& LobbyId, const struct FUniqueNetIdRepl& MemberId, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "PromoteMember");

	Params::LobbySubsystem_PromoteMember Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberId = std::move(MemberId);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.RejectInvitation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULobbyJoinInfo*             InviteInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::RejectInvitation(int32 LocalUserNum, const class ULobbyJoinInfo* InviteInfo, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "RejectInvitation");

	Params::LobbySubsystem_RejectInvitation Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.InviteInfo = InviteInfo;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.SearchLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   LobbyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::SearchLobby(int32 LocalUserNum, int64 LobbyType, TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "SearchLobby");

	Params::LobbySubsystem_SearchLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyType = LobbyType;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.SetPFBusyFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    BusyFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystem::SetPFBusyFlag(bool BusyFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "SetPFBusyFlag");

	Params::LobbySubsystem_SetPFBusyFlag Parms{};

	Parms.BusyFlag = BusyFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystem.SetupConnectP2PLobbyUsers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IsHost                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::SetupConnectP2PLobbyUsers(int32 LocalUserNum, const struct FLobbyId& LobbyId, bool IsHost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "SetupConnectP2PLobbyUsers");

	Params::LobbySubsystem_SetupConnectP2PLobbyUsers Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.IsHost = IsHost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetJoinedLobbies
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLobbyId>*                OutLobbyIds                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::GetJoinedLobbies(int32 LocalUserNum, TArray<struct FLobbyId>* OutLobbyIds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetJoinedLobbies");

	Params::LobbySubsystem_GetJoinedLobbies Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLobbyIds != nullptr)
		*OutLobbyIds = std::move(Parms.OutLobbyIds);

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMaxMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbySubsystem::GetMaxMemberCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMaxMemberCount");

	Params::LobbySubsystem_GetMaxMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbySubsystem::GetMemberCount(int32 LocalUserNum, const struct FLobbyId& LobbyId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberCount");

	Params::LobbySubsystem_GetMemberCount Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberUserId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   MemberIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl ULobbySubsystem::GetMemberUserId(int32 LocalUserNum, const struct FLobbyId& LobbyId, int32 MemberIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberUserId");

	Params::LobbySubsystem_GetMemberUserId Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);
	Parms.MemberIndex = MemberIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetMemberUserIds
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FUniqueNetIdRepl>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FUniqueNetIdRepl> ULobbySubsystem::GetMemberUserIds(int32 LocalUserNum, const struct FLobbyId& LobbyId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetMemberUserIds");

	Params::LobbySubsystem_GetMemberUserIds Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.GetOnlineIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULobbySubsystem::GetOnlineIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "GetOnlineIndex");

	Params::LobbySubsystem_GetOnlineIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.HasSessionInvite
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::HasSessionInvite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "HasSessionInvite");

	Params::LobbySubsystem_HasSessionInvite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbySubsystem.IsLockedLobby
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbySubsystem::IsLockedLobby(int32 LocalUserNum, const struct FLobbyId& LobbyId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbySubsystem", "IsLockedLobby");

	Params::LobbySubsystem_IsLockedLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyTransactionParam.AddAttributeBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::AddAttributeBool(const class FString& Key, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "AddAttributeBool");

	Params::LobbyTransactionParam_AddAttributeBool Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.AddAttributeFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::AddAttributeFloat(const class FString& Key, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "AddAttributeFloat");

	Params::LobbyTransactionParam_AddAttributeFloat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.AddAttributeInt64
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::AddAttributeInt64(const class FString& Key, int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "AddAttributeInt64");

	Params::LobbyTransactionParam_AddAttributeInt64 Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.AddAttributeString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::AddAttributeString(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "AddAttributeString");

	Params::LobbyTransactionParam_AddAttributeString Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.AddDeleteAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::AddDeleteAttribute(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "AddDeleteAttribute");

	Params::LobbyTransactionParam_AddDeleteAttribute Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.SetCapacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   InCapacity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::SetCapacity(int64 InCapacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "SetCapacity");

	Params::LobbyTransactionParam_SetCapacity Parms{};

	Parms.InCapacity = InCapacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.SetCreateDefault
// (Final, Native, Public, BlueprintCallable)

void ULobbyTransactionParam::SetCreateDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "SetCreateDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.SetEnableHostMigration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnableHostMigration                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::SetEnableHostMigration(bool bInEnableHostMigration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "SetEnableHostMigration");

	Params::LobbyTransactionParam_SetEnableHostMigration Parms{};

	Parms.bInEnableHostMigration = bInEnableHostMigration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.SetLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::SetLocked(bool bInLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "SetLocked");

	Params::LobbyTransactionParam_SetLocked Parms{};

	Parms.bInLocked = bInLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.SetPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPassword                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::SetPassword(const class FString& InPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "SetPassword");

	Params::LobbyTransactionParam_SetPassword Parms{};

	Parms.InPassword = std::move(InPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyTransactionParam.SetPublic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPublic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyTransactionParam::SetPublic(bool bInPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyTransactionParam", "SetPublic");

	Params::LobbyTransactionParam_SetPublic Parms{};

	Parms.bInPublic = bInPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberTransactionParam::AddAttributeBool(const class FString& Key, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberTransactionParam", "AddAttributeBool");

	Params::LobbyMemberTransactionParam_AddAttributeBool Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberTransactionParam::AddAttributeFloat(const class FString& Key, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberTransactionParam", "AddAttributeFloat");

	Params::LobbyMemberTransactionParam_AddAttributeFloat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeInt64
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberTransactionParam::AddAttributeInt64(const class FString& Key, int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberTransactionParam", "AddAttributeInt64");

	Params::LobbyMemberTransactionParam_AddAttributeInt64 Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberTransactionParam::AddAttributeString(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberTransactionParam", "AddAttributeString");

	Params::LobbyMemberTransactionParam_AddAttributeString Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbyMemberTransactionParam.AddDeleteAttribute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyMemberTransactionParam::AddDeleteAttribute(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyMemberTransactionParam", "AddDeleteAttribute");

	Params::LobbyMemberTransactionParam_AddDeleteAttribute Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_Bool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLobbySubsystemLobbySearchQuery& Query                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELobbySubsystemLobbySearchQueryFilterComparatorComparator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystemLobbySearchQueryUtility::AddLobbySearchQueryFilter_Bool(struct FLobbySubsystemLobbySearchQuery& Query, const class FString& Key, bool bValue, ELobbySubsystemLobbySearchQueryFilterComparator Comparator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LobbySubsystemLobbySearchQueryUtility", "AddLobbySearchQueryFilter_Bool");

	Params::LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool Parms{};

	Parms.Query = std::move(Query);
	Parms.Key = std::move(Key);
	Parms.bValue = bValue;
	Parms.Comparator = Comparator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Query = std::move(Parms.Query);
}


// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLobbySubsystemLobbySearchQuery& Query                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELobbySubsystemLobbySearchQueryFilterComparatorComparator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystemLobbySearchQueryUtility::AddLobbySearchQueryFilter_Float(struct FLobbySubsystemLobbySearchQuery& Query, const class FString& Key, float Value, ELobbySubsystemLobbySearchQueryFilterComparator Comparator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LobbySubsystemLobbySearchQueryUtility", "AddLobbySearchQueryFilter_Float");

	Params::LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float Parms{};

	Parms.Query = std::move(Query);
	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Comparator = Comparator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Query = std::move(Parms.Query);
}


// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_Int64
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLobbySubsystemLobbySearchQuery& Query                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELobbySubsystemLobbySearchQueryFilterComparatorComparator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystemLobbySearchQueryUtility::AddLobbySearchQueryFilter_Int64(struct FLobbySubsystemLobbySearchQuery& Query, const class FString& Key, int64 Value, ELobbySubsystemLobbySearchQueryFilterComparator Comparator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LobbySubsystemLobbySearchQueryUtility", "AddLobbySearchQueryFilter_Int64");

	Params::LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64 Parms{};

	Parms.Query = std::move(Query);
	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Comparator = Comparator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Query = std::move(Parms.Query);
}


// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_String
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLobbySubsystemLobbySearchQuery& Query                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELobbySubsystemLobbySearchQueryFilterComparatorComparator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystemLobbySearchQueryUtility::AddLobbySearchQueryFilter_String(struct FLobbySubsystemLobbySearchQuery& Query, const class FString& Key, const class FString& Value, ELobbySubsystemLobbySearchQueryFilterComparator Comparator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LobbySubsystemLobbySearchQueryUtility", "AddLobbySearchQueryFilter_String");

	Params::LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String Parms{};

	Parms.Query = std::move(Query);
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.Comparator = Comparator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Query = std::move(Parms.Query);
}


// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.SetLimit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLobbySubsystemLobbySearchQuery& Query                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   NewLimit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbySubsystemLobbySearchQueryUtility::SetLimit(struct FLobbySubsystemLobbySearchQuery& Query, int32 NewLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LobbySubsystemLobbySearchQueryUtility", "SetLimit");

	Params::LobbySubsystemLobbySearchQueryUtility_SetLimit Parms{};

	Parms.Query = std::move(Query);
	Parms.NewLimit = NewLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Query = std::move(Parms.Query);
}


// Function UnionSystem.LobbyJoinInfo.GetLobbyId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLobbyId                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLobbyId ULobbyJoinInfo::GetLobbyId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "GetLobbyId");

	Params::LobbyJoinInfo_GetLobbyId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyJoinInfo.GetPasswrod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyJoinInfo::GetPasswrod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "GetPasswrod");

	Params::LobbyJoinInfo_GetPasswrod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyJoinInfo.GetSourceDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyJoinInfo::GetSourceDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "GetSourceDisplayName");

	Params::LobbyJoinInfo_GetSourceDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyJoinInfo.GetSourceUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl ULobbyJoinInfo::GetSourceUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "GetSourceUserId");

	Params::LobbyJoinInfo_GetSourceUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyJoinInfo.HasSessionInvite
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyJoinInfo::HasSessionInvite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "HasSessionInvite");

	Params::LobbyJoinInfo_HasSessionInvite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyJoinInfo.IsAccepted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULobbyJoinInfo::IsAccepted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "IsAccepted");

	Params::LobbyJoinInfo_IsAccepted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LobbyJoinInfo.ToString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULobbyJoinInfo::ToString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyJoinInfo", "ToString");

	Params::LobbyJoinInfo_ToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.ConvLangToEnumFromString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    LangString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::ConvLangToEnumFromString(const class FString& LangString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "ConvLangToEnumFromString");

	Params::LocalizationFunctionLibrary_ConvLangToEnumFromString Parms{};

	Parms.LangString = std::move(LangString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.ConvLangToStringFromEnum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               LangEnum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULocalizationFunctionLibrary::ConvLangToStringFromEnum(ELanguage LangEnum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "ConvLangToStringFromEnum");

	Params::LocalizationFunctionLibrary_ConvLangToStringFromEnum Parms{};

	Parms.LangEnum = LangEnum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetDefaultTextLang
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetDefaultTextLang()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetDefaultTextLang");

	Params::LocalizationFunctionLibrary_GetDefaultTextLang Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetFontSizeRate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULocalizationFunctionLibrary::GetFontSizeRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetFontSizeRate");

	Params::LocalizationFunctionLibrary_GetFontSizeRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetKeytopButtonTextByFKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   KeytopPattern                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ULocalizationFunctionLibrary::GetKeytopButtonTextByFKey(const struct FKey& InKey, uint8 KeytopPattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetKeytopButtonTextByFKey");

	Params::LocalizationFunctionLibrary_GetKeytopButtonTextByFKey Parms{};

	Parms.InKey = std::move(InKey);
	Parms.KeytopPattern = KeytopPattern;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetPCPlatformLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetPCPlatformLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetPCPlatformLanguage");

	Params::LocalizationFunctionLibrary_GetPCPlatformLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetPCPlatformVoiceLangFromTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetPCPlatformVoiceLangFromTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetPCPlatformVoiceLangFromTable");

	Params::LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetTextLang
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetTextLang()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetTextLang");

	Params::LocalizationFunctionLibrary_GetTextLang Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetVoiceLang
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetVoiceLang()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetVoiceLang");

	Params::LocalizationFunctionLibrary_GetVoiceLang Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetVoiceLangFromTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetVoiceLangFromTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetVoiceLangFromTable");

	Params::LocalizationFunctionLibrary_GetVoiceLangFromTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.GetVoiceLangFromTableByEnum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELanguage                               Lang                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELanguage                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELanguage ULocalizationFunctionLibrary::GetVoiceLangFromTableByEnum(ELanguage Lang)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "GetVoiceLangFromTableByEnum");

	Params::LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum Parms{};

	Parms.Lang = Lang;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalizationFunctionLibrary.SetTextLang
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELanguage                               Lang                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalizationFunctionLibrary::SetTextLang(ELanguage Lang)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "SetTextLang");

	Params::LocalizationFunctionLibrary_SetTextLang Parms{};

	Parms.Lang = Lang;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LocalizationFunctionLibrary.SetTextLangByString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Lang                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalizationFunctionLibrary::SetTextLangByString(const class FString& Lang)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "SetTextLangByString");

	Params::LocalizationFunctionLibrary_SetTextLangByString Parms{};

	Parms.Lang = std::move(Lang);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LocalizationFunctionLibrary.SetVoiceLang
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELanguage                               Lang                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalizationFunctionLibrary::SetVoiceLang(ELanguage Lang)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "SetVoiceLang");

	Params::LocalizationFunctionLibrary_SetVoiceLang Parms{};

	Parms.Lang = Lang;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LocalizationFunctionLibrary.SetVoiceLangByString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Lang                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalizationFunctionLibrary::SetVoiceLangByString(const class FString& Lang)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalizationFunctionLibrary", "SetVoiceLangByString");

	Params::LocalizationFunctionLibrary_SetVoiceLangByString Parms{};

	Parms.Lang = std::move(Lang);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.LocalStorageSubsystem.Delete
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELocalStorageStatus*                    OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalStorageSubsystem::Delete(const class FString& Filename, ELocalStorageStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalStorageSubsystem", "Delete");

	Params::LocalStorageSubsystem_Delete Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;
}


// Function UnionSystem.LocalStorageSubsystem.Exists
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELocalStorageStatus*                    OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalStorageSubsystem::Exists(const class FString& Filename, ELocalStorageStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalStorageSubsystem", "Exists");

	Params::LocalStorageSubsystem_Exists Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalStorageSubsystem.IsBusy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalStorageSubsystem::IsBusy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalStorageSubsystem", "IsBusy");

	Params::LocalStorageSubsystem_IsBusy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.LocalStorageSubsystem.LoadAsync
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutBuffer                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULocalStorageSubsystem::LoadAsync(const class FString& Filename, TArray<uint8>* OutBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalStorageSubsystem", "LoadAsync");

	Params::LocalStorageSubsystem_LoadAsync Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBuffer != nullptr)
		*OutBuffer = std::move(Parms.OutBuffer);
}


// Function UnionSystem.LocalStorageSubsystem.SaveAsync
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          InBuffer                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULocalStorageSubsystem::SaveAsync(const class FString& Filename, TArray<uint8>* InBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalStorageSubsystem", "SaveAsync");

	Params::LocalStorageSubsystem_SaveAsync Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InBuffer != nullptr)
		*InBuffer = std::move(Parms.InBuffer);
}


// Function UnionSystem.MachineIdUtilityLibrary.BuildHoverboardCenterPartsPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              FrontPartsId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMachineId                              RearPartsId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMachineIdUtilityLibrary::BuildHoverboardCenterPartsPath(EMachineId FrontPartsId, EMachineId RearPartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "BuildHoverboardCenterPartsPath");

	Params::MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath Parms{};

	Parms.FrontPartsId = FrontPartsId;
	Parms.RearPartsId = RearPartsId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.BuildMachineSidePartsPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              FrontPartsId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMachineId                              RearPartsId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMachineIdUtilityLibrary::BuildMachineSidePartsPath(EMachineId FrontPartsId, EMachineId RearPartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "BuildMachineSidePartsPath");

	Params::MachineIdUtilityLibrary_BuildMachineSidePartsPath Parms{};

	Parms.FrontPartsId = FrontPartsId;
	Parms.RearPartsId = RearPartsId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.GetConvertMachineIdToMachineCustomId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMachineId                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMachineId UMachineIdUtilityLibrary::GetConvertMachineIdToMachineCustomId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "GetConvertMachineIdToMachineCustomId");

	Params::MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.GetPlayerIndexFromSimpleCustomMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMachineIdUtilityLibrary::GetPlayerIndexFromSimpleCustomMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "GetPlayerIndexFromSimpleCustomMachineId");

	Params::MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.IsBasicCustomMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMachineIdUtilityLibrary::IsBasicCustomMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "IsBasicCustomMachineId");

	Params::MachineIdUtilityLibrary_IsBasicCustomMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.IsBasicMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMachineIdUtilityLibrary::IsBasicMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "IsBasicMachineId");

	Params::MachineIdUtilityLibrary_IsBasicMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.IsCustomMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMachineIdUtilityLibrary::IsCustomMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "IsCustomMachineId");

	Params::MachineIdUtilityLibrary_IsCustomMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.IsExtendMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMachineIdUtilityLibrary::IsExtendMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "IsExtendMachineId");

	Params::MachineIdUtilityLibrary_IsExtendMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.IsHoverboardMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMachineIdUtilityLibrary::IsHoverboardMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "IsHoverboardMachineId");

	Params::MachineIdUtilityLibrary_IsHoverboardMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MachineIdUtilityLibrary.IsSimpleCustomMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMachineIdUtilityLibrary::IsSimpleCustomMachineId(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MachineIdUtilityLibrary", "IsSimpleCustomMachineId");

	Params::MachineIdUtilityLibrary_IsSimpleCustomMachineId Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MatchmakingRequestContext.SetNoTriggerMatchmakingComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingRequestContext::SetNoTriggerMatchmakingComplete(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingRequestContext", "SetNoTriggerMatchmakingComplete");

	Params::MatchmakingRequestContext_SetNoTriggerMatchmakingComplete Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MatchmakingRequestContext.IsSeries
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchmakingRequestContext::IsSeries() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingRequestContext", "IsSeries");

	Params::MatchmakingRequestContext_IsSeries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MatchmakingContext_WithFlexMatch.InitializeFlexMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingContext_WithFlexMatch::InitializeFlexMatch(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext_WithFlexMatch", "InitializeFlexMatch");

	Params::MatchmakingContext_WithFlexMatch_InitializeFlexMatch Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MatchmakingSubsystem.CancelMatchmaking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingSubsystem::CancelMatchmaking(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "CancelMatchmaking");

	Params::MatchmakingSubsystem_CancelMatchmaking Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MatchmakingSubsystem.ClearAllDelegates
// (Final, Native, Public, BlueprintCallable)

void UMatchmakingSubsystem::ClearAllDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "ClearAllDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MatchmakingSubsystem.CreateMatchmakingContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UMatchmakingRequestContext>MatchmakingContextClass                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMatchmakingRequestContext*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMatchmakingRequestContext* UMatchmakingSubsystem::CreateMatchmakingContext(TSubclassOf<class UMatchmakingRequestContext> MatchmakingContextClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "CreateMatchmakingContext");

	Params::MatchmakingSubsystem_CreateMatchmakingContext Parms{};

	Parms.MatchmakingContextClass = MatchmakingContextClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MatchmakingSubsystem.EndMatchmaking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingSubsystem::EndMatchmaking(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "EndMatchmaking");

	Params::MatchmakingSubsystem_EndMatchmaking Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MatchmakingSubsystem.GetCurrentMatchmakingContext
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   bIsExists                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMatchmakingRequestContext*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMatchmakingRequestContext* UMatchmakingSubsystem::GetCurrentMatchmakingContext(bool* bIsExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "GetCurrentMatchmakingContext");

	Params::MatchmakingSubsystem_GetCurrentMatchmakingContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsExists != nullptr)
		*bIsExists = Parms.bIsExists;

	return Parms.ReturnValue;
}


// Function UnionSystem.MatchmakingSubsystem.SetMatchmakingCompleteDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(EGameMatchmakingCompleteStatus Status, const struct FCreateOrConnectLobbyResult& Result)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingSubsystem::SetMatchmakingCompleteDelegate(TDelegate<void(EGameMatchmakingCompleteStatus Status, const struct FCreateOrConnectLobbyResult& Result)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "SetMatchmakingCompleteDelegate");

	Params::MatchmakingSubsystem_SetMatchmakingCompleteDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MatchmakingSubsystem.StartMatchmaking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMatchmakingRequestContext*       NewContext                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EGameMatchmakingCompleteStatus Status, const struct FCreateOrConnectLobbyResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingSubsystem::StartMatchmaking(int32 LocalUserNum, class UMatchmakingRequestContext* NewContext, TDelegate<void(EGameMatchmakingCompleteStatus Status, const struct FCreateOrConnectLobbyResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSubsystem", "StartMatchmaking");

	Params::MatchmakingSubsystem_StartMatchmaking Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.NewContext = NewContext;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.GetCurrentTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMaterialPlayer::GetCurrentTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "GetCurrentTime");

	Params::MaterialPlayer_GetCurrentTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayer.GetCurrentTimeRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMaterialPlayer::GetCurrentTimeRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "GetCurrentTimeRatio");

	Params::MaterialPlayer_GetCurrentTimeRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayer.OverrideMaterialColorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::OverrideMaterialColorParameter(class FName ParameterName, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "OverrideMaterialColorParameter");

	Params::MaterialPlayer_OverrideMaterialColorParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.OverrideMaterialParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::OverrideMaterialParameter(class FName ParameterName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "OverrideMaterialParameter");

	Params::MaterialPlayer_OverrideMaterialParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.OverrideMaterialVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::OverrideMaterialVectorParameter(class FName ParameterName, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "OverrideMaterialVectorParameter");

	Params::MaterialPlayer_OverrideMaterialVectorParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.Play
// (Final, Native, Public, BlueprintCallable)

void UMaterialPlayer::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "Play");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.PlayWithStartTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::PlayWithStartTime(float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "PlayWithStartTime");

	Params::MaterialPlayer_PlayWithStartTime Parms{};

	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.SetCurrentTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CurrentTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::SetCurrentTime(float CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "SetCurrentTime");

	Params::MaterialPlayer_SetCurrentTime Parms{};

	Parms.CurrentTime = CurrentTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.SetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPause                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::SetPause(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "SetPause");

	Params::MaterialPlayer_SetPause Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.Stop
// (Final, Native, Public, BlueprintCallable)

void UMaterialPlayer::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.StopAndReset
// (Final, Native, Public, BlueprintCallable)

void UMaterialPlayer::StopAndReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "StopAndReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayer::Update(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "Update");

	Params::MaterialPlayer_Update Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayer.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMaterialPlayer::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "IsActive");

	Params::MaterialPlayer_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayer.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMaterialPlayer::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayer", "IsPlaying");

	Params::MaterialPlayer_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayerComponent.BindCurves
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveTable*                      CurveTable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMaterialPlayerComponent::BindCurves(class UCurveTable* CurveTable, class FName TargetTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "BindCurves");

	Params::MaterialPlayerComponent_BindCurves Parms{};

	Parms.CurveTable = CurveTable;
	Parms.TargetTag = TargetTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayerComponent.BindCurvesByInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatereialPlayerBindInfo*        BindInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMaterialPlayerComponent::BindCurvesByInfo(struct FMatereialPlayerBindInfo* BindInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "BindCurvesByInfo");

	Params::MaterialPlayerComponent_BindCurvesByInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BindInfo != nullptr)
		*BindInfo = std::move(Parms.BindInfo);

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayerComponent.GetCurrentTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMaterialPlayerComponent::GetCurrentTime(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "GetCurrentTime");

	Params::MaterialPlayerComponent_GetCurrentTime Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayerComponent.GetCurrentTimeRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMaterialPlayerComponent::GetCurrentTimeRatio(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "GetCurrentTimeRatio");

	Params::MaterialPlayerComponent_GetCurrentTimeRatio Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayerComponent.OverrideMaterialColorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::OverrideMaterialColorParameter(int32 Index_0, class FName ParameterName, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "OverrideMaterialColorParameter");

	Params::MaterialPlayerComponent_OverrideMaterialColorParameter Parms{};

	Parms.Index_0 = Index_0;
	Parms.ParameterName = ParameterName;
	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.OverrideMaterialParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::OverrideMaterialParameter(int32 Index_0, class FName ParameterName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "OverrideMaterialParameter");

	Params::MaterialPlayerComponent_OverrideMaterialParameter Parms{};

	Parms.Index_0 = Index_0;
	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.OverrideMaterialVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::OverrideMaterialVectorParameter(int32 Index_0, class FName ParameterName, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "OverrideMaterialVectorParameter");

	Params::MaterialPlayerComponent_OverrideMaterialVectorParameter Parms{};

	Parms.Index_0 = Index_0;
	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::Play(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "Play");

	Params::MaterialPlayerComponent_Play Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.PlayWithStartTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::PlayWithStartTime(int32 Index_0, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "PlayWithStartTime");

	Params::MaterialPlayerComponent_PlayWithStartTime Parms{};

	Parms.Index_0 = Index_0;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.SetCurrentTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::SetCurrentTime(int32 Index_0, float CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "SetCurrentTime");

	Params::MaterialPlayerComponent_SetCurrentTime Parms{};

	Parms.Index_0 = Index_0;
	Parms.CurrentTime = CurrentTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.Stop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::Stop(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "Stop");

	Params::MaterialPlayerComponent_Stop Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.StopAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::StopAll(bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "StopAll");

	Params::MaterialPlayerComponent_StopAll Parms{};

	Parms.bReset = bReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.StopAndReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialPlayerComponent::StopAndReset(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "StopAndReset");

	Params::MaterialPlayerComponent_StopAndReset Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MaterialPlayerComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMaterialPlayerComponent::IsPlaying(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "IsPlaying");

	Params::MaterialPlayerComponent_IsPlaying Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MaterialPlayerComponent.IsValidPlayIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMaterialPlayerComponent::IsValidPlayIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialPlayerComponent", "IsValidPlayIndex");

	Params::MaterialPlayerComponent_IsValidPlayIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MCEvent.GetMCEventData_SpecifyId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PointUpChanceId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMCEventData                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMCEventData UMCEvent::GetMCEventData_SpecifyId(int32 PointUpChanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MCEvent", "GetMCEventData_SpecifyId");

	Params::MCEvent_GetMCEventData_SpecifyId Parms{};

	Parms.PointUpChanceId = PointUpChanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MCEvent.LotteryMCEventId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMCEvent::LotteryMCEventId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MCEvent", "LotteryMCEventId");

	Params::MCEvent_LotteryMCEventId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuInputRecieveInterface.OnAcceptKeyPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnAcceptKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnAcceptKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnAcceptKeyPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnAcceptKeyPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnAcceptKeyReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnAcceptKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnAcceptKeyReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnAcceptKeyReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnAcceptKeyReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnBackKeyPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnBackKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnBackKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnBackKeyPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnBackKeyPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnBackKeyReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnBackKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnBackKeyReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnBackKeyReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnBackKeyReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnDownKeyPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnDownKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnDownKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnDownKeyPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnDownKeyPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnDownKeyReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnDownKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnDownKeyReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnDownKeyReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnDownKeyReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonLeftPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnFaceButtonLeftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonLeftPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonLeftPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonLeftPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonLeftReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnFaceButtonLeftReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonLeftReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonLeftReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonLeftReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonTopPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnFaceButtonTopPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonTopPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonTopPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonTopPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonTopReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnFaceButtonTopReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonTopReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonTopReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnFaceButtonTopReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftKeyPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnLeftKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftKeyPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftKeyPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftKeyReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnLeftKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftKeyReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftKeyReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftKeyReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftShoulderPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnLeftShoulderPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftShoulderPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftShoulderPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftShoulderPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftShoulderReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnLeftShoulderReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftShoulderReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftShoulderReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftShoulderReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickAxis
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftStickAxis(const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftStickAxis");

	Params::MenuInputRecieveInterface_OnLeftStickAxis Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickAxisWithPlayerId
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftStickAxisWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId Parms{};

	Parms.Value = std::move(Value);
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickButtonPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnLeftStickButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftStickButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickButtonPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftStickButtonPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickButtonReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnLeftStickButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftStickButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickButtonReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnLeftStickButtonReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightKeyPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnRightKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightKeyPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightKeyPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightKeyReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnRightKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightKeyReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightKeyReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightKeyReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightShoulderPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnRightShoulderPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightShoulderPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightShoulderPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightShoulderPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightShoulderReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnRightShoulderReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightShoulderReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightShoulderReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightShoulderReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightStickAxis
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightStickAxis(const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightStickAxis");

	Params::MenuInputRecieveInterface_OnRightStickAxis Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightStickAxisWithPlayerId
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightStickAxisWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightStickAxisWithPlayerId Parms{};

	Parms.Value = std::move(Value);
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightStickButtonPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnRightStickButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightStickButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightStickButtonPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightStickButtonPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightStickButtonReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnRightStickButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightStickButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnRightStickButtonReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnRightStickButtonReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnSpecialPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnSpecialPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnSpecialPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnSpecialPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnSpecialPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnSpecialPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnSpecialReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnSpecialReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnSpecialReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnSpecialReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnSpecialReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnUpKeyPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnUpKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnUpKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnUpKeyPressedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnUpKeyPressedWithPlayerId");

	Params::MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnUpKeyReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuInputRecieveInterface::OnUpKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnUpKeyReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.OnUpKeyReleasedWithPlayerId
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "OnUpKeyReleasedWithPlayerId");

	Params::MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuInputRecieveInterface.SilentFocusReady
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOnce                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuInputRecieveInterface::SilentFocusReady(bool bOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuInputRecieveInterface", "SilentFocusReady");

	Params::MenuInputRecieveInterface_SilentFocusReady Parms{};

	Parms.bOnce = bOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPlayerController.SetMenuDirectionKeyEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableDirection                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuPlayerController::SetMenuDirectionKeyEnable(bool bEnableDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuPlayerController", "SetMenuDirectionKeyEnable");

	Params::MenuPlayerController_SetMenuDirectionKeyEnable Parms{};

	Parms.bEnableDirection = bEnableDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPlayerController.GetMenuDirectionKeyEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMenuPlayerController::GetMenuDirectionKeyEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuPlayerController", "GetMenuDirectionKeyEnable");

	Params::MenuPlayerController_GetMenuDirectionKeyEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuPopupWindowInterface.GetAnimationIn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* IMenuPopupWindowInterface::GetAnimationIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "GetAnimationIn");

	Params::MenuPopupWindowInterface_GetAnimationIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuPopupWindowInterface.GetAnimationLoop
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* IMenuPopupWindowInterface::GetAnimationLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "GetAnimationLoop");

	Params::MenuPopupWindowInterface_GetAnimationLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuPopupWindowInterface.GetAnimationOut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* IMenuPopupWindowInterface::GetAnimationOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "GetAnimationOut");

	Params::MenuPopupWindowInterface_GetAnimationOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuPopupWindowInterface.GetPopupWindowButtonType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPopupWindowButtonType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPopupWindowButtonType IMenuPopupWindowInterface::GetPopupWindowButtonType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "GetPopupWindowButtonType");

	Params::MenuPopupWindowInterface_GetPopupWindowButtonType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuPopupWindowInterface.GetPopupWindowType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPopupWindowType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPopupWindowType IMenuPopupWindowInterface::GetPopupWindowType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "GetPopupWindowType");

	Params::MenuPopupWindowInterface_GetPopupWindowType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.MenuPopupWindowInterface.InitParam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPopupWindowButtonType                  ButtonType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::InitParam(EPopupWindowButtonType ButtonType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "InitParam");

	Params::MenuPopupWindowInterface_InitParam Parms{};

	Parms.ButtonType = ButtonType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.PlayAnimationIn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IMenuPopupWindowInterface::PlayAnimationIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "PlayAnimationIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetButtonControlDelayTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetButtonControlDelayTime(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetButtonControlDelayTime");

	Params::MenuPopupWindowInterface_SetButtonControlDelayTime Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetButtonText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              BtnTextArray                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetButtonText(const TArray<class FText>& BtnTextArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetButtonText");

	Params::MenuPopupWindowInterface_SetButtonText Parms{};

	Parms.BtnTextArray = std::move(BtnTextArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetDisplayFooterButton
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              InDisplay                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetDisplayFooterButton(const bool InDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetDisplayFooterButton");

	Params::MenuPopupWindowInterface_SetDisplayFooterButton Parms{};

	Parms.InDisplay = InDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetDonpaTicketCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AfterCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetDonpaTicketCount(int32 CurrentCount, int32 AfterCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetDonpaTicketCount");

	Params::MenuPopupWindowInterface_SetDonpaTicketCount Parms{};

	Parms.CurrentCount = CurrentCount;
	Parms.AfterCount = AfterCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetEnableInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetEnableInput(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetEnableInput");

	Params::MenuPopupWindowInterface_SetEnableInput Parms{};

	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetFooterMenuBtn
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BtnIconIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BtnIconType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      BtnText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetFooterMenuBtn(int32 BtnIconIndex, int32 BtnIconType, const class FText& BtnText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetFooterMenuBtn");

	Params::MenuPopupWindowInterface_SetFooterMenuBtn Parms{};

	Parms.BtnIconIndex = BtnIconIndex;
	Parms.BtnIconType = BtnIconType;
	Parms.BtnText = std::move(BtnText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetImageButtonSelectText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetImageButtonSelectText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetImageButtonSelectText");

	Params::MenuPopupWindowInterface_SetImageButtonSelectText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetImageTexture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UTexture2D*                 Texture2D                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetImageTexture(const class UTexture2D* Texture2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetImageTexture");

	Params::MenuPopupWindowInterface_SetImageTexture Parms{};

	Parms.Texture2D = Texture2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetInitialFocusButtonIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetInitialFocusButtonIndex(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetInitialFocusButtonIndex");

	Params::MenuPopupWindowInterface_SetInitialFocusButtonIndex Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetPopupInfoDisplayIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetPopupInfoDisplayIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetPopupInfoDisplayIndex");

	Params::MenuPopupWindowInterface_SetPopupInfoDisplayIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetPopupInfoMainMenuButtonIconIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Btn01IconIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Btn02IconIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetPopupInfoMainMenuButtonIconIndex(int32 Btn01IconIndex, int32 Btn02IconIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetPopupInfoMainMenuButtonIconIndex");

	Params::MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex Parms{};

	Parms.Btn01IconIndex = Btn01IconIndex;
	Parms.Btn02IconIndex = Btn02IconIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetTextMessege
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetTextMessege(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetTextMessege");

	Params::MenuPopupWindowInterface_SetTextMessege Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MenuPopupWindowInterface.SetTextTitle
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Attension                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMenuPopupWindowInterface::SetTextTitle(const class FText& Text, bool Attension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MenuPopupWindowInterface", "SetTextTitle");

	Params::MenuPopupWindowInterface_SetTextTitle Parms{};

	Parms.Text = std::move(Text);
	Parms.Attension = Attension;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.MovieFunctionLibrary.GetMovieList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UMovieFunctionLibrary::GetMovieList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MovieFunctionLibrary", "GetMovieList");

	Params::MovieFunctionLibrary_GetMovieList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.GetCurrentFestaData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMasterDataGetMasterDataResponse_MstFestaDataReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FMasterDataGetMasterDataResponse_MstFestaData UNetMasterDataManageSubsystem::GetCurrentFestaData(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "GetCurrentFestaData");

	Params::NetMasterDataManageSubsystem_GetCurrentFestaData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResult != nullptr)
		*bResult = Parms.bResult;

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.GetCurrentFestaRuleData
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime*                       FestaStartUTCTime                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime*                       FestaEndUTCTime                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  raceRuleId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  LoopCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMasterDataGetMasterDataResponse_MstFestaTimeSceduleData>*TimeScheduleDataArray                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetMasterDataManageSubsystem::GetCurrentFestaRuleData(struct FDateTime* FestaStartUTCTime, struct FDateTime* FestaEndUTCTime, int32* raceRuleId, int32* LoopCount, TArray<struct FMasterDataGetMasterDataResponse_MstFestaTimeSceduleData>* TimeScheduleDataArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "GetCurrentFestaRuleData");

	Params::NetMasterDataManageSubsystem_GetCurrentFestaRuleData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FestaStartUTCTime != nullptr)
		*FestaStartUTCTime = std::move(Parms.FestaStartUTCTime);

	if (FestaEndUTCTime != nullptr)
		*FestaEndUTCTime = std::move(Parms.FestaEndUTCTime);

	if (raceRuleId != nullptr)
		*raceRuleId = Parms.raceRuleId;

	if (LoopCount != nullptr)
		*LoopCount = Parms.LoopCount;

	if (TimeScheduleDataArray != nullptr)
		*TimeScheduleDataArray = std::move(Parms.TimeScheduleDataArray);

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.GetGeneralizedParamData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    KeyName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMasterDataGetMasterDataResponse_MstGeneralizedParameterData*Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetMasterDataManageSubsystem::GetGeneralizedParamData(const class FString& KeyName, struct FMasterDataGetMasterDataResponse_MstGeneralizedParameterData* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "GetGeneralizedParamData");

	Params::NetMasterDataManageSubsystem_GetGeneralizedParamData Parms{};

	Parms.KeyName = std::move(KeyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.GetMasterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMasterDataGetMasterDataResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMasterDataGetMasterDataResponse UNetMasterDataManageSubsystem::GetMasterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "GetMasterData");

	Params::NetMasterDataManageSubsystem_GetMasterData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.HasDifferentialData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetMasterDataManageSubsystem::HasDifferentialData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "HasDifferentialData");

	Params::NetMasterDataManageSubsystem_HasDifferentialData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.IsBusy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetMasterDataManageSubsystem::IsBusy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "IsBusy");

	Params::NetMasterDataManageSubsystem_IsBusy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.NetMasterDataManageSubsystem.OnGetHttpCommandComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetMasterDataManageSubsystem::OnGetHttpCommandComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "OnGetHttpCommandComplete");

	Params::NetMasterDataManageSubsystem_OnGetHttpCommandComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetMasterDataManageSubsystem.SaveLocalMasterData
// (Final, Native, Public, BlueprintCallable)

void UNetMasterDataManageSubsystem::SaveLocalMasterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "SaveLocalMasterData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetMasterDataManageSubsystem.SetupLocalMasterData
// (Final, Native, Public, BlueprintCallable)

void UNetMasterDataManageSubsystem::SetupLocalMasterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "SetupLocalMasterData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetMasterDataManageSubsystem.UpdateMasterDataRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bWasSuccessful, int32 ErrorCode)>OnCompleteDelegate                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetMasterDataManageSubsystem::UpdateMasterDataRequest(TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMasterDataManageSubsystem", "UpdateMasterDataRequest");

	Params::NetMasterDataManageSubsystem_UpdateMasterDataRequest Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetPingSubsystem.SetICMPAddr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InAddr                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetPingSubsystem::SetICMPAddr(const class FString& InAddr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetPingSubsystem", "SetICMPAddr");

	Params::NetPingSubsystem_SetICMPAddr Parms{};

	Parms.InAddr = std::move(InAddr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetPingSubsystem.SetTickEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetPingSubsystem::SetTickEnabled(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetPingSubsystem", "SetTickEnabled");

	Params::NetPingSubsystem_SetTickEnabled Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetPingSubsystem.SetUDPQoSAddr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InAddr                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetPingSubsystem::SetUDPQoSAddr(const class FString& InAddr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetPingSubsystem", "SetUDPQoSAddr");

	Params::NetPingSubsystem_SetUDPQoSAddr Parms{};

	Parms.InAddr = std::move(InAddr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.NetPingSubsystem.GetCurrentPingMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNetPingSubsystem::GetCurrentPingMs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetPingSubsystem", "GetCurrentPingMs");

	Params::NetPingSubsystem_GetCurrentPingMs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineActivitySubsystem.AddRecentPlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>&                  PlatformIdList                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::AddRecentPlayers(int32 LocalUserNum, TArray<class FString>& PlatformIdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "AddRecentPlayers");

	Params::OnlineActivitySubsystem_AddRecentPlayers Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.PlatformIdList = std::move(PlatformIdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	PlatformIdList = std::move(Parms.PlatformIdList);
}


// Function UnionSystem.OnlineActivitySubsystem.CancelInviteLobby
// (Final, Native, Public, BlueprintCallable)

void UOnlineActivitySubsystem::CancelInviteLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "CancelInviteLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.CheckEndInviteRequest
// (Final, Native, Public, BlueprintCallable)

void UOnlineActivitySubsystem::CheckEndInviteRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "CheckEndInviteRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.DebugDeleteActivity
// (Final, Native, Public, BlueprintCallable)

void UOnlineActivitySubsystem::DebugDeleteActivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "DebugDeleteActivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.DebugSetActivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LobbyIdString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::DebugSetActivity(const class FString& LobbyIdString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "DebugSetActivity");

	Params::OnlineActivitySubsystem_DebugSetActivity Parms{};

	Parms.LobbyIdString = std::move(LobbyIdString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.DeleteActivity
// (Final, Native, Public, BlueprintCallable)

void UOnlineActivitySubsystem::DeleteActivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "DeleteActivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.DestroyInviteLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::DestroyInviteLobby(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "DestroyInviteLobby");

	Params::OnlineActivitySubsystem_DestroyInviteLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.FinishInviteLobby
// (Final, Native, Public, BlueprintCallable)

void UOnlineActivitySubsystem::FinishInviteLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "FinishInviteLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.GetJoinLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLobbyId                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FLobbyId UOnlineActivitySubsystem::GetJoinLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "GetJoinLobby");

	Params::OnlineActivitySubsystem_GetJoinLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineActivitySubsystem.HasInviteOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineActivitySubsystem::HasInviteOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "HasInviteOnly");

	Params::OnlineActivitySubsystem_HasInviteOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineActivitySubsystem.HasInviteRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineActivitySubsystem::HasInviteRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "HasInviteRequest");

	Params::OnlineActivitySubsystem_HasInviteRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineActivitySubsystem.IsJoinLobbyReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineActivitySubsystem::IsJoinLobbyReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "IsJoinLobbyReady");

	Params::OnlineActivitySubsystem_IsJoinLobbyReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineActivitySubsystem.JoinInviteLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineActivitySubsystem::JoinInviteLobby(int32 LocalUserNum, TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "JoinInviteLobby");

	Params::OnlineActivitySubsystem_JoinInviteLobby Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineActivitySubsystem.OnConnectLobbyComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FCreateOrConnectLobbyResult&Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::OnConnectLobbyComplete(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "OnConnectLobbyComplete");

	Params::OnlineActivitySubsystem_OnConnectLobbyComplete Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.SendInviteNoCallback
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InLobbyIdString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::SendInviteNoCallback(int32 LocalUserNum, const struct FUniqueNetIdRepl& UserId, const class FString& InLobbyIdString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "SendInviteNoCallback");

	Params::OnlineActivitySubsystem_SendInviteNoCallback Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.UserId = std::move(UserId);
	Parms.InLobbyIdString = std::move(InLobbyIdString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.SetActivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LobbyIdString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPlayerNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentPlayerNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::SetActivity(const class FString& LobbyIdString, int32 InLocalUserNum, int32 MaxPlayerNum, int32 CurrentPlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "SetActivity");

	Params::OnlineActivitySubsystem_SetActivity Parms{};

	Parms.LobbyIdString = std::move(LobbyIdString);
	Parms.InLocalUserNum = InLocalUserNum;
	Parms.MaxPlayerNum = MaxPlayerNum;
	Parms.CurrentPlayerNum = CurrentPlayerNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineActivitySubsystem.SetupJoinRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess)>          OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineActivitySubsystem::SetupJoinRequest(TDelegate<void(bool bSuccess)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineActivitySubsystem", "SetupJoinRequest");

	Params::OnlineActivitySubsystem_SetupJoinRequest Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineMatchSubsystem.IsEnableOnlineSinglePlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineMatchSubsystem::IsEnableOnlineSinglePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineMatchSubsystem", "IsEnableOnlineSinglePlay");

	Params::OnlineMatchSubsystem_IsEnableOnlineSinglePlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineMatchSubsystem.ClearLocalUser
// (Final, Native, Public, BlueprintCallable)

void UOnlineMatchSubsystem::ClearLocalUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "ClearLocalUser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineMatchSubsystem.OnCheckNetworkOnlineComplete
// (Final, Native, Private)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RequestData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ResponseData                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineMatchSubsystem::OnCheckNetworkOnlineComplete(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "OnCheckNetworkOnlineComplete");

	Params::OnlineMatchSubsystem_OnCheckNetworkOnlineComplete Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineMatchSubsystem.SetHostLocalUser
// (Final, Native, Public, BlueprintCallable)

void UOnlineMatchSubsystem::SetHostLocalUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "SetHostLocalUser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineMatchSubsystem.SetHostRemoteUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineMatchSubsystem::SetHostRemoteUser(const struct FUniqueNetIdRepl& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "SetHostRemoteUser");

	Params::OnlineMatchSubsystem_SetHostRemoteUser Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineMatchSubsystem.SetupLocalUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FUniqueNetIdRepl&          LocalUserId                                            (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineMatchSubsystem::SetupLocalUser(const struct FUniqueNetIdRepl& LocalUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "SetupLocalUser");

	Params::OnlineMatchSubsystem_SetupLocalUser Parms{};

	Parms.LocalUserId = std::move(LocalUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.OnlineMatchSubsystem.ShutdownMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineMatchSubsystem::ShutdownMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "ShutdownMatch");

	Params::OnlineMatchSubsystem_ShutdownMatch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineMatchSubsystem.GetOnlineConnectPeerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineMatchSubsystem::GetOnlineConnectPeerCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "GetOnlineConnectPeerCount");

	Params::OnlineMatchSubsystem_GetOnlineConnectPeerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineMatchSubsystem.GetOnlineIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineMatchSubsystem::GetOnlineIndex(const struct FUniqueNetIdRepl& UserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "GetOnlineIndex");

	Params::OnlineMatchSubsystem_GetOnlineIndex Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineMatchSubsystem.GetOnlineIndexToPeerUserId
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   OnlineIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UOnlineMatchSubsystem::GetOnlineIndexToPeerUserId(int32 OnlineIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "GetOnlineIndexToPeerUserId");

	Params::OnlineMatchSubsystem_GetOnlineIndexToPeerUserId Parms{};

	Parms.OnlineIndex = OnlineIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.OnlineMatchSubsystem.IsSetupLocalUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineMatchSubsystem::IsSetupLocalUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineMatchSubsystem", "IsSetupLocalUser");

	Params::OnlineMatchSubsystem_IsSetupLocalUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.P2PConnectionSubsystem.ClientTimeoutCheckStart
// (Final, Native, Public, BlueprintCallable)

void UP2PConnectionSubsystem::ClientTimeoutCheckStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P2PConnectionSubsystem", "ClientTimeoutCheckStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.P2PConnectionSubsystem.EndConnect
// (Final, Native, Public, BlueprintCallable)

void UP2PConnectionSubsystem::EndConnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P2PConnectionSubsystem", "EndConnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.P2PConnectionSubsystem.OnUpdateLobbyComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyOperationResult&     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UP2PConnectionSubsystem::OnUpdateLobbyComplete(bool bSuccessful, const struct FLobbyOperationResult& Result, TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P2PConnectionSubsystem", "OnUpdateLobbyComplete");

	Params::P2PConnectionSubsystem_OnUpdateLobbyComplete Parms{};

	Parms.bSuccessful = bSuccessful;
	Parms.Result = std::move(Result);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.P2PConnectionSubsystem.StartConnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsHost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsResend                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UP2PConnectionSubsystem::StartConnect(bool bIsHost, bool bIsResend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P2PConnectionSubsystem", "StartConnect");

	Params::P2PConnectionSubsystem_StartConnect Parms{};

	Parms.bIsHost = bIsHost;
	Parms.bIsResend = bIsResend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlatformPrivilegeObject.RequestStart
// (Final, Native, Public, BlueprintCallable)

void APlatformPrivilegeObject::RequestStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformPrivilegeObject", "RequestStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlatformPrivilegeObject.IsEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APlatformPrivilegeObject::IsEnd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformPrivilegeObject", "IsEnd");

	Params::PlatformPrivilegeObject_IsEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlatformPrivilegeObject.IsSuccess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APlatformPrivilegeObject::IsSuccess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformPrivilegeObject", "IsSuccess");

	Params::PlatformPrivilegeObject_IsSuccess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlatformStoreMessageDataAsset.GetPlatformStoreButtonText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText*                            AcceptText                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText*                            CancelText                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UPlatformStoreMessageDataAsset::GetPlatformStoreButtonText(class FText* AcceptText, class FText* CancelText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformStoreMessageDataAsset", "GetPlatformStoreButtonText");

	Params::PlatformStoreMessageDataAsset_GetPlatformStoreButtonText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AcceptText != nullptr)
		*AcceptText = std::move(Parms.AcceptText);

	if (CancelText != nullptr)
		*CancelText = std::move(Parms.CancelText);
}


// Function UnionSystem.PlatformStoreMessageDataAsset.GetCurrentPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlatformStoreType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatformStoreType UPlatformStoreMessageDataAsset::GetCurrentPlatform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformStoreMessageDataAsset", "GetCurrentPlatform");

	Params::PlatformStoreMessageDataAsset_GetCurrentPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlatformStoreMessageDataAsset.GetPlatformStoreButtonMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlatformStoreMessageDataAsset::GetPlatformStoreButtonMessage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformStoreMessageDataAsset", "GetPlatformStoreButtonMessage");

	Params::PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlatformStoreMessageDataAsset.GetPlatformStoreMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlatformStoreType                      PlatformType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlatformStoreMessageDataAsset::GetPlatformStoreMessage(EPlatformStoreType PlatformType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformStoreMessageDataAsset", "GetPlatformStoreMessage");

	Params::PlatformStoreMessageDataAsset_GetPlatformStoreMessage Parms{};

	Parms.PlatformType = PlatformType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlatformUIUtilityLibrary.GetPlatformControllerWidgetClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EUnionControllerType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionPlatform                          Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>*         OutClass                                               (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformUIUtilityLibrary::GetPlatformControllerWidgetClass(EUnionControllerType Type, EUnionPlatform Platform, TSubclassOf<class UUserWidget>* OutClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlatformUIUtilityLibrary", "GetPlatformControllerWidgetClass");

	Params::PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass Parms{};

	Parms.Type = Type;
	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClass != nullptr)
		*OutClass = Parms.OutClass;
}


// Function UnionSystem.PlayerNameInterface.SetCOMIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCom                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetCOMIF(bool IsCom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetCOMIF");

	Params::PlayerNameInterface_SetCOMIF Parms{};

	Parms.IsCom = IsCom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetCrossPlayIconIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECrossplayPlatform                      CrossplayType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetCrossPlayIconIF(ECrossplayPlatform CrossplayType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetCrossPlayIconIF");

	Params::PlayerNameInterface_SetCrossPlayIconIF Parms{};

	Parms.CrossplayType = CrossplayType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetGroupIndexIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetGroupIndexIF(bool IsGroup, int32 GroupIndex, bool IsForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetGroupIndexIF");

	Params::PlayerNameInterface_SetGroupIndexIF Parms{};

	Parms.IsGroup = IsGroup;
	Parms.GroupIndex = GroupIndex;
	Parms.IsForce = IsForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetNameIF
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetNameIF(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetNameIF");

	Params::PlayerNameInterface_SetNameIF Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetOnlineIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRival                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetOnlineIF(bool IsRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetOnlineIF");

	Params::PlayerNameInterface_SetOnlineIF Parms{};

	Parms.IsRival = IsRival;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetPlayerIndexIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLocalPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetPlayerIndexIF(bool IsLocalPlayer, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetPlayerIndexIF");

	Params::PlayerNameInterface_SetPlayerIndexIF Parms{};

	Parms.IsLocalPlayer = IsLocalPlayer;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetRankIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetRankIF(int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetRankIF");

	Params::PlayerNameInterface_SetRankIF Parms{};

	Parms.Rank = Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetReaderIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetReaderIF(bool IsReader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetReaderIF");

	Params::PlayerNameInterface_SetReaderIF Parms{};

	Parms.IsReader = IsReader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlayerNameInterface.SetRivalIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRival                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPowerRival                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPlayerNameInterface::SetRivalIF(bool IsRival, bool IsPowerRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PlayerNameInterface", "SetRivalIF");

	Params::PlayerNameInterface_SetRivalIF Parms{};

	Parms.IsRival = IsRival;
	Parms.IsPowerRival = IsPowerRival;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlaylogHelper.CRM_GetUserInfoString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlaylogHelper::CRM_GetUserInfoString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_GetUserInfoString");

	Params::PlaylogHelper_CRM_GetUserInfoString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_KickStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool Result)>            Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlaylogHelper::CRM_KickStart(TDelegate<void(bool Result)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_KickStart");

	Params::PlaylogHelper_CRM_KickStart Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlaylogHelper.CRM_MakeRandomFloatArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UPlaylogHelper::CRM_MakeRandomFloatArray(int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_MakeRandomFloatArray");

	Params::PlaylogHelper_CRM_MakeRandomFloatArray Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_MakeRandomIntegerArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlaylogHelper::CRM_MakeRandomIntegerArray(int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_MakeRandomIntegerArray");

	Params::PlaylogHelper_CRM_MakeRandomIntegerArray Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutBaseMachine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_BaseMachine&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutBaseMachine(const struct FCRM_BaseMachine& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutBaseMachine");

	Params::PlaylogHelper_CRM_PutBaseMachine Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutChallenge
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Challenge&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutChallenge(const struct FCRM_Challenge& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutChallenge");

	Params::PlaylogHelper_CRM_PutChallenge Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Character&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutCharacter(const struct FCRM_Character& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutCharacter");

	Params::PlaylogHelper_CRM_PutCharacter Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutCondition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Condition&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutCondition(const struct FCRM_Condition& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutCondition");

	Params::PlaylogHelper_CRM_PutCondition Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutConnection
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Connection&           Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutConnection(const struct FCRM_Connection& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutConnection");

	Params::PlaylogHelper_CRM_PutConnection Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutConnectionError
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_ConnectionError&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutConnectionError(const struct FCRM_ConnectionError& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutConnectionError");

	Params::PlaylogHelper_CRM_PutConnectionError Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutCustomMachineParts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_CustomMachineParts&   Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutCustomMachineParts(const struct FCRM_CustomMachineParts& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutCustomMachineParts");

	Params::PlaylogHelper_CRM_PutCustomMachineParts Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutCustomMachinePartsSpot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_CustomMachinePartsSpot&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutCustomMachinePartsSpot(const struct FCRM_CustomMachinePartsSpot& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutCustomMachinePartsSpot");

	Params::PlaylogHelper_CRM_PutCustomMachinePartsSpot Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutDlc
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Dlc&                  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutDlc(const struct FCRM_Dlc& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutDlc");

	Params::PlaylogHelper_CRM_PutDlc Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutEventFesta
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_EventFesta&           Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutEventFesta(const struct FCRM_EventFesta& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutEventFesta");

	Params::PlaylogHelper_CRM_PutEventFesta Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutEventLegend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_EventLegend&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutEventLegend(const struct FCRM_EventLegend& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutEventLegend");

	Params::PlaylogHelper_CRM_PutEventLegend Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutFriendMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_FriendMatch&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutFriendMatch(const struct FCRM_FriendMatch& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutFriendMatch");

	Params::PlaylogHelper_CRM_PutFriendMatch Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutGadgetPossession
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_GadgetPossession&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutGadgetPossession(const struct FCRM_GadgetPossession& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutGadgetPossession");

	Params::PlaylogHelper_CRM_PutGadgetPossession Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutGadgetUsage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_GadgetUsage&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutGadgetUsage(const struct FCRM_GadgetUsage& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutGadgetUsage");

	Params::PlaylogHelper_CRM_PutGadgetUsage Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutGameLogin
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_GameLogin&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutGameLogin(const struct FCRM_GameLogin& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutGameLogin");

	Params::PlaylogHelper_CRM_PutGameLogin Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutGhost
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Ghost&                Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutGhost(const struct FCRM_Ghost& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutGhost");

	Params::PlaylogHelper_CRM_PutGhost Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutGrandprix
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Grandprix&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutGrandprix(const struct FCRM_Grandprix& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutGrandprix");

	Params::PlaylogHelper_CRM_PutGrandprix Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutLobbyBasic
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_LobbyBasic&           Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutLobbyBasic(const struct FCRM_LobbyBasic& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutLobbyBasic");

	Params::PlaylogHelper_CRM_PutLobbyBasic Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutLobbyInvite
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_LobbyInvite&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutLobbyInvite(const struct FCRM_LobbyInvite& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutLobbyInvite");

	Params::PlaylogHelper_CRM_PutLobbyInvite Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutLobbyStage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_LobbyStage&           Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutLobbyStage(const struct FCRM_LobbyStage& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutLobbyStage");

	Params::PlaylogHelper_CRM_PutLobbyStage Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutLobbyStamp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_LobbyStamp&           Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutLobbyStamp(const struct FCRM_LobbyStamp& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutLobbyStamp");

	Params::PlaylogHelper_CRM_PutLobbyStamp Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutMatchingRaceStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_MatchingRaceStart&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutMatchingRaceStart(const struct FCRM_MatchingRaceStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutMatchingRaceStart");

	Params::PlaylogHelper_CRM_PutMatchingRaceStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutMatchingRegistration
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_MatchingRegistration& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutMatchingRegistration(const struct FCRM_MatchingRegistration& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutMatchingRegistration");

	Params::PlaylogHelper_CRM_PutMatchingRegistration Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutMatchingResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_MatchingResult&       Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutMatchingResult(const struct FCRM_MatchingResult& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutMatchingResult");

	Params::PlaylogHelper_CRM_PutMatchingResult Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutParty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Party&                Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutParty(const struct FCRM_Party& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutParty");

	Params::PlaylogHelper_CRM_PutParty Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutProgressGrandprix
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_ProgressGrandprix&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutProgressGrandprix(const struct FCRM_ProgressGrandprix& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutProgressGrandprix");

	Params::PlaylogHelper_CRM_PutProgressGrandprix Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutProgressParty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_ProgressParty&        Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutProgressParty(const struct FCRM_ProgressParty& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutProgressParty");

	Params::PlaylogHelper_CRM_PutProgressParty Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutProgressRival
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_ProgressRival&        Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutProgressRival(const struct FCRM_ProgressRival& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutProgressRival");

	Params::PlaylogHelper_CRM_PutProgressRival Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutProgressRivalTeam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_ProgressRivalTeam&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutProgressRivalTeam(const struct FCRM_ProgressRivalTeam& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutProgressRivalTeam");

	Params::PlaylogHelper_CRM_PutProgressRivalTeam Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRaceLog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RaceLog&              Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRaceLog(const struct FCRM_RaceLog& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRaceLog");

	Params::PlaylogHelper_CRM_PutRaceLog Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjCom
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjCom&              Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjCom(const struct FCRM_RadjCom& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjCom");

	Params::PlaylogHelper_CRM_PutRadjCom Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAccelOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataAccelOff&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataAccelOff(const struct FCRM_RadjDataAccelOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataAccelOff");

	Params::PlaylogHelper_CRM_PutRadjDataAccelOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAccelOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataAccelOn&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataAccelOn(const struct FCRM_RadjDataAccelOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataAccelOn");

	Params::PlaylogHelper_CRM_PutRadjDataAccelOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAirtrickEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataAirtrickEnd&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataAirtrickEnd(const struct FCRM_RadjDataAirtrickEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataAirtrickEnd");

	Params::PlaylogHelper_CRM_PutRadjDataAirtrickEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAirtrickStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataAirtrickStart&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataAirtrickStart(const struct FCRM_RadjDataAirtrickStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataAirtrickStart");

	Params::PlaylogHelper_CRM_PutRadjDataAirtrickStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBackEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBackEnd&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBackEnd(const struct FCRM_RadjDataBackEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBackEnd");

	Params::PlaylogHelper_CRM_PutRadjDataBackEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBackStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBackStart&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBackStart(const struct FCRM_RadjDataBackStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBackStart");

	Params::PlaylogHelper_CRM_PutRadjDataBackStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitAssistWall
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBodyHitAssistWall&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBodyHitAssistWall(const struct FCRM_RadjDataBodyHitAssistWall& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBodyHitAssistWall");

	Params::PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitIrregular
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBodyHitIrregular&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBodyHitIrregular(const struct FCRM_RadjDataBodyHitIrregular& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBodyHitIrregular");

	Params::PlaylogHelper_CRM_PutRadjDataBodyHitIrregular Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitMachine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBodyHitMachine&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBodyHitMachine(const struct FCRM_RadjDataBodyHitMachine& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBodyHitMachine");

	Params::PlaylogHelper_CRM_PutRadjDataBodyHitMachine Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBodyHitObject&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBodyHitObject(const struct FCRM_RadjDataBodyHitObject& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBodyHitObject");

	Params::PlaylogHelper_CRM_PutRadjDataBodyHitObject Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitWall
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBodyHitWall&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBodyHitWall(const struct FCRM_RadjDataBodyHitWall& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBodyHitWall");

	Params::PlaylogHelper_CRM_PutRadjDataBodyHitWall Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostAbsorbEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBoostAbsorbEnd&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBoostAbsorbEnd(const struct FCRM_RadjDataBoostAbsorbEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBoostAbsorbEnd");

	Params::PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostAbsorbEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBoostAbsorbEntry&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBoostAbsorbEntry(const struct FCRM_RadjDataBoostAbsorbEntry& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBoostAbsorbEntry");

	Params::PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostRingMinus
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBoostRingMinus&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBoostRingMinus(const struct FCRM_RadjDataBoostRingMinus& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBoostRingMinus");

	Params::PlaylogHelper_CRM_PutRadjDataBoostRingMinus Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostRingPlus
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBoostRingPlus&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBoostRingPlus(const struct FCRM_RadjDataBoostRingPlus& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBoostRingPlus");

	Params::PlaylogHelper_CRM_PutRadjDataBoostRingPlus Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostSlipstreamEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBoostSlipstreamEnd&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBoostSlipstreamEnd(const struct FCRM_RadjDataBoostSlipstreamEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBoostSlipstreamEnd");

	Params::PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostSlipstreamStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBoostSlipstreamStart&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBoostSlipstreamStart(const struct FCRM_RadjDataBoostSlipstreamStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBoostSlipstreamStart");

	Params::PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBrakeOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBrakeOff&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBrakeOff(const struct FCRM_RadjDataBrakeOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBrakeOff");

	Params::PlaylogHelper_CRM_PutRadjDataBrakeOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBrakeOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataBrakeOn&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataBrakeOn(const struct FCRM_RadjDataBrakeOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataBrakeOn");

	Params::PlaylogHelper_CRM_PutRadjDataBrakeOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataCheckPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataCheckPoint&   Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataCheckPoint(const struct FCRM_RadjDataCheckPoint& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataCheckPoint");

	Params::PlaylogHelper_CRM_PutRadjDataCheckPoint Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataDriftOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataDriftOff&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataDriftOff(const struct FCRM_RadjDataDriftOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataDriftOff");

	Params::PlaylogHelper_CRM_PutRadjDataDriftOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataDriftOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataDriftOn&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataDriftOn(const struct FCRM_RadjDataDriftOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataDriftOn");

	Params::PlaylogHelper_CRM_PutRadjDataDriftOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataEventsOnline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataEventsOnline& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataEventsOnline(const struct FCRM_RadjDataEventsOnline& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataEventsOnline");

	Params::PlaylogHelper_CRM_PutRadjDataEventsOnline Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataFinish&       Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataFinish(const struct FCRM_RadjDataFinish& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataFinish");

	Params::PlaylogHelper_CRM_PutRadjDataFinish Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataFrameRateBoostingEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataFrameRateBoostingEnd&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataFrameRateBoostingEnd(const struct FCRM_RadjDataFrameRateBoostingEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataFrameRateBoostingEnd");

	Params::PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataFrameRateBoostingStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataFrameRateBoostingStart&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataFrameRateBoostingStart(const struct FCRM_RadjDataFrameRateBoostingStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataFrameRateBoostingStart");

	Params::PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGameHighLoadingEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataGameHighLoadingEnd&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataGameHighLoadingEnd(const struct FCRM_RadjDataGameHighLoadingEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataGameHighLoadingEnd");

	Params::PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGameHighLoadingStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataGameHighLoadingStart&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataGameHighLoadingStart(const struct FCRM_RadjDataGameHighLoadingStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataGameHighLoadingStart");

	Params::PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGuideJumpEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataGuideJumpEnd& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataGuideJumpEnd(const struct FCRM_RadjDataGuideJumpEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataGuideJumpEnd");

	Params::PlaylogHelper_CRM_PutRadjDataGuideJumpEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGuideJumpStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataGuideJumpStart&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataGuideJumpStart(const struct FCRM_RadjDataGuideJumpStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataGuideJumpStart");

	Params::PlaylogHelper_CRM_PutRadjDataGuideJumpStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataItemEnd&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataItemEnd(const struct FCRM_RadjDataItemEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataItemEnd");

	Params::PlaylogHelper_CRM_PutRadjDataItemEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemGet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataItemGet&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataItemGet(const struct FCRM_RadjDataItemGet& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataItemGet");

	Params::PlaylogHelper_CRM_PutRadjDataItemGet Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemHitMachine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataItemHitMachine&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataItemHitMachine(const struct FCRM_RadjDataItemHitMachine& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataItemHitMachine");

	Params::PlaylogHelper_CRM_PutRadjDataItemHitMachine Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataItemStart&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataItemStart(const struct FCRM_RadjDataItemStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataItemStart");

	Params::PlaylogHelper_CRM_PutRadjDataItemStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataJumpEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataJumpEnd&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataJumpEnd(const struct FCRM_RadjDataJumpEnd& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataJumpEnd");

	Params::PlaylogHelper_CRM_PutRadjDataJumpEnd Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataJumpStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataJumpStart&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataJumpStart(const struct FCRM_RadjDataJumpStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataJumpStart");

	Params::PlaylogHelper_CRM_PutRadjDataJumpStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataLap
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataLap&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataLap(const struct FCRM_RadjDataLap& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataLap");

	Params::PlaylogHelper_CRM_PutRadjDataLap Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataMisalignment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataMisalignment& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataMisalignment(const struct FCRM_RadjDataMisalignment& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataMisalignment");

	Params::PlaylogHelper_CRM_PutRadjDataMisalignment Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataOvertake
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataOvertake&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataOvertake(const struct FCRM_RadjDataOvertake& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataOvertake");

	Params::PlaylogHelper_CRM_PutRadjDataOvertake Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataOvertaken
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataOvertaken&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataOvertaken(const struct FCRM_RadjDataOvertaken& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataOvertaken");

	Params::PlaylogHelper_CRM_PutRadjDataOvertaken Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataPositionsOnline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataPositionsOnline&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataPositionsOnline(const struct FCRM_RadjDataPositionsOnline& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataPositionsOnline");

	Params::PlaylogHelper_CRM_PutRadjDataPositionsOnline Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRankdown
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataRankdown&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataRankdown(const struct FCRM_RadjDataRankdown& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataRankdown");

	Params::PlaylogHelper_CRM_PutRadjDataRankdown Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRankup
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataRankup&       Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataRankup(const struct FCRM_RadjDataRankup& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataRankup");

	Params::PlaylogHelper_CRM_PutRadjDataRankup Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRearViewOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataRearViewOff&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataRearViewOff(const struct FCRM_RadjDataRearViewOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataRearViewOff");

	Params::PlaylogHelper_CRM_PutRadjDataRearViewOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRearViewOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataRearViewOn&   Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataRearViewOn(const struct FCRM_RadjDataRearViewOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataRearViewOn");

	Params::PlaylogHelper_CRM_PutRadjDataRearViewOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRedStarRing
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataRedStarRing&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataRedStarRing(const struct FCRM_RadjDataRedStarRing& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataRedStarRing");

	Params::PlaylogHelper_CRM_PutRadjDataRedStarRing Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRespot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataRespot&       Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataRespot(const struct FCRM_RadjDataRespot& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataRespot");

	Params::PlaylogHelper_CRM_PutRadjDataRespot Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataShortCutRing
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataShortCutRing& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataShortCutRing(const struct FCRM_RadjDataShortCutRing& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataShortCutRing");

	Params::PlaylogHelper_CRM_PutRadjDataShortCutRing Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataShortWarp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataShortWarp&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataShortWarp(const struct FCRM_RadjDataShortWarp& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataShortWarp");

	Params::PlaylogHelper_CRM_PutRadjDataShortWarp Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataStart&        Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataStart(const struct FCRM_RadjDataStart& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataStart");

	Params::PlaylogHelper_CRM_PutRadjDataStart Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataStartDash
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataStartDash&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataStartDash(const struct FCRM_RadjDataStartDash& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataStartDash");

	Params::PlaylogHelper_CRM_PutRadjDataStartDash Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerDownOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerDownOff& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerDownOff(const struct FCRM_RadjDataSteerDownOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerDownOff");

	Params::PlaylogHelper_CRM_PutRadjDataSteerDownOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerDownOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerDownOn&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerDownOn(const struct FCRM_RadjDataSteerDownOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerDownOn");

	Params::PlaylogHelper_CRM_PutRadjDataSteerDownOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerLeftOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerLeftOff& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerLeftOff(const struct FCRM_RadjDataSteerLeftOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerLeftOff");

	Params::PlaylogHelper_CRM_PutRadjDataSteerLeftOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerLeftOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerLeftOn&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerLeftOn(const struct FCRM_RadjDataSteerLeftOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerLeftOn");

	Params::PlaylogHelper_CRM_PutRadjDataSteerLeftOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerRightOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerRightOff&Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerRightOff(const struct FCRM_RadjDataSteerRightOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerRightOff");

	Params::PlaylogHelper_CRM_PutRadjDataSteerRightOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerRightOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerRightOn& Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerRightOn(const struct FCRM_RadjDataSteerRightOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerRightOn");

	Params::PlaylogHelper_CRM_PutRadjDataSteerRightOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerUpOff
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerUpOff&   Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerUpOff(const struct FCRM_RadjDataSteerUpOff& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerUpOff");

	Params::PlaylogHelper_CRM_PutRadjDataSteerUpOff Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerUpOn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataSteerUpOn&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataSteerUpOn(const struct FCRM_RadjDataSteerUpOn& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataSteerUpOn");

	Params::PlaylogHelper_CRM_PutRadjDataSteerUpOn Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataWiden
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataWiden&        Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataWiden(const struct FCRM_RadjDataWiden& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataWiden");

	Params::PlaylogHelper_CRM_PutRadjDataWiden Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataWidened
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjDataWidened&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjDataWidened(const struct FCRM_RadjDataWidened& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjDataWidened");

	Params::PlaylogHelper_CRM_PutRadjDataWidened Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjLocalPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjLocalPlayer&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjLocalPlayer(const struct FCRM_RadjLocalPlayer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjLocalPlayer");

	Params::PlaylogHelper_CRM_PutRadjLocalPlayer Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjMachine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjMachine&          Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjMachine(const struct FCRM_RadjMachine& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjMachine");

	Params::PlaylogHelper_CRM_PutRadjMachine Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjOnlinePlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjOnlinePlayer&     Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjOnlinePlayer(const struct FCRM_RadjOnlinePlayer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjOnlinePlayer");

	Params::PlaylogHelper_CRM_PutRadjOnlinePlayer Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutRadjRaceSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_RadjRaceSetting&      Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutRadjRaceSetting(const struct FCRM_RadjRaceSetting& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutRadjRaceSetting");

	Params::PlaylogHelper_CRM_PutRadjRaceSetting Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutSequence
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_Sequence&             Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutSequence(const struct FCRM_Sequence& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutSequence");

	Params::PlaylogHelper_CRM_PutSequence Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutSubMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_SubMode&              Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutSubMode(const struct FCRM_SubMode& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutSubMode");

	Params::PlaylogHelper_CRM_PutSubMode Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutTimeTrial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_TimeTrial&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutTimeTrial(const struct FCRM_TimeTrial& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutTimeTrial");

	Params::PlaylogHelper_CRM_PutTimeTrial Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_PutWorldMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FCRM_WorldMatch&           Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_PutWorldMatch(const struct FCRM_WorldMatch& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_PutWorldMatch");

	Params::PlaylogHelper_CRM_PutWorldMatch Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_SetInactive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_SetInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetInactive");

	Params::PlaylogHelper_CRM_SetInactive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_SetMessageSendingSuppress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_SetMessageSendingSuppress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetMessageSendingSuppress");

	Params::PlaylogHelper_CRM_SetMessageSendingSuppress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_SetOutfocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_SetOutfocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetOutfocus");

	Params::PlaylogHelper_CRM_SetOutfocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_SetPushMessageCallback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const class FString& Message)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_SetPushMessageCallback(TDelegate<void(const class FString& Message)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetPushMessageCallback");

	Params::PlaylogHelper_CRM_SetPushMessageCallback Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_SetRestrictionInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlaylogHelper::CRM_SetRestrictionInteger(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetRestrictionInteger");

	Params::PlaylogHelper_CRM_SetRestrictionInteger Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlaylogHelper.CRM_SetRestrictionString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlaylogHelper::CRM_SetRestrictionString(class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetRestrictionString");

	Params::PlaylogHelper_CRM_SetRestrictionString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function UnionSystem.PlaylogHelper.CRM_SetSuspended
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_SetSuspended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_SetSuspended");

	Params::PlaylogHelper_CRM_SetSuspended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_TestInactive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_TestInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_TestInactive");

	Params::PlaylogHelper_CRM_TestInactive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_TestMessageSendingSuppress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_TestMessageSendingSuppress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_TestMessageSendingSuppress");

	Params::PlaylogHelper_CRM_TestMessageSendingSuppress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_TestOutfocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_TestOutfocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_TestOutfocus");

	Params::PlaylogHelper_CRM_TestOutfocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_TestSuspended
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_TestSuspended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_TestSuspended");

	Params::PlaylogHelper_CRM_TestSuspended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_UnsetInactive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_UnsetInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_UnsetInactive");

	Params::PlaylogHelper_CRM_UnsetInactive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_UnsetMessageSendingSuppress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_UnsetMessageSendingSuppress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_UnsetMessageSendingSuppress");

	Params::PlaylogHelper_CRM_UnsetMessageSendingSuppress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_UnsetOutfocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_UnsetOutfocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_UnsetOutfocus");

	Params::PlaylogHelper_CRM_UnsetOutfocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogHelper.CRM_UnsetSuspended
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlaylogHelper::CRM_UnsetSuspended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlaylogHelper", "CRM_UnsetSuspended");

	Params::PlaylogHelper_CRM_UnsetSuspended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.PlaylogManager.OnId
// (Final, Native, Private)
// Parameters:
// const class FString&                    AccountID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlaylogManager::OnId(const class FString& AccountID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlaylogManager", "OnId");

	Params::PlaylogManager_OnId Parms{};

	Parms.AccountID = std::move(AccountID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlaylogManager.OnUrl
// (Final, Native, Private)
// Parameters:
// const class FString&                    RegistrationURL                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlaylogManager::OnUrl(const class FString& RegistrationURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlaylogManager", "OnUrl");

	Params::PlaylogManager_OnUrl Parms{};

	Parms.RegistrationURL = std::move(RegistrationURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.PlaylogManager.SteamOnSetupComplete
// (Final, Native, Private)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlaylogManager::SteamOnSetupComplete(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlaylogManager", "SteamOnSetupComplete");

	Params::PlaylogManager_SteamOnSetupComplete Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ProceduralMeshComponentEx.ClearAllMeshSections
// (Final, Native, Public, BlueprintCallable)

void UProceduralMeshComponentEx::ClearAllMeshSections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralMeshComponentEx", "ClearAllMeshSections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ProceduralMeshComponentEx.ClearMeshSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SectionIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProceduralMeshComponentEx::ClearMeshSection(int32 SectionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralMeshComponentEx", "ClearMeshSection");

	Params::ProceduralMeshComponentEx_ClearMeshSection Parms{};

	Parms.SectionIndex = SectionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ProceduralMeshComponentEx.SetMeshSectionVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SectionIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewVisibility                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProceduralMeshComponentEx::SetMeshSectionVisible(int32 SectionIndex, bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralMeshComponentEx", "SetMeshSectionVisible");

	Params::ProceduralMeshComponentEx_SetMeshSectionVisible Parms{};

	Parms.SectionIndex = SectionIndex;
	Parms.bNewVisibility = bNewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ProceduralMeshComponentEx.GetNumSections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UProceduralMeshComponentEx::GetNumSections() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralMeshComponentEx", "GetNumSections");

	Params::ProceduralMeshComponentEx_GetNumSections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ProceduralMeshComponentEx.IsMeshSectionVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SectionIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProceduralMeshComponentEx::IsMeshSectionVisible(int32 SectionIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralMeshComponentEx", "IsMeshSectionVisible");

	Params::ProceduralMeshComponentEx_IsMeshSectionVisible Parms{};

	Parms.SectionIndex = SectionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ProjectDecal.Clear
// (Final, Native, Public, BlueprintCallable)

void UProjectDecal::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectDecal", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ProjectDecal.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaterialIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UStaticMeshComponent*       Projected                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectDecal::Initialize(int32 Width, int32 Height, int32 MaterialIndex, const class UStaticMeshComponent* Projected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectDecal", "Initialize");

	Params::ProjectDecal_Initialize Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.MaterialIndex = MaterialIndex;
	Parms.Projected = Projected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.ProjectDecal.Project
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaterialIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UStaticMeshComponent*       Projected                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UStaticMeshComponent*       Projector                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTexture2D*                 Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Overwrite                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UProjectDecal::Project(int32 Width, int32 Height, int32 MaterialIndex, const class UStaticMeshComponent* Projected, const class UStaticMeshComponent* Projector, const class UTexture2D* Texture, bool Overwrite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectDecal", "Project");

	Params::ProjectDecal_Project Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.MaterialIndex = MaterialIndex;
	Parms.Projected = Projected;
	Parms.Projector = Projector;
	Parms.Texture = Texture;
	Parms.Overwrite = Overwrite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RaceInputRecieveInterface.OnAccelInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnAccelInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnAccelInput");

	Params::RaceInputRecieveInterface_OnAccelInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnBrakeInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnBrakeInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnBrakeInput");

	Params::RaceInputRecieveInterface_OnBrakeInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnDriftPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnDriftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnDriftPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnDriftReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnDriftReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnDriftReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnEmotePressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnEmotePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnEmotePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnEmoteReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnEmoteReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnEmoteReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnHornPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnHornPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnHornPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnHornReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnHornReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnHornReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnPausePressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnPausePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnPausePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnPauseReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnPauseReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnPauseReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnPitchInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnPitchInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnPitchInput");

	Params::RaceInputRecieveInterface_OnPitchInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnRearViewPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnRearViewPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnRearViewPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnRearViewReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnRearViewReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnRearViewReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnSlimeCancelXInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnSlimeCancelXInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnSlimeCancelXInput");

	Params::RaceInputRecieveInterface_OnSlimeCancelXInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnSlimeCancelYInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnSlimeCancelYInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnSlimeCancelYInput");

	Params::RaceInputRecieveInterface_OnSlimeCancelYInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnSteerInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnSteerInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnSteerInput");

	Params::RaceInputRecieveInterface_OnSteerInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnTradeItemPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnTradeItemPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnTradeItemPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnTradeItemReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnTradeItemReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnTradeItemReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnTrickX2Input
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnTrickX2Input(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnTrickX2Input");

	Params::RaceInputRecieveInterface_OnTrickX2Input Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnTrickXInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnTrickXInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnTrickXInput");

	Params::RaceInputRecieveInterface_OnTrickXInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnTrickY2Input
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnTrickY2Input(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnTrickY2Input");

	Params::RaceInputRecieveInterface_OnTrickY2Input Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnTrickYInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IRaceInputRecieveInterface::OnTrickYInput(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnTrickYInput");

	Params::RaceInputRecieveInterface_OnTrickYInput Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnUseItemPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnUseItemPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnUseItemPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceInputRecieveInterface.OnUseItemReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IRaceInputRecieveInterface::OnUseItemReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RaceInputRecieveInterface", "OnUseItemReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RaceMasterDataAccessor.Initialize
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URaceMasterDataAccessor::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceMasterDataAccessor", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionSystem.RaceMasterDataAccessor.GetRunData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERaceRunDataType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* URaceMasterDataAccessor::GetRunData(ERaceRunDataType Type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceMasterDataAccessor", "GetRunData");

	Params::RaceMasterDataAccessor_GetRunData Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RacePlayerController.DoInputRacePressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERaceInputKey                           InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARacePlayerController::DoInputRacePressed(ERaceInputKey InKey, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacePlayerController", "DoInputRacePressed");

	Params::RacePlayerController_DoInputRacePressed Parms{};

	Parms.InKey = InKey;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RacePlayerController.DoInputRaceReleased
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERaceInputKey                           InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARacePlayerController::DoInputRaceReleased(ERaceInputKey InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacePlayerController", "DoInputRaceReleased");

	Params::RacePlayerController_DoInputRaceReleased Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RacePlayerController.SetSubMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERacePlayerControllerSubMode            InSubMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARacePlayerController::SetSubMode(ERacePlayerControllerSubMode InSubMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacePlayerController", "SetSubMode");

	Params::RacePlayerController_SetSubMode Parms{};

	Parms.InSubMode = InSubMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.RacePlayerController.GetSubMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERacePlayerControllerSubMode            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERacePlayerControllerSubMode ARacePlayerController::GetSubMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacePlayerController", "GetSubMode");

	Params::RacePlayerController_GetSubMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RacePlayerController.IsRaceInputEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARacePlayerController::IsRaceInputEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacePlayerController", "IsRaceInputEnabled");

	Params::RacePlayerController_IsRaceInputEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RankingSubsystem.GetRankingFestaPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilePathFull                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, const struct FRankingDataFestaPointList& RankDataList)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URankingSubsystem::GetRankingFestaPoint(const class FString& FilePathFull, TDelegate<void(bool bWasSuccessful, const struct FRankingDataFestaPointList& RankDataList)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankingSubsystem", "GetRankingFestaPoint");

	Params::RankingSubsystem_GetRankingFestaPoint Parms{};

	Parms.FilePathFull = std::move(FilePathFull);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RankingSubsystem.GetRankingLegendCompe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilePathFull                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, const struct FRankingDataLegendCompeList& RankDataList)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URankingSubsystem::GetRankingLegendCompe(const class FString& FilePathFull, TDelegate<void(bool bWasSuccessful, const struct FRankingDataLegendCompeList& RankDataList)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankingSubsystem", "GetRankingLegendCompe");

	Params::RankingSubsystem_GetRankingLegendCompe Parms{};

	Parms.FilePathFull = std::move(FilePathFull);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RankingSubsystem.GetRankingRankMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilePathFull                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, const struct FRankingDataRankMatchList& RankDataList)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URankingSubsystem::GetRankingRankMatch(const class FString& FilePathFull, TDelegate<void(bool bWasSuccessful, const struct FRankingDataRankMatchList& RankDataList)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankingSubsystem", "GetRankingRankMatch");

	Params::RankingSubsystem_GetRankingRankMatch Parms{};

	Parms.FilePathFull = std::move(FilePathFull);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.RankingSubsystem.GetRankingTimeTrial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilePathFull                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, const struct FRankingDataTimeTrialList& RankDataList)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URankingSubsystem::GetRankingTimeTrial(const class FString& FilePathFull, TDelegate<void(bool bWasSuccessful, const struct FRankingDataTimeTrialList& RankDataList)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RankingSubsystem", "GetRankingTimeTrial");

	Params::RankingSubsystem_GetRankingTimeTrial Parms{};

	Parms.FilePathFull = std::move(FilePathFull);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ResponseCodeHttp.IsOkProper
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UResponseCodeHttp::IsOkProper(int32 ResponseCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ResponseCodeHttp", "IsOkProper");

	Params::ResponseCodeHttp_IsOkProper Parms{};

	Parms.ResponseCode = ResponseCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.EndAutoSavingAnimation
// (Final, Native, Private, BlueprintCallable)

void USaveDataManageSubsystem::EndAutoSavingAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "EndAutoSavingAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoApp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoApp(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoApp");

	Params::SaveDataManageSubsystem_ExistsAutoApp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoAppDemo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoAppDemo(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoAppDemo");

	Params::SaveDataManageSubsystem_ExistsAutoAppDemo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoAppPS4
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoAppPS4(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoAppPS4");

	Params::SaveDataManageSubsystem_ExistsAutoAppPS4 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoNet
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoNet(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoNet");

	Params::SaveDataManageSubsystem_ExistsAutoNet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoOptionConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoOptionConfig(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoOptionConfig");

	Params::SaveDataManageSubsystem_ExistsAutoOptionConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoPlayLog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoPlayLog(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoPlayLog");

	Params::SaveDataManageSubsystem_ExistsAutoPlayLog Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoReplayPS4SaveGameByIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ReplaySlotIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoReplayPS4SaveGameByIndex(int32 ReplaySlotIndex, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoReplayPS4SaveGameByIndex");

	Params::SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex Parms{};

	Parms.ReplaySlotIndex = ReplaySlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoReplaySaveGameByIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ReplaySlotIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoReplaySaveGameByIndex(int32 ReplaySlotIndex, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoReplaySaveGameByIndex");

	Params::SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex Parms{};

	Parms.ReplaySlotIndex = ReplaySlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoReplaySaveGameByStage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::ExistsAutoReplaySaveGameByStage(EStageId StageId, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "ExistsAutoReplaySaveGameByStage");

	Params::SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage Parms{};

	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetAppSaveCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USaveDataManageSubsystem::GetAppSaveCount(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetAppSaveCount");

	Params::SaveDataManageSubsystem_GetAppSaveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetAppSaveGamePtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAppSaveGame*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAppSaveGame* USaveDataManageSubsystem::GetAppSaveGamePtr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetAppSaveGamePtr");

	Params::SaveDataManageSubsystem_GetAppSaveGamePtr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetNetSaveCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USaveDataManageSubsystem::GetNetSaveCount(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetNetSaveCount");

	Params::SaveDataManageSubsystem_GetNetSaveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetNetSaveGamePtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UNetSaveGame*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetSaveGame* USaveDataManageSubsystem::GetNetSaveGamePtr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetNetSaveGamePtr");

	Params::SaveDataManageSubsystem_GetNetSaveGamePtr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetOptionConfigSaveCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USaveDataManageSubsystem::GetOptionConfigSaveCount(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetOptionConfigSaveCount");

	Params::SaveDataManageSubsystem_GetOptionConfigSaveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetOptionConfigSaveGamePtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UOptionConfigSaveGame*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOptionConfigSaveGame* USaveDataManageSubsystem::GetOptionConfigSaveGamePtr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetOptionConfigSaveGamePtr");

	Params::SaveDataManageSubsystem_GetOptionConfigSaveGamePtr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetPlayLogSaveCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USaveDataManageSubsystem::GetPlayLogSaveCount(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetPlayLogSaveCount");

	Params::SaveDataManageSubsystem_GetPlayLogSaveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetPlayLogSaveGamePtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPlayLogSaveGame*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayLogSaveGame* USaveDataManageSubsystem::GetPlayLogSaveGamePtr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetPlayLogSaveGamePtr");

	Params::SaveDataManageSubsystem_GetPlayLogSaveGamePtr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetReplaySaveCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USaveDataManageSubsystem::GetReplaySaveCount(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetReplaySaveCount");

	Params::SaveDataManageSubsystem_GetReplaySaveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetReplaySaveGamePtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UReplaySaveGame*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UReplaySaveGame* USaveDataManageSubsystem::GetReplaySaveGamePtr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetReplaySaveGamePtr");

	Params::SaveDataManageSubsystem_GetReplaySaveGamePtr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.GetUserNetworkSettingsFromLocalData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserSaveUserNetworkSettingsRequest*OutRequest                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::GetUserNetworkSettingsFromLocalData(struct FUserSaveUserNetworkSettingsRequest* OutRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "GetUserNetworkSettingsFromLocalData");

	Params::SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRequest != nullptr)
		*OutRequest = std::move(Parms.OutRequest);
}


// Function UnionSystem.SaveDataManageSubsystem.InitSaveAutoReplayAsyncBySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReplaySlotIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::InitSaveAutoReplayAsyncBySlot(int32 ReplaySlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "InitSaveAutoReplayAsyncBySlot");

	Params::SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot Parms{};

	Parms.ReplaySlotIndex = ReplaySlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.InitSaveAutoReplayAsyncByStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::InitSaveAutoReplayAsyncByStage(EStageId StageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "InitSaveAutoReplayAsyncByStage");

	Params::SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage Parms{};

	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.IsBusy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsBusy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsBusy");

	Params::SaveDataManageSubsystem_IsBusy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsLoadedAppSaveData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsLoadedAppSaveData(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsLoadedAppSaveData");

	Params::SaveDataManageSubsystem_IsLoadedAppSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsLoadedNetSaveData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsLoadedNetSaveData(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsLoadedNetSaveData");

	Params::SaveDataManageSubsystem_IsLoadedNetSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsLoadedOptionConfigSaveData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsLoadedOptionConfigSaveData(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsLoadedOptionConfigSaveData");

	Params::SaveDataManageSubsystem_IsLoadedOptionConfigSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsLoadedPlayLogSaveData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsLoadedPlayLogSaveData(ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsLoadedPlayLogSaveData");

	Params::SaveDataManageSubsystem_IsLoadedPlayLogSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsLoadedReplaySaveData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsLoadedReplaySaveData(EStageId StageId, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsLoadedReplaySaveData");

	Params::SaveDataManageSubsystem_IsLoadedReplaySaveData Parms{};

	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidAppDataVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutCurVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidAppDataVersion(int32* OutCurVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidAppDataVersion");

	Params::SaveDataManageSubsystem_IsValidAppDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurVersion != nullptr)
		*OutCurVersion = Parms.OutCurVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidAppRomVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutRomVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidAppRomVersion(int32* OutRomVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidAppRomVersion");

	Params::SaveDataManageSubsystem_IsValidAppRomVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRomVersion != nullptr)
		*OutRomVersion = Parms.OutRomVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidNetDataVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutCurVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidNetDataVersion(int32* OutCurVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidNetDataVersion");

	Params::SaveDataManageSubsystem_IsValidNetDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurVersion != nullptr)
		*OutCurVersion = Parms.OutCurVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidNetRomVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutRomVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidNetRomVersion(int32* OutRomVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidNetRomVersion");

	Params::SaveDataManageSubsystem_IsValidNetRomVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRomVersion != nullptr)
		*OutRomVersion = Parms.OutRomVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidOptionConfigDataVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutCurVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidOptionConfigDataVersion(int32* OutCurVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidOptionConfigDataVersion");

	Params::SaveDataManageSubsystem_IsValidOptionConfigDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurVersion != nullptr)
		*OutCurVersion = Parms.OutCurVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidOptionConfigRomVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutRomVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidOptionConfigRomVersion(int32* OutRomVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidOptionConfigRomVersion");

	Params::SaveDataManageSubsystem_IsValidOptionConfigRomVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRomVersion != nullptr)
		*OutRomVersion = Parms.OutRomVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidPlayLogDataVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutCurVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidPlayLogDataVersion(int32* OutCurVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidPlayLogDataVersion");

	Params::SaveDataManageSubsystem_IsValidPlayLogDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurVersion != nullptr)
		*OutCurVersion = Parms.OutCurVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidPlayLogRomVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutRomVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidPlayLogRomVersion(int32* OutRomVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidPlayLogRomVersion");

	Params::SaveDataManageSubsystem_IsValidPlayLogRomVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRomVersion != nullptr)
		*OutRomVersion = Parms.OutRomVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidReplayDataVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutCurVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidReplayDataVersion(int32* OutCurVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidReplayDataVersion");

	Params::SaveDataManageSubsystem_IsValidReplayDataVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurVersion != nullptr)
		*OutCurVersion = Parms.OutCurVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.IsValidReplayRomVersion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutRomVersion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSavedVersion                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus*                        OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveDataManageSubsystem::IsValidReplayRomVersion(int32* OutRomVersion, int32* OutSavedVersion, ESaveDataStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "IsValidReplayRomVersion");

	Params::SaveDataManageSubsystem_IsValidReplayRomVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRomVersion != nullptr)
		*OutRomVersion = Parms.OutRomVersion;

	if (OutSavedVersion != nullptr)
		*OutSavedVersion = Parms.OutSavedVersion;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoAppAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::LoadAutoAppAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoAppAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoAppSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::LoadAutoAppSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoAppSync");

	Params::SaveDataManageSubsystem_LoadAutoAppSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoDemoAppAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::LoadAutoDemoAppAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoDemoAppAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoNetAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::LoadAutoNetAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoNetAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoNetSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::LoadAutoNetSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoNetSync");

	Params::SaveDataManageSubsystem_LoadAutoNetSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoOptionConfigAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::LoadAutoOptionConfigAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoOptionConfigAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoOptionConfigSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::LoadAutoOptionConfigSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoOptionConfigSync");

	Params::SaveDataManageSubsystem_LoadAutoOptionConfigSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoPlayLogAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::LoadAutoPlayLogAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoPlayLogAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadAutoPlayLogSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::LoadAutoPlayLogSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadAutoPlayLogSync");

	Params::SaveDataManageSubsystem_LoadAutoPlayLogSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadReplayConfigAsync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::LoadReplayConfigAsync(EStageId StageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadReplayConfigAsync");

	Params::SaveDataManageSubsystem_LoadReplayConfigAsync Parms{};

	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.LoadReplayConfigSyncByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReplaySlotIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::LoadReplayConfigSyncByIndex(int32 ReplaySlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "LoadReplayConfigSyncByIndex");

	Params::SaveDataManageSubsystem_LoadReplayConfigSyncByIndex Parms{};

	Parms.ReplaySlotIndex = ReplaySlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.OnInitReplaySaveCompleteFunc
// (Final, Native, Private)
// Parameters:
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::OnInitReplaySaveCompleteFunc(const class FString& SlotName, const int32 UserIndex, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "OnInitReplaySaveCompleteFunc");

	Params::SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.OnLoadCompleteFunc
// (Final, Native, Private)
// Parameters:
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        SaveGame                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::OnLoadCompleteFunc(const class FString& SlotName, const int32 UserIndex, class USaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "OnLoadCompleteFunc");

	Params::SaveDataManageSubsystem_OnLoadCompleteFunc Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;
	Parms.SaveGame = SaveGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.OnSaveCompleteFunc
// (Final, Native, Private)
// Parameters:
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::OnSaveCompleteFunc(const class FString& SlotName, const int32 UserIndex, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "OnSaveCompleteFunc");

	Params::SaveDataManageSubsystem_OnSaveCompleteFunc Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.OnSaveErrorPopupClosedFunc
// (Final, Native, Private)

void USaveDataManageSubsystem::OnSaveErrorPopupClosedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "OnSaveErrorPopupClosedFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoAppAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::SaveAutoAppAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoAppAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoAppSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::SaveAutoAppSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoAppSync");

	Params::SaveDataManageSubsystem_SaveAutoAppSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoNetAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::SaveAutoNetAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoNetAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoNetSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::SaveAutoNetSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoNetSync");

	Params::SaveDataManageSubsystem_SaveAutoNetSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoOptionConfigAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::SaveAutoOptionConfigAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoOptionConfigAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoOptionConfigSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::SaveAutoOptionConfigSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoOptionConfigSync");

	Params::SaveDataManageSubsystem_SaveAutoOptionConfigSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoPlayLogAsync
// (Final, Native, Public, BlueprintCallable)

void USaveDataManageSubsystem::SaveAutoPlayLogAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoPlayLogAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoPlayLogSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESaveDataStatus USaveDataManageSubsystem::SaveAutoPlayLogSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoPlayLogSync");

	Params::SaveDataManageSubsystem_SaveAutoPlayLogSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SaveDataManageSubsystem.SaveAutoReplayAsync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveDataManageSubsystem::SaveAutoReplayAsync(EStageId StageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "SaveAutoReplayAsync");

	Params::SaveDataManageSubsystem_SaveAutoReplayAsync Parms{};

	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SaveDataManageSubsystem.StartAutoSavingAnimation
// (Final, Native, Private, BlueprintCallable)

void USaveDataManageSubsystem::StartAutoSavingAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveDataManageSubsystem", "StartAutoSavingAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SavingIcon.StartAnimIn
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USavingIcon::StartAnimIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavingIcon", "StartAnimIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionSystem.SavingIcon.StartAnimOut
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USavingIcon::StartAnimOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavingIcon", "StartAnimOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionSystem.SequenceParameterActor.SetSequenceAccelFloorVisibility_
// (Final, Native, Public)
// Parameters:
// bool                                    bVisibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceAccelFloorVisibility_(bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceAccelFloorVisibility_");

	Params::SequenceParameterActor_SetSequenceAccelFloorVisibility_ Parms{};

	Parms.bVisibility = bVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SequenceParameterActor.SetSequenceEvent_
// (Final, Native, Public)
// Parameters:
// bool                                    bEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceEvent_(bool bEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceEvent_");

	Params::SequenceParameterActor_SetSequenceEvent_ Parms{};

	Parms.bEvent = bEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SequenceParameterActor.SetSequenceFloorBackVisibility_
// (Final, Native, Public)
// Parameters:
// bool                                    bVisibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceFloorBackVisibility_(bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceFloorBackVisibility_");

	Params::SequenceParameterActor_SetSequenceFloorBackVisibility_ Parms{};

	Parms.bVisibility = bVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SequenceParameterActor.SetSequenceFloorFrontVisibility_
// (Final, Native, Public)
// Parameters:
// bool                                    bVisibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceFloorFrontVisibility_(bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceFloorFrontVisibility_");

	Params::SequenceParameterActor_SetSequenceFloorFrontVisibility_ Parms{};

	Parms.bVisibility = bVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SequenceParameterActor.SetSequenceMainFloorVisibility_
// (Final, Native, Public)
// Parameters:
// bool                                    bVisibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceMainFloorVisibility_(bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceMainFloorVisibility_");

	Params::SequenceParameterActor_SetSequenceMainFloorVisibility_ Parms{};

	Parms.bVisibility = bVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SequenceParameterActor.SetSequenceTransform_
// (Final, Native, Public, HasDefaults)
// Parameters:
// const struct FTransform&                Transform                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceTransform_(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceTransform_");

	Params::SequenceParameterActor_SetSequenceTransform_ Parms{};

	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SequenceParameterActor.SetSequenceVisibility_
// (Final, Native, Public)
// Parameters:
// bool                                    bVisibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASequenceParameterActor::SetSequenceVisibility_(bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceParameterActor", "SetSequenceVisibility_");

	Params::SequenceParameterActor_SetSequenceVisibility_ Parms{};

	Parms.bVisibility = bVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.SessionManager.GetDisplayCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          displayCode                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetDisplayCode(class FString* displayCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetDisplayCode");

	Params::SessionManager_GetDisplayCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (displayCode != nullptr)
		*displayCode = std::move(Parms.displayCode);

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetExternalAddressRegionName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          AddressRegionName                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetExternalAddressRegionName(class FString* AddressRegionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetExternalAddressRegionName");

	Params::SessionManager_GetExternalAddressRegionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AddressRegionName != nullptr)
		*AddressRegionName = std::move(Parms.AddressRegionName);

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetFairPlayPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutFairPlayPoint                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetFairPlayPoint(int32* OutFairPlayPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetFairPlayPoint");

	Params::SessionManager_GetFairPlayPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFairPlayPoint != nullptr)
		*OutFairPlayPoint = Parms.OutFairPlayPoint;

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetIsBan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   bOutIsBan                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetIsBan(bool* bOutIsBan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetIsBan");

	Params::SessionManager_GetIsBan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutIsBan != nullptr)
		*bOutIsBan = Parms.bOutIsBan;

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetLoginComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetLoginComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetLoginComplete");

	Params::SessionManager_GetLoginComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetPenaltyEndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          endTime                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetPenaltyEndTime(class FString* endTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetPenaltyEndTime");

	Params::SessionManager_GetPenaltyEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (endTime != nullptr)
		*endTime = std::move(Parms.endTime);

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetRegionCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          regionCode                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetRegionCode(class FString* regionCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetRegionCode");

	Params::SessionManager_GetRegionCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (regionCode != nullptr)
		*regionCode = std::move(Parms.regionCode);

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetResponseCodeAbstract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EResponseCodeAbstract                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResponseCodeAbstract USessionManager::GetResponseCodeAbstract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetResponseCodeAbstract");

	Params::SessionManager_GetResponseCodeAbstract Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetSwitchOnlineCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  switchOnlineCode                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetSwitchOnlineCode(int32* switchOnlineCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetSwitchOnlineCode");

	Params::SessionManager_GetSwitchOnlineCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (switchOnlineCode != nullptr)
		*switchOnlineCode = Parms.switchOnlineCode;

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.GetUserID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          UserId                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USessionManager::GetUserID(class FString* UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "GetUserID");

	Params::SessionManager_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (UserId != nullptr)
		*UserId = std::move(Parms.UserId);

	return Parms.ReturnValue;
}


// Function UnionSystem.SessionManager.StartLogin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool Error, bool SavedataDeleted)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USessionManager::StartLogin(TDelegate<void(bool Error, bool SavedataDeleted)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SessionManager", "StartLogin");

	Params::SessionManager_StartLogin Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSpeedClassLibrary.GetMaxSpeedByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ESpeedClassId                     ClassId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSpeedClassLibrary::GetMaxSpeedByClass(const ESpeedClassId ClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSpeedClassLibrary", "GetMaxSpeedByClass");

	Params::UnionSpeedClassLibrary_GetMaxSpeedByClass Parms{};

	Parms.ClassId = ClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSpeedClassLibrary.GetMinSpeedByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ESpeedClassId                     ClassId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSpeedClassLibrary::GetMinSpeedByClass(const ESpeedClassId ClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSpeedClassLibrary", "GetMinSpeedByClass");

	Params::UnionSpeedClassLibrary_GetMinSpeedByClass Parms{};

	Parms.ClassId = ClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSpeedClassLibrary.GetTimeTrialIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ESpeedClassId                     InId                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UUnionSpeedClassLibrary::GetTimeTrialIndex(const ESpeedClassId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSpeedClassLibrary", "GetTimeTrialIndex");

	Params::UnionSpeedClassLibrary_GetTimeTrialIndex Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSpeedClassLibrary.IsTimeTrialActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ESpeedClassId                     InId                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSpeedClassLibrary::IsTimeTrialActive(const ESpeedClassId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSpeedClassLibrary", "IsTimeTrialActive");

	Params::UnionSpeedClassLibrary_IsTimeTrialActive Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.BuildStageDirectory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::BuildStageDirectory(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "BuildStageDirectory");

	Params::StageIdUtilityLibrary_BuildStageDirectory Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.BuildStageName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InPrefix                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::BuildStageName(EStageId InId, const class FString& InPrefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "BuildStageName");

	Params::StageIdUtilityLibrary_BuildStageName Parms{};

	Parms.InId = InId;
	Parms.InPrefix = std::move(InPrefix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.BuildStageString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InPrefix                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::BuildStageString(EStageId InId, const class FString& InPrefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "BuildStageString");

	Params::StageIdUtilityLibrary_BuildStageString Parms{};

	Parms.InId = InId;
	Parms.InPrefix = std::move(InPrefix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetEditorLevelStageId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStageId UStageIdUtilityLibrary::GetEditorLevelStageId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetEditorLevelStageId");

	Params::StageIdUtilityLibrary_GetEditorLevelStageId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_BG
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_BG(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_BG");

	Params::StageIdUtilityLibrary_GetLevelName_BG Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_Editor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_Editor(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_Editor");

	Params::StageIdUtilityLibrary_GetLevelName_Editor Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_FX
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_FX(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_FX");

	Params::StageIdUtilityLibrary_GetLevelName_FX Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ItemBox
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_ItemBox(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_ItemBox");

	Params::StageIdUtilityLibrary_GetLevelName_ItemBox Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ItemBoxFinalLap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_ItemBoxFinalLap(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_ItemBoxFinalLap");

	Params::StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ItemBoxIrregular
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_ItemBoxIrregular(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_ItemBoxIrregular");

	Params::StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ObjectGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_ObjectGame(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_ObjectGame");

	Params::StageIdUtilityLibrary_GetLevelName_ObjectGame Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ObjectGameFinalLap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_ObjectGameFinalLap(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_ObjectGameFinalLap");

	Params::StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ObjectGameIrregular
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_ObjectGameIrregular(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_ObjectGameIrregular");

	Params::StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_Sound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetLevelName_Sound(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetLevelName_Sound");

	Params::StageIdUtilityLibrary_GetLevelName_Sound Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetStageEndNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UStageIdUtilityLibrary::GetStageEndNumber(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetStageEndNumber");

	Params::StageIdUtilityLibrary_GetStageEndNumber Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetStageId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InNumber                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStageId UStageIdUtilityLibrary::GetStageId(int32 InNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetStageId");

	Params::StageIdUtilityLibrary_GetStageId Parms{};

	Parms.InNumber = InNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetStageIdByActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStageId UStageIdUtilityLibrary::GetStageIdByActor(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetStageIdByActor");

	Params::StageIdUtilityLibrary_GetStageIdByActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetStageName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetStageName(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetStageName");

	Params::StageIdUtilityLibrary_GetStageName Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetStageNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UStageIdUtilityLibrary::GetStageNumber(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetStageNumber");

	Params::StageIdUtilityLibrary_GetStageNumber Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.GetStageString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStageIdUtilityLibrary::GetStageString(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "GetStageString");

	Params::StageIdUtilityLibrary_GetStageString Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsAnotherStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsAnotherStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsAnotherStage");

	Params::StageIdUtilityLibrary_IsAnotherStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsCommonStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsCommonStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsCommonStage");

	Params::StageIdUtilityLibrary_IsCommonStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsDebugAnotherStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsDebugAnotherStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsDebugAnotherStage");

	Params::StageIdUtilityLibrary_IsDebugAnotherStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsDebugMainStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsDebugMainStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsDebugMainStage");

	Params::StageIdUtilityLibrary_IsDebugMainStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsDebugStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsDebugStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsDebugStage");

	Params::StageIdUtilityLibrary_IsDebugStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsExtndMainStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsExtndMainStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsExtndMainStage");

	Params::StageIdUtilityLibrary_IsExtndMainStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsMainStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsMainStage(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsMainStage");

	Params::StageIdUtilityLibrary_IsMainStage Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.IsStageIdValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EStageId                                InId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStageIdUtilityLibrary::IsStageIdValid(EStageId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "IsStageIdValid");

	Params::StageIdUtilityLibrary_IsStageIdValid Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.StageIdUtilityLibrary.StringToStageId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStageId UStageIdUtilityLibrary::StringToStageId(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StageIdUtilityLibrary", "StringToStageId");

	Params::StageIdUtilityLibrary_StringToStageId Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.SwitchPlatformUtility.SetCPUBoostModeEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USwitchPlatformUtility::SetCPUBoostModeEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SwitchPlatformUtility", "SetCPUBoostModeEnabled");

	Params::SwitchPlatformUtility_SetCPUBoostModeEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.TimeTrialVariousLibrary.CheckForNewRecord
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InClockCount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutMedalAcquistion                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::CheckForNewRecord(const int32 InClockCount, const EStageId InStageId, const ESpeedClassId InSpeedClassId, bool* OutMedalAcquistion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "CheckForNewRecord");

	Params::TimeTrialVariousLibrary_CheckForNewRecord Parms{};

	Parms.InClockCount = InClockCount;
	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMedalAcquistion != nullptr)
		*OutMedalAcquistion = Parms.OutMedalAcquistion;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.CheckHashGhostResultMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const ESpeedClassId                     InSpeedClass                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeTrialVariousLibrary::CheckHashGhostResultMatch(const ESpeedClassId InSpeedClass, const EStageId InStageId, bool* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "CheckHashGhostResultMatch");

	Params::TimeTrialVariousLibrary_CheckHashGhostResultMatch Parms{};

	Parms.InSpeedClass = InSpeedClass;
	Parms.InStageId = InStageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;
}


// Function UnionSystem.TimeTrialVariousLibrary.CheckIsTargetTimeClear
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InClockCount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETimeTrialClearRankId*                  OutClearRank                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::CheckIsTargetTimeClear(const int32 InClockCount, const EStageId InStageId, const ESpeedClassId InSpeedClassId, ETimeTrialClearRankId* OutClearRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "CheckIsTargetTimeClear");

	Params::TimeTrialVariousLibrary_CheckIsTargetTimeClear Parms{};

	Parms.InClockCount = InClockCount;
	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClearRank != nullptr)
		*OutClearRank = Parms.OutClearRank;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.ConvertUserTimeTrialRaceData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTimeTrialLapTimes&        InLapTimes                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const EDriverId                         InDriverId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserMachineCustomizeData& InMachineCustomizeData                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FUserGadgetPresetData&     InGadgetPresetData                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETimeTrialClearRankId                   InClearRank                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserTimeTrialRaceData*          OutRaceData                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UTimeTrialVariousLibrary::ConvertUserTimeTrialRaceData(const struct FTimeTrialLapTimes& InLapTimes, const EDriverId InDriverId, const struct FUserMachineCustomizeData& InMachineCustomizeData, const struct FUserGadgetPresetData& InGadgetPresetData, ETimeTrialClearRankId InClearRank, struct FUserTimeTrialRaceData* OutRaceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "ConvertUserTimeTrialRaceData");

	Params::TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData Parms{};

	Parms.InLapTimes = std::move(InLapTimes);
	Parms.InDriverId = InDriverId;
	Parms.InMachineCustomizeData = std::move(InMachineCustomizeData);
	Parms.InGadgetPresetData = std::move(InGadgetPresetData);
	Parms.InClearRank = InClearRank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRaceData != nullptr)
		*OutRaceData = std::move(Parms.OutRaceData);
}


// Function UnionSystem.TimeTrialVariousLibrary.GetCurrentRewardData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FTimeTrialResultRewardTableData  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTimeTrialResultRewardTableData UTimeTrialVariousLibrary::GetCurrentRewardData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "GetCurrentRewardData");

	Params::TimeTrialVariousLibrary_GetCurrentRewardData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.GetNextRewardData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MedalCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRewardCount                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRewardMax                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutIsValid                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimeTrialResultRewardTableData  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTimeTrialResultRewardTableData UTimeTrialVariousLibrary::GetNextRewardData(int32 MedalCount, int32* OutRewardCount, int32* OutRewardMax, bool* OutIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "GetNextRewardData");

	Params::TimeTrialVariousLibrary_GetNextRewardData Parms{};

	Parms.MedalCount = MedalCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewardCount != nullptr)
		*OutRewardCount = Parms.OutRewardCount;

	if (OutRewardMax != nullptr)
		*OutRewardMax = Parms.OutRewardMax;

	if (OutIsValid != nullptr)
		*OutIsValid = Parms.OutIsValid;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.GetRewardData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MedalCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimeTrialResultRewardTableData* OutRewardData                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::GetRewardData(int32 MedalCount, struct FTimeTrialResultRewardTableData* OutRewardData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "GetRewardData");

	Params::TimeTrialVariousLibrary_GetRewardData Parms{};

	Parms.MedalCount = MedalCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewardData != nullptr)
		*OutRewardData = std::move(Parms.OutRewardData);

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.GetTimeTrialBestTimeData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimeTrialLapTimes               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTimeTrialLapTimes UTimeTrialVariousLibrary::GetTimeTrialBestTimeData(const EStageId InStageId, const ESpeedClassId InSpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "GetTimeTrialBestTimeData");

	Params::TimeTrialVariousLibrary_GetTimeTrialBestTimeData Parms{};

	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.GetTimeTrialRankData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const int32                             InClockCount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClassId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimeTrialRankData               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTimeTrialRankData UTimeTrialVariousLibrary::GetTimeTrialRankData(const int32 InClockCount, const EStageId InStageId, const ESpeedClassId InSpeedClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "GetTimeTrialRankData");

	Params::TimeTrialVariousLibrary_GetTimeTrialRankData Parms{};

	Parms.InClockCount = InClockCount;
	Parms.InStageId = InStageId;
	Parms.InSpeedClassId = InSpeedClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.GetTimeTrialTargetTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ESpeedClassId                           InSpeedClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                InStageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTimeTrialVariousLibrary::GetTimeTrialTargetTime(ESpeedClassId InSpeedClass, EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "GetTimeTrialTargetTime");

	Params::TimeTrialVariousLibrary_GetTimeTrialTargetTime Parms{};

	Parms.InSpeedClass = InSpeedClass;
	Parms.InStageId = InStageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.IsGhostResultReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FUserTimeTrialRaceData&    InResultData                                           (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::IsGhostResultReleased(const struct FUserTimeTrialRaceData& InResultData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "IsGhostResultReleased");

	Params::TimeTrialVariousLibrary_IsGhostResultReleased Parms{};

	Parms.InResultData = std::move(InResultData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.IsGhostVersionCheck
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const int32&                            InStageVersion                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESpeedClassId                     InSpeedClass                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::IsGhostVersionCheck(const int32& InStageVersion, const ESpeedClassId InSpeedClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "IsGhostVersionCheck");

	Params::TimeTrialVariousLibrary_IsGhostVersionCheck Parms{};

	Parms.InStageVersion = InStageVersion;
	Parms.InSpeedClass = InSpeedClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.IsGhostVersionHeaderCheck
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const int32&                            InStageVersion                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FReplayHeader&             InGhostHeader                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::IsGhostVersionHeaderCheck(const int32& InStageVersion, const struct FReplayHeader& InGhostHeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "IsGhostVersionHeaderCheck");

	Params::TimeTrialVariousLibrary_IsGhostVersionHeaderCheck Parms{};

	Parms.InStageVersion = InStageVersion;
	Parms.InGhostHeader = std::move(InGhostHeader);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.IsReplayGhostReleased
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FReplaySaveInfo&           InGhostData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::IsReplayGhostReleased(const struct FReplaySaveInfo& InGhostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "IsReplayGhostReleased");

	Params::TimeTrialVariousLibrary_IsReplayGhostReleased Parms{};

	Parms.InGhostData = std::move(InGhostData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.IsTimeTrialRankCleared
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETimeTrialClearRankId             InId                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::IsTimeTrialRankCleared(const ETimeTrialClearRankId InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "IsTimeTrialRankCleared");

	Params::TimeTrialVariousLibrary_IsTimeTrialRankCleared Parms{};

	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.TimeTrialVariousLibrary.isTimeTrialResultReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   MedalCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       ResultRewardDataTable                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeTrialVariousLibrary::isTimeTrialResultReward(int32 MedalCount, class UDataTable* ResultRewardDataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeTrialVariousLibrary", "isTimeTrialResultReward");

	Params::TimeTrialVariousLibrary_isTimeTrialResultReward Parms{};

	Parms.MedalCount = MedalCount;
	Parms.ResultRewardDataTable = ResultRewardDataTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.CreateAdvertiseWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::CreateAdvertiseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "CreateAdvertiseWidget");

	Params::UISubsystem_CreateAdvertiseWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.CreateAutoSaveInfoWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::CreateAutoSaveInfoWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "CreateAutoSaveInfoWidget");

	Params::UISubsystem_CreateAutoSaveInfoWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.CreateFriendListWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::CreateFriendListWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "CreateFriendListWidget");

	Params::UISubsystem_CreateFriendListWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.CreateProfileErrorPopupWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::CreateProfileErrorPopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "CreateProfileErrorPopupWindow");

	Params::UISubsystem_CreateProfileErrorPopupWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.CreateRewardDisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::CreateRewardDisplayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "CreateRewardDisplayWidget");

	Params::UISubsystem_CreateRewardDisplayWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.DestroyAdvertiseWidget
// (Final, Native, Public, BlueprintCallable)

void UUISubsystem::DestroyAdvertiseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "DestroyAdvertiseWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UISubsystem.DestroyAutoSaveInfoWidget
// (Final, Native, Public, BlueprintCallable)

void UUISubsystem::DestroyAutoSaveInfoWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "DestroyAutoSaveInfoWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UISubsystem.DestroyFriendListWidget
// (Final, Native, Public, BlueprintCallable)

void UUISubsystem::DestroyFriendListWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "DestroyFriendListWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UISubsystem.DestroyProfileErrorPopupWindow
// (Final, Native, Public, BlueprintCallable)

void UUISubsystem::DestroyProfileErrorPopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "DestroyProfileErrorPopupWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UISubsystem.DestroyRewardDisplayWidget
// (Final, Native, Public, BlueprintCallable)

void UUISubsystem::DestroyRewardDisplayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "DestroyRewardDisplayWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UISubsystem.GetAdvertiseWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::GetAdvertiseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "GetAdvertiseWidget");

	Params::UISubsystem_GetAdvertiseWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.GetAutoSaveInfoWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::GetAutoSaveInfoWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "GetAutoSaveInfoWidget");

	Params::UISubsystem_GetAutoSaveInfoWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.GetFriendListWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::GetFriendListWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "GetFriendListWidget");

	Params::UISubsystem_GetFriendListWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.GetPopupWindowType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPopupWindowType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPopupWindowType UUISubsystem::GetPopupWindowType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "GetPopupWindowType");

	Params::UISubsystem_GetPopupWindowType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UISubsystem.GetRewardDisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUISubsystem::GetRewardDisplayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UISubsystem", "GetRewardDisplayWidget");

	Params::UISubsystem_GetRewardDisplayWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionAtomComponent.OnAudioFinishedFunc
// (Final, Native, Private)

void UUnionAtomComponent::OnAudioFinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionAtomComponent", "OnAudioFinishedFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionAtomComponent.OnStatusChangedFunc
// (Final, Native, Private)
// Parameters:
// EAtomComponentStatus                    Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   AtomComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionAtomComponent::OnStatusChangedFunc(EAtomComponentStatus Status, class UAtomComponent* AtomComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionAtomComponent", "OnStatusChangedFunc");

	Params::UnionAtomComponent_OnStatusChangedFunc Parms{};

	Parms.Status = Status;
	Parms.AtomComponent = AtomComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionAtomComponent.PlayWithAutoAttach
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InStartTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionAtomComponent::PlayWithAutoAttach(float InStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionAtomComponent", "PlayWithAutoAttach");

	Params::UnionAtomComponent_PlayWithAutoAttach Parms{};

	Parms.InStartTime = InStartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionAtomComponent.SetPanSplit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESoundPan                               Pan                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionAtomComponent::SetPanSplit(ESoundPan Pan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionAtomComponent", "SetPanSplit");

	Params::UnionAtomComponent_SetPanSplit Parms{};

	Parms.Pan = Pan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionAtomComponent.StopAndResetDistanceCulling
// (Final, Native, Public, BlueprintCallable)

void UUnionAtomComponent::StopAndResetDistanceCulling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionAtomComponent", "StopAndResetDistanceCulling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionChallengeManager.SetIsRaceSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsRace                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionChallengeManager::SetIsRaceSequence(bool IsRace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionChallengeManager", "SetIsRaceSequence");

	Params::UnionChallengeManager_SetIsRaceSequence Parms{};

	Parms.IsRace = IsRace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionChallengeManager.GetIsRaceSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionChallengeManager::GetIsRaceSequence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionChallengeManager", "GetIsRaceSequence");

	Params::UnionChallengeManager_GetIsRaceSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.ContentDataAsset.Build
// (Final, Native, Public, BlueprintCallable)

void UContentDataAsset::Build()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContentDataAsset", "Build");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionContentUtils.CanUseAlbum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   AlbumID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseAlbum(int32 AlbumID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseAlbum");

	Params::UnionContentUtils_CanUseAlbum Parms{};

	Parms.AlbumID = AlbumID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.CanUseCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseCharacter(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseCharacter");

	Params::UnionContentUtils_CanUseCharacter Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.CanUseHonorTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseHonorTitle(int32 HonorTitleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseHonorTitle");

	Params::UnionContentUtils_CanUseHonorTitle Parms{};

	Parms.HonorTitleId = HonorTitleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.CanUseMachine
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              MachineId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseMachine(EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseMachine");

	Params::UnionContentUtils_CanUseMachine Parms{};

	Parms.MachineId = MachineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.CanUseStageByGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             GameModeID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseStageByGameMode(EGameModeId GameModeID, EStageId StageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseStageByGameMode");

	Params::UnionContentUtils_CanUseStageByGameMode Parms{};

	Parms.GameModeID = GameModeID;
	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.CanUseStageByGameModeForCourseSelect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameModeId                             GameModeID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseStageByGameModeForCourseSelect(EGameModeId GameModeID, EStageId StageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseStageByGameModeForCourseSelect");

	Params::UnionContentUtils_CanUseStageByGameModeForCourseSelect Parms{};

	Parms.GameModeID = GameModeID;
	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.CanUseSticker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   stickerId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::CanUseSticker(int32 stickerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "CanUseSticker");

	Params::UnionContentUtils_CanUseSticker Parms{};

	Parms.stickerId = stickerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.GetIsItemReleased
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FContentItem&              CheckItem                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   IsReleased                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionContentUtils::GetIsItemReleased(const struct FContentItem& CheckItem, bool* IsReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "GetIsItemReleased");

	Params::UnionContentUtils_GetIsItemReleased Parms{};

	Parms.CheckItem = std::move(CheckItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsReleased != nullptr)
		*IsReleased = Parms.IsReleased;
}


// Function UnionSystem.UnionContentUtils.GetUseItemList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameModeId                             GameModeID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FContentItem>&      CheckItemList                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FContentItem>*            UnlockItemList                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionContentUtils::GetUseItemList(EGameModeId GameModeID, const TArray<struct FContentItem>& CheckItemList, TArray<struct FContentItem>* UnlockItemList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "GetUseItemList");

	Params::UnionContentUtils_GetUseItemList Parms{};

	Parms.GameModeID = GameModeID;
	Parms.CheckItemList = std::move(CheckItemList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (UnlockItemList != nullptr)
		*UnlockItemList = std::move(Parms.UnlockItemList);
}


// Function UnionSystem.UnionContentUtils.IsAuraReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineAuraId                          AuraId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsAuraReleased(EMachineAuraId AuraId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsAuraReleased");

	Params::UnionContentUtils_IsAuraReleased Parms{};

	Parms.AuraId = AuraId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsBusyCheckContent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsBusyCheckContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsBusyCheckContent");

	Params::UnionContentUtils_IsBusyCheckContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsCharacterReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsCharacterReleased(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsCharacterReleased");

	Params::UnionContentUtils_IsCharacterReleased Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsGadgetReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGadgetId                               gadgetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsGadgetReleased(EGadgetId gadgetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsGadgetReleased");

	Params::UnionContentUtils_IsGadgetReleased Parms{};

	Parms.gadgetId = gadgetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsHonorTitleReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   HonorTitleId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsHonorTitleReleased(int32 HonorTitleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsHonorTitleReleased");

	Params::UnionContentUtils_IsHonorTitleReleased Parms{};

	Parms.HonorTitleId = HonorTitleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsHornReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineHornType                        hornId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsHornReleased(EMachineHornType hornId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsHornReleased");

	Params::UnionContentUtils_IsHornReleased Parms{};

	Parms.hornId = hornId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsMachineFrontPartsReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              MachineId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsMachineFrontPartsReleased(EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsMachineFrontPartsReleased");

	Params::UnionContentUtils_IsMachineFrontPartsReleased Parms{};

	Parms.MachineId = MachineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsMachineRearPartsReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              MachineId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsMachineRearPartsReleased(EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsMachineRearPartsReleased");

	Params::UnionContentUtils_IsMachineRearPartsReleased Parms{};

	Parms.MachineId = MachineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsMachineTirePartsReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMachineId                              MachineId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsMachineTirePartsReleased(EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsMachineTirePartsReleased");

	Params::UnionContentUtils_IsMachineTirePartsReleased Parms{};

	Parms.MachineId = MachineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.IsStickerReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   stickerId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionContentUtils::IsStickerReleased(int32 stickerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "IsStickerReleased");

	Params::UnionContentUtils_IsStickerReleased Parms{};

	Parms.stickerId = stickerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionContentUtils.RequestCheckContent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableMasterData                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionContentUtils::RequestCheckContent(bool bEnableMasterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionContentUtils", "RequestCheckContent");

	Params::UnionContentUtils_RequestCheckContent Parms{};

	Parms.bEnableMasterData = bEnableMasterData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionDateTime.FromUnixTimestamp
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int64                                   UnixTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UUnionDateTime::FromUnixTimestamp(int64 UnixTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "FromUnixTimestamp");

	Params::UnionDateTime_FromUnixTimestamp Parms{};

	Parms.UnixTime = UnixTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetServerTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UUnionDateTime::GetServerTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetServerTime");

	Params::UnionDateTime_GetServerTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionDay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionDay");

	Params::UnionDateTime_GetUnionDay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionHour
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionHour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionHour");

	Params::UnionDateTime_GetUnionHour Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionMillisecond
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionMillisecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionMillisecond");

	Params::UnionDateTime_GetUnionMillisecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionMinute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionMinute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionMinute");

	Params::UnionDateTime_GetUnionMinute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionMonth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionMonth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionMonth");

	Params::UnionDateTime_GetUnionMonth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionNow
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UUnionDateTime::GetUnionNow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionNow");

	Params::UnionDateTime_GetUnionNow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionSecond
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionSecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionSecond");

	Params::UnionDateTime_GetUnionSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionUtcNow
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UUnionDateTime::GetUnionUtcNow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionUtcNow");

	Params::UnionDateTime_GetUnionUtcNow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.GetUnionYear
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionDateTime::GetUnionYear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "GetUnionYear");

	Params::UnionDateTime_GetUnionYear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionDateTime.SetServerTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FDateTime&                 InServerTime                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionDateTime::SetServerTime(const struct FDateTime& InServerTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "SetServerTime");

	Params::UnionDateTime_SetServerTime Parms{};

	Parms.InServerTime = std::move(InServerTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionDateTime.ToUnixTimestamp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUnionDateTime::ToUnixTimestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionDateTime", "ToUnixTimestamp");

	Params::UnionDateTime_ToUnixTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleDisplayNiagaraBounds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugViewBlueprintFunctionLibrary::ToggleDisplayNiagaraBounds(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugViewBlueprintFunctionLibrary", "ToggleDisplayNiagaraBounds");

	Params::DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleEffects
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebugViewBlueprintFunctionLibrary::ToggleEffects(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugViewBlueprintFunctionLibrary", "ToggleEffects");

	Params::DebugViewBlueprintFunctionLibrary_ToggleEffects Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleEffectsCacheEmpty
// (Final, Native, Static, Public, BlueprintCallable)

void UDebugViewBlueprintFunctionLibrary::ToggleEffectsCacheEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugViewBlueprintFunctionLibrary", "ToggleEffectsCacheEmpty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleEffectsCacheReset
// (Final, Native, Static, Public, BlueprintCallable)

void UDebugViewBlueprintFunctionLibrary::ToggleEffectsCacheReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugViewBlueprintFunctionLibrary", "ToggleEffectsCacheReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleEffectsDisable
// (Final, Native, Static, Public, BlueprintCallable)

void UDebugViewBlueprintFunctionLibrary::ToggleEffectsDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugViewBlueprintFunctionLibrary", "ToggleEffectsDisable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleEffectsEnable
// (Final, Native, Static, Public, BlueprintCallable)

void UDebugViewBlueprintFunctionLibrary::ToggleEffectsEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DebugViewBlueprintFunctionLibrary", "ToggleEffectsEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorManager.ResetShowTargetErrorWindowParam
// (Final, Native, Public, BlueprintCallable)

void UUnionErrorManager::ResetShowTargetErrorWindowParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionErrorManager", "ResetShowTargetErrorWindowParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorManager.IsShowAppRestartErrorWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionErrorManager::IsShowAppRestartErrorWindow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionErrorManager", "IsShowAppRestartErrorWindow");

	Params::UnionErrorManager_IsShowAppRestartErrorWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.CheckReturnTitleError
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EResponseCodeAbstract                   ResponseCodeAbstract                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionErrorUtils::CheckReturnTitleError(EResponseCodeAbstract ResponseCodeAbstract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "CheckReturnTitleError");

	Params::UnionErrorUtils_CheckReturnTitleError Parms{};

	Parms.ResponseCodeAbstract = ResponseCodeAbstract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.DbgSetNetworkErrorWithString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BodyStr                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionErrorUtils::DbgSetNetworkErrorWithString(EOnlineErrorId ErrorID, const class FString& BodyStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "DbgSetNetworkErrorWithString");

	Params::UnionErrorUtils_DbgSetNetworkErrorWithString Parms{};

	Parms.ErrorID = ErrorID;
	Parms.BodyStr = std::move(BodyStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorUtils.DbgSetNetworkErrorWithText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      BodyText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionErrorUtils::DbgSetNetworkErrorWithText(EOnlineErrorId ErrorID, const class FText& BodyText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "DbgSetNetworkErrorWithText");

	Params::UnionErrorUtils_DbgSetNetworkErrorWithText Parms{};

	Parms.ErrorID = ErrorID;
	Parms.BodyText = std::move(BodyText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorUtils.GetErrorLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EErrorLevel                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EErrorLevel UUnionErrorUtils::GetErrorLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetErrorLevel");

	Params::UnionErrorUtils_GetErrorLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.GetOnlineErrorBodyText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AppendId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NetworkDelayLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionErrorUtils::GetOnlineErrorBodyText(EOnlineErrorId ErrorID, int32 AppendId, int32 NetworkDelayLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetOnlineErrorBodyText");

	Params::UnionErrorUtils_GetOnlineErrorBodyText Parms{};

	Parms.ErrorID = ErrorID;
	Parms.AppendId = AppendId;
	Parms.NetworkDelayLevel = NetworkDelayLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.GetOnlineErrorReturnMenuText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AppendId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionErrorUtils::GetOnlineErrorReturnMenuText(EOnlineErrorId ErrorID, int32 AppendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetOnlineErrorReturnMenuText");

	Params::UnionErrorUtils_GetOnlineErrorReturnMenuText Parms{};

	Parms.ErrorID = ErrorID;
	Parms.AppendId = AppendId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.GetOnlineErrorTitleText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UUnionErrorUtils::GetOnlineErrorTitleText(EOnlineErrorId ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetOnlineErrorTitleText");

	Params::UnionErrorUtils_GetOnlineErrorTitleText Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.GetServerErrorBodyText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AppendId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NetworkDelayLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionErrorUtils::GetServerErrorBodyText(EResponseCodeAbstract ResponseCode, int32 AppendId, int32 NetworkDelayLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetServerErrorBodyText");

	Params::UnionErrorUtils_GetServerErrorBodyText Parms{};

	Parms.ResponseCode = ResponseCode;
	Parms.AppendId = AppendId;
	Parms.NetworkDelayLevel = NetworkDelayLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.GetServerErrorReturnMenuText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AppendId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionErrorUtils::GetServerErrorReturnMenuText(EResponseCodeAbstract ResponseCode, int32 AppendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetServerErrorReturnMenuText");

	Params::UnionErrorUtils_GetServerErrorReturnMenuText Parms{};

	Parms.ResponseCode = ResponseCode;
	Parms.AppendId = AppendId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.GetServerErrorTitleText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UUnionErrorUtils::GetServerErrorTitleText(EResponseCodeAbstract ResponseCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "GetServerErrorTitleText");

	Params::UnionErrorUtils_GetServerErrorTitleText Parms{};

	Parms.ResponseCode = ResponseCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.HasRaceFatalError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionErrorUtils::HasRaceFatalError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "HasRaceFatalError");

	Params::UnionErrorUtils_HasRaceFatalError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.IsAddFairPlayPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionErrorUtils::IsAddFairPlayPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "IsAddFairPlayPoints");

	Params::UnionErrorUtils_IsAddFairPlayPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.IsDisplayedErrorViewer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionErrorUtils::IsDisplayedErrorViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "IsDisplayedErrorViewer");

	Params::UnionErrorUtils_IsDisplayedErrorViewer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.IsNeedReLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionErrorUtils::IsNeedReLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "IsNeedReLogin");

	Params::UnionErrorUtils_IsNeedReLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionErrorUtils.ResetReLoginFlag
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionErrorUtils::ResetReLoginFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "ResetReLoginFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorUtils.SetNetworkError
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            AppendId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionErrorUtils::SetNetworkError(EOnlineErrorId ErrorID, const int32& AppendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "SetNetworkError");

	Params::UnionErrorUtils_SetNetworkError Parms{};

	Parms.ErrorID = ErrorID;
	Parms.AppendId = AppendId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorUtils.SetNetworkErrorWithTopMenuText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EOnlineErrorId                          ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionErrorUtils::SetNetworkErrorWithTopMenuText(EOnlineErrorId ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "SetNetworkErrorWithTopMenuText");

	Params::UnionErrorUtils_SetNetworkErrorWithTopMenuText Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorUtils.SetSeverError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionErrorUtils::SetSeverError(EResponseCodeAbstract ResponseCode, int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "SetSeverError");

	Params::UnionErrorUtils_SetSeverError Parms{};

	Parms.ResponseCode = ResponseCode;
	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionErrorUtils.SetSeverErrorWithTopMenuText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionErrorUtils::SetSeverErrorWithTopMenuText(EResponseCodeAbstract ResponseCode, int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionErrorUtils", "SetSeverErrorWithTopMenuText");

	Params::UnionErrorUtils_SetSeverErrorWithTopMenuText Parms{};

	Parms.ResponseCode = ResponseCode;
	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionExecuteConsoleCommandBP.AnimationBudgetEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionExecuteConsoleCommandBP::AnimationBudgetEnabled(const class UObject* WorldContextObject, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionExecuteConsoleCommandBP", "AnimationBudgetEnabled");

	Params::UnionExecuteConsoleCommandBP_AnimationBudgetEnabled Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionExecuteConsoleCommandBP.DebugExecuteConsoleCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionExecuteConsoleCommandBP::DebugExecuteConsoleCommand(const class UObject* WorldContextObject, const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionExecuteConsoleCommandBP", "DebugExecuteConsoleCommand");

	Params::UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Command = std::move(Command);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionExecuteConsoleCommandBP.IsEnableGlobalInvalidation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionExecuteConsoleCommandBP::IsEnableGlobalInvalidation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionExecuteConsoleCommandBP", "IsEnableGlobalInvalidation");

	Params::UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionExecuteConsoleCommandBP.RestartLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionExecuteConsoleCommandBP::RestartLevel(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionExecuteConsoleCommandBP", "RestartLevel");

	Params::UnionExecuteConsoleCommandBP_RestartLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionExecuteConsoleCommandBP.SlateEnableGlobalInvalidation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionExecuteConsoleCommandBP::SlateEnableGlobalInvalidation(const class UObject* WorldContextObject, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionExecuteConsoleCommandBP", "SlateEnableGlobalInvalidation");

	Params::UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.IsPlayingPresetForceFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPresetForceFeedbackType                ForceFeedbackType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionForceFeedbackLibrary::IsPlayingPresetForceFeedback(int32 PlayerIndex, EPresetForceFeedbackType ForceFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "IsPlayingPresetForceFeedback");

	Params::UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ForceFeedbackType = ForceFeedbackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionForceFeedbackLibrary.PlayForceFeedback
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      Tag                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::PlayForceFeedback(int32 PlayerIndex, class UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, const class FName& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "PlayForceFeedback");

	Params::UnionForceFeedbackLibrary_PlayForceFeedback Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.bLooping = bLooping;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.PlayPresetForceFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPresetForceFeedbackType                ForceFeedbackType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::PlayPresetForceFeedback(int32 PlayerIndex, EPresetForceFeedbackType ForceFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "PlayPresetForceFeedback");

	Params::UnionForceFeedbackLibrary_PlayPresetForceFeedback Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ForceFeedbackType = ForceFeedbackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.PlayPresetForceFeedbackWithParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPresetForceFeedbackType                ForceFeedbackType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayIgnoreTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::PlayPresetForceFeedbackWithParam(int32 PlayerIndex, EPresetForceFeedbackType ForceFeedbackType, int32 GroupId, float PlayIgnoreTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "PlayPresetForceFeedbackWithParam");

	Params::UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ForceFeedbackType = ForceFeedbackType;
	Parms.GroupId = GroupId;
	Parms.PlayIgnoreTime = PlayIgnoreTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.SetLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EForceFeedbackLevel                     Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::SetLevel(int32 PlayerIndex, EForceFeedbackLevel Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "SetLevel");

	Params::UnionForceFeedbackLibrary_SetLevel Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.StopAllForceFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::StopAllForceFeedback(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "StopAllForceFeedback");

	Params::UnionForceFeedbackLibrary_StopAllForceFeedback Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.StopForceFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::StopForceFeedback(int32 PlayerIndex, class UForceFeedbackEffect* ForceFeedbackEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "StopForceFeedback");

	Params::UnionForceFeedbackLibrary_StopForceFeedback Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ForceFeedbackEffect = ForceFeedbackEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.StopForceFeedbackByTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      Tag                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::StopForceFeedbackByTag(int32 PlayerIndex, const class FName& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "StopForceFeedbackByTag");

	Params::UnionForceFeedbackLibrary_StopForceFeedbackByTag Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionForceFeedbackLibrary.StopPresetForceFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPresetForceFeedbackType                ForceFeedbackType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionForceFeedbackLibrary::StopPresetForceFeedback(int32 PlayerIndex, EPresetForceFeedbackType ForceFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionForceFeedbackLibrary", "StopPresetForceFeedback");

	Params::UnionForceFeedbackLibrary_StopPresetForceFeedback Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ForceFeedbackType = ForceFeedbackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionGameInstanceSubsystem.IsCastShadowDashPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionGameInstanceSubsystem::IsCastShadowDashPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "IsCastShadowDashPanel");

	Params::UnionGameInstanceSubsystem_IsCastShadowDashPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionGameInstanceSubsystem.IsCastShadowItemBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionGameInstanceSubsystem::IsCastShadowItemBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "IsCastShadowItemBox");

	Params::UnionGameInstanceSubsystem_IsCastShadowItemBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionGameInstanceSubsystem.IsCastShadowRing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionGameInstanceSubsystem::IsCastShadowRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "IsCastShadowRing");

	Params::UnionGameInstanceSubsystem_IsCastShadowRing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionGameInstanceSubsystem.LoadBootCuesheet
// (Final, Native, Public, BlueprintCallable)

void UUnionGameInstanceSubsystem::LoadBootCuesheet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "LoadBootCuesheet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionGameInstanceSubsystem.LoadCommonVoice
// (Final, Native, Public, BlueprintCallable)

void UUnionGameInstanceSubsystem::LoadCommonVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "LoadCommonVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionGameInstanceSubsystem.SetUseCustomCulling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionGameInstanceSubsystem::SetUseCustomCulling(bool IsUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "SetUseCustomCulling");

	Params::UnionGameInstanceSubsystem_SetUseCustomCulling Parms{};

	Parms.IsUse = IsUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionGameInstanceSubsystem.UnloadCommonVoice
// (Final, Native, Public, BlueprintCallable)

void UUnionGameInstanceSubsystem::UnloadCommonVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "UnloadCommonVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionGameInstanceSubsystem.IsUseCustomCulling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionGameInstanceSubsystem::IsUseCustomCulling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameInstanceSubsystem", "IsUseCustomCulling");

	Params::UnionGameInstanceSubsystem_IsUseCustomCulling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionGraph.Deserialize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionGraph::Deserialize(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGraph", "Deserialize");

	Params::UnionGraph_Deserialize Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionGraph.Dump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionGraph::Dump(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGraph", "Dump");

	Params::UnionGraph_Dump Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.Close
// (Final, Native, Public, BlueprintCallable)

void UUnionManaPlayer::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.Create
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               MaterialForPrime                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               MaterialForVp9                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UManaTexture*                     ManaTexture                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::Create(class UMaterialInterface* MaterialForPrime, class UMaterialInterface* MaterialForVp9, class UManaTexture* ManaTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Create");

	Params::UnionManaPlayer_Create Parms{};

	Parms.MaterialForPrime = MaterialForPrime;
	Parms.MaterialForVp9 = MaterialForVp9;
	Parms.ManaTexture = ManaTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.DisableTrack
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::DisableTrack(EManaPlayerTrack TrackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "DisableTrack");

	Params::UnionManaPlayer_DisableTrack Parms{};

	Parms.TrackType = TrackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetAtomComponent
// (Final, Native, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* UUnionManaPlayer::GetAtomComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetAtomComponent");

	Params::UnionManaPlayer_GetAtomComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UUnionManaPlayer::GetMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetMaterial");

	Params::UnionManaPlayer_GetMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetSubtitleTrackEncoding
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EManaSubtitlesEncoding                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EManaSubtitlesEncoding UUnionManaPlayer::GetSubtitleTrackEncoding(int32 TrackIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetSubtitleTrackEncoding");

	Params::UnionManaPlayer_GetSubtitleTrackEncoding Parms{};

	Parms.TrackIndex = TrackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetTexture
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UManaTexture*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UManaTexture* UUnionManaPlayer::GetTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetTexture");

	Params::UnionManaPlayer_GetTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetTimeSyncedSource
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* UUnionManaPlayer::GetTimeSyncedSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetTimeSyncedSource");

	Params::UnionManaPlayer_GetTimeSyncedSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetVolume
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionManaPlayer::GetVolume(EManaPlayerTrack TrackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetVolume");

	Params::UnionManaPlayer_GetVolume Parms{};

	Parms.TrackType = TrackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerEventPoint
// (Final, Native, Private)
// Parameters:
// const struct FManaEventPointInfo&       EventPointInfo                                         (Parm, NativeAccessSpecifierPublic)

void UUnionManaPlayer::HandleManaPlayerEventPoint(const struct FManaEventPointInfo& EventPointInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerEventPoint");

	Params::UnionManaPlayer_HandleManaPlayerEventPoint Parms{};

	Parms.EventPointInfo = std::move(EventPointInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerMovieClosed
// (Final, Native, Private)

void UUnionManaPlayer::HandleManaPlayerMovieClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerMovieClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerMovieOpened
// (Final, Native, Private)
// Parameters:
// const class FString&                    OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionManaPlayer::HandleManaPlayerMovieOpened(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerMovieOpened");

	Params::UnionManaPlayer_HandleManaPlayerMovieOpened Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerMovieOpenFailed
// (Final, Native, Private)
// Parameters:
// const class FString&                    FailedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionManaPlayer::HandleManaPlayerMovieOpenFailed(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerMovieOpenFailed");

	Params::UnionManaPlayer_HandleManaPlayerMovieOpenFailed Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerPlaybackResumed
// (Final, Native, Private)

void UUnionManaPlayer::HandleManaPlayerPlaybackResumed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerPlaybackResumed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerPlaybackSuspended
// (Final, Native, Private)

void UUnionManaPlayer::HandleManaPlayerPlaybackSuspended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerPlaybackSuspended");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerSeekCompleted
// (Final, Native, Private)

void UUnionManaPlayer::HandleManaPlayerSeekCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerSeekCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerSubtitleChanged
// (Final, Native, Private)
// Parameters:
// const class FText&                      Subtitle                                               (Parm, NativeAccessSpecifierPublic)

void UUnionManaPlayer::HandleManaPlayerSubtitleChanged(const class FText& Subtitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerSubtitleChanged");

	Params::UnionManaPlayer_HandleManaPlayerSubtitleChanged Parms{};

	Parms.Subtitle = std::move(Subtitle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.HandleManaPlayerTracksChanged
// (Final, Native, Private)

void UUnionManaPlayer::HandleManaPlayerTracksChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HandleManaPlayerTracksChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.Pause
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Pause");

	Params::UnionManaPlayer_Pause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Play");

	Params::UnionManaPlayer_Play Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.PlayAndSeek
// (Final, Native, Private, BlueprintCallable)

void UUnionManaPlayer::PlayAndSeek()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "PlayAndSeek");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.Reopen
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::Reopen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Reopen");

	Params::UnionManaPlayer_Reopen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.Rewind
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::Rewind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Rewind");

	Params::UnionManaPlayer_Rewind Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.Seek
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTimespan&                 Time                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::Seek(const struct FTimespan& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "Seek");

	Params::UnionManaPlayer_Seek Parms{};

	Parms.Time = std::move(Time);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.SelectTrack
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::SelectTrack(EManaPlayerTrack TrackType, int32 TrackIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SelectTrack");

	Params::UnionManaPlayer_SelectTrack Parms{};

	Parms.TrackType = TrackType;
	Parms.TrackIndex = TrackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.SetLooping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Looping                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::SetLooping(bool Looping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetLooping");

	Params::UnionManaPlayer_SetLooping Parms{};

	Parms.Looping = Looping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.SetMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::SetMovie(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetMovie");

	Params::UnionManaPlayer_SetMovie Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.SetRate
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::SetRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetRate");

	Params::UnionManaPlayer_SetRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.SetTexture
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UManaTexture*                     InManaTexture                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionManaPlayer::SetTexture(class UManaTexture* InManaTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetTexture");

	Params::UnionManaPlayer_SetTexture Parms{};

	Parms.InManaTexture = InManaTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.SetTimeSyncedSource
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UAtomComponent*                   SyncedSource                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionManaPlayer::SetTimeSyncedSource(class UAtomComponent* SyncedSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetTimeSyncedSource");

	Params::UnionManaPlayer_SetTimeSyncedSource Parms{};

	Parms.SyncedSource = SyncedSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionManaPlayer.SetTrackFormat
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FormatIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::SetTrackFormat(EManaPlayerTrack TrackType, int32 TrackIndex, int32 FormatIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetTrackFormat");

	Params::UnionManaPlayer_SetTrackFormat Parms{};

	Parms.TrackType = TrackType;
	Parms.TrackIndex = TrackIndex;
	Parms.FormatIndex = FormatIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.SetVolume
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::SetVolume(float Volume, EManaPlayerTrack TrackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "SetVolume");

	Params::UnionManaPlayer_SetVolume Parms{};

	Parms.Volume = Volume;
	Parms.TrackType = TrackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetDuration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UUnionManaPlayer::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetDuration");

	Params::UnionManaPlayer_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetFrames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionManaPlayer::GetFrames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetFrames");

	Params::UnionManaPlayer_GetFrames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetMovieFrames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionManaPlayer::GetMovieFrames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetMovieFrames");

	Params::UnionManaPlayer_GetMovieFrames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetMovieSource
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UManaMovie*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UManaMovie* UUnionManaPlayer::GetMovieSource() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetMovieSource");

	Params::UnionManaPlayer_GetMovieSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetMovieTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UUnionManaPlayer::GetMovieTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetMovieTime");

	Params::UnionManaPlayer_GetMovieTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetNumTrackFormats
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionManaPlayer::GetNumTrackFormats(EManaPlayerTrack TrackType, int32 TrackIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetNumTrackFormats");

	Params::UnionManaPlayer_GetNumTrackFormats Parms{};

	Parms.TrackType = TrackType;
	Parms.TrackIndex = TrackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetNumTracks
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionManaPlayer::GetNumTracks(EManaPlayerTrack TrackType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetNumTracks");

	Params::UnionManaPlayer_GetNumTracks Parms{};

	Parms.TrackType = TrackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetRate
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionManaPlayer::GetRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetRate");

	Params::UnionManaPlayer_GetRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetSelectedTrack
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionManaPlayer::GetSelectedTrack(EManaPlayerTrack TrackType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetSelectedTrack");

	Params::UnionManaPlayer_GetSelectedTrack Parms{};

	Parms.TrackType = TrackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetStatus
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaComponentStatus                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EManaComponentStatus UUnionManaPlayer::GetStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetStatus");

	Params::UnionManaPlayer_GetStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UUnionManaPlayer::GetTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetTime");

	Params::UnionManaPlayer_GetTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetTrackDisplayName
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionManaPlayer::GetTrackDisplayName(EManaPlayerTrack TrackType, int32 TrackIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetTrackDisplayName");

	Params::UnionManaPlayer_GetTrackDisplayName Parms{};

	Parms.TrackType = TrackType;
	Parms.TrackIndex = TrackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetTrackFormat
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionManaPlayer::GetTrackFormat(EManaPlayerTrack TrackType, int32 TrackIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetTrackFormat");

	Params::UnionManaPlayer_GetTrackFormat Parms{};

	Parms.TrackType = TrackType;
	Parms.TrackIndex = TrackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.GetTrackLanguage
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EManaPlayerTrack                        TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TrackIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionManaPlayer::GetTrackLanguage(EManaPlayerTrack TrackType, int32 TrackIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "GetTrackLanguage");

	Params::UnionManaPlayer_GetTrackLanguage Parms{};

	Parms.TrackType = TrackType;
	Parms.TrackIndex = TrackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.HasError
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::HasError() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "HasError");

	Params::UnionManaPlayer_HasError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsClosed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsClosed");

	Params::UnionManaPlayer_IsClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsLooping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsLooping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsLooping");

	Params::UnionManaPlayer_IsLooping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsPaused");

	Params::UnionManaPlayer_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsPlaying");

	Params::UnionManaPlayer_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsPreparing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsPreparing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsPreparing");

	Params::UnionManaPlayer_IsPreparing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsReady");

	Params::UnionManaPlayer_IsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionManaPlayer.IsSeeking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionManaPlayer::IsSeeking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionManaPlayer", "IsSeeking");

	Params::UnionManaPlayer_IsSeeking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetRequestTimeManager.ClearAll
// (Final, Native, Public, BlueprintCallable)

void UUnionNetRequestTimeManager::ClearAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "ClearAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetRequestTimeManager.ClearCompensationRequestTime
// (Final, Native, Public, BlueprintCallable)

void UUnionNetRequestTimeManager::ClearCompensationRequestTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "ClearCompensationRequestTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetRequestTimeManager.IsCommunicationTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetRequestTimeManager::IsCommunicationTime(const class FString& ApiName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "IsCommunicationTime");

	Params::UnionNetRequestTimeManager_IsCommunicationTime Parms{};

	Parms.ApiName = std::move(ApiName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetRequestTimeManager.IsCommunicationTimeCompensation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetRequestTimeManager::IsCommunicationTimeCompensation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "IsCommunicationTimeCompensation");

	Params::UnionNetRequestTimeManager_IsCommunicationTimeCompensation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetRequestTimeManager.IsCommunicationTimeForError
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetRequestTimeManager::IsCommunicationTimeForError(const class FString& ApiName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "IsCommunicationTimeForError");

	Params::UnionNetRequestTimeManager_IsCommunicationTimeForError Parms{};

	Parms.ApiName = std::move(ApiName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetRequestTimeManager.SetResponseTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetRequestTimeManager::SetResponseTime(const class FString& ApiName, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "SetResponseTime");

	Params::UnionNetRequestTimeManager_SetResponseTime Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetRequestTimeManager.SetResponseTimeCompensation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetRequestTimeManager::SetResponseTimeCompensation(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNetRequestTimeManager", "SetResponseTimeCompensation");

	Params::UnionNetRequestTimeManager_SetResponseTimeCompensation Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.CheckOnlineSettingsForLobby
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLobbyDoesMatchOnlineSettings*   OutDoesMatch                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetUtils::CheckOnlineSettingsForLobby(const class UObject* WorldContextObject, int32 LocalUserNum, const struct FLobbyId& LobbyId, struct FLobbyDoesMatchOnlineSettings* OutDoesMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "CheckOnlineSettingsForLobby");

	Params::UnionNetUtils_CheckOnlineSettingsForLobby Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LocalUserNum = LocalUserNum;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDoesMatch != nullptr)
		*OutDoesMatch = std::move(Parms.OutDoesMatch);

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.CompareLobbyId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  OtherLobbyId                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetUtils::CompareLobbyId(const struct FLobbyId& LobbyId, const struct FLobbyId& OtherLobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "CompareLobbyId");

	Params::UnionNetUtils_CompareLobbyId Parms{};

	Parms.LobbyId = std::move(LobbyId);
	Parms.OtherLobbyId = std::move(OtherLobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.CompareUserId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId1                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          UserId2                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetUtils::CompareUserId(const struct FUniqueNetIdRepl& UserId1, const struct FUniqueNetIdRepl& UserId2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "CompareUserId");

	Params::UnionNetUtils_CompareUserId Parms{};

	Parms.UserId1 = std::move(UserId1);
	Parms.UserId2 = std::move(UserId2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.ConvertLobbyIdToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString*                          OutUserIdString                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::ConvertLobbyIdToString(const struct FLobbyId& LobbyId, class FString* OutUserIdString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "ConvertLobbyIdToString");

	Params::UnionNetUtils_ConvertLobbyIdToString Parms{};

	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserIdString != nullptr)
		*OutUserIdString = std::move(Parms.OutUserIdString);
}


// Function UnionSystem.UnionNetUtils.ConvertUserIdToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FUniqueNetIdRepl&          UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutUserIdString                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::ConvertUserIdToString(const struct FUniqueNetIdRepl& UserId, class FString* OutUserIdString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "ConvertUserIdToString");

	Params::UnionNetUtils_ConvertUserIdToString Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUserIdString != nullptr)
		*OutUserIdString = std::move(Parms.OutUserIdString);
}


// Function UnionSystem.UnionNetUtils.CRM_PutConnectionError_Api
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorNumber                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Elapsed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::CRM_PutConnectionError_Api(const class UObject* WorldContextObject, int32 ErrorNumber, int32 ErrorCode, const class FString& ErrorMessage, const class FString& ApiName, int32 Elapsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "CRM_PutConnectionError_Api");

	Params::UnionNetUtils_CRM_PutConnectionError_Api Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ErrorNumber = ErrorNumber;
	Parms.ErrorCode = ErrorCode;
	Parms.ErrorMessage = std::move(ErrorMessage);
	Parms.ApiName = std::move(ApiName);
	Parms.Elapsed = Elapsed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.CRM_PutConnectionError_Full
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorNumber                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    OpponentUserId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    entryRaceId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserSlotId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DisconnectionReason                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DisconnectionReasonInfo                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ApiName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Elapsed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::CRM_PutConnectionError_Full(const class UObject* WorldContextObject, int32 ErrorNumber, int32 ErrorCode, const class FString& ErrorMessage, const class FString& OpponentUserId, const class FString& entryRaceId, int32 UserSlotId, int32 DisconnectionReason, const class FString& DisconnectionReasonInfo, const class FString& ApiName, int32 Elapsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "CRM_PutConnectionError_Full");

	Params::UnionNetUtils_CRM_PutConnectionError_Full Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ErrorNumber = ErrorNumber;
	Parms.ErrorCode = ErrorCode;
	Parms.ErrorMessage = std::move(ErrorMessage);
	Parms.OpponentUserId = std::move(OpponentUserId);
	Parms.entryRaceId = std::move(entryRaceId);
	Parms.UserSlotId = UserSlotId;
	Parms.DisconnectionReason = DisconnectionReason;
	Parms.DisconnectionReasonInfo = std::move(DisconnectionReasonInfo);
	Parms.ApiName = std::move(ApiName);
	Parms.Elapsed = Elapsed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.CRM_PutConnectionError_Minimum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorNumber                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::CRM_PutConnectionError_Minimum(const class UObject* WorldContextObject, int32 ErrorNumber, int32 ErrorCode, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "CRM_PutConnectionError_Minimum");

	Params::UnionNetUtils_CRM_PutConnectionError_Minimum Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ErrorNumber = ErrorNumber;
	Parms.ErrorCode = ErrorCode;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_Lobby_Create
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyContextBase*                LobbyContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPublic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHostMigration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>&OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_Lobby_Create(const class UObject* WorldContextObject, class ULobbyContextBase* LobbyContext, bool bLocked, bool bPublic, bool bHostMigration, const class FString& Password, const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_Lobby_Create");

	Params::UnionNetUtils_Debug_Lobby_Create Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;
	Parms.bLocked = bLocked;
	Parms.bPublic = bPublic;
	Parms.bHostMigration = bHostMigration;
	Parms.Password = std::move(Password);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_Lobby_Exit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyContextBase*                LobbyContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>&OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_Lobby_Exit(const class UObject* WorldContextObject, class ULobbyContextBase* LobbyContext, const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_Lobby_Exit");

	Params::UnionNetUtils_Debug_Lobby_Exit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_Lobby_Join
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyContextBase*                LobbyContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyJoinInfo*                   JoinInfo                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>&OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_Lobby_Join(const class UObject* WorldContextObject, class ULobbyContextBase* LobbyContext, class ULobbyJoinInfo* JoinInfo, const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_Lobby_Join");

	Params::UnionNetUtils_Debug_Lobby_Join Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;
	Parms.JoinInfo = JoinInfo;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_Lobby_JoinByLobbyId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyContextBase*                LobbyContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>&OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_Lobby_JoinByLobbyId(const class UObject* WorldContextObject, class ULobbyContextBase* LobbyContext, const struct FLobbyId& LobbyId, const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_Lobby_JoinByLobbyId");

	Params::UnionNetUtils_Debug_Lobby_JoinByLobbyId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;
	Parms.LobbyId = std::move(LobbyId);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_Lobby_Seach
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyContextBase*                LobbyContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)>&OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_Lobby_Seach(const class UObject* WorldContextObject, class ULobbyContextBase* LobbyContext, const TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_Lobby_Seach");

	Params::UnionNetUtils_Debug_Lobby_Seach Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_Lobby_SyncInitMemberAttributes
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULobbyContextBase*                LobbyContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>&OnComplete                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_Lobby_SyncInitMemberAttributes(const class UObject* WorldContextObject, class ULobbyContextBase* LobbyContext, const TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)>& OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_Lobby_SyncInitMemberAttributes");

	Params::UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_P2P_DelConnectMemberSquad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULobbyMemberContextBase*    MemberContext                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_P2P_DelConnectMemberSquad(const class UObject* WorldContextObject, const class ULobbyMemberContextBase* MemberContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_P2P_DelConnectMemberSquad");

	Params::UnionNetUtils_Debug_P2P_DelConnectMemberSquad Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MemberContext = MemberContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_P2P_EndConnectSquadRequest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULobbyContextBase*          LobbyContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_P2P_EndConnectSquadRequest(const class UObject* WorldContextObject, const class ULobbyContextBase* LobbyContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_P2P_EndConnectSquadRequest");

	Params::UnionNetUtils_Debug_P2P_EndConnectSquadRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_P2P_StartConnect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsHost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_P2P_StartConnect(const class UObject* WorldContextObject, bool bIsHost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_P2P_StartConnect");

	Params::UnionNetUtils_Debug_P2P_StartConnect Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsHost = bIsHost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_P2P_StartConnectionP2P
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_P2P_StartConnectionP2P(const class UObject* WorldContextObject, const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_P2P_StartConnectionP2P");

	Params::UnionNetUtils_Debug_P2P_StartConnectionP2P Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_P2P_StartConnectSquad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_P2P_StartConnectSquad(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_P2P_StartConnectSquad");

	Params::UnionNetUtils_Debug_P2P_StartConnectSquad Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.Debug_P2P_UpdateConnectMemberSquad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULobbyContextBase*          LobbyContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::Debug_P2P_UpdateConnectMemberSquad(const class UObject* WorldContextObject, const class ULobbyContextBase* LobbyContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "Debug_P2P_UpdateConnectMemberSquad");

	Params::UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LobbyContext = LobbyContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.GetComputerNameString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionNetUtils::GetComputerNameString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "GetComputerNameString");

	Params::UnionNetUtils_GetComputerNameString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.GetEOSRelayControlString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionNetUtils::GetEOSRelayControlString(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "GetEOSRelayControlString");

	Params::UnionNetUtils_GetEOSRelayControlString Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.GetMatchSettingString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionNetUtils::GetMatchSettingString(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "GetMatchSettingString");

	Params::UnionNetUtils_GetMatchSettingString Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.GetNetworkSettingName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UUnionNetUtils::GetNetworkSettingName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "GetNetworkSettingName");

	Params::UnionNetUtils_GetNetworkSettingName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.GetServerStagingName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionNetUtils::GetServerStagingName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "GetServerStagingName");

	Params::UnionNetUtils_GetServerStagingName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.GetTickMilliseconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUnionNetUtils::GetTickMilliseconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "GetTickMilliseconds");

	Params::UnionNetUtils_GetTickMilliseconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.IsValidLobbyId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLobbyId&                  LobbyId                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionNetUtils::IsValidLobbyId(const struct FLobbyId& LobbyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "IsValidLobbyId");

	Params::UnionNetUtils_IsValidLobbyId Parms{};

	Parms.LobbyId = std::move(LobbyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionNetUtils.MakeLobbyOperationResultByLobbyErrorType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ELobbyErrorType                         LobbyErrorType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLobbyOperationResult*           OutResult                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void UUnionNetUtils::MakeLobbyOperationResultByLobbyErrorType(ELobbyErrorType LobbyErrorType, struct FLobbyOperationResult* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "MakeLobbyOperationResultByLobbyErrorType");

	Params::UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType Parms{};

	Parms.LobbyErrorType = LobbyErrorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function UnionSystem.UnionNetUtils.SearchLobbyByHostUserId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUniqueNetIdRepl&          HostProductUserId                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)>OnComplete                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionNetUtils::SearchLobbyByHostUserId(const class UObject* WorldContextObject, int32 LocalUserNum, const struct FUniqueNetIdRepl& HostProductUserId, TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)> OnComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "SearchLobbyByHostUserId");

	Params::UnionNetUtils_SearchLobbyByHostUserId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LocalUserNum = LocalUserNum;
	Parms.HostProductUserId = std::move(HostProductUserId);
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionNetUtils.ToLobbyErrorType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FOnlineErrorBP&            Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ELobbyErrorType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELobbyErrorType UUnionNetUtils::ToLobbyErrorType(const struct FOnlineErrorBP& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionNetUtils", "ToLobbyErrorType");

	Params::UnionNetUtils_ToLobbyErrorType Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformDebugMenu.OnGetAChievementEnd
// (Final, Native, Private)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionPlatformDebugMenu::OnGetAChievementEnd(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPlatformDebugMenu", "OnGetAChievementEnd");

	Params::UnionPlatformDebugMenu_OnGetAChievementEnd Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformDebugMenu.OnPlatformStoreClose
// (Final, Native, Private)
// Parameters:
// EUnionOpenStoreResultType               InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionPlatformDebugMenu::OnPlatformStoreClose(EUnionOpenStoreResultType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPlatformDebugMenu", "OnPlatformStoreClose");

	Params::UnionPlatformDebugMenu_OnPlatformStoreClose Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformManager.OnPlatformEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FUnionPlatformEventInfo&   EventInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionPlatformManager::OnPlatformEvent(const struct FUnionPlatformEventInfo& EventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPlatformManager", "OnPlatformEvent");

	Params::UnionPlatformManager_OnPlatformEvent Parms{};

	Parms.EventInfo = std::move(EventInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.GetGamepadAcceptKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UUnionPlatformUtils::GetGamepadAcceptKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetGamepadAcceptKey");

	Params::UnionPlatformUtils_GetGamepadAcceptKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetGamepadBackKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UUnionPlatformUtils::GetGamepadBackKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetGamepadBackKey");

	Params::UnionPlatformUtils_GetGamepadBackKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetGamerTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionPlatformUtils::GetGamerTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetGamerTag");

	Params::UnionPlatformUtils_GetGamerTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetNXOnlinePrivilege
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ENXPrivilegeType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENXPrivilegeType UUnionPlatformUtils::GetNXOnlinePrivilege()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetNXOnlinePrivilege");

	Params::UnionPlatformUtils_GetNXOnlinePrivilege Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetOnlinePlayRestrictionType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUnionPlatformOnlineRestrictionType     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionPlatformOnlineRestrictionType UUnionPlatformUtils::GetOnlinePlayRestrictionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetOnlinePlayRestrictionType");

	Params::UnionPlatformUtils_GetOnlinePlayRestrictionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetPresenceId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUnionPresenceType                      PresenceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionPlatformUtils::GetPresenceId(EUnionPresenceType PresenceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetPresenceId");

	Params::UnionPlatformUtils_GetPresenceId Parms{};

	Parms.PresenceType = PresenceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetPresenceText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUnionPresenceType                      PresenceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UUnionPlatformUtils::GetPresenceText(EUnionPresenceType PresenceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetPresenceText");

	Params::UnionPlatformUtils_GetPresenceText Parms{};

	Parms.PresenceType = PresenceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.GetPresenceTexts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EUnionPresenceType                      PresenceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::GetPresenceTexts(EUnionPresenceType PresenceType, TArray<class FString>* OutList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "GetPresenceTexts");

	Params::UnionPlatformUtils_GetPresenceTexts Parms{};

	Parms.PresenceType = PresenceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutList != nullptr)
		*OutList = std::move(Parms.OutList);

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsHighEndPlatform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsHighEndPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsHighEndPlatform");

	Params::UnionPlatformUtils_IsHighEndPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsInvertGamepadAcceptAndBackKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsInvertGamepadAcceptAndBackKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsInvertGamepadAcceptAndBackKey");

	Params::UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsNXOnlinePrivilege
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsNXOnlinePrivilege()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsNXOnlinePrivilege");

	Params::UnionPlatformUtils_IsNXOnlinePrivilege Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsOnlinePrivilegeOn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsOnlinePrivilegeOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsOnlinePrivilegeOn");

	Params::UnionPlatformUtils_IsOnlinePrivilegeOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsPremiumResolveUiCanceledByUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsPremiumResolveUiCanceledByUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsPremiumResolveUiCanceledByUser");

	Params::UnionPlatformUtils_IsPremiumResolveUiCanceledByUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsProhibitedOnlinPlayByParentalControls
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsProhibitedOnlinPlayByParentalControls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsProhibitedOnlinPlayByParentalControls");

	Params::UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsStartedStreamingInstall
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsStartedStreamingInstall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsStartedStreamingInstall");

	Params::UnionPlatformUtils_IsStartedStreamingInstall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsUserHasNetworkRankingPrivilege
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsUserHasNetworkRankingPrivilege()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsUserHasNetworkRankingPrivilege");

	Params::UnionPlatformUtils_IsUserHasNetworkRankingPrivilege Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.IsUserHasPrivilege
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUnionPlatformPrivilegeType             UnionPlatformPrivilegeType                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPlatformUtils::IsUserHasPrivilege(EUnionPlatformPrivilegeType UnionPlatformPrivilegeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "IsUserHasPrivilege");

	Params::UnionPlatformUtils_IsUserHasPrivilege Parms{};

	Parms.UnionPlatformPrivilegeType = UnionPlatformPrivilegeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionPlatformUtils.RequestSoftwareKeyboard
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSoftwareKeyBoardBootParam&PootParam                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionPlatformUtils::RequestSoftwareKeyboard(const struct FSoftwareKeyBoardBootParam& PootParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "RequestSoftwareKeyboard");

	Params::UnionPlatformUtils_RequestSoftwareKeyboard Parms{};

	Parms.PootParam = std::move(PootParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.SetNXOnlinePrivilege
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ENXPrivilegeType                        NXPrivilegeType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionPlatformUtils::SetNXOnlinePrivilege(ENXPrivilegeType NXPrivilegeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "SetNXOnlinePrivilege");

	Params::UnionPlatformUtils_SetNXOnlinePrivilege Parms{};

	Parms.NXPrivilegeType = NXPrivilegeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.SetShareAllOff
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionPlatformUtils::SetShareAllOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "SetShareAllOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.SetShareAllOn
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionPlatformUtils::SetShareAllOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "SetShareAllOn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.StartPresence
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EUnionPresenceType&               PresenceType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionPlatformUtils::StartPresence(const EUnionPresenceType& PresenceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "StartPresence");

	Params::UnionPlatformUtils_StartPresence Parms{};

	Parms.PresenceType = PresenceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.StartRemotePlayExclusionZone
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionPlatformUtils::StartRemotePlayExclusionZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "StartRemotePlayExclusionZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.StopRemotePlayExclusionZone
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionPlatformUtils::StopRemotePlayExclusionZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "StopRemotePlayExclusionZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionPlatformUtils.WriteAchievement
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    AchievementName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NowValue                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            MaxValue                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionPlatformUtils::WriteAchievement(const class FString& AchievementName, const float& NowValue, const float& MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionPlatformUtils", "WriteAchievement");

	Params::UnionPlatformUtils_WriteAchievement Parms{};

	Parms.AchievementName = std::move(AchievementName);
	Parms.NowValue = NowValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeFinalLap(const class FString& Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeFinalLap");

	Params::UnionRaceBGMLibrary_ChangeFinalLap Parms{};

	Parms.Label = std::move(Label);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLapForce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Label2                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeFinalLapForce(const class FString& Label, const class FString& Label2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeFinalLapForce");

	Params::UnionRaceBGMLibrary_ChangeFinalLapForce Parms{};

	Parms.Label = std::move(Label);
	Parms.Label2 = std::move(Label2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLapLast
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeFinalLapLast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeFinalLapLast");

	Params::UnionRaceBGMLibrary_ChangeFinalLapLast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLapWhenTimeTrial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeFinalLapWhenTimeTrial(const class FString& Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeFinalLapWhenTimeTrial");

	Params::UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial Parms{};

	Parms.Label = std::move(Label);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeFirstLapWhenAnotherTimeTrial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeFirstLapWhenAnotherTimeTrial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeFirstLapWhenAnotherTimeTrial");

	Params::UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeGateDecide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRandomCourse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeGateDecide(const class FString& Label, bool bRandomCourse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeGateDecide");

	Params::UnionRaceBGMLibrary_ChangeGateDecide Parms{};

	Parms.Label = std::move(Label);
	Parms.bRandomCourse = bRandomCourse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeGateSelect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeGateSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeGateSelect");

	Params::UnionRaceBGMLibrary_ChangeGateSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeReturnFromDomainSubInFinalLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeReturnFromDomainSubInFinalLap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeReturnFromDomainSubInFinalLap");

	Params::UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeReturnFromDomainSubInFirstLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeReturnFromDomainSubInFirstLap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeReturnFromDomainSubInFirstLap");

	Params::UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeReturnFromDomainSubInSecondLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeReturnFromDomainSubInSecondLap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeReturnFromDomainSubInSecondLap");

	Params::UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeSecondLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bRandomCourse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeSecondLap(bool bRandomCourse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeSecondLap");

	Params::UnionRaceBGMLibrary_ChangeSecondLap Parms{};

	Parms.bRandomCourse = bRandomCourse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeSecondLapForce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Label2                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeSecondLapForce(const class FString& Label, const class FString& Label2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeSecondLapForce");

	Params::UnionRaceBGMLibrary_ChangeSecondLapForce Parms{};

	Parms.Label = std::move(Label);
	Parms.Label2 = std::move(Label2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeTransitionToDomainSubInFinalLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeTransitionToDomainSubInFinalLap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeTransitionToDomainSubInFinalLap");

	Params::UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeTransitionToDomainSubInFirstLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeTransitionToDomainSubInFirstLap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeTransitionToDomainSubInFirstLap");

	Params::UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.ChangeTransitionToDomainSubInSecondLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::ChangeTransitionToDomainSubInSecondLap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "ChangeTransitionToDomainSubInSecondLap");

	Params::UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.PlayFirstLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Label2                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::PlayFirstLap(const class FString& Label, const class FString& Label2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "PlayFirstLap");

	Params::UnionRaceBGMLibrary_PlayFirstLap Parms{};

	Parms.Label = std::move(Label);
	Parms.Label2 = std::move(Label2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.PlayGoalWithParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAppRaceEventGoalData&     InGoalParam                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::PlayGoalWithParam(const struct FAppRaceEventGoalData& InGoalParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "PlayGoalWithParam");

	Params::UnionRaceBGMLibrary_PlayGoalWithParam Parms{};

	Parms.InGoalParam = std::move(InGoalParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.PlayIntro
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::PlayIntro(const class FString& Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "PlayIntro");

	Params::UnionRaceBGMLibrary_PlayIntro Parms{};

	Parms.Label = std::move(Label);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.PlayOnCourseEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFinalLap                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::PlayOnCourseEditor(const class FString& Label, bool bFinalLap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "PlayOnCourseEditor");

	Params::UnionRaceBGMLibrary_PlayOnCourseEditor Parms{};

	Parms.Label = std::move(Label);
	Parms.bFinalLap = bFinalLap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.PlayPreFirstLapWhenAnotherTimeTrial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::PlayPreFirstLapWhenAnotherTimeTrial(const class FString& Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "PlayPreFirstLapWhenAnotherTimeTrial");

	Params::UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial Parms{};

	Parms.Label = std::move(Label);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.RaceBGMFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::RaceBGMFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "RaceBGMFinished");

	Params::UnionRaceBGMLibrary_RaceBGMFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.SetAisacGateDistanceFirstLapToSecondLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::SetAisacGateDistanceFirstLapToSecondLap(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "SetAisacGateDistanceFirstLapToSecondLap");

	Params::UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.SetAisacGateDistanceSecondLapToFinalLap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::SetAisacGateDistanceSecondLapToFinalLap(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "SetAisacGateDistanceSecondLapToFinalLap");

	Params::UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.SetGoalStageSelectorLabel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InGoalStageSelectorLabel                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceBGMLibrary::SetGoalStageSelectorLabel(const class FString& InGoalStageSelectorLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "SetGoalStageSelectorLabel");

	Params::UnionRaceBGMLibrary_SetGoalStageSelectorLabel Parms{};

	Parms.InGoalStageSelectorLabel = std::move(InGoalStageSelectorLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRaceBGMLibrary.SetVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::SetVolume(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "SetVolume");

	Params::UnionRaceBGMLibrary_SetVolume Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRaceBGMLibrary.Stop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceBGMLibrary::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceBGMLibrary", "Stop");

	Params::UnionRaceBGMLibrary_Stop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRenderTargetUtility.CompressTexture2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EUnionTextureCompressType         Mode                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UUnionRenderTargetUtility::CompressTexture2D(class UTexture2D* Texture, const EUnionTextureCompressType Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRenderTargetUtility", "CompressTexture2D");

	Params::UnionRenderTargetUtility_CompressTexture2D Parms{};

	Parms.Texture = Texture;
	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRenderTargetUtility.ConvertAndCompressRenderTargetToTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionTextureCompressType               CompressType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Partitions                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Uber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UUnionRenderTargetUtility::ConvertAndCompressRenderTargetToTexture(class UTextureRenderTarget2D* RenderTarget, EUnionTextureCompressType CompressType, int32 Partitions, int32 Uber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRenderTargetUtility", "ConvertAndCompressRenderTargetToTexture");

	Params::UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture Parms{};

	Parms.RenderTarget = RenderTarget;
	Parms.CompressType = CompressType;
	Parms.Partitions = Partitions;
	Parms.Uber = Uber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRenderTargetUtility.LoadVfxAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionRenderTargetUtility::LoadVfxAsset(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRenderTargetUtility", "LoadVfxAsset");

	Params::UnionRenderTargetUtility_LoadVfxAsset Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRenderTargetUtility.ReflectionFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCineCameraComponent*             Cine                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneCaptureComponent2D*         Scene                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FOVScale                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRenderTargetUtility::ReflectionFocus(class UCineCameraComponent* Cine, class USceneCaptureComponent2D* Scene, float FOVScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRenderTargetUtility", "ReflectionFocus");

	Params::UnionRenderTargetUtility_ReflectionFocus Parms{};

	Parms.Cine = Cine;
	Parms.Scene = Scene;
	Parms.FOVScale = FOVScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRenderTargetUtility.SetPostProcessToActiveCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MaterialName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRenderTargetUtility::SetPostProcessToActiveCamera(class UWorld* World, class FName MaterialName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRenderTargetUtility", "SetPostProcessToActiveCamera");

	Params::UnionRenderTargetUtility_SetPostProcessToActiveCamera Parms{};

	Parms.World = World;
	Parms.MaterialName = MaterialName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionRenderTargetUtility.UpdateRenderTargetSizeForRuntime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class APlayerController*          PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ReductionScaleX                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ReductionScaleY                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRenderTargetUtility::UpdateRenderTargetSizeForRuntime(class UTextureRenderTarget2D* RenderTarget, const class APlayerController* PlayerController, const float ReductionScaleX, const float ReductionScaleY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRenderTargetUtility", "UpdateRenderTargetSizeForRuntime");

	Params::UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime Parms{};

	Parms.RenderTarget = RenderTarget;
	Parms.PlayerController = PlayerController;
	Parms.ReductionScaleX = ReductionScaleX;
	Parms.ReductionScaleY = ReductionScaleY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRingGateCameraInterface.AddRingGateHiddenActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRingGateCameraInterface::AddRingGateHiddenActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRingGateCameraInterface", "AddRingGateHiddenActor");

	Params::UnionRingGateCameraInterface_AddRingGateHiddenActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRingGateCameraInterface.AddRingGateShowActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRingGateCameraInterface::AddRingGateShowActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRingGateCameraInterface", "AddRingGateShowActor");

	Params::UnionRingGateCameraInterface_AddRingGateShowActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRingGateCameraInterface.RemoveRingGateHiddenActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRingGateCameraInterface::RemoveRingGateHiddenActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRingGateCameraInterface", "RemoveRingGateHiddenActor");

	Params::UnionRingGateCameraInterface_RemoveRingGateHiddenActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionRingGateCameraInterface.RemoveRingGateShowActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRingGateCameraInterface::RemoveRingGateShowActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRingGateCameraInterface", "RemoveRingGateShowActor");

	Params::UnionRingGateCameraInterface_RemoveRingGateShowActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSaveDataTransferBase.GetResultSearchTrialVersionSaveData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EResultSearchTrialSaveData              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResultSearchTrialSaveData AUnionSaveDataTransferBase::GetResultSearchTrialVersionSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSaveDataTransferBase", "GetResultSearchTrialVersionSaveData");

	Params::UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSaveDataTransferBase.GetResultTransferTrialVersionSaveData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EResultTransferTrialSaveData            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResultTransferTrialSaveData AUnionSaveDataTransferBase::GetResultTransferTrialVersionSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSaveDataTransferBase", "GetResultTransferTrialVersionSaveData");

	Params::UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSaveDataTransferBase.SearchTrialVersionSaveData
// (Final, Native, Public, BlueprintCallable)

void AUnionSaveDataTransferBase::SearchTrialVersionSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSaveDataTransferBase", "SearchTrialVersionSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSaveDataTransferBase.TransferTrialVersionSaveData
// (Final, Native, Public, BlueprintCallable)

void AUnionSaveDataTransferBase::TransferTrialVersionSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSaveDataTransferBase", "TransferTrialVersionSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSettings.SetEnableBlur
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSettings::SetEnableBlur(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "SetEnableBlur");

	Params::UnionSettings_SetEnableBlur Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSettings.SetMinLoDBias
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Bias                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSettings::SetMinLoDBias(int32 Bias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "SetMinLoDBias");

	Params::UnionSettings_SetMinLoDBias Parms{};

	Parms.Bias = Bias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSettings.SetRenderingScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSettings::SetRenderingScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "SetRenderingScale");

	Params::UnionSettings_SetRenderingScale Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSettings.CalcScreenPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSettings::CalcScreenPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "CalcScreenPercentage");

	Params::UnionSettings_CalcScreenPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetCurrentMachinePostProcessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMachinePostProcessSettingsReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FMachinePostProcessSettings UUnionSettings::GetCurrentMachinePostProcessSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetCurrentMachinePostProcessSettings");

	Params::UnionSettings_GetCurrentMachinePostProcessSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetCurrentUnionCastShadowSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUnionCastShadowSettings   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FUnionCastShadowSettings UUnionSettings::GetCurrentUnionCastShadowSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetCurrentUnionCastShadowSettings");

	Params::UnionSettings_GetCurrentUnionCastShadowSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetDynamicShadowEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::GetDynamicShadowEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetDynamicShadowEnable");

	Params::UnionSettings_GetDynamicShadowEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetGFurEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::GetGFurEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetGFurEnable");

	Params::UnionSettings_GetGFurEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetHoldItemSettingsNonPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHoldItemQualitySettings   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FHoldItemQualitySettings UUnionSettings::GetHoldItemSettingsNonPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetHoldItemSettingsNonPC");

	Params::UnionSettings_GetHoldItemSettingsNonPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetHoldItemSettingsPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHoldItemQualitySettings   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FHoldItemQualitySettings UUnionSettings::GetHoldItemSettingsPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetHoldItemSettingsPC");

	Params::UnionSettings_GetHoldItemSettingsPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetLobbyMeshLOD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionSettings::GetLobbyMeshLOD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetLobbyMeshLOD");

	Params::UnionSettings_GetLobbyMeshLOD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetMachineQualitySettingsNonPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMachineQualitySettings    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FMachineQualitySettings UUnionSettings::GetMachineQualitySettingsNonPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetMachineQualitySettingsNonPC");

	Params::UnionSettings_GetMachineQualitySettingsNonPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetMachineQualitySettingsPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMachineQualitySettings    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FMachineQualitySettings UUnionSettings::GetMachineQualitySettingsPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetMachineQualitySettingsPC");

	Params::UnionSettings_GetMachineQualitySettingsPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetMenuMinLoD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionSettings::GetMenuMinLoD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetMenuMinLoD");

	Params::UnionSettings_GetMenuMinLoD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetMinLoDNonPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionSettings::GetMinLoDNonPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetMinLoDNonPC");

	Params::UnionSettings_GetMinLoDNonPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetMinLoDPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionSettings::GetMinLoDPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetMinLoDPC");

	Params::UnionSettings_GetMinLoDPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.GetQualityIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionSettings::GetQualityIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "GetQualityIndex");

	Params::UnionSettings_GetQualityIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.IsCastShadowDashPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::IsCastShadowDashPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "IsCastShadowDashPanel");

	Params::UnionSettings_IsCastShadowDashPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.IsCastShadowItemBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::IsCastShadowItemBox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "IsCastShadowItemBox");

	Params::UnionSettings_IsCastShadowItemBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.IsCastShadowRing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::IsCastShadowRing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "IsCastShadowRing");

	Params::UnionSettings_IsCastShadowRing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.IsEnableFlowingWaterPP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::IsEnableFlowingWaterPP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "IsEnableFlowingWaterPP");

	Params::UnionSettings_IsEnableFlowingWaterPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.IsEnableHiSpeedPP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::IsEnableHiSpeedPP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "IsEnableHiSpeedPP");

	Params::UnionSettings_IsEnableHiSpeedPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSettings.IsEnableRadialBlurPP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSettings::IsEnableRadialBlurPP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSettings", "IsEnableRadialBlurPP");

	Params::UnionSettings_IsEnableRadialBlurPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSkeletalMeshComponent.SetVisibilityWithTickControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewVisibility                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPropagateToChildren                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSkeletalMeshComponent::SetVisibilityWithTickControl(bool bNewVisibility, bool bPropagateToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSkeletalMeshComponent", "SetVisibilityWithTickControl");

	Params::UnionSkeletalMeshComponent_SetVisibilityWithTickControl Parms{};

	Parms.bNewVisibility = bNewVisibility;
	Parms.bPropagateToChildren = bPropagateToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.GetCharacterStatsEventValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     StatsEventId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EDriverId                         DriverId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionStatsManager::GetCharacterStatsEventValue(const EStatsEventId StatsEventId, const EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetCharacterStatsEventValue");

	Params::UnionStatsManager_GetCharacterStatsEventValue Parms{};

	Parms.StatsEventId = StatsEventId;
	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionStatsManager.GetCharacterStatsEventValueTopThree
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EDriverId>*                      TopThreeIds                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>*                          TopThreeCounts                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionStatsManager::GetCharacterStatsEventValueTopThree(TArray<EDriverId>* TopThreeIds, TArray<int32>* TopThreeCounts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetCharacterStatsEventValueTopThree");

	Params::UnionStatsManager_GetCharacterStatsEventValueTopThree Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TopThreeIds != nullptr)
		*TopThreeIds = std::move(Parms.TopThreeIds);

	if (TopThreeCounts != nullptr)
		*TopThreeCounts = std::move(Parms.TopThreeCounts);
}


// Function UnionSystem.UnionStatsManager.GetMachineStatsEventValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     StatsEventId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMachineId                        MachineId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionStatsManager::GetMachineStatsEventValue(const EStatsEventId StatsEventId, const EMachineId MachineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetMachineStatsEventValue");

	Params::UnionStatsManager_GetMachineStatsEventValue Parms{};

	Parms.StatsEventId = StatsEventId;
	Parms.MachineId = MachineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionStatsManager.GetResultHonorList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHonorCommendationData>*  OutDataList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionStatsManager::GetResultHonorList(int32 RacerIndex, TArray<struct FHonorCommendationData>* OutDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetResultHonorList");

	Params::UnionStatsManager_GetResultHonorList Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDataList != nullptr)
		*OutDataList = std::move(Parms.OutDataList);
}


// Function UnionSystem.UnionStatsManager.GetSaveRedStarRings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> UUnionStatsManager::GetSaveRedStarRings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetSaveRedStarRings");

	Params::UnionStatsManager_GetSaveRedStarRings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionStatsManager.GetStatsEventValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     StatsEventId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionStatsManager::GetStatsEventValue(const EStatsEventId StatsEventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetStatsEventValue");

	Params::UnionStatsManager_GetStatsEventValue Parms{};

	Parms.StatsEventId = StatsEventId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionStatsManager.GetTopThreeCharactersUsageAddOne
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDriverId                               AddOneDriverId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FCommon_HistoryData_CharacterUsage>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCommon_HistoryData_CharacterUsage> UUnionStatsManager::GetTopThreeCharactersUsageAddOne(EDriverId AddOneDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetTopThreeCharactersUsageAddOne");

	Params::UnionStatsManager_GetTopThreeCharactersUsageAddOne Parms{};

	Parms.AddOneDriverId = AddOneDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionStatsManager.IsRaceRedStarRingDisplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionStatsManager::IsRaceRedStarRingDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "IsRaceRedStarRingDisplay");

	Params::UnionStatsManager_IsRaceRedStarRingDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionStatsManager.OnSetHonorList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHonorCommendationDataSetList&list                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionStatsManager::OnSetHonorList(const struct FHonorCommendationDataSetList& list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "OnSetHonorList");

	Params::UnionStatsManager_OnSetHonorList Parms{};

	Parms.list = std::move(list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.ReinitializeStatsForDemo
// (Final, Native, Public, BlueprintCallable)

void UUnionStatsManager::ReinitializeStatsForDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "ReinitializeStatsForDemo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.RequestAddDriversParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     StatsEventId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EDriverId                         DriverId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AddValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionStatsManager::RequestAddDriversParameter(const EStatsEventId StatsEventId, const EDriverId DriverId, const int32 AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "RequestAddDriversParameter");

	Params::UnionStatsManager_RequestAddDriversParameter Parms{};

	Parms.StatsEventId = StatsEventId;
	Parms.DriverId = DriverId;
	Parms.AddValue = AddValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.RequestAddMachinesParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     StatsEventId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMachineId                        MachineId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AddValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionStatsManager::RequestAddMachinesParameter(const EStatsEventId StatsEventId, const EMachineId MachineId, const int32 AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "RequestAddMachinesParameter");

	Params::UnionStatsManager_RequestAddMachinesParameter Parms{};

	Parms.StatsEventId = StatsEventId;
	Parms.MachineId = MachineId;
	Parms.AddValue = AddValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.RequestAddRaceDetailsParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStatsEventId                     StatsEventId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AddValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionStatsManager::RequestAddRaceDetailsParameter(const EStatsEventId StatsEventId, const int32 AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "RequestAddRaceDetailsParameter");

	Params::UnionStatsManager_RequestAddRaceDetailsParameter Parms{};

	Parms.StatsEventId = StatsEventId;
	Parms.AddValue = AddValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.SetSaveRedStarRings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<bool>&                     InRSRs                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionStatsManager::SetSaveRedStarRings(const TArray<bool>& InRSRs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "SetSaveRedStarRings");

	Params::UnionStatsManager_SetSaveRedStarRings Parms{};

	Parms.InRSRs = std::move(InRSRs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionStatsManager.GetMultiPlayBonus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionStatsManager::GetMultiPlayBonus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStatsManager", "GetMultiPlayBonus");

	Params::UnionStatsManager_GetMultiPlayBonus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.AddCustomPresent
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionSystemBP::AddCustomPresent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "AddCustomPresent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.AddLevel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Load                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LightChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Dependant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::AddLevel(const class UObject* WorldContextObject, class FName LevelName, bool Load, bool Visible, int32 LightChannel, const struct FVector& Location, class FName Dependant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "AddLevel");

	Params::UnionSystemBP_AddLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = LevelName;
	Parms.Load = Load;
	Parms.Visible = Visible;
	Parms.LightChannel = LightChannel;
	Parms.Location = std::move(Location);
	Parms.Dependant = Dependant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.AddLevelByReference
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UWorld>            Level                                                  (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Load                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LightChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UWorld>            Dependant                                              (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::AddLevelByReference(const class UObject* WorldContextObject, TSoftObjectPtr<class UWorld> Level, bool Load, bool Visible, int32 LightChannel, const struct FVector& Location, TSoftObjectPtr<class UWorld> Dependant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "AddLevelByReference");

	Params::UnionSystemBP_AddLevelByReference Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Level = Level;
	Parms.Load = Load;
	Parms.Visible = Visible;
	Parms.LightChannel = LightChannel;
	Parms.Location = std::move(Location);
	Parms.Dependant = Dependant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.AllLevelLoaded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::AllLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "AllLevelLoaded");

	Params::UnionSystemBP_AllLevelLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.AttachTo
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::AttachTo(const struct FSoundHandle& Handle, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, EAttachLocation LocationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "AttachTo");

	Params::UnionSystemBP_AttachTo Parms{};

	Parms.Handle = std::move(Handle);
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.LocationType = LocationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.ClearLevels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::ClearLevels(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "ClearLevels");

	Params::UnionSystemBP_ClearLevels Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.DeleteInvalidSaveData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   bOutQuitGame                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::DeleteInvalidSaveData(bool* bOutQuitGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "DeleteInvalidSaveData");

	Params::UnionSystemBP_DeleteInvalidSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutQuitGame != nullptr)
		*bOutQuitGame = Parms.bOutQuitGame;
}


// Function UnionSystem.UnionSystemBP.DoesPackageExist
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    LongPackageName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::DoesPackageExist(const class FString& LongPackageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "DoesPackageExist");

	Params::UnionSystemBP_DoesPackageExist Parms{};

	Parms.LongPackageName = std::move(LongPackageName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.FindDirectionalLight
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LightChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDirectionalLightComponent**      DirectionalLight                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::FindDirectionalLight(int32 LightChannel, class UDirectionalLightComponent** DirectionalLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "FindDirectionalLight");

	Params::UnionSystemBP_FindDirectionalLight Parms{};

	Parms.LightChannel = LightChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DirectionalLight != nullptr)
		*DirectionalLight = Parms.DirectionalLight;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetActorOfLevelByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UUnionSystemBP::GetActorOfLevelByClass(const class AActor* Target, TSubclassOf<class AActor> ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetActorOfLevelByClass");

	Params::UnionSystemBP_GetActorOfLevelByClass Parms{};

	Parms.Target = Target;
	Parms.ActorClass = ActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetAllActorsOfLevel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionSystemBP::GetAllActorsOfLevel(const class UObject* WorldContextObject, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetAllActorsOfLevel");

	Params::UnionSystemBP_GetAllActorsOfLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);
}


// Function UnionSystem.UnionSystemBP.GetAtomComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* UUnionSystemBP::GetAtomComponent(const struct FSoundHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetAtomComponent");

	Params::UnionSystemBP_GetAtomComponent Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetBGMVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSystemBP::GetBGMVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetBGMVolume");

	Params::UnionSystemBP_GetBGMVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetFFBVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSystemBP::GetFFBVolume(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetFFBVolume");

	Params::UnionSystemBP_GetFFBVolume Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetGameSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UUnionSettings*             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UUnionSettings* UUnionSystemBP::GetGameSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetGameSettings");

	Params::UnionSystemBP_GetGameSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetLevelName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UWorld*                     World                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionSystemBP::GetLevelName(const class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetLevelName");

	Params::UnionSystemBP_GetLevelName Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetLevelNameByReference
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSoftObjectPtr<class UWorld>      SoftWorld                                              (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionSystemBP::GetLevelNameByReference(const TSoftObjectPtr<class UWorld> SoftWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetLevelNameByReference");

	Params::UnionSystemBP_GetLevelNameByReference Parms{};

	Parms.SoftWorld = SoftWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetMasterVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSystemBP::GetMasterVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetMasterVolume");

	Params::UnionSystemBP_GetMasterVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetMasterVolumeMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::GetMasterVolumeMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetMasterVolumeMute");

	Params::UnionSystemBP_GetMasterVolumeMute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetMenuKeyboardButtonImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionSystemBP::GetMenuKeyboardButtonImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetMenuKeyboardButtonImage");

	Params::UnionSystemBP_GetMenuKeyboardButtonImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetMenuMouseButtonImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionSystemBP::GetMenuMouseButtonImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetMenuMouseButtonImage");

	Params::UnionSystemBP_GetMenuMouseButtonImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetPlatformControllerButtonImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EControllerButtonTextureType            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionPlatform                          Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionSystemBP::GetPlatformControllerButtonImage(EControllerButtonTextureType Type, EUnionPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetPlatformControllerButtonImage");

	Params::UnionSystemBP_GetPlatformControllerButtonImage Parms{};

	Parms.Type = Type;
	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetPlatformIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUnionPlatform                          Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionSystemBP::GetPlatformIcon(EUnionPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetPlatformIcon");

	Params::UnionSystemBP_GetPlatformIcon Parms{};

	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetPlatformResource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUnionControllerType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionPlatform                          Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionSystemBP::GetPlatformResource(EUnionControllerType Type, EUnionPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetPlatformResource");

	Params::UnionSystemBP_GetPlatformResource Parms{};

	Parms.Type = Type;
	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetSEVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSystemBP::GetSEVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetSEVolume");

	Params::UnionSystemBP_GetSEVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetSoundHandle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::GetSoundHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetSoundHandle");

	Params::UnionSystemBP_GetSoundHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.GetVoiceVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionSystemBP::GetVoiceVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "GetVoiceVolume");

	Params::UnionSystemBP_GetVoiceVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.IsPlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::IsPlaying(const struct FSoundHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "IsPlaying");

	Params::UnionSystemBP_IsPlaying Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.IsUseCustomCulling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::IsUseCustomCulling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "IsUseCustomCulling");

	Params::UnionSystemBP_IsUseCustomCulling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.LoadDemoGameSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USaveGame* UUnionSystemBP::LoadDemoGameSlot(const class FString& SlotName, const int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "LoadDemoGameSlot");

	Params::UnionSystemBP_LoadDemoGameSlot Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.LoadGameFromSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USaveGame* UUnionSystemBP::LoadGameFromSlot(const class FString& SlotName, const int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "LoadGameFromSlot");

	Params::UnionSystemBP_LoadGameFromSlot Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.LoadPS4GameSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USaveGame* UUnionSystemBP::LoadPS4GameSlot(const class FString& SlotName, const int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "LoadPS4GameSlot");

	Params::UnionSystemBP_LoadPS4GameSlot Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.OpenLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAbsolute                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Options                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::OpenLevel(const class UObject* WorldContextObject, class FName LevelName, bool bAbsolute, const class FString& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "OpenLevel");

	Params::UnionSystemBP_OpenLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = LevelName;
	Parms.bAbsolute = bAbsolute;
	Parms.Options = std::move(Options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.OpenLevelByReference
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UWorld>      Level                                                  (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAbsolute                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Options                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::OpenLevelByReference(const class UObject* WorldContextObject, const TSoftObjectPtr<class UWorld> Level, bool bAbsolute, const class FString& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "OpenLevelByReference");

	Params::UnionSystemBP_OpenLevelByReference Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Level = Level;
	Parms.bAbsolute = bAbsolute;
	Parms.Options = std::move(Options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.Play
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::Play(const struct FSoundHandle& Handle, class USoundAtomCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "Play");

	Params::UnionSystemBP_Play Parms{};

	Parms.Handle = std::move(Handle);
	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.PlayFFB
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESoundPan                               Pan                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Aduio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FFBPlayerBit                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::PlayFFB(const struct FSoundHandle& Handle, class USoundAtomCue* Sound, ESoundPan Pan, bool Aduio, int32 FFBPlayerBit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "PlayFFB");

	Params::UnionSystemBP_PlayFFB Parms{};

	Parms.Handle = std::move(Handle);
	Parms.Sound = Sound;
	Parms.Pan = Pan;
	Parms.Aduio = Aduio;
	Parms.FFBPlayerBit = FFBPlayerBit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.RemoveLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelStreamingDynamic*           StreamingLevel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::RemoveLevel(class ULevelStreamingDynamic* StreamingLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "RemoveLevel");

	Params::UnionSystemBP_RemoveLevel Parms{};

	Parms.StreamingLevel = StreamingLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.ResetGameSettings
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionSystemBP::ResetGameSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "ResetGameSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.ResetLevelFlagsForPSDCache
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionSystemBP::ResetLevelFlagsForPSDCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "ResetLevelFlagsForPSDCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SaveGameToSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USaveGame*                        SaveGameObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             UserIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::SaveGameToSlot(class USaveGame* SaveGameObject, const class FString& SlotName, const int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SaveGameToSlot");

	Params::UnionSystemBP_SaveGameToSlot Parms{};

	Parms.SaveGameObject = SaveGameObject;
	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SendEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevel*                           Level                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SendEvent(const class UObject* WorldContextObject, class ULevel* Level, class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SendEvent");

	Params::UnionSystemBP_SendEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Level = Level;
	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetActiveHorizontalFlip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Active                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetActiveHorizontalFlip(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetActiveHorizontalFlip");

	Params::UnionSystemBP_SetActiveHorizontalFlip Parms{};

	Parms.Active = Active;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetAisacByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// const class FString&                    ControlName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ControlValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SetAisacByName(const struct FSoundHandle& Handle, const class FString& ControlName, float ControlValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetAisacByName");

	Params::UnionSystemBP_SetAisacByName Parms{};

	Parms.Handle = std::move(Handle);
	Parms.ControlName = std::move(ControlName);
	Parms.ControlValue = ControlValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SetBGMVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetBGMVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetBGMVolume");

	Params::UnionSystemBP_SetBGMVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetBootSettings
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionSystemBP::SetBootSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetBootSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetFFBVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetFFBVolume(int32 PlayerIndex, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetFFBVolume");

	Params::UnionSystemBP_SetFFBVolume Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetGameSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   NumPlayers                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetGameSettings(int32 NumPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetGameSettings");

	Params::UnionSystemBP_SetGameSettings Parms{};

	Parms.NumPlayers = NumPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetLevelFlagsForPSDCache
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStageId                                StageId0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                StageId1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                StageId2                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetLevelFlagsForPSDCache(EStageId StageId0, EStageId StageId1, EStageId StageId2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetLevelFlagsForPSDCache");

	Params::UnionSystemBP_SetLevelFlagsForPSDCache Parms{};

	Parms.StageId0 = StageId0;
	Parms.StageId1 = StageId1;
	Parms.StageId2 = StageId2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SetLocation(const struct FSoundHandle& Handle, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetLocation");

	Params::UnionSystemBP_SetLocation Parms{};

	Parms.Handle = std::move(Handle);
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SetMasterVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetMasterVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetMasterVolume");

	Params::UnionSystemBP_SetMasterVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetMasterVolumeMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    OnOffFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetMasterVolumeMute(bool OnOffFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetMasterVolumeMute");

	Params::UnionSystemBP_SetMasterVolumeMute Parms{};

	Parms.OnOffFlag = OnOffFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetPanSplit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// ESoundPan                               Pan                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SetPanSplit(const struct FSoundHandle& Handle, ESoundPan Pan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetPanSplit");

	Params::UnionSystemBP_SetPanSplit Parms{};

	Parms.Handle = std::move(Handle);
	Parms.Pan = Pan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SetSEVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetSEVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetSEVolume");

	Params::UnionSystemBP_SetSEVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetSoundHandle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetSoundHandle(const struct FSoundHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetSoundHandle");

	Params::UnionSystemBP_SetSoundHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetUseCustomCulling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetUseCustomCulling(bool IsUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetUseCustomCulling");

	Params::UnionSystemBP_SetUseCustomCulling Parms{};

	Parms.IsUse = IsUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetVoiceVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SetVoiceVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetVoiceVolume");

	Params::UnionSystemBP_SetVoiceVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SetVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SetVolume(const struct FSoundHandle& Handle, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetVolume");

	Params::UnionSystemBP_SetVolume Parms{};

	Parms.Handle = std::move(Handle);
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SetZOrder
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::SetZOrder(class UWidget* Widget, int32 ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SetZOrder");

	Params::UnionSystemBP_SetZOrder Parms{};

	Parms.Widget = Widget;
	Parms.ZOrder = ZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SoundBuildPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SoundBuildPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundBuildPlayer");

	Params::UnionSystemBP_SoundBuildPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SoundCuesheetLoadAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<TSoftObjectPtr<class USoundAtomCueSheet>>&CuesheetArray                                          (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UUnionSystemBP::SoundCuesheetLoadAsync(const TArray<TSoftObjectPtr<class USoundAtomCueSheet>>& CuesheetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundCuesheetLoadAsync");

	Params::UnionSystemBP_SoundCuesheetLoadAsync Parms{};

	Parms.CuesheetArray = std::move(CuesheetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SoundCuesheetLoadSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<TSoftObjectPtr<class USoundAtomCueSheet>>&CuesheetArray                                          (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UUnionSystemBP::SoundCuesheetLoadSync(const TArray<TSoftObjectPtr<class USoundAtomCueSheet>>& CuesheetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundCuesheetLoadSync");

	Params::UnionSystemBP_SoundCuesheetLoadSync Parms{};

	Parms.CuesheetArray = std::move(CuesheetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SoundCuesheetUnloadSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<TSoftObjectPtr<class USoundAtomCueSheet>>&CuesheetArray                                          (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UUnionSystemBP::SoundCuesheetUnloadSync(const TArray<TSoftObjectPtr<class USoundAtomCueSheet>>& CuesheetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundCuesheetUnloadSync");

	Params::UnionSystemBP_SoundCuesheetUnloadSync Parms{};

	Parms.CuesheetArray = std::move(CuesheetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.SoundPlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SoundPlay(class USoundAtomCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundPlay");

	Params::UnionSystemBP_SoundPlay Parms{};

	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SoundPlayFFB
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESoundPan                               Pan                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Audio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FFBPlayerBit                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::SoundPlayFFB(class USoundAtomCue* Sound, ESoundPan Pan, bool Audio, int32 FFBPlayerBit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundPlayFFB");

	Params::UnionSystemBP_SoundPlayFFB Parms{};

	Parms.Sound = Sound;
	Parms.Pan = Pan;
	Parms.Audio = Audio;
	Parms.FFBPlayerBit = FFBPlayerBit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.SoundSetPanSplit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ESoundPan                               Pan                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::SoundSetPanSplit(ESoundPan Pan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "SoundSetPanSplit");

	Params::UnionSystemBP_SoundSetPanSplit Parms{};

	Parms.Pan = Pan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.StartLevels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::StartLevels(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "StartLevels");

	Params::UnionSystemBP_StartLevels Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.StartLevelsAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSystemBP::StartLevelsAsync(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "StartLevelsAsync");

	Params::UnionSystemBP_StartLevelsAsync Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.Stop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoundHandle&              Handle                                                 (Parm, NativeAccessSpecifierPublic)
// struct FSoundHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSoundHandle UUnionSystemBP::Stop(const struct FSoundHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "Stop");

	Params::UnionSystemBP_Stop Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionSystemBP.UnloadLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bShouldBlockOnUnload                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::UnloadLevel(const class UObject* WorldContextObject, class FName LevelName, const struct FLatentActionInfo& LatentInfo, bool bShouldBlockOnUnload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "UnloadLevel");

	Params::UnionSystemBP_UnloadLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = LevelName;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bShouldBlockOnUnload = bShouldBlockOnUnload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionSystemBP.UnloadLevelByReference
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UWorld>      Level                                                  (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bShouldBlockOnUnload                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSystemBP::UnloadLevelByReference(const class UObject* WorldContextObject, const TSoftObjectPtr<class UWorld> Level, const struct FLatentActionInfo& LatentInfo, bool bShouldBlockOnUnload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionSystemBP", "UnloadLevelByReference");

	Params::UnionSystemBP_UnloadLevelByReference Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Level = Level;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bShouldBlockOnUnload = bShouldBlockOnUnload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionTestUserWidget.BeginPlay
// (Native, Public, BlueprintCallable)

void UUnionTestUserWidget::BeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionTestUserWidget", "BeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionTestForceFeedbackViewerUI.Finalize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionTestForceFeedbackViewerUI::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionTestForceFeedbackViewerUI", "Finalize");

	Params::UnionTestForceFeedbackViewerUI_Finalize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionTestForceFeedbackViewerUI.Quit
// (Native, Event, Public, BlueprintEvent)

void UUnionTestForceFeedbackViewerUI::Quit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionTestForceFeedbackViewerUI", "Quit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionTestMapViewerUI.EnumerateMaps
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FText>*                    Maps                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionTestMapViewerUI::EnumerateMaps(TArray<class FText>* Maps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionTestMapViewerUI", "EnumerateMaps");

	Params::UnionTestMapViewerUI_EnumerateMaps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Maps != nullptr)
		*Maps = std::move(Parms.Maps);
}


// Function UnionSystem.UnionTestMovieViewerUI.Finalize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionTestMovieViewerUI::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionTestMovieViewerUI", "Finalize");

	Params::UnionTestMovieViewerUI_Finalize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionTestMovieViewerUI.Quit
// (Native, Event, Public, BlueprintEvent)

void UUnionTestMovieViewerUI::Quit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionTestMovieViewerUI", "Quit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.Rebuild
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ResetState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVATMeshComponent::Rebuild(bool ResetState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "Rebuild");

	Params::UnionVATMeshComponent_Rebuild Parms{};

	Parms.ResetState = ResetState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.ResetPlaybackState
// (Final, Native, Public, BlueprintCallable)

void UUnionVATMeshComponent::ResetPlaybackState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "ResetPlaybackState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.SetFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Frame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVATMeshComponent::SetFrame(int32 Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "SetFrame");

	Params::UnionVATMeshComponent_SetFrame Parms{};

	Parms.Frame = Frame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.SetPlayMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionVATPlayMode                       PlayMode_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ResetState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVATMeshComponent::SetPlayMode(EUnionVATPlayMode PlayMode_0, bool ResetState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "SetPlayMode");

	Params::UnionVATMeshComponent_SetPlayMode Parms{};

	Parms.PlayMode_0 = PlayMode_0;
	Parms.ResetState = ResetState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.UpdateDeltaTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVATMeshComponent::UpdateDeltaTime(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "UpdateDeltaTime");

	Params::UnionVATMeshComponent_UpdateDeltaTime Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.UpdateFrame
// (Final, Native, Public, BlueprintCallable)

void UUnionVATMeshComponent::UpdateFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "UpdateFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionVATMeshComponent.GetFrame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionVATMeshComponent::GetFrame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATMeshComponent", "GetFrame");

	Params::UnionVATMeshComponent_GetFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionVATAnimEventComponent.OnVATSequence
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UUnionVATMeshComponent*           VATMeshComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionVATSequenceInfo&     SequenceInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UUnionVATAnimEventComponent::OnVATSequence(class UUnionVATMeshComponent* VATMeshComponent, const struct FUnionVATSequenceInfo& SequenceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVATAnimEventComponent", "OnVATSequence");

	Params::UnionVATAnimEventComponent_OnVATSequence Parms{};

	Parms.VATMeshComponent = VATMeshComponent;
	Parms.SequenceInfo = std::move(SequenceInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetImageComponent.CreateOrUpdateMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ForceCreate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionWidgetImageComponent::CreateOrUpdateMesh(bool ForceCreate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionWidgetImageComponent", "CreateOrUpdateMesh");

	Params::UnionWidgetImageComponent_CreateOrUpdateMesh Parms{};

	Parms.ForceCreate = ForceCreate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetImageComponent.SetBrushImageTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Applying                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionWidgetImageComponent::SetBrushImageTexture(class UTexture2D* Texture, bool Applying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionWidgetImageComponent", "SetBrushImageTexture");

	Params::UnionWidgetImageComponent_SetBrushImageTexture Parms{};

	Parms.Texture = Texture;
	Parms.Applying = Applying;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetImageComponent.SetColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              TintColorAndOpacity                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Applying                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionWidgetImageComponent::SetColor(const struct FLinearColor& TintColorAndOpacity, bool Applying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionWidgetImageComponent", "SetColor");

	Params::UnionWidgetImageComponent_SetColor Parms{};

	Parms.TintColorAndOpacity = std::move(TintColorAndOpacity);
	Parms.Applying = Applying;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetInterface.SetWidgetTransform
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FUnionWidgetTransform&     WidgetTransform                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IUnionWidgetInterface::SetWidgetTransform(const struct FUnionWidgetTransform& WidgetTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionWidgetInterface", "SetWidgetTransform");

	Params::UnionWidgetInterface_SetWidgetTransform Parms{};

	Parms.WidgetTransform = std::move(WidgetTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetInterface.GetWidgetTransformCopy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FUnionWidgetTransform            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUnionWidgetTransform IUnionWidgetInterface::GetWidgetTransformCopy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionWidgetInterface", "GetWidgetTransformCopy");

	Params::UnionWidgetInterface_GetWidgetTransformCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionWidgetTextComponent.SetAppearance
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FEditableTextStyle&        Style                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IsReadOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPassword                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinDesiredWidth                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextJustify                            Justification                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionWidgetTextComponent::SetAppearance(const struct FEditableTextStyle& Style, bool IsReadOnly, bool IsPassword, float MinDesiredWidth, ETextJustify Justification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionWidgetTextComponent", "SetAppearance");

	Params::UnionWidgetTextComponent_SetAppearance Parms{};

	Parms.Style = std::move(Style);
	Parms.IsReadOnly = IsReadOnly;
	Parms.IsPassword = IsPassword;
	Parms.MinDesiredWidth = MinDesiredWidth;
	Parms.Justification = Justification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetTextComponent.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionWidgetTextComponent::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionWidgetTextComponent", "SetText");

	Params::UnionWidgetTextComponent_SetText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionSystem.UnionWidgetTextInterface.GetTextWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* IUnionWidgetTextInterface::GetTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionWidgetTextInterface", "GetTextWidget");

	Params::UnionWidgetTextInterface_GetTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionSystem.UnionWidgetUtility.TransformVertex
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector2D>*               Vertex2Ds                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FUnionWidgetTransform&     WidgetTransform                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ParentSize                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionWidgetUtility::TransformVertex(TArray<struct FVector2D>* Vertex2Ds, const struct FUnionWidgetTransform& WidgetTransform, const struct FVector2D& ParentSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionWidgetUtility", "TransformVertex");

	Params::UnionWidgetUtility_TransformVertex Parms{};

	Parms.WidgetTransform = std::move(WidgetTransform);
	Parms.ParentSize = std::move(ParentSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Vertex2Ds != nullptr)
		*Vertex2Ds = std::move(Parms.Vertex2Ds);
}


// Function UnionSystem.UnionMatchmakingSettings.SetUseFlexMatch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionMatchmakingSettings::SetUseFlexMatch(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMatchmakingSettings", "SetUseFlexMatch");

	Params::UnionMatchmakingSettings_SetUseFlexMatch Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

