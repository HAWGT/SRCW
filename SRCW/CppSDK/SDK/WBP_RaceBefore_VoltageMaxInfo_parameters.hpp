#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RaceBefore_VoltageMaxInfo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_RaceBefore_VoltageMaxInfo.WBP_RaceBefore_VoltageMaxInfo_C.ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo
// 0x0078 (0x0078 - 0x0000)
struct WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFestaChanceUpRatio_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFestaChanceUpRatioText_ReturnValue;    // 0x0008(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo) == 0x000008, "Wrong alignment on WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo");
static_assert(sizeof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo) == 0x000078, "Wrong size on WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, EntryPoint) == 0x000000, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, CallFunc_GetFestaChanceUpRatio_ReturnValue) == 0x000004, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::CallFunc_GetFestaChanceUpRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, CallFunc_GetFestaChanceUpRatioText_ReturnValue) == 0x000008, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::CallFunc_GetFestaChanceUpRatioText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, K2Node_Event_MyGeometry) == 0x000028, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, K2Node_Event_InDeltaTime) == 0x000060, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo, CallFunc_PlayAnimation_ReturnValue_1) == 0x000070, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_ExecuteUbergraph_WBP_RaceBefore_VoltageMaxInfo::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_RaceBefore_VoltageMaxInfo.WBP_RaceBefore_VoltageMaxInfo_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_RaceBefore_VoltageMaxInfo_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RaceBefore_VoltageMaxInfo_C_Tick) == 0x000004, "Wrong alignment on WBP_RaceBefore_VoltageMaxInfo_C_Tick");
static_assert(sizeof(WBP_RaceBefore_VoltageMaxInfo_C_Tick) == 0x00003C, "Wrong size on WBP_RaceBefore_VoltageMaxInfo_C_Tick");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RaceBefore_VoltageMaxInfo_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_RaceBefore_VoltageMaxInfo_C_Tick::InDeltaTime' has a wrong offset!");

}

