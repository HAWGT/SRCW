#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OnlineSequence

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OnlineSequence.BP_OnlineSequence_C
// 0x0070 (0x04B8 - 0x0448)
class ABP_OnlineSequence_C final : public AOnlineSequence
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_GetDLCFreeContent_C*               BPC_GetDLCFreeContent;                             // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_NoticePopup_C*                     BPC_NoticePopup;                                   // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_NoticeEventEnd_C*                  BPC_NoticeEventEnd;                                // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_PreNotice_C*                       BPC_PreNotice;                                     // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_DodonpaEventState_C*               BPC_DodonpaEventState;                             // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_LobbyLegendCompeHolder_C*          BPC_LobbyLegendCompeHolder;                        // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_LobbyFriendMatchHolder_C*          BPC_LobbyFriendMatchHolder;                        // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_LobbyFestaHolder_C*                BPC_LobbyFestaHolder;                              // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_LobbyRankMatchHolder_C*            BPC_LobbyRankMatchHolder;                          // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWBP_HeaderMenu_C*                      WBPHeader;                                         // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_LoginProcessor_C*                   BP_LoginProcessor;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUnionUIPopupWindowBase*                PopupWindow;                                       // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_UnionCrossPlayCheck_C*              CrossPlayChecker;                                  // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AttachMainCamera();
	void CallDodonpaEvent(class FName EventName, EGrandPrixEventFlag SaveDataFlagId, EMenuSequenceBGM BGM_ID);
	void Check_Cross_Play_if_Required(bool* IsCheckRequired);
	void CreatePopupWindow();
	void ExecuteUbergraph_BP_OnlineSequence(int32 EntryPoint);
	class UObject* GetFooter();
	class UObject* GetOwnerMenuSequence();
	void OnCrossPlayCheckUserConfirmed(bool IsConfirmed);
	void OnEndDodonpaEvent_LegendCompeIntro(EMenuSequenceSubState State);
	void OnFinalize();
	void OnInitialize();
	void OnInitStateLogin();
	void OnInitStateOnlineTop();
	void OnLoginResult_Event(bool IsSuccess, bool IsEnableOnlinePlay, bool IsRequestedSequenceBlock);
	void OnOnlineLobbyBacked();
	void OnOnlineLobbyFinished();
	void OnPopupOK(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void RemoveOnlineTopWidget();
	void SetNextOnlineSequenceState(EOnlineSequenceState InState, EOnlineSequenceState PrevState);
	void SetSubMenuVisibility(ESlateVisibility Visibility);
	void SetupCamera(class ULevelStreaming* SubLevel);
	void UpdateCurrentTopMenuLevelName();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OnlineSequence_C">();
	}
	static class ABP_OnlineSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OnlineSequence_C>();
	}
};
static_assert(alignof(ABP_OnlineSequence_C) == 0x000008, "Wrong alignment on ABP_OnlineSequence_C");
static_assert(sizeof(ABP_OnlineSequence_C) == 0x0004B8, "Wrong size on ABP_OnlineSequence_C");
static_assert(offsetof(ABP_OnlineSequence_C, UberGraphFrame) == 0x000448, "Member 'ABP_OnlineSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_GetDLCFreeContent) == 0x000450, "Member 'ABP_OnlineSequence_C::BPC_GetDLCFreeContent' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_NoticePopup) == 0x000458, "Member 'ABP_OnlineSequence_C::BPC_NoticePopup' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_NoticeEventEnd) == 0x000460, "Member 'ABP_OnlineSequence_C::BPC_NoticeEventEnd' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_PreNotice) == 0x000468, "Member 'ABP_OnlineSequence_C::BPC_PreNotice' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_DodonpaEventState) == 0x000470, "Member 'ABP_OnlineSequence_C::BPC_DodonpaEventState' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_LobbyLegendCompeHolder) == 0x000478, "Member 'ABP_OnlineSequence_C::BPC_LobbyLegendCompeHolder' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_LobbyFriendMatchHolder) == 0x000480, "Member 'ABP_OnlineSequence_C::BPC_LobbyFriendMatchHolder' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_LobbyFestaHolder) == 0x000488, "Member 'ABP_OnlineSequence_C::BPC_LobbyFestaHolder' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BPC_LobbyRankMatchHolder) == 0x000490, "Member 'ABP_OnlineSequence_C::BPC_LobbyRankMatchHolder' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, WBPHeader) == 0x000498, "Member 'ABP_OnlineSequence_C::WBPHeader' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, BP_LoginProcessor) == 0x0004A0, "Member 'ABP_OnlineSequence_C::BP_LoginProcessor' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, PopupWindow) == 0x0004A8, "Member 'ABP_OnlineSequence_C::PopupWindow' has a wrong offset!");
static_assert(offsetof(ABP_OnlineSequence_C, CrossPlayChecker) == 0x0004B0, "Member 'ABP_OnlineSequence_C::CrossPlayChecker' has a wrong offset!");

}

