#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Window_MachineOption

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Window_MachineOption.WBP_Window_MachineOption_C
// 0x0020 (0x0438 - 0x0418)
class UWBP_Window_MachineOption_C final : public UMachineOptionWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Option_Out;                                        // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Option_Loop;                                       // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Option_In;                                         // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Window_MachineOption(int32 EntryPoint);
	void OnPlayAnimIn();
	void OnPlayAnimLoop();
	void OnPlayAnimOut();
	void OnPlaySEAnim();
	void PreConstruct(bool IsDesignTime);
	void SetupAssistAerialTrick(bool IsFlag);
	void SetupAssistAutoAccel(bool IsFlag);
	void SetupAssistHandle(bool IsFlag);
	void WidgetAnimationEvt_Option_In_K2Node_WidgetAnimationEvent_0();
	void WidgetAnimationEvt_Option_Out_K2Node_WidgetAnimationEvent_1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Window_MachineOption_C">();
	}
	static class UWBP_Window_MachineOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Window_MachineOption_C>();
	}
};
static_assert(alignof(UWBP_Window_MachineOption_C) == 0x000008, "Wrong alignment on UWBP_Window_MachineOption_C");
static_assert(sizeof(UWBP_Window_MachineOption_C) == 0x000438, "Wrong size on UWBP_Window_MachineOption_C");
static_assert(offsetof(UWBP_Window_MachineOption_C, UberGraphFrame) == 0x000418, "Member 'UWBP_Window_MachineOption_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Window_MachineOption_C, Option_Out) == 0x000420, "Member 'UWBP_Window_MachineOption_C::Option_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Window_MachineOption_C, Option_Loop) == 0x000428, "Member 'UWBP_Window_MachineOption_C::Option_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Window_MachineOption_C, Option_In) == 0x000430, "Member 'UWBP_Window_MachineOption_C::Option_In' has a wrong offset!");

}

