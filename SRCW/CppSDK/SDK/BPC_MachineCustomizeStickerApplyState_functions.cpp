#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MachineCustomizeStickerApplyState

#include "Basic.hpp"

#include "BPC_MachineCustomizeStickerApplyState_classes.hpp"
#include "BPC_MachineCustomizeStickerApplyState_parameters.hpp"


namespace SDK
{

// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.HidePopupWindow
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::HidePopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "HidePopupWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.ShowPopupWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::ShowPopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "ShowPopupWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.OverrideStickers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  OverlapStickers                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsRear                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::OverrideStickers(TArray<class AActor*>& OverlapStickers, bool IsRear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "OverrideStickers");

	Params::BPC_MachineCustomizeStickerApplyState_C_OverrideStickers Parms{};

	Parms.OverlapStickers = std::move(OverlapStickers);
	Parms.IsRear = IsRear;

	UObject::ProcessEvent(Func, &Parms);

	OverlapStickers = std::move(Parms.OverlapStickers);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.SetRearMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::SetRearMaterial(class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "SetRearMaterial");

	Params::BPC_MachineCustomizeStickerApplyState_C_SetRearMaterial Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.SetFrontMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::SetFrontMaterial(class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "SetFrontMaterial");

	Params::BPC_MachineCustomizeStickerApplyState_C_SetFrontMaterial Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.ExitStickerApply
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::ExitStickerApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "ExitStickerApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.SetupStickerApply
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::SetupStickerApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "SetupStickerApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.StickerMasterSystem_OnColorPickerStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsOpened                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::StickerMasterSystem_OnColorPickerStateChanged(bool bIsOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "StickerMasterSystem_OnColorPickerStateChanged");

	Params::BPC_MachineCustomizeStickerApplyState_C_StickerMasterSystem_OnColorPickerStateChanged Parms{};

	Parms.bIsOpened = bIsOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.OnFinishMoveEditSticker
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::OnFinishMoveEditSticker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "OnFinishMoveEditSticker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.OnExitState
// (Event, Public, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::OnExitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "OnExitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.StickerApply_OnDecision
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Objcet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::StickerApply_OnDecision(class UObject* Objcet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "StickerApply_OnDecision");

	Params::BPC_MachineCustomizeStickerApplyState_C_StickerApply_OnDecision Parms{};

	Parms.Objcet = Objcet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.ToStickerEdit
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::ToStickerEdit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "ToStickerEdit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.PopupWindow_OnDecision
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::PopupWindow_OnDecision(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "PopupWindow_OnDecision");

	Params::BPC_MachineCustomizeStickerApplyState_C_PopupWindow_OnDecision Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.StickerApply_OnCancel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Objcet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::StickerApply_OnCancel(class UObject* Objcet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "StickerApply_OnCancel");

	Params::BPC_MachineCustomizeStickerApplyState_C_StickerApply_OnCancel Parms{};

	Parms.Objcet = Objcet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.OnInitState
// (Event, Public, BlueprintEvent)

void UBPC_MachineCustomizeStickerApplyState_C::OnInitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "OnInitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.SetActiveAuraEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActive_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::SetActiveAuraEffect(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "SetActiveAuraEffect");

	Params::BPC_MachineCustomizeStickerApplyState_C_SetActiveAuraEffect Parms{};

	Parms.IsActive_0 = IsActive_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerApplyState.BPC_MachineCustomizeStickerApplyState_C.ExecuteUbergraph_BPC_MachineCustomizeStickerApplyState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerApplyState_C::ExecuteUbergraph_BPC_MachineCustomizeStickerApplyState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerApplyState_C", "ExecuteUbergraph_BPC_MachineCustomizeStickerApplyState");

	Params::BPC_MachineCustomizeStickerApplyState_C_ExecuteUbergraph_BPC_MachineCustomizeStickerApplyState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

