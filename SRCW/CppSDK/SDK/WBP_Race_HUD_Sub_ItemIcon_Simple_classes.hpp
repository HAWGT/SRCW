#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_ItemIcon_Simple

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UnionRun_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_ItemIcon_Simple.WBP_Race_HUD_Sub_ItemIcon_Simple_C
// 0x0158 (0x08D8 - 0x0780)
class UWBP_Race_HUD_Sub_ItemIcon_Simple_C final : public URaceUISubItemIcon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DisplayHide_ItemIcon;                              // 0x0788(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_ItemIcon_LostIcon;                             // 0x0790(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_ItemIcon_LostEffect;                           // 0x0798(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_ItemIcon;                                 // 0x07A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LotteryLoop_ItemIcon;                              // 0x07A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Color;                                      // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Colud_Eff_02;                                      // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_ItemIcon;                                      // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_ArcGauge_Add;                                  // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DSP_Irregular;                                     // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Irregular_Icon;                                    // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_LostEffect;                                // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PAT_AttributeColorBase;                            // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_ItemPict;                                      // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ring;                                              // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Root;                                              // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               M_ItemIcon;                                        // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ItemIconIndex;                                     // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         LotteryCountMax;                                   // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LotteryCount;                                      // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 VisibleFlame;                                      // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bActionanimating;                                  // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLotterySound;                                     // 0x0829(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUnionRaceHUDItemIconsState                   DisplayAnimState;                                  // 0x082A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82B[0x1];                                      // 0x082B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemIdIndex_0;                                     // 0x082C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPauseFlag;                                        // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemTextureNum;                                    // 0x0834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Accele;                                            // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Defense;                                           // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Offense;                                           // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Place;                                             // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFirstItemGet;                                    // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           ItemBorderCol;                                     // 0x0868(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActive;                                           // 0x0878(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_879[0x7];                                      // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 GaugeItemIds;                                      // 0x0880(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EItemId>                               Enable;                                            // 0x0890(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        LifeTime;                                          // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           ItemSelectSoundHandle;                             // 0x08A8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          AcceleLabel;                                       // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          DefenseLabel;                                      // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          OffenseLabel;                                      // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          PlaceLabel;                                        // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           RareItemSelectSoundHandle;                         // 0x08D0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CloseLottery();
	void Construct();
	void Destruct();
	void DisplayHideAnim(bool Display);
	void ExecuteUbergraph_WBP_Race_HUD_Sub_ItemIcon_Simple(int32 EntryPoint);
	void Finished_CF7726644B439113AFB81785B8CF0E1A();
	void FireDecisionAnim_0();
	void FireUseAnim_0(int32 ItemId, int32 PlayerIndex_0);
	void ItemLostAnimStart(bool bHideIcon);
	void LotteryAnimEnd();
	void LotteryAnimStart();
	void LotteryDecideFinished();
	void LotterySeqStart(bool LotterySound);
	void OnFinishedInAnim();
	void OnFinishedOutAnim();
	void PreConstruct(bool IsDesignTime);
	void Set_Border_Col_0(const struct FLinearColor& InContentColorAndOpacity);
	void SetActive_0(bool bActive_0);
	void SetAlignment(bool bRightSide);
	void SetItemIndex_0(int32 InIndex, int32 RemainCount_0, bool bIgnoreAttribute, bool OnLottery);
	void SetPauseFlag_0(bool InPauseFlag);
	void SetupPackageRing();
	void StartIrregularEvent();
	void StopLottery_0();
	void UpdatePauseLottery_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_ItemIcon_Simple_C">();
	}
	static class UWBP_Race_HUD_Sub_ItemIcon_Simple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_ItemIcon_Simple_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_ItemIcon_Simple_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C) == 0x0008D8, "Wrong size on UWBP_Race_HUD_Sub_ItemIcon_Simple_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, UberGraphFrame) == 0x000780, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, DisplayHide_ItemIcon) == 0x000788, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::DisplayHide_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Out_ItemIcon_LostIcon) == 0x000790, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Out_ItemIcon_LostIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Out_ItemIcon_LostEffect) == 0x000798, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Out_ItemIcon_LostEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Decision_ItemIcon) == 0x0007A0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Decision_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, LotteryLoop_ItemIcon) == 0x0007A8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::LotteryLoop_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Border_Color) == 0x0007B0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Border_Color' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Colud_Eff_02) == 0x0007B8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Colud_Eff_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, DMY_ItemIcon) == 0x0007C0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::DMY_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, DSP_ArcGauge_Add) == 0x0007C8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::DSP_ArcGauge_Add' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, DSP_Irregular) == 0x0007D0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::DSP_Irregular' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Irregular_Icon) == 0x0007D8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Irregular_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Overlay_LostEffect) == 0x0007E0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Overlay_LostEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, PAT_AttributeColorBase) == 0x0007E8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::PAT_AttributeColorBase' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, PAT_ItemPict) == 0x0007F0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::PAT_ItemPict' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Ring) == 0x0007F8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Ring' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Root) == 0x000800, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Root' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, M_ItemIcon) == 0x000808, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::M_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, ItemIconIndex) == 0x000810, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::ItemIconIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, LotteryCountMax) == 0x000814, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::LotteryCountMax' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, LotteryCount) == 0x000818, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::LotteryCount' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, PlayerIndex) == 0x00081C, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, VisibleFlame) == 0x000820, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::VisibleFlame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, bActionanimating) == 0x000828, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::bActionanimating' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, bLotterySound) == 0x000829, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::bLotterySound' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, DisplayAnimState) == 0x00082A, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::DisplayAnimState' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, ItemIdIndex_0) == 0x00082C, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::ItemIdIndex_0' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, bPauseFlag) == 0x000830, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::bPauseFlag' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, ItemTextureNum) == 0x000834, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::ItemTextureNum' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Accele) == 0x000838, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Accele' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Defense) == 0x000840, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Defense' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Offense) == 0x000848, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Offense' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Place) == 0x000850, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Place' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, OnFirstItemGet) == 0x000858, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::OnFirstItemGet' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, ItemBorderCol) == 0x000868, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::ItemBorderCol' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, bActive) == 0x000878, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::bActive' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, GaugeItemIds) == 0x000880, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::GaugeItemIds' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, Enable) == 0x000890, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::Enable' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, LifeTime) == 0x0008A0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::LifeTime' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, ItemSelectSoundHandle) == 0x0008A8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::ItemSelectSoundHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, AcceleLabel) == 0x0008B0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::AcceleLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, DefenseLabel) == 0x0008B8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::DefenseLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, OffenseLabel) == 0x0008C0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::OffenseLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, PlaceLabel) == 0x0008C8, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::PlaceLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_ItemIcon_Simple_C, RareItemSelectSoundHandle) == 0x0008D0, "Member 'UWBP_Race_HUD_Sub_ItemIcon_Simple_C::RareItemSelectSoundHandle' has a wrong offset!");

}

