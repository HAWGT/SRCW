#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatusInfo_Sub_RaceRuleDetail_Gadget

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StatusInfo_Sub_RaceRuleDetail_Gadget.WBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C
// 0x0020 (0x0300 - 0x02E0)
class UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C final : public UUserWidget
{
public:
	class UImage*                                 base_2;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TitleBase_1;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Title;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GadgetCustom_Sub_GadgetPlate_C*    WBP_GadgetCustom_Sub_GadgetPlate;                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C">();
	}
	static class UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C>();
	}
};
static_assert(alignof(UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C) == 0x000008, "Wrong alignment on UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C");
static_assert(sizeof(UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C) == 0x000300, "Wrong size on UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C, base_2) == 0x0002E0, "Member 'UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C::base_2' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C, TitleBase_1) == 0x0002E8, "Member 'UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C::TitleBase_1' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C, TXT_Title) == 0x0002F0, "Member 'UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C::TXT_Title' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C, WBP_GadgetCustom_Sub_GadgetPlate) == 0x0002F8, "Member 'UWBP_StatusInfo_Sub_RaceRuleDetail_Gadget_C::WBP_GadgetCustom_Sub_GadgetPlate' has a wrong offset!");

}

