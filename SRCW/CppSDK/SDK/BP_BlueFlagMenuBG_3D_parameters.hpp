#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlueFlagMenuBG_3D

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.ExecuteUbergraph_BP_BlueFlagMenuBG_3D
// 0x0588 (0x0588 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMenuWorldSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x0048(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_3;                              // 0x0050(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_2;                              // 0x0060(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x0074(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnce;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x0094(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x0098(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x009C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_1;                              // 0x00A8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x00BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value;                                // 0x00C0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x00D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x00D4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x00D8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x00DC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x00E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x00E4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x00E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x00EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x0128(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0130(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x022C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x0230(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x0234(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0238(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0338(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_InUpdate;                       // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0470(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible_1;                      // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x056A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x056B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D) == 0x000008, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D) == 0x000588, "Wrong size on BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, EntryPoint) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_27) == 0x000048, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_26) == 0x00004C, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_Value_3) == 0x000050, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_Value_2) == 0x000060, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_25) == 0x000070, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_24) == 0x000074, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_23) == 0x000078, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_22) == 0x00007C, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_21) == 0x000080, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_20) == 0x000084, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_19) == 0x000088, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_bOnce) == 0x00008C, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_bOnce' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_18) == 0x000090, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_17) == 0x000094, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_16) == 0x000098, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_15) == 0x00009C, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_14) == 0x0000A0, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_Value_1) == 0x0000A8, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_13) == 0x0000B8, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_12) == 0x0000BC, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_Value) == 0x0000C0, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_11) == 0x0000D0, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_10) == 0x0000D4, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_9) == 0x0000D8, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_8) == 0x0000DC, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_7) == 0x0000E0, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_6) == 0x0000E4, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_5) == 0x0000E8, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_4) == 0x0000EC, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_BreakVector_Y) == 0x0000F8, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_BreakVector_Z) == 0x000100, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_MakeVector_ReturnValue) == 0x000110, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_3) == 0x000128, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000130, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000228, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_2) == 0x00022C, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex_1) == 0x000230, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_Event_PlayerControllerIndex) == 0x000234, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_Event_PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000238, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000330, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000338, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_CustomEvent_InUpdate) == 0x000430, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_CustomEvent_InUpdate' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000438, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_GetCameraLocation_ReturnValue) == 0x000440, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_GetCameraRotation_ReturnValue) == 0x000458, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000470, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000568, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_CustomEvent_Visible_1) == 0x000569, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_CustomEvent_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Not_PreBool_ReturnValue) == 0x00056A, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, K2Node_CustomEvent_Visible) == 0x00056B, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Not_PreBool_ReturnValue_1) == 0x00056C, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000570, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000578, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000580, "Member 'BP_BlueFlagMenuBG_3D_C_ExecuteUbergraph_BP_BlueFlagMenuBG_3D::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis) == 0x000008, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis) == 0x000010, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis, Value) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftStickAxis::Value' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxis) == 0x000008, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightStickAxis");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxis) == 0x000010, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightStickAxis");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxis, Value) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightStickAxis::Value' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.SetPartyPresetVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible) == 0x000001, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible) == 0x000001, "Wrong size on BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible, Visible) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_SetPartyPresetVisible::Visible' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.SetUpdate
// 0x0001 (0x0001 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_SetUpdate final
{
public:
	bool                                          InUpdate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_SetUpdate) == 0x000001, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_SetUpdate");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_SetUpdate) == 0x000001, "Wrong size on BP_BlueFlagMenuBG_3D_C_SetUpdate");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_SetUpdate, InUpdate) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_SetUpdate::InUpdate' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_SetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_SetVisible) == 0x000001, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_SetVisible");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_SetVisible) == 0x000001, "Wrong size on BP_BlueFlagMenuBG_3D_C_SetVisible");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_SetVisible, Visible) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_SetVisible::Visible' has a wrong offset!");

// Function BP_BlueFlagMenuBG_3D.BP_BlueFlagMenuBG_3D_C.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct BP_BlueFlagMenuBG_3D_C_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlueFlagMenuBG_3D_C_SilentFocusReady) == 0x000001, "Wrong alignment on BP_BlueFlagMenuBG_3D_C_SilentFocusReady");
static_assert(sizeof(BP_BlueFlagMenuBG_3D_C_SilentFocusReady) == 0x000001, "Wrong size on BP_BlueFlagMenuBG_3D_C_SilentFocusReady");
static_assert(offsetof(BP_BlueFlagMenuBG_3D_C_SilentFocusReady, bOnce) == 0x000000, "Member 'BP_BlueFlagMenuBG_3D_C_SilentFocusReady::bOnce' has a wrong offset!");

}

