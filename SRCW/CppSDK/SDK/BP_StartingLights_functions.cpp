#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StartingLights

#include "Basic.hpp"

#include "BP_StartingLights_classes.hpp"
#include "BP_StartingLights_parameters.hpp"


namespace SDK
{

// Function BP_StartingLights.BP_StartingLights_C.AutoModeStart
// (BlueprintCallable, BlueprintEvent)

void ABP_StartingLights_C::AutoModeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "AutoModeStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.BeginCountDown
// (BlueprintCallable, BlueprintEvent)

void ABP_StartingLights_C::BeginCountDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "BeginCountDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.DelayStarted__FinishedFunc
// (BlueprintEvent)

void ABP_StartingLights_C::DelayStarted__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "DelayStarted__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.DelayStarted__UpdateFunc
// (BlueprintEvent)

void ABP_StartingLights_C::DelayStarted__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "DelayStarted__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.ExecuteUbergraph_BP_StartingLights
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::ExecuteUbergraph_BP_StartingLights(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "ExecuteUbergraph_BP_StartingLights");

	Params::BP_StartingLights_C_ExecuteUbergraph_BP_StartingLights Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.NoticeChangeCountDownEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNewValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InOldValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::NoticeChangeCountDownEvent(int32 InNewValue, int32 InOldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "NoticeChangeCountDownEvent");

	Params::BP_StartingLights_C_NoticeChangeCountDownEvent Parms{};

	Parms.InNewValue = InNewValue;
	Parms.InOldValue = InOldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.NoticeChangeRaceStateEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERaceInfoStateType                      InNewState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERaceInfoStateType                      InOldState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::NoticeChangeRaceStateEvent(ERaceInfoStateType InNewState, ERaceInfoStateType InOldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "NoticeChangeRaceStateEvent");

	Params::BP_StartingLights_C_NoticeChangeRaceStateEvent Parms{};

	Parms.InNewState = InNewState;
	Parms.InOldState = InOldState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.NoticeRaceFinishEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_StartingLights_C::NoticeRaceFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "NoticeRaceFinishEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.OnStarted
// (BlueprintCallable, BlueprintEvent)

void ABP_StartingLights_C::OnStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "OnStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_StartingLights_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.ReplayWait
// (BlueprintCallable, BlueprintEvent)

void ABP_StartingLights_C::ReplayWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "ReplayWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.SetCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetCount(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetCount");

	Params::BP_StartingLights_C_SetCount Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SetCountAndSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSound                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetCountAndSound(int32 NewCount, bool bSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetCountAndSound");

	Params::BP_StartingLights_C_SetCountAndSound Parms{};

	Parms.NewCount = NewCount;
	Parms.bSound = bSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SetPlayerIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetPlayerIndex(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetPlayerIndex");

	Params::BP_StartingLights_C_SetPlayerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SetRaceInfo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRaceInfo*                   InRaceInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetRaceInfo(class UUnionRaceInfo* InRaceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetRaceInfo");

	Params::BP_StartingLights_C_SetRaceInfo Parms{};

	Parms.InRaceInfo = InRaceInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SetSignalMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ElementIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetSignalMaterial(int32 ElementIndex, class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetSignalMaterial");

	Params::BP_StartingLights_C_SetSignalMaterial Parms{};

	Parms.ElementIndex = ElementIndex;
	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SetSignalMaterialU0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetSignalMaterialU0(class UMaterialInstanceDynamic* Target, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetSignalMaterialU0");

	Params::BP_StartingLights_C_SetSignalMaterialU0 Parms{};

	Parms.Target = Target;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SetSignalsMaterialU0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SetSignalsMaterialU0(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SetSignalsMaterialU0");

	Params::BP_StartingLights_C_SetSignalsMaterialU0 Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.StartFalling
// (BlueprintCallable, BlueprintEvent)

void ABP_StartingLights_C::StartFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "StartFalling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StartingLights.BP_StartingLights_C.StartTransformFromCameraActor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 CameraActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::StartTransformFromCameraActor(class UCameraComponent* CameraActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "StartTransformFromCameraActor");

	Params::BP_StartingLights_C_StartTransformFromCameraActor Parms{};

	Parms.CameraActor = CameraActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StartingLights.BP_StartingLights_C.SwitchCountMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StartingLights_C::SwitchCountMaterial(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StartingLights_C", "SwitchCountMaterial");

	Params::BP_StartingLights_C_SwitchCountMaterial Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}

}

