#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PartyRace_Sub_RivalTeamIcon

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PartyRace_Sub_RivalTeamIcon.WBP_PartyRace_Sub_RivalTeamIcon_C
// 0x0058 (0x0588 - 0x0530)
class UWBP_PartyRace_Sub_RivalTeamIcon_C final : public URivalTeamSelectIconWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Select_Loop;                                       // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_In;                                         // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_Cursor_Texture;                                // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      Loading_Anim_2;                                    // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButton*                         MouseInteraction;                                  // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWBP_PartyRace_Sub_RivalTeamIcon_C* caller)> FocusEventDispatcher; // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_PartyRace_Sub_RivalTeamIcon_C*     LatestFocusedButton;                               // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_PartyRace_Sub_RivalTeamIcon(int32 EntryPoint);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnBackKeyPressed();
	void OnFocusAnimStart();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnUnFocusAnimStart();
	void PlayAnimationLoop();
	void PlayAnimationSelectIn();
	void PlayAnimationSelectLoop();
	void PlayCancelSE();
	void PlayFocusSE();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PartyRace_Sub_RivalTeamIcon_C">();
	}
	static class UWBP_PartyRace_Sub_RivalTeamIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PartyRace_Sub_RivalTeamIcon_C>();
	}
};
static_assert(alignof(UWBP_PartyRace_Sub_RivalTeamIcon_C) == 0x000008, "Wrong alignment on UWBP_PartyRace_Sub_RivalTeamIcon_C");
static_assert(sizeof(UWBP_PartyRace_Sub_RivalTeamIcon_C) == 0x000588, "Wrong size on UWBP_PartyRace_Sub_RivalTeamIcon_C");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, UberGraphFrame) == 0x000530, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, Select_Loop) == 0x000538, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::Select_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, Select_In) == 0x000540, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::Select_In' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, Loop) == 0x000548, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::Loop' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, Button) == 0x000550, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::Button' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, DSP_Cursor_Texture) == 0x000558, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::DSP_Cursor_Texture' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, Loading_Anim_2) == 0x000560, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::Loading_Anim_2' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, MouseInteraction) == 0x000568, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, FocusEventDispatcher) == 0x000570, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::FocusEventDispatcher' has a wrong offset!");
static_assert(offsetof(UWBP_PartyRace_Sub_RivalTeamIcon_C, LatestFocusedButton) == 0x000580, "Member 'UWBP_PartyRace_Sub_RivalTeamIcon_C::LatestFocusedButton' has a wrong offset!");

}

