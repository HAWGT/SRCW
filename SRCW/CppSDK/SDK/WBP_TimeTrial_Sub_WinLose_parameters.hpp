#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_WinLose

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_TimeTrial_Sub_WinLose.WBP_TimeTrial_Sub_WinLose_C.ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	ETimeTrialWinLoseDispId                       Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0010)(ConstParm)
	ETimeTrialWinLoseDispId                       Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0010)(ConstParm)
	ETimeTrialWinLoseDispId                       K2Node_CustomEvent_WinLoseID_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0070(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0080(0x0010)()
	ETimeTrialWinLoseDispId                       K2Node_CustomEvent_WinLoseID;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0098(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x00A8(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x00B8(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0010)(ConstParm)
	class FText                                   K2Node_Select_Default_1;                           // 0x00D8(0x0010)(ConstParm)
};
static_assert(alignof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose");
static_assert(sizeof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose) == 0x0000E8, "Wrong size on WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, EntryPoint) == 0x000000, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, Temp_byte_Variable) == 0x000018, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, Temp_text_Variable) == 0x000020, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, Temp_text_Variable_1) == 0x000030, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, Temp_text_Variable_2) == 0x000040, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, Temp_byte_Variable_1) == 0x000050, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, Temp_text_Variable_3) == 0x000058, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, K2Node_CustomEvent_WinLoseID_1) == 0x000068, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::K2Node_CustomEvent_WinLoseID_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000070, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000080, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, K2Node_CustomEvent_WinLoseID) == 0x000090, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::K2Node_CustomEvent_WinLoseID' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000098, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0000A8, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0000B8, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose, K2Node_Select_Default_1) == 0x0000D8, "Member 'WBP_TimeTrial_Sub_WinLose_C_ExecuteUbergraph_WBP_TimeTrial_Sub_WinLose::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_TimeTrial_Sub_WinLose.WBP_TimeTrial_Sub_WinLose_C.SetLoseText
// 0x0001 (0x0001 - 0x0000)
struct WBP_TimeTrial_Sub_WinLose_C_SetLoseText final
{
public:
	ETimeTrialWinLoseDispId                       WinLoseID;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_WinLose_C_SetLoseText) == 0x000001, "Wrong alignment on WBP_TimeTrial_Sub_WinLose_C_SetLoseText");
static_assert(sizeof(WBP_TimeTrial_Sub_WinLose_C_SetLoseText) == 0x000001, "Wrong size on WBP_TimeTrial_Sub_WinLose_C_SetLoseText");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_SetLoseText, WinLoseID) == 0x000000, "Member 'WBP_TimeTrial_Sub_WinLose_C_SetLoseText::WinLoseID' has a wrong offset!");

// Function WBP_TimeTrial_Sub_WinLose.WBP_TimeTrial_Sub_WinLose_C.SetWinText
// 0x0001 (0x0001 - 0x0000)
struct WBP_TimeTrial_Sub_WinLose_C_SetWinText final
{
public:
	ETimeTrialWinLoseDispId                       WinLoseID;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_WinLose_C_SetWinText) == 0x000001, "Wrong alignment on WBP_TimeTrial_Sub_WinLose_C_SetWinText");
static_assert(sizeof(WBP_TimeTrial_Sub_WinLose_C_SetWinText) == 0x000001, "Wrong size on WBP_TimeTrial_Sub_WinLose_C_SetWinText");
static_assert(offsetof(WBP_TimeTrial_Sub_WinLose_C_SetWinText, WinLoseID) == 0x000000, "Member 'WBP_TimeTrial_Sub_WinLose_C_SetWinText::WinLoseID' has a wrong offset!");

}

