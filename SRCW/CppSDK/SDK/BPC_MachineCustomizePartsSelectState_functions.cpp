#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MachineCustomizePartsSelectState

#include "Basic.hpp"

#include "BPC_MachineCustomizePartsSelectState_classes.hpp"
#include "BPC_MachineCustomizePartsSelectState_parameters.hpp"


namespace SDK
{

// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.TipsWindow_CloseTipsWindow
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::TipsWindow_CloseTipsWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "TipsWindow_CloseTipsWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.OpenTipsWindow
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHintId                                 InHintId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizePartsSelectState_C::OpenTipsWindow(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "OpenTipsWindow");

	Params::BPC_MachineCustomizePartsSelectState_C_OpenTipsWindow Parms{};

	Parms.InHintId = InHintId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.UpdateCustomizeData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FUserMachineCustomizeData& InCustomizeData                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FUserMachineCustomizeData*       OutCustomizeData                                       (Parm, OutParm)

void UBPC_MachineCustomizePartsSelectState_C::UpdateCustomizeData(const struct FUserMachineCustomizeData& InCustomizeData, struct FUserMachineCustomizeData* OutCustomizeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "UpdateCustomizeData");

	Params::BPC_MachineCustomizePartsSelectState_C_UpdateCustomizeData Parms{};

	Parms.InCustomizeData = std::move(InCustomizeData);

	UObject::ProcessEvent(Func, &Parms);

	if (OutCustomizeData != nullptr)
		*OutCustomizeData = std::move(Parms.OutCustomizeData);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.OnPartsSelected
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachinePartsType                       InPartsType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InPartsId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizePartsSelectState_C::OnPartsSelected(EMachinePartsType InPartsType, EMachineId InPartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "OnPartsSelected");

	Params::BPC_MachineCustomizePartsSelectState_C_OnPartsSelected Parms{};

	Parms.InPartsType = InPartsType;
	Parms.InPartsId = InPartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.OnPartsFocused
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMachinePartsType                       InPartsType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId                              InPartsId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizePartsSelectState_C::OnPartsFocused(EMachinePartsType InPartsType, EMachineId InPartsId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "OnPartsFocused");

	Params::BPC_MachineCustomizePartsSelectState_C_OnPartsFocused Parms{};

	Parms.InPartsType = InPartsType;
	Parms.InPartsId = InPartsId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.SetCustomizeModelView
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::SetCustomizeModelView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "SetCustomizeModelView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.OnExit
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::OnExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "OnExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.OnSetup
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.OnSetupPage
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::OnSetupPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "OnSetupPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.SetProperties
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::SetProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "SetProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.BindTab
// (Event, Protected, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::BindTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "BindTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.UnbindTab
// (Event, Protected, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::UnbindTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "UnbindTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.StartOpenTipsWindow
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::StartOpenTipsWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "StartOpenTipsWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.ShowTips
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizePartsSelectState_C::ShowTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "ShowTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.ExecuteUbergraph_BPC_MachineCustomizePartsSelectState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizePartsSelectState_C::ExecuteUbergraph_BPC_MachineCustomizePartsSelectState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "ExecuteUbergraph_BPC_MachineCustomizePartsSelectState");

	Params::BPC_MachineCustomizePartsSelectState_C_ExecuteUbergraph_BPC_MachineCustomizePartsSelectState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.GetCamera
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AGarageCamera*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AGarageCamera* UBPC_MachineCustomizePartsSelectState_C::GetCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "GetCamera");

	Params::BPC_MachineCustomizePartsSelectState_C_GetCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.GetCurrentPartsIds
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EMachineId*                             OutFrontPartsId                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId*                             OutRearPartsId                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMachineId*                             OutTirePartsId                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizePartsSelectState_C::GetCurrentPartsIds(EMachineId* OutFrontPartsId, EMachineId* OutRearPartsId, EMachineId* OutTirePartsId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "GetCurrentPartsIds");

	Params::BPC_MachineCustomizePartsSelectState_C_GetCurrentPartsIds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFrontPartsId != nullptr)
		*OutFrontPartsId = Parms.OutFrontPartsId;

	if (OutRearPartsId != nullptr)
		*OutRearPartsId = Parms.OutRearPartsId;

	if (OutTirePartsId != nullptr)
		*OutTirePartsId = Parms.OutTirePartsId;
}


// Function BPC_MachineCustomizePartsSelectState.BPC_MachineCustomizePartsSelectState_C.IsOpenTabControlTipsWindow
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bEnableOpenWindow                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizePartsSelectState_C::IsOpenTabControlTipsWindow(bool* bEnableOpenWindow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizePartsSelectState_C", "IsOpenTabControlTipsWindow");

	Params::BPC_MachineCustomizePartsSelectState_C_IsOpenTabControlTipsWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnableOpenWindow != nullptr)
		*bEnableOpenWindow = Parms.bEnableOpenWindow;
}

}

