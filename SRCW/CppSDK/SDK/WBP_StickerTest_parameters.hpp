#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StickerTest

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_StickerTest.WBP_StickerTest_C.PlayGuideIn
// 0x0008 (0x0008 - 0x0000)
struct WBP_StickerTest_C_PlayGuideIn final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StickerTest_C_PlayGuideIn) == 0x000008, "Wrong alignment on WBP_StickerTest_C_PlayGuideIn");
static_assert(sizeof(WBP_StickerTest_C_PlayGuideIn) == 0x000008, "Wrong size on WBP_StickerTest_C_PlayGuideIn");
static_assert(offsetof(WBP_StickerTest_C_PlayGuideIn, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_StickerTest_C_PlayGuideIn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_StickerTest.WBP_StickerTest_C.PlayGuideOut
// 0x0008 (0x0008 - 0x0000)
struct WBP_StickerTest_C_PlayGuideOut final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StickerTest_C_PlayGuideOut) == 0x000008, "Wrong alignment on WBP_StickerTest_C_PlayGuideOut");
static_assert(sizeof(WBP_StickerTest_C_PlayGuideOut) == 0x000008, "Wrong size on WBP_StickerTest_C_PlayGuideOut");
static_assert(offsetof(WBP_StickerTest_C_PlayGuideOut, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_StickerTest_C_PlayGuideOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_StickerTest.WBP_StickerTest_C.SetUvPreviewMid
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_StickerTest_C_SetUvPreviewMid final
{
public:
	class UMaterialInstanceDynamic*               InUvPreviewMid;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bInFlipUv;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0010(0x0038)(NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x0048(0x0038)(NoDestructor)
	struct FWidgetTransform                       K2Node_Select_Default;                             // 0x0080(0x0038)(NoDestructor)
};
static_assert(alignof(WBP_StickerTest_C_SetUvPreviewMid) == 0x000008, "Wrong alignment on WBP_StickerTest_C_SetUvPreviewMid");
static_assert(sizeof(WBP_StickerTest_C_SetUvPreviewMid) == 0x0000B8, "Wrong size on WBP_StickerTest_C_SetUvPreviewMid");
static_assert(offsetof(WBP_StickerTest_C_SetUvPreviewMid, InUvPreviewMid) == 0x000000, "Member 'WBP_StickerTest_C_SetUvPreviewMid::InUvPreviewMid' has a wrong offset!");
static_assert(offsetof(WBP_StickerTest_C_SetUvPreviewMid, bInFlipUv) == 0x000008, "Member 'WBP_StickerTest_C_SetUvPreviewMid::bInFlipUv' has a wrong offset!");
static_assert(offsetof(WBP_StickerTest_C_SetUvPreviewMid, Temp_bool_Variable) == 0x000009, "Member 'WBP_StickerTest_C_SetUvPreviewMid::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StickerTest_C_SetUvPreviewMid, K2Node_MakeStruct_WidgetTransform) == 0x000010, "Member 'WBP_StickerTest_C_SetUvPreviewMid::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_StickerTest_C_SetUvPreviewMid, K2Node_MakeStruct_WidgetTransform_1) == 0x000048, "Member 'WBP_StickerTest_C_SetUvPreviewMid::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");
static_assert(offsetof(WBP_StickerTest_C_SetUvPreviewMid, K2Node_Select_Default) == 0x000080, "Member 'WBP_StickerTest_C_SetUvPreviewMid::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StickerTest.WBP_StickerTest_C.SetWarningVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_StickerTest_C_SetWarningVisibility final
{
public:
	bool                                          InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StickerTest_C_SetWarningVisibility) == 0x000001, "Wrong alignment on WBP_StickerTest_C_SetWarningVisibility");
static_assert(sizeof(WBP_StickerTest_C_SetWarningVisibility) == 0x000001, "Wrong size on WBP_StickerTest_C_SetWarningVisibility");
static_assert(offsetof(WBP_StickerTest_C_SetWarningVisibility, InVisibility) == 0x000000, "Member 'WBP_StickerTest_C_SetWarningVisibility::InVisibility' has a wrong offset!");

// Function WBP_StickerTest.WBP_StickerTest_C.ToggleUvPreviewMid
// 0x0002 (0x0002 - 0x0000)
struct WBP_StickerTest_C_ToggleUvPreviewMid final
{
public:
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StickerTest_C_ToggleUvPreviewMid) == 0x000001, "Wrong alignment on WBP_StickerTest_C_ToggleUvPreviewMid");
static_assert(sizeof(WBP_StickerTest_C_ToggleUvPreviewMid) == 0x000002, "Wrong size on WBP_StickerTest_C_ToggleUvPreviewMid");
static_assert(offsetof(WBP_StickerTest_C_ToggleUvPreviewMid, CallFunc_GetVisibility_ReturnValue) == 0x000000, "Member 'WBP_StickerTest_C_ToggleUvPreviewMid::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StickerTest_C_ToggleUvPreviewMid, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_StickerTest_C_ToggleUvPreviewMid::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

