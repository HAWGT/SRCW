#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Window_MachineOption

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.ExecuteUbergraph_WBP_Window_MachineOption
// 0x0018 (0x0018 - 0x0000)
struct WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption");
static_assert(sizeof(WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption) == 0x000018, "Wrong size on WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption");
static_assert(offsetof(WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption, EntryPoint) == 0x000000, "Member 'WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_Window_MachineOption_C_ExecuteUbergraph_WBP_Window_MachineOption::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.OnPlayAnimIn
// 0x0008 (0x0008 - 0x0000)
struct WBP_Window_MachineOption_C_OnPlayAnimIn final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_OnPlayAnimIn) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_OnPlayAnimIn");
static_assert(sizeof(WBP_Window_MachineOption_C_OnPlayAnimIn) == 0x000008, "Wrong size on WBP_Window_MachineOption_C_OnPlayAnimIn");
static_assert(offsetof(WBP_Window_MachineOption_C_OnPlayAnimIn, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Window_MachineOption_C_OnPlayAnimIn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.OnPlayAnimLoop
// 0x0008 (0x0008 - 0x0000)
struct WBP_Window_MachineOption_C_OnPlayAnimLoop final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_OnPlayAnimLoop) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_OnPlayAnimLoop");
static_assert(sizeof(WBP_Window_MachineOption_C_OnPlayAnimLoop) == 0x000008, "Wrong size on WBP_Window_MachineOption_C_OnPlayAnimLoop");
static_assert(offsetof(WBP_Window_MachineOption_C_OnPlayAnimLoop, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Window_MachineOption_C_OnPlayAnimLoop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.OnPlayAnimOut
// 0x0008 (0x0008 - 0x0000)
struct WBP_Window_MachineOption_C_OnPlayAnimOut final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_OnPlayAnimOut) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_OnPlayAnimOut");
static_assert(sizeof(WBP_Window_MachineOption_C_OnPlayAnimOut) == 0x000008, "Wrong size on WBP_Window_MachineOption_C_OnPlayAnimOut");
static_assert(offsetof(WBP_Window_MachineOption_C_OnPlayAnimOut, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Window_MachineOption_C_OnPlayAnimOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.OnPlaySEAnim
// 0x0004 (0x0004 - 0x0000)
struct WBP_Window_MachineOption_C_OnPlaySEAnim final
{
public:
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0000(0x0004)()
};
static_assert(alignof(WBP_Window_MachineOption_C_OnPlaySEAnim) == 0x000004, "Wrong alignment on WBP_Window_MachineOption_C_OnPlaySEAnim");
static_assert(sizeof(WBP_Window_MachineOption_C_OnPlaySEAnim) == 0x000004, "Wrong size on WBP_Window_MachineOption_C_OnPlaySEAnim");
static_assert(offsetof(WBP_Window_MachineOption_C_OnPlaySEAnim, CallFunc_SoundPlay_ReturnValue) == 0x000000, "Member 'WBP_Window_MachineOption_C_OnPlaySEAnim::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Window_MachineOption_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Window_MachineOption_C_PreConstruct");
static_assert(sizeof(WBP_Window_MachineOption_C_PreConstruct) == 0x000001, "Wrong size on WBP_Window_MachineOption_C_PreConstruct");
static_assert(offsetof(WBP_Window_MachineOption_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Window_MachineOption_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.SetupAssistAerialTrick
// 0x0020 (0x0020 - 0x0000)
struct WBP_Window_MachineOption_C_SetupAssistAerialTrick final
{
public:
	bool                                          IsFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     CallFunc_GetAerialTrickAssist_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Window_Sub_Option_C*               K2Node_DynamicCast_AsWBP_Window_Sub_Option;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_SetupAssistAerialTrick) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_SetupAssistAerialTrick");
static_assert(sizeof(WBP_Window_MachineOption_C_SetupAssistAerialTrick) == 0x000020, "Wrong size on WBP_Window_MachineOption_C_SetupAssistAerialTrick");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAerialTrick, IsFlag) == 0x000000, "Member 'WBP_Window_MachineOption_C_SetupAssistAerialTrick::IsFlag' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAerialTrick, CallFunc_GetAerialTrickAssist_ReturnValue) == 0x000008, "Member 'WBP_Window_MachineOption_C_SetupAssistAerialTrick::CallFunc_GetAerialTrickAssist_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAerialTrick, K2Node_DynamicCast_AsWBP_Window_Sub_Option) == 0x000010, "Member 'WBP_Window_MachineOption_C_SetupAssistAerialTrick::K2Node_DynamicCast_AsWBP_Window_Sub_Option' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAerialTrick, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Window_MachineOption_C_SetupAssistAerialTrick::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.SetupAssistAutoAccel
// 0x0020 (0x0020 - 0x0000)
struct WBP_Window_MachineOption_C_SetupAssistAutoAccel final
{
public:
	bool                                          IsFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     CallFunc_GetAutoAccel_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Window_Sub_Option_C*               K2Node_DynamicCast_AsWBP_Window_Sub_Option;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_SetupAssistAutoAccel) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_SetupAssistAutoAccel");
static_assert(sizeof(WBP_Window_MachineOption_C_SetupAssistAutoAccel) == 0x000020, "Wrong size on WBP_Window_MachineOption_C_SetupAssistAutoAccel");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAutoAccel, IsFlag) == 0x000000, "Member 'WBP_Window_MachineOption_C_SetupAssistAutoAccel::IsFlag' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAutoAccel, CallFunc_GetAutoAccel_ReturnValue) == 0x000008, "Member 'WBP_Window_MachineOption_C_SetupAssistAutoAccel::CallFunc_GetAutoAccel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAutoAccel, K2Node_DynamicCast_AsWBP_Window_Sub_Option) == 0x000010, "Member 'WBP_Window_MachineOption_C_SetupAssistAutoAccel::K2Node_DynamicCast_AsWBP_Window_Sub_Option' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistAutoAccel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Window_MachineOption_C_SetupAssistAutoAccel::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Window_MachineOption.WBP_Window_MachineOption_C.SetupAssistHandle
// 0x0020 (0x0020 - 0x0000)
struct WBP_Window_MachineOption_C_SetupAssistHandle final
{
public:
	bool                                          IsFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     CallFunc_GetHandleAssist_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Window_Sub_Option_C*               K2Node_DynamicCast_AsWBP_Window_Sub_Option;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Window_MachineOption_C_SetupAssistHandle) == 0x000008, "Wrong alignment on WBP_Window_MachineOption_C_SetupAssistHandle");
static_assert(sizeof(WBP_Window_MachineOption_C_SetupAssistHandle) == 0x000020, "Wrong size on WBP_Window_MachineOption_C_SetupAssistHandle");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistHandle, IsFlag) == 0x000000, "Member 'WBP_Window_MachineOption_C_SetupAssistHandle::IsFlag' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistHandle, CallFunc_GetHandleAssist_ReturnValue) == 0x000008, "Member 'WBP_Window_MachineOption_C_SetupAssistHandle::CallFunc_GetHandleAssist_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistHandle, K2Node_DynamicCast_AsWBP_Window_Sub_Option) == 0x000010, "Member 'WBP_Window_MachineOption_C_SetupAssistHandle::K2Node_DynamicCast_AsWBP_Window_Sub_Option' has a wrong offset!");
static_assert(offsetof(WBP_Window_MachineOption_C_SetupAssistHandle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Window_MachineOption_C_SetupAssistHandle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

