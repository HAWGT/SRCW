#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LS_EntryRacers_Overview

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP
// 0x0090 (0x0090 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_In_RacerActor;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_In_Index;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVehicleInRacePawn*                     K2Node_DynamicCast_AsVehicle_in_Race_Pawn;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverPose                                   CallFunc_GetDriverPose_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AVehicleBaseActor*                      CallFunc_GetActiveVehicle_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_GetSceneDriverAnimationAsset_Anim;        // 0x0030(0x0028)(HasGetValueTypeHash)
	double                                        CallFunc_GetSceneDriverAnimationAsset_Time;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSceneDriverAnimationAsset_bSkipFacialBlend; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim________;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneDriver_C*                      K2Node_CustomEvent_BP_SceneDriver_0;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayAnimationByAsset_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimationByAsset_Position_ImplicitCast; // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP) == 0x000090, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, EntryPoint) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_CustomEvent_In_RacerActor) == 0x000008, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_CustomEvent_In_RacerActor' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_CustomEvent_In_Index) == 0x000010, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_CustomEvent_In_Index' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_DynamicCast_AsVehicle_in_Race_Pawn) == 0x000018, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_DynamicCast_AsVehicle_in_Race_Pawn' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_GetDriverPose_ReturnValue) == 0x000021, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_GetDriverPose_ReturnValue' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_GetActiveVehicle_ReturnValue) == 0x000028, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_GetActiveVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_GetSceneDriverAnimationAsset_Anim) == 0x000030, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_GetSceneDriverAnimationAsset_Anim' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_GetSceneDriverAnimationAsset_Time) == 0x000058, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_GetSceneDriverAnimationAsset_Time' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_GetSceneDriverAnimationAsset_bSkipFacialBlend) == 0x000060, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_GetSceneDriverAnimationAsset_bSkipFacialBlend' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_DynamicCast_AsAnim________) == 0x000070, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_DynamicCast_AsAnim________' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, K2Node_CustomEvent_BP_SceneDriver_0) == 0x000080, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::K2Node_CustomEvent_BP_SceneDriver_0' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_PlayAnimationByAsset_ReturnValue) == 0x000088, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_PlayAnimationByAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP, CallFunc_PlayAnimationByAsset_Position_ImplicitCast) == 0x00008C, "Member 'LS_EntryRacers_Overview_DirectorBP_C_ExecuteUbergraph_LS_EntryRacers_Overview_DirectorBP::CallFunc_PlayAnimationByAsset_Position_ImplicitCast' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.OnEnterRacer
// 0x0010 (0x0010 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Index;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer) == 0x000010, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer::In_RacerActor' has a wrong offset!");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer, In_Index) == 0x000008, "Member 'LS_EntryRacers_Overview_DirectorBP_C_OnEnterRacer::In_Index' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.OnPlayAnimation
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_OnPlayAnimation::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_0::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_1::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_10::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_12::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_13::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_14::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_15::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_16::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_17::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_18::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_19::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_2::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_20::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_21::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22 final
{
public:
	class ABP_SceneDriver_C*                      BP_SceneDriver_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22, BP_SceneDriver_0) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_22::BP_SceneDriver_0' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_3::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_4::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_5::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_6::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_7::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_8::In_RacerActor' has a wrong offset!");

// Function LS_EntryRacers_Overview.LS_EntryRacers_Overview_DirectorBP_C.SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9
// 0x0008 (0x0008 - 0x0000)
struct LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9 final
{
public:
	class AActor*                                 In_RacerActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9) == 0x000008, "Wrong alignment on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9");
static_assert(sizeof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9) == 0x000008, "Wrong size on LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9");
static_assert(offsetof(LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9, In_RacerActor) == 0x000000, "Member 'LS_EntryRacers_Overview_DirectorBP_C_SequenceEvent__ENTRYPOINTLS_EntryRacers_Overview_DirectorBP_9::In_RacerActor' has a wrong offset!");

}

