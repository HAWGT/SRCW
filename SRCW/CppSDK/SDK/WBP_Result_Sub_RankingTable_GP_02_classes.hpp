#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Result_Sub_RankingTable_GP_02

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_classes.hpp"
#include "UnionLib_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Result_Sub_RankingTable_GP_02.WBP_Result_Sub_RankingTable_GP_02_C
// 0x0228 (0x0530 - 0x0308)
class UWBP_Result_Sub_RankingTable_GP_02_C final : public UUnionRaceUIResultLine
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TotalPoint_Bonus_In;                               // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TotalPoint_Loop_After2nd;                          // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TotalPoint_Loop_1st;                               // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GetPoint_AddMove;                                  // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GetPoint_InLoop;                                   // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Cursor_Loop;                                       // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_Loop;                                      // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DMY_CharaIcon;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DSP_Online;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_PAT_Rank;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Result_Sub_RankingTable_Crown_C*   DSP_WBP_Result_Sub_RankingTable_Crown;             // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ResultRate_Sub_RankIcon_C*         DSP_WBP_ResultRate_Sub_RankIcon;                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        DSP_WidgetSwitcher_Rank;                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Empty;                                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Empty_Rank;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FashingLight;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Light_01;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MLC_RankigTableBase;                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NumPoint;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_Arrow;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlatformIcon;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlagWave;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RivalIcon;                                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RivalIcon_HighLevel;                               // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Offline;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_GetPoint;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_PlayerName;                                    // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Rate;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      TXT_Time;                                          // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_TotalPoint;                                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_TotalPoint_Next;                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_PlayerNumber_C*                WBP_CMN_PlayerNumber;                              // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_Sub_RankNum_C*                 WBP_CMN_Sub_RankNum;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HonorTitle_Plate_C*                WBP_HonorTitle_Plate;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Result_Sub_BonusCountIcon_C*       WBP_Result_Sub_BonusCountIcon;                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Result_Sub_RankingTable_Bonus_C*   WBP_Result_Sub_RankingTable_Bonus;                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Result_Sub_RankingTable_MatchPoint_C* WBP_Result_Sub_RankingTable_MatchPoint;         // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Result_Sub_RivalRacerText_C*       WBP_Result_Sub_RivalRacerText;                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_AddPoint;                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_PF;                                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         WaitingAddPointValue;                              // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPoint;                                        // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeforePoint;                                       // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerNumber;                                      // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              NewVar_0;                                          // 0x0460(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EDriverId                                     CharaId;                                           // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Racer_Name;                                        // 0x0490(0x0010)(Edit, BlueprintVisible)
	int32                                         Rank_Index;                                        // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CharaFaceIconMat;                                  // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         MLC_Rankig_Table_Base;                             // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsPlayer;                                         // 0x04B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RacerIndex;                                        // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlateColorIndex;                                   // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOnlineMode;                                     // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              AddMoveFinishedEvent;                              // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FUniqueNetIdRepl                       UserId;                                            // 0x04D8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         RatePoint;                                         // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRival;                                          // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidgetAnimation*>               Animations;                                        // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnAnimEvent_AddedPoint;                            // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ApplyByRacers();
	void ApplyWaitingAddPoint();
	void ApplyWaitingAddPoint_Impl();
	void CloseMatchPoint();
	void Construct();
	void DumpStat(float Duration, bool bPrintToLog);
	void ExecuteUbergraph_WBP_Result_Sub_RankingTable_GP_02(int32 EntryPoint);
	void GetRateRank_impl(ERateRank* RateRank);
	void MVP_Anim();
	void OnAddMoveFinished();
	void OnLoaded_C86804D04FF09BEF514CE08E48C28201(class UObject* Loaded);
	void OpenFestaBonusIcon(double DelayNum);
	void Play_Add_Bonus_Impl();
	void Play_Loop_1st_Impl();
	void PlayAddBonus();
	void PlayAddedPointSE();
	void PlayBonusPoint(const class FText& BonusName, const class FText& BonusNum);
	void PlayBonusPointClose();
	void PlayCheckMatchPoint(int32 TotalPoint_0);
	void PlayCheckMatchPointImpl(int32 TotalPoint_0);
	void PlayGetAnimation();
	void PlayGetAnimation_Impl(bool bSkiping);
	void PlayLoop1st();
	void PlayMatchPoint();
	void PlayPlayerEffect();
	void PlayPlayerEffect_Impl();
	void PlayTotalPoint_Loop_After2nd();
	void PlayTotalPoint_Loop_After2nd_Impl();
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTWBP_Result_Sub_RankingTable_GP_02();
	void Set_Rank_Index_Impl(int32 RankIndex, bool bIsCrownCheck);
	void Set_Total_Point_Value_Impl(int32 InTotalPoint);
	void SetAddAnimSpeed(float PlaybackSpeed);
	void SetArrowIndex(int32 ArrowIndex);
	void SetArrowIndex_Impl(int32 ArrowIndex);
	void SetBeforePointValue_Impl(int32 InBeforePoint);
	void SetBeforeTotalPointValue(int32 BeforeTotalPoint);
	void SetCharacterId(EDriverId CharaId_0);
	void SetCharacterIndex_Impl(EDriverId InDriverId);
	void SetCrossPlayIcon(ECrossplayPlatform CrossplayType);
	void SetCursorLoop(bool IsPlayer);
	void SetCursorLoopDefault();
	void SetDrawRatePoint();
	void SetEarnPointValue(int32 EarnPoint);
	void SetFace();
	void SetFestaBonusPoint(int32 Point, bool bIs1st);
	void SetGetPointValue_Impl(int32 InAddPoint);
	void SetHonorTitle();
	void SetLapTime(float Time);
	void SetLapTimeAdd(double Time);
	void SetLapTimeBase(double Time);
	void SetLapTimePlus(float Time);
	void SetLoadingModeOther();
	void SetOnlineIconAndPlate(int32 PlayerIndex);
	void SetPartyPoint(int32 Point);
	void SetPartyResultModeImpl(bool bIsLoading);
	void SetPlateColor(int32 Index_0, bool bIsNoRival);
	void SetPlatformIcon();
	void SetPlayerControllerIndex_Impl(int32 InPlayerIndex);
	void SetPlayerIndex(int32 PlayerIndex);
	void SetPlayerIndexEx(int32 Index_0);
	void SetPlayerName_Impl(const class FText& InPlayerName);
	void SetPlayerNumber_Impl(int32 PlayerIndex);
	void SetRacerIndex(int32 Index_0);
	void SetRacerName(const class FText& RacerName);
	void SetRankIndex(int32 RankIndex, bool bIsCheckCrown);
	void SetRankMatchMode();
	void SetRateRankIcon();
	void SetRivalIF(bool IsRival, bool IsPowerRival);
	void SetTeamColor(int32 TeamNo);
	void SetTotalPointValue(int32 TotalPoint_0);
	void UpdateRivalRacer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Result_Sub_RankingTable_GP_02_C">();
	}
	static class UWBP_Result_Sub_RankingTable_GP_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Result_Sub_RankingTable_GP_02_C>();
	}
};
static_assert(alignof(UWBP_Result_Sub_RankingTable_GP_02_C) == 0x000008, "Wrong alignment on UWBP_Result_Sub_RankingTable_GP_02_C");
static_assert(sizeof(UWBP_Result_Sub_RankingTable_GP_02_C) == 0x000530, "Wrong size on UWBP_Result_Sub_RankingTable_GP_02_C");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, UberGraphFrame) == 0x000308, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TotalPoint_Bonus_In) == 0x000310, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TotalPoint_Bonus_In' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TotalPoint_Loop_After2nd) == 0x000318, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TotalPoint_Loop_After2nd' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TotalPoint_Loop_1st) == 0x000320, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TotalPoint_Loop_1st' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, GetPoint_AddMove) == 0x000328, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::GetPoint_AddMove' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, GetPoint_InLoop) == 0x000330, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::GetPoint_InLoop' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Cursor_Loop) == 0x000338, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Cursor_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Default_Loop) == 0x000340, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Default_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, DMY_CharaIcon) == 0x000348, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::DMY_CharaIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, DSP_Online) == 0x000350, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::DSP_Online' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, DSP_PAT_Rank) == 0x000358, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::DSP_PAT_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, DSP_WBP_Result_Sub_RankingTable_Crown) == 0x000360, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::DSP_WBP_Result_Sub_RankingTable_Crown' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, DSP_WBP_ResultRate_Sub_RankIcon) == 0x000368, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::DSP_WBP_ResultRate_Sub_RankIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, DSP_WidgetSwitcher_Rank) == 0x000370, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::DSP_WidgetSwitcher_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Empty) == 0x000378, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Empty' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Empty_Rank) == 0x000380, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Empty_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, FashingLight) == 0x000388, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::FashingLight' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Light_01) == 0x000390, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Light_01' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, MLC_RankigTableBase) == 0x000398, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::MLC_RankigTableBase' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Overlay_NumPoint) == 0x0003A0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Overlay_NumPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, PAT_Arrow) == 0x0003A8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::PAT_Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, PlatformIcon) == 0x0003B0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::PlatformIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, RaceFlagWave) == 0x0003B8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::RaceFlagWave' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, RivalIcon) == 0x0003C0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::RivalIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, RivalIcon_HighLevel) == 0x0003C8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::RivalIcon_HighLevel' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, SizeBox_Offline) == 0x0003D0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::SizeBox_Offline' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TXT_GetPoint) == 0x0003D8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TXT_GetPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TXT_PlayerName) == 0x0003E0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TXT_PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TXT_Rate) == 0x0003E8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TXT_Rate' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TXT_Time) == 0x0003F0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TXT_Time' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TXT_TotalPoint) == 0x0003F8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TXT_TotalPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TXT_TotalPoint_Next) == 0x000400, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TXT_TotalPoint_Next' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_CMN_PlayerNumber) == 0x000408, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_CMN_PlayerNumber' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_CMN_Sub_RankNum) == 0x000410, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_CMN_Sub_RankNum' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_HonorTitle_Plate) == 0x000418, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_HonorTitle_Plate' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_Result_Sub_BonusCountIcon) == 0x000420, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_Result_Sub_BonusCountIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_Result_Sub_RankingTable_Bonus) == 0x000428, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_Result_Sub_RankingTable_Bonus' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_Result_Sub_RankingTable_MatchPoint) == 0x000430, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_Result_Sub_RankingTable_MatchPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WBP_Result_Sub_RivalRacerText) == 0x000438, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WBP_Result_Sub_RivalRacerText' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WidgetSwitcher_AddPoint) == 0x000440, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WidgetSwitcher_AddPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WidgetSwitcher_PF) == 0x000448, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WidgetSwitcher_PF' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, WaitingAddPointValue) == 0x000450, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::WaitingAddPointValue' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, TotalPoint) == 0x000454, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::TotalPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, BeforePoint) == 0x000458, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::BeforePoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, PlayerNumber) == 0x00045C, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::PlayerNumber' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, NewVar_0) == 0x000460, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, CharaId) == 0x000488, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::CharaId' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Racer_Name) == 0x000490, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Racer_Name' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Rank_Index) == 0x0004A0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Rank_Index' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, CharaFaceIconMat) == 0x0004A8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::CharaFaceIconMat' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, MLC_Rankig_Table_Base) == 0x0004B0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::MLC_Rankig_Table_Base' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, bIsPlayer) == 0x0004B4, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::bIsPlayer' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, RacerIndex) == 0x0004B8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::RacerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, PlateColorIndex) == 0x0004BC, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::PlateColorIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, bIsOnlineMode) == 0x0004C0, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::bIsOnlineMode' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, AddMoveFinishedEvent) == 0x0004C8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::AddMoveFinishedEvent' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, UserId) == 0x0004D8, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::UserId' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, RatePoint) == 0x000508, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::RatePoint' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, bIsRival) == 0x00050C, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::bIsRival' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, Animations) == 0x000510, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::Animations' has a wrong offset!");
static_assert(offsetof(UWBP_Result_Sub_RankingTable_GP_02_C, OnAnimEvent_AddedPoint) == 0x000520, "Member 'UWBP_Result_Sub_RankingTable_GP_02_C::OnAnimEvent_AddedPoint' has a wrong offset!");

}

