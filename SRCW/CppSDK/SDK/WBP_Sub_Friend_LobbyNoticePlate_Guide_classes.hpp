#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Sub_Friend_LobbyNoticePlate_Guide

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Sub_Friend_LobbyNoticePlate_Guide.WBP_Sub_Friend_LobbyNoticePlate_Guide_C
// 0x00A8 (0x0388 - 0x02E0)
class UWBP_Sub_Friend_LobbyNoticePlate_Guide_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Animation_Loop;                                    // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Animation_In;                                      // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_NG_Mark;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Light_01;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LobbyInvitation;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Guidance;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           NotAvailableCheckFriendVB;                         // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   PlatformNotAvailableVB;                            // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StreamingInstallNotAvailableVB;                    // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   OnlineNotAvailableVB;                              // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            NotAvailableColor;                                 // 0x0360(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            PlatformNotAvailableColor;                         // 0x0374(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_Sub_Friend_LobbyNoticePlate_Guide(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetupNotAvailable(ELobbyInvitationSequenceType CurrentNotAvailable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Sub_Friend_LobbyNoticePlate_Guide_C">();
	}
	static class UWBP_Sub_Friend_LobbyNoticePlate_Guide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Sub_Friend_LobbyNoticePlate_Guide_C>();
	}
};
static_assert(alignof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C) == 0x000008, "Wrong alignment on UWBP_Sub_Friend_LobbyNoticePlate_Guide_C");
static_assert(sizeof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C) == 0x000388, "Wrong size on UWBP_Sub_Friend_LobbyNoticePlate_Guide_C");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, Animation_Loop) == 0x0002E8, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::Animation_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, Animation_In) == 0x0002F0, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::Animation_In' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, base) == 0x0002F8, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, DSP_NG_Mark) == 0x000300, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::DSP_NG_Mark' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, Light_01) == 0x000308, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::Light_01' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, LobbyInvitation) == 0x000310, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::LobbyInvitation' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, TXT_Guidance) == 0x000318, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::TXT_Guidance' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, NotAvailableCheckFriendVB) == 0x000320, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::NotAvailableCheckFriendVB' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, PlatformNotAvailableVB) == 0x000330, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::PlatformNotAvailableVB' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, StreamingInstallNotAvailableVB) == 0x000340, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::StreamingInstallNotAvailableVB' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, OnlineNotAvailableVB) == 0x000350, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::OnlineNotAvailableVB' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, NotAvailableColor) == 0x000360, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::NotAvailableColor' has a wrong offset!");
static_assert(offsetof(UWBP_Sub_Friend_LobbyNoticePlate_Guide_C, PlatformNotAvailableColor) == 0x000374, "Member 'UWBP_Sub_Friend_LobbyNoticePlate_Guide_C::PlatformNotAvailableColor' has a wrong offset!");

}

