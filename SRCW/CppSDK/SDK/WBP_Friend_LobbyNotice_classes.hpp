#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_LobbyNotice

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Friend_LobbyNotice.WBP_Friend_LobbyNotice_C
// 0x0040 (0x0620 - 0x05E0)
class UWBP_Friend_LobbyNotice_C final : public ULobbyInvitationNoticeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LobbyNotice_Out;                                   // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LobbyNotice_Loop;                                  // 0x05F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LobbyNotice_In;                                    // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_Sub_Friend_LobbyNoticePlate_C*     WBP_Sub_Friend_LobbyNotice;                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Sub_Friend_LobbyNoticePlate_Guide_C* WBP_Sub_Friend_LobbyNoticePlate_Guide;           // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuInputRecieveObject*                MenuInputReceiveObject;                            // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BindAnimationEvent();
	void Construct();
	void ExecuteUbergraph_WBP_Friend_LobbyNotice(int32 EntryPoint);
	void Finished_A30B153F4C34604DA75029AB1A775F07();
	void OnAnimationInFinished();
	void OnAnimationOutFinished();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnHoldInputEnd();
	void OnInitialized();
	void OnSpecialPressedEvent(class UObject* Object);
	void OnSpecialReleasedEvent(class UObject* Object);
	void PlayAnimationIn();
	void PlayAnimationOut();
	void PreConstruct(bool IsDesignTime);
	void RegisterMenuInputReceiveObject();
	void SetControlIcon();
	void SetMenuInputReceiveObject();
	void SetupNoticeSequenceType(ELobbyInvitationSequenceType SequenceType);
	void UnregisterMenuInputReceiveObject();
	void UpdateHoldInputCountDisplay(float CountValue);
	void UpdateLobbyInfoDisplay(const struct FLobbyInvitationNoticeInfo& InLobbyInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Friend_LobbyNotice_C">();
	}
	static class UWBP_Friend_LobbyNotice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Friend_LobbyNotice_C>();
	}
};
static_assert(alignof(UWBP_Friend_LobbyNotice_C) == 0x000008, "Wrong alignment on UWBP_Friend_LobbyNotice_C");
static_assert(sizeof(UWBP_Friend_LobbyNotice_C) == 0x000620, "Wrong size on UWBP_Friend_LobbyNotice_C");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, UberGraphFrame) == 0x0005E0, "Member 'UWBP_Friend_LobbyNotice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, LobbyNotice_Out) == 0x0005E8, "Member 'UWBP_Friend_LobbyNotice_C::LobbyNotice_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, LobbyNotice_Loop) == 0x0005F0, "Member 'UWBP_Friend_LobbyNotice_C::LobbyNotice_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, LobbyNotice_In) == 0x0005F8, "Member 'UWBP_Friend_LobbyNotice_C::LobbyNotice_In' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, WBP_Sub_Friend_LobbyNotice) == 0x000600, "Member 'UWBP_Friend_LobbyNotice_C::WBP_Sub_Friend_LobbyNotice' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, WBP_Sub_Friend_LobbyNoticePlate_Guide) == 0x000608, "Member 'UWBP_Friend_LobbyNotice_C::WBP_Sub_Friend_LobbyNoticePlate_Guide' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, WidgetSwitcher_0) == 0x000610, "Member 'UWBP_Friend_LobbyNotice_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_Friend_LobbyNotice_C, MenuInputReceiveObject) == 0x000618, "Member 'UWBP_Friend_LobbyNotice_C::MenuInputReceiveObject' has a wrong offset!");

}

