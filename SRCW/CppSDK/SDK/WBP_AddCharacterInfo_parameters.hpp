#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AddCharacterInfo

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.EditOpen
// 0x0001 (0x0001 - 0x0000)
struct WBP_AddCharacterInfo_C_EditOpen final
{
public:
	EDriverId                                     characterId;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddCharacterInfo_C_EditOpen) == 0x000001, "Wrong alignment on WBP_AddCharacterInfo_C_EditOpen");
static_assert(sizeof(WBP_AddCharacterInfo_C_EditOpen) == 0x000001, "Wrong size on WBP_AddCharacterInfo_C_EditOpen");
static_assert(offsetof(WBP_AddCharacterInfo_C_EditOpen, characterId) == 0x000000, "Member 'WBP_AddCharacterInfo_C_EditOpen::characterId' has a wrong offset!");

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.ExecuteUbergraph_WBP_AddCharacterInfo
// 0x0060 (0x0060 - 0x0000)
struct WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_AddCharacterInfo_Sub_Ring_C*> CallFunc_GetCharacterInfos_Infos;                // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	EDriverId                                     K2Node_Event_CharacterId;                          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_4;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     K2Node_CustomEvent_CharacterId;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo) == 0x000008, "Wrong alignment on WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo");
static_assert(sizeof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo) == 0x000060, "Wrong size on WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, EntryPoint) == 0x000000, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_GetCharacterInfos_Infos) == 0x000028, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_GetCharacterInfos_Infos' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, K2Node_Event_CharacterId) == 0x000038, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::K2Node_Event_CharacterId' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_IsVisible_ReturnValue) == 0x000048, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_IsVisible_ReturnValue_1) == 0x000049, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_IsVisible_ReturnValue_2) == 0x00004A, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_IsVisible_ReturnValue_3) == 0x00004B, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_IsVisible_ReturnValue_4) == 0x00004C, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_IsVisible_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, K2Node_CustomEvent_CharacterId) == 0x00004D, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::K2Node_CustomEvent_CharacterId' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WBP_AddCharacterInfo_C_ExecuteUbergraph_WBP_AddCharacterInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.GetCharacterInfos
// 0x0020 (0x0020 - 0x0000)
struct WBP_AddCharacterInfo_C_GetCharacterInfos final
{
public:
	TArray<class UWBP_AddCharacterInfo_Sub_Ring_C*> Infos;                                           // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_AddCharacterInfo_Sub_Ring_C*> K2Node_MakeArray_Array;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_AddCharacterInfo_C_GetCharacterInfos) == 0x000008, "Wrong alignment on WBP_AddCharacterInfo_C_GetCharacterInfos");
static_assert(sizeof(WBP_AddCharacterInfo_C_GetCharacterInfos) == 0x000020, "Wrong size on WBP_AddCharacterInfo_C_GetCharacterInfos");
static_assert(offsetof(WBP_AddCharacterInfo_C_GetCharacterInfos, Infos) == 0x000000, "Member 'WBP_AddCharacterInfo_C_GetCharacterInfos::Infos' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_GetCharacterInfos, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_AddCharacterInfo_C_GetCharacterInfos::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.Open
// 0x0001 (0x0001 - 0x0000)
struct WBP_AddCharacterInfo_C_Open final
{
public:
	EDriverId                                     characterId;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddCharacterInfo_C_Open) == 0x000001, "Wrong alignment on WBP_AddCharacterInfo_C_Open");
static_assert(sizeof(WBP_AddCharacterInfo_C_Open) == 0x000001, "Wrong size on WBP_AddCharacterInfo_C_Open");
static_assert(offsetof(WBP_AddCharacterInfo_C_Open, characterId) == 0x000000, "Member 'WBP_AddCharacterInfo_C_Open::characterId' has a wrong offset!");

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.SetLastCutTexture
// 0x0020 (0x0020 - 0x0000)
struct WBP_AddCharacterInfo_C_SetLastCutTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddCharacterInfo_C_SetLastCutTexture) == 0x000008, "Wrong alignment on WBP_AddCharacterInfo_C_SetLastCutTexture");
static_assert(sizeof(WBP_AddCharacterInfo_C_SetLastCutTexture) == 0x000020, "Wrong size on WBP_AddCharacterInfo_C_SetLastCutTexture");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetLastCutTexture, Texture) == 0x000000, "Member 'WBP_AddCharacterInfo_C_SetLastCutTexture::Texture' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetLastCutTexture, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_AddCharacterInfo_C_SetLastCutTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetLastCutTexture, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_AddCharacterInfo_C_SetLastCutTexture::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetLastCutTexture, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'WBP_AddCharacterInfo_C_SetLastCutTexture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.SetSubWidgetTexture
// 0x0030 (0x0030 - 0x0000)
struct WBP_AddCharacterInfo_C_SetSubWidgetTexture final
{
public:
	class UUserWidget*                            SubWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_AddCharacterInfo_Sub_Ring_C*       K2Node_DynamicCast_AsWBP_Add_Character_Info_Sub_Ring; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AddCharacterInfo_Sub_Ring_C*       K2Node_DynamicCast_AsWBP_Add_Character_Info_Sub_Ring_1; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddCharacterInfo_C_SetSubWidgetTexture) == 0x000008, "Wrong alignment on WBP_AddCharacterInfo_C_SetSubWidgetTexture");
static_assert(sizeof(WBP_AddCharacterInfo_C_SetSubWidgetTexture) == 0x000030, "Wrong size on WBP_AddCharacterInfo_C_SetSubWidgetTexture");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, SubWidget) == 0x000000, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::SubWidget' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, Texture) == 0x000008, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::Texture' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, K2Node_DynamicCast_AsWBP_Add_Character_Info_Sub_Ring) == 0x000010, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::K2Node_DynamicCast_AsWBP_Add_Character_Info_Sub_Ring' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, K2Node_DynamicCast_AsWBP_Add_Character_Info_Sub_Ring_1) == 0x000020, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::K2Node_DynamicCast_AsWBP_Add_Character_Info_Sub_Ring_1' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetSubWidgetTexture, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_AddCharacterInfo_C_SetSubWidgetTexture::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_AddCharacterInfo.WBP_AddCharacterInfo_C.SetText
// 0x0030 (0x0030 - 0x0000)
struct WBP_AddCharacterInfo_C_SetText final
{
public:
	class FText                                   TopText;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   BottomText;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   NameText;                                          // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_AddCharacterInfo_C_SetText) == 0x000008, "Wrong alignment on WBP_AddCharacterInfo_C_SetText");
static_assert(sizeof(WBP_AddCharacterInfo_C_SetText) == 0x000030, "Wrong size on WBP_AddCharacterInfo_C_SetText");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetText, TopText) == 0x000000, "Member 'WBP_AddCharacterInfo_C_SetText::TopText' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetText, BottomText) == 0x000010, "Member 'WBP_AddCharacterInfo_C_SetText::BottomText' has a wrong offset!");
static_assert(offsetof(WBP_AddCharacterInfo_C_SetText, NameText) == 0x000020, "Member 'WBP_AddCharacterInfo_C_SetText::NameText' has a wrong offset!");

}

