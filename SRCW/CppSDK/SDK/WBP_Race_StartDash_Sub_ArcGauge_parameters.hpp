#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_StartDash_Sub_ArcGauge

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Event_ImageRef;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_PivotRate;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_GaugeRateRange;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Event_Key;                                  // 0x0028(0x0018)(ConstParm, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerIndex;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUnionRaceStartDashParam               K2Node_Event_InStartDashParam;                     // 0x0044(0x0030)(ConstParm, NoDestructor)
	bool                                          K2Node_CustomEvent_IsGhostView;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetPivotAndRange_PivotParcent_ImplicitCast; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetPivotAndRange_ZeroToOne_ImplicitCast;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_LV3_PIVOT_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_LV3_RANGE_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_LV2_PIVOT_ImplicitCast; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_LV2_RANGE_ImplicitCast; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_NG1_PIVOT_ImplicitCast; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_NG1_RANGE_ImplicitCast; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_NG2_PIVOT_ImplicitCast; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStartDashSettings_NG2_RANGE_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge) == 0x0000C8, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, EntryPoint) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_ImageRef) == 0x000008, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_ImageRef' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_PivotRate) == 0x000010, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_PivotRate' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_GaugeRateRange) == 0x000014, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_GaugeRateRange' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_IsDesignTime) == 0x000020, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_Key) == 0x000028, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_Key' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_PlayerIndex) == 0x000040, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_PlayerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_Event_InStartDashParam) == 0x000044, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_Event_InStartDashParam' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, K2Node_CustomEvent_IsGhostView) == 0x000074, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::K2Node_CustomEvent_IsGhostView' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetPivotAndRange_PivotParcent_ImplicitCast) == 0x000078, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetPivotAndRange_PivotParcent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetPivotAndRange_ZeroToOne_ImplicitCast) == 0x000080, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetPivotAndRange_ZeroToOne_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_LV3_PIVOT_ImplicitCast) == 0x000088, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_LV3_PIVOT_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_LV3_RANGE_ImplicitCast) == 0x000090, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_LV3_RANGE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_LV2_PIVOT_ImplicitCast) == 0x000098, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_LV2_PIVOT_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_LV2_RANGE_ImplicitCast) == 0x0000A0, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_LV2_RANGE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_NG1_PIVOT_ImplicitCast) == 0x0000A8, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_NG1_PIVOT_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_NG1_RANGE_ImplicitCast) == 0x0000B0, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_NG1_RANGE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_NG2_PIVOT_ImplicitCast) == 0x0000B8, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_NG2_PIVOT_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge, CallFunc_SetStartDashSettings_NG2_RANGE_ImplicitCast) == 0x0000C0, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge::CallFunc_SetStartDashSettings_NG2_RANGE_ImplicitCast' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.GetButtonWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget) == 0x000008, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget, ReturnValue) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_GetButtonWidget::ReturnValue' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct) == 0x000001, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetDashInputKey
// 0x0020 (0x0020 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey) == 0x000020, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey, Key) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey::Key' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey, PlayerIndex) == 0x000018, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetDashInputKey::PlayerIndex' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetGaugePivotAndRange
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange final
{
public:
	class UImage*                                 ImageRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         PivotRate;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeRateRange;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange) == 0x000010, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange, ImageRef) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange::ImageRef' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange, PivotRate) == 0x000008, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange::PivotRate' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange, GaugeRateRange) == 0x00000C, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetGaugePivotAndRange::GaugeRateRange' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetGhostViewMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode final
{
public:
	bool                                          IsGhostView;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode) == 0x000001, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode) == 0x000001, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode, IsGhostView) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetGhostViewMode::IsGhostView' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetKey
// 0x0040 (0x0040 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKeyAccel_ReturnValue;                  // 0x0020(0x0018)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayControlKeyboard_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetKey_Success;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetKey_Success_1;                         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetKey");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey) == 0x000040, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetKey");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, NewKey) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, PlayerControllerIndex) == 0x000018, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, CallFunc_GetKeyAccel_ReturnValue) == 0x000020, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::CallFunc_GetKeyAccel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, CallFunc_IsPlayControlKeyboard_ReturnValue) == 0x000038, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::CallFunc_IsPlayControlKeyboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, CallFunc_SetKey_Success) == 0x00003A, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::CallFunc_SetKey_Success' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetKey, CallFunc_SetKey_Success_1) == 0x00003B, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetKey::CallFunc_SetKey_Success_1' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetParcentMyGauge
// 0x0030 (0x0030 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge final
{
public:
	double                                        ZeroToOne_Max1_5;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge) == 0x000030, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, ZeroToOne_Max1_5) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::ZeroToOne_Max1_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, CallFunc_FClamp_ReturnValue_1) == 0x000018, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000028, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00002C, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetParcentMyGauge::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetPivotAndRange
// 0x0068 (0x0068 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange final
{
public:
	double                                        ZeroToOne;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PivotParcent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange) == 0x000068, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, ZeroToOne) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::ZeroToOne' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, PivotParcent) == 0x000008, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::PivotParcent' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, Image) == 0x000010, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::Image' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000050, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000058, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000060, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000064, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetPivotAndRange::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetStartDashParamSetting
// 0x0030 (0x0030 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting final
{
public:
	struct FUnionRaceStartDashParam               InStartDashParam;                                  // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting) == 0x000004, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting) == 0x000030, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting, InStartDashParam) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashParamSetting::InStartDashParam' has a wrong offset!");

// Function WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C.SetStartDashSettings
// 0x0080 (0x0080 - 0x0000)
struct WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings final
{
public:
	double                                        LV3_PIVOT;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LV3_RANGE;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LV2_PIVOT;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LV2_RANGE;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NG1_PIVOT;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NG1_RANGE;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NG2_PIVOT;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NG2_RANGE;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings) == 0x000008, "Wrong alignment on WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings");
static_assert(sizeof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings) == 0x000080, "Wrong size on WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, LV3_PIVOT) == 0x000000, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::LV3_PIVOT' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, LV3_RANGE) == 0x000008, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::LV3_RANGE' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, LV2_PIVOT) == 0x000010, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::LV2_PIVOT' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, LV2_RANGE) == 0x000018, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::LV2_RANGE' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, NG1_PIVOT) == 0x000020, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::NG1_PIVOT' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, NG1_RANGE) == 0x000028, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::NG1_RANGE' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, NG2_PIVOT) == 0x000030, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::NG2_PIVOT' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, NG2_RANGE) == 0x000038, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::NG2_RANGE' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000060, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000068, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000070, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x000078, "Member 'WBP_Race_StartDash_Sub_ArcGauge_C_SetStartDashSettings::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");

}

