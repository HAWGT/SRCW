#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OnlineSequence

#include "Basic.hpp"

#include "BP_OnlineSequence_classes.hpp"
#include "BP_OnlineSequence_parameters.hpp"


namespace SDK
{

// Function BP_OnlineSequence.BP_OnlineSequence_C.AttachMainCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OnlineSequence_C::AttachMainCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "AttachMainCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.CallDodonpaEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGrandPrixEventFlag                     SaveDataFlagId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMenuSequenceBGM                        BGM_ID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::CallDodonpaEvent(class FName EventName, EGrandPrixEventFlag SaveDataFlagId, EMenuSequenceBGM BGM_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "CallDodonpaEvent");

	Params::BP_OnlineSequence_C_CallDodonpaEvent Parms{};

	Parms.EventName = EventName;
	Parms.SaveDataFlagId = SaveDataFlagId;
	Parms.BGM_ID = BGM_ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.Check Cross Play if Required
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsCheckRequired                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::Check_Cross_Play_if_Required(bool* IsCheckRequired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "Check Cross Play if Required");

	Params::BP_OnlineSequence_C_Check_Cross_Play_if_Required Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCheckRequired != nullptr)
		*IsCheckRequired = Parms.IsCheckRequired;
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.CreatePopupWindow
// (BlueprintCallable, BlueprintEvent)

void ABP_OnlineSequence_C::CreatePopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "CreatePopupWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.ExecuteUbergraph_BP_OnlineSequence
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::ExecuteUbergraph_BP_OnlineSequence(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "ExecuteUbergraph_BP_OnlineSequence");

	Params::BP_OnlineSequence_C_ExecuteUbergraph_BP_OnlineSequence Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.GetFooter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* ABP_OnlineSequence_C::GetFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "GetFooter");

	Params::BP_OnlineSequence_C_GetFooter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.GetOwnerMenuSequence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* ABP_OnlineSequence_C::GetOwnerMenuSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "GetOwnerMenuSequence");

	Params::BP_OnlineSequence_C_GetOwnerMenuSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnCrossPlayCheckUserConfirmed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsConfirmed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::OnCrossPlayCheckUserConfirmed(bool IsConfirmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnCrossPlayCheckUserConfirmed");

	Params::BP_OnlineSequence_C_OnCrossPlayCheckUserConfirmed Parms{};

	Parms.IsConfirmed = IsConfirmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnEndDodonpaEvent_LegendCompeIntro
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMenuSequenceSubState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::OnEndDodonpaEvent_LegendCompeIntro(EMenuSequenceSubState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnEndDodonpaEvent_LegendCompeIntro");

	Params::BP_OnlineSequence_C_OnEndDodonpaEvent_LegendCompeIntro Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnFinalize
// (Event, Protected, BlueprintEvent)

void ABP_OnlineSequence_C::OnFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnInitialize
// (Event, Protected, BlueprintEvent)

void ABP_OnlineSequence_C::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnInitStateLogin
// (Event, Protected, BlueprintEvent)

void ABP_OnlineSequence_C::OnInitStateLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnInitStateLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnInitStateOnlineTop
// (Event, Protected, BlueprintEvent)

void ABP_OnlineSequence_C::OnInitStateOnlineTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnInitStateOnlineTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnLoginResult_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableOnlinePlay                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRequestedSequenceBlock                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::OnLoginResult_Event(bool IsSuccess, bool IsEnableOnlinePlay, bool IsRequestedSequenceBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnLoginResult_Event");

	Params::BP_OnlineSequence_C_OnLoginResult_Event Parms{};

	Parms.IsSuccess = IsSuccess;
	Parms.IsEnableOnlinePlay = IsEnableOnlinePlay;
	Parms.IsRequestedSequenceBlock = IsRequestedSequenceBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnOnlineLobbyBacked
// (Event, Protected, BlueprintEvent)

void ABP_OnlineSequence_C::OnOnlineLobbyBacked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnOnlineLobbyBacked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnOnlineLobbyFinished
// (Event, Protected, BlueprintEvent)

void ABP_OnlineSequence_C::OnOnlineLobbyFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnOnlineLobbyFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.OnPopupOK
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::OnPopupOK(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "OnPopupOK");

	Params::BP_OnlineSequence_C_OnPopupOK Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.RemoveOnlineTopWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OnlineSequence_C::RemoveOnlineTopWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "RemoveOnlineTopWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.SetNextOnlineSequenceState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnlineSequenceState                    InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOnlineSequenceState                    PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::SetNextOnlineSequenceState(EOnlineSequenceState InState, EOnlineSequenceState PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "SetNextOnlineSequenceState");

	Params::BP_OnlineSequence_C_SetNextOnlineSequenceState Parms{};

	Parms.InState = InState;
	Parms.PrevState = PrevState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.SetSubMenuVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::SetSubMenuVisibility(ESlateVisibility Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "SetSubMenuVisibility");

	Params::BP_OnlineSequence_C_SetSubMenuVisibility Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.SetupCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelStreaming*                  SubLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_OnlineSequence_C::SetupCamera(class ULevelStreaming* SubLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "SetupCamera");

	Params::BP_OnlineSequence_C_SetupCamera Parms{};

	Parms.SubLevel = SubLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineSequence.BP_OnlineSequence_C.UpdateCurrentTopMenuLevelName
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_OnlineSequence_C::UpdateCurrentTopMenuLevelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineSequence_C", "UpdateCurrentTopMenuLevelName");

	UObject::ProcessEvent(Func, nullptr);
}

}

