#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RaceSequenceStateSendRaceStart

#include "Basic.hpp"

#include "BPC_RaceSequenceStateSendRaceStart_classes.hpp"
#include "BPC_RaceSequenceStateSendRaceStart_parameters.hpp"


namespace SDK
{

// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.BindRecvLobbyAttributeEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::BindRecvLobbyAttributeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "BindRecvLobbyAttributeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.CalllNextState
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::CalllNextState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "CalllNextState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.CheckGuestRaceId
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::CheckGuestRaceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "CheckGuestRaceId");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.CheckResCode
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InResCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutError                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    LogOutputInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool*                                   bEnableChangeNextState                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EResponseCodeAbstract*                  ResCodeAbstract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  OutResCode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::CheckResCode(int32 InResCode, bool OutError, const class FString& LogOutputInfo, bool* bEnableChangeNextState, EResponseCodeAbstract* ResCodeAbstract, int32* OutResCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "CheckResCode");

	Params::BPC_RaceSequenceStateSendRaceStart_C_CheckResCode Parms{};

	Parms.InResCode = InResCode;
	Parms.OutError = OutError;
	Parms.LogOutputInfo = std::move(LogOutputInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (bEnableChangeNextState != nullptr)
		*bEnableChangeNextState = Parms.bEnableChangeNextState;

	if (ResCodeAbstract != nullptr)
		*ResCodeAbstract = Parms.ResCodeAbstract;

	if (OutResCode != nullptr)
		*OutResCode = Parms.OutResCode;
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.ConvertStickerData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FUserStickerData&          UserStickerData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FCommon_MachineStickerData*      Common_MachineStickerData                              (Parm, OutParm)

void UBPC_RaceSequenceStateSendRaceStart_C::ConvertStickerData(const struct FUserStickerData& UserStickerData, struct FCommon_MachineStickerData* Common_MachineStickerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "ConvertStickerData");

	Params::BPC_RaceSequenceStateSendRaceStart_C_ConvertStickerData Parms{};

	Parms.UserStickerData = std::move(UserStickerData);

	UObject::ProcessEvent(Func, &Parms);

	if (Common_MachineStickerData != nullptr)
		*Common_MachineStickerData = std::move(Parms.Common_MachineStickerData);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.ExecuteUbergraph_BPC_RaceSequenceStateSendRaceStart
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::ExecuteUbergraph_BPC_RaceSequenceStateSendRaceStart(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "ExecuteUbergraph_BPC_RaceSequenceStateSendRaceStart");

	Params::BPC_RaceSequenceStateSendRaceStart_C_ExecuteUbergraph_BPC_RaceSequenceStateSendRaceStart Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.FinishedSendStartSaveFestaStart_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::FinishedSendStartSaveFestaStart_Event(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "FinishedSendStartSaveFestaStart_Event");

	Params::BPC_RaceSequenceStateSendRaceStart_C_FinishedSendStartSaveFestaStart_Event Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.FinishedSendStartSaveLegendCompeStart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::FinishedSendStartSaveLegendCompeStart(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "FinishedSendStartSaveLegendCompeStart");

	Params::BPC_RaceSequenceStateSendRaceStart_C_FinishedSendStartSaveLegendCompeStart Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.FinishedSendStartSaveRankMatchStart_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::FinishedSendStartSaveRankMatchStart_Event(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "FinishedSendStartSaveRankMatchStart_Event");

	Params::BPC_RaceSequenceStateSendRaceStart_C_FinishedSendStartSaveRankMatchStart_Event Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.GetBonusChanceData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  BonusChanceType_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  BonusChanceParam_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::GetBonusChanceData(bool* IsValid, int32* BonusChanceType_0, int32* BonusChanceParam_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "GetBonusChanceData");

	Params::BPC_RaceSequenceStateSendRaceStart_C_GetBonusChanceData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (BonusChanceType_0 != nullptr)
		*BonusChanceType_0 = Parms.BonusChanceType_0;

	if (BonusChanceParam_0 != nullptr)
		*BonusChanceParam_0 = Parms.BonusChanceParam_0;
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.GetLobbyContextParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::GetLobbyContextParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "GetLobbyContextParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.GetStartSaveRequestParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  characterId                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  courseId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCommon_MachineData*             MachineData                                            (Parm, OutParm)
// struct FCommon_GadgetData*              GadgetData                                             (Parm, OutParm, NoDestructor)
// struct FCommon_DegreeData*              DegreeData                                             (Parm, OutParm, NoDestructor)

void UBPC_RaceSequenceStateSendRaceStart_C::GetStartSaveRequestParam(int32* characterId, int32* courseId, struct FCommon_MachineData* MachineData, struct FCommon_GadgetData* GadgetData, struct FCommon_DegreeData* DegreeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "GetStartSaveRequestParam");

	Params::BPC_RaceSequenceStateSendRaceStart_C_GetStartSaveRequestParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (characterId != nullptr)
		*characterId = Parms.characterId;

	if (courseId != nullptr)
		*courseId = Parms.courseId;

	if (MachineData != nullptr)
		*MachineData = std::move(Parms.MachineData);

	if (GadgetData != nullptr)
		*GadgetData = std::move(Parms.GadgetData);

	if (DegreeData != nullptr)
		*DegreeData = std::move(Parms.DegreeData);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OccurServerError
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::OccurServerError(EResponseCodeAbstract ResponseCode, int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OccurServerError");

	Params::BPC_RaceSequenceStateSendRaceStart_C_OccurServerError Parms{};

	Parms.ResponseCode = ResponseCode;
	Parms.Code = Code;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OnExitState
// (Event, Public, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::OnExitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OnExitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OnInitState
// (Event, Public, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::OnInitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OnInitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OnRecvEntryRaceId
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InEntryRaceId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::OnRecvEntryRaceId(const class FString& InEntryRaceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OnRecvEntryRaceId");

	Params::BPC_RaceSequenceStateSendRaceStart_C_OnRecvEntryRaceId Parms{};

	Parms.InEntryRaceId = std::move(InEntryRaceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OnSendStartSaveFestaStartCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::OnSendStartSaveFestaStartCallback(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OnSendStartSaveFestaStartCallback");

	Params::BPC_RaceSequenceStateSendRaceStart_C_OnSendStartSaveFestaStartCallback Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OnSendStartSaveLegendCompeStartCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::OnSendStartSaveLegendCompeStartCallback(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OnSendStartSaveLegendCompeStartCallback");

	Params::BPC_RaceSequenceStateSendRaceStart_C_OnSendStartSaveLegendCompeStartCallback Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.OnSendStartSaveRankMatchStartCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ApiName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RequestData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ResponseData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_RaceSequenceStateSendRaceStart_C::OnSendStartSaveRankMatchStartCallback(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "OnSendStartSaveRankMatchStartCallback");

	Params::BPC_RaceSequenceStateSendRaceStart_C_OnSendStartSaveRankMatchStartCallback Parms{};

	Parms.ApiName = std::move(ApiName);
	Parms.RequestData = std::move(RequestData);
	Parms.ResponseData = std::move(ResponseData);
	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.StartPlatformGameMatch
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::StartPlatformGameMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "StartPlatformGameMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.SyncEntryRaceId
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::SyncEntryRaceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "SyncEntryRaceId");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.SyncEntryRaceIdForFesta
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::SyncEntryRaceIdForFesta()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "SyncEntryRaceIdForFesta");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_RaceSequenceStateSendRaceStart.BPC_RaceSequenceStateSendRaceStart_C.TryFestaNextState
// (BlueprintCallable, BlueprintEvent)

void UBPC_RaceSequenceStateSendRaceStart_C::TryFestaNextState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_RaceSequenceStateSendRaceStart_C", "TryFestaNextState");

	UObject::ProcessEvent(Func, nullptr);
}

}

