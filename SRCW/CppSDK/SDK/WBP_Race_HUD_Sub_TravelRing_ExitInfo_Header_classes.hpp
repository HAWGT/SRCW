#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header.WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C
// 0x0060 (0x0340 - 0x02E0)
class UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TravelRing_Info_Out_delete;                        // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TravelRing_Info_Loop_delete;                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TravelRing_Info_InOut;                             // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Attention;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Attention_Eff;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Attention_Eff_02;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_Pict_DELETE;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TXT_Info_Delete;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         TypeIndex;                                         // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          EnablePlaySound;                                   // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIrregularEventId                             Type;                                              // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     SoundPan;                                          // 0x0336(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337[0x1];                                      // 0x0337(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           SoundHandleStart;                                  // 0x0338(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSoundHandle                           SoundHandleStartInfo;                              // 0x033C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void Destruct();
	void EndIrregular();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header(int32 EntryPoint);
	void Finished_4B65929A47FE269A06E4AD814635DB1A();
	void Finished_7F44B4264A3D84464A5C5B8C399554DF();
	void Finished_CEAE9D56432E6393CB5AF4A9F2B5FA04();
	void OnVisibilityChangedEvent(ESlateVisibility InVisibility);
	void PlayAnimationOut();
	void PlayVisibleSE();
	void SetParam(int32 TypeIndex_0, int32 PlayerIndex_0);
	void SetText(EIrregularEventId Type_0);
	void StartIrregular(bool EnablePlaySound_0);
	void StartIrregularEvent(const bool IsEnablePlaySound, ESoundPan SoundPan_0, class UWBP_Race_HUD_Sub_Boost_C* WBP_Boost, bool IsBoost);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C">();
	}
	static class UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C) == 0x000340, "Wrong size on UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, TravelRing_Info_Out_delete) == 0x0002E8, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::TravelRing_Info_Out_delete' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, TravelRing_Info_Loop_delete) == 0x0002F0, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::TravelRing_Info_Loop_delete' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, TravelRing_Info_InOut) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::TravelRing_Info_InOut' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, Attention) == 0x000300, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::Attention' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, Attention_Eff) == 0x000308, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::Attention_Eff' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, Attention_Eff_02) == 0x000310, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::Attention_Eff_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, PAT_Pict_DELETE) == 0x000318, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::PAT_Pict_DELETE' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, TXT_Info_Delete) == 0x000320, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::TXT_Info_Delete' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, TypeIndex) == 0x000328, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::TypeIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, EnablePlaySound) == 0x00032C, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::EnablePlaySound' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, PlayerIndex) == 0x000330, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, Type) == 0x000334, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::Type' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, IsActive) == 0x000335, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, SoundPan) == 0x000336, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::SoundPan' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, SoundHandleStart) == 0x000338, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::SoundHandleStart' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C, SoundHandleStartInfo) == 0x00033C, "Member 'UWBP_Race_HUD_Sub_TravelRing_ExitInfo_Header_C::SoundHandleStartInfo' has a wrong offset!");

}

