#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MachineState

#include "Basic.hpp"

#include "ST_ColorPresetSelectPageData_structs.hpp"
#include "ST_ColorPresetSelectPageItemData_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionLib_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function BPC_MachineState.BPC_MachineState_C.BindCharaMachineSelectWindow
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_BindCharaMachineSelectWindow final
{
public:
	class UCharaMachineSelectBase*                InWindow;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_BindCharaMachineSelectWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_BindCharaMachineSelectWindow");
static_assert(sizeof(BPC_MachineState_C_BindCharaMachineSelectWindow) == 0x000008, "Wrong size on BPC_MachineState_C_BindCharaMachineSelectWindow");
static_assert(offsetof(BPC_MachineState_C_BindCharaMachineSelectWindow, InWindow) == 0x000000, "Member 'BPC_MachineState_C_BindCharaMachineSelectWindow::InWindow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.BindColorWindow
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_BindColorWindow final
{
public:
	class UWBP_MachineCustom_Sub_PresetPaint_C*   InColorWindow;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_BindColorWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_BindColorWindow");
static_assert(sizeof(BPC_MachineState_C_BindColorWindow) == 0x000008, "Wrong size on BPC_MachineState_C_BindColorWindow");
static_assert(offsetof(BPC_MachineState_C_BindColorWindow, InColorWindow) == 0x000000, "Member 'BPC_MachineState_C_BindColorWindow::InColorWindow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.BindMachineTypeSelectWindow
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_BindMachineTypeSelectWindow final
{
public:
	class UMachineTypeScrollControl*              InMachineTypeSelectWindow;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_BindMachineTypeSelectWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_BindMachineTypeSelectWindow");
static_assert(sizeof(BPC_MachineState_C_BindMachineTypeSelectWindow) == 0x000008, "Wrong size on BPC_MachineState_C_BindMachineTypeSelectWindow");
static_assert(offsetof(BPC_MachineState_C_BindMachineTypeSelectWindow, InMachineTypeSelectWindow) == 0x000000, "Member 'BPC_MachineState_C_BindMachineTypeSelectWindow::InMachineTypeSelectWindow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_ColorDecisionButtonFocusEvent
// 0x00B8 (0x00B8 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuWorldSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AMenuRacerBase*                         CallFunc_GetMenuRacer_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_ColorWindow_C*   K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuRacerPreview_C*                 K2Node_DynamicCast_AsBP_Menu_Racer_Preview;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0040(0x0078)()
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent) == 0x0000B8, "Wrong size on BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, CallFunc_GetMachineColorSelectWindow_ReturnValue) == 0x000010, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::CallFunc_GetMachineColorSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, CallFunc_GetMenuRacer_ReturnValue) == 0x000018, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::CallFunc_GetMenuRacer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window) == 0x000020, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, K2Node_DynamicCast_AsBP_Menu_Racer_Preview) == 0x000030, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::K2Node_DynamicCast_AsBP_Menu_Racer_Preview' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000039, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000040, "Member 'BPC_MachineState_C_CharaMachineSelect_ColorDecisionButtonFocusEvent::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorCancelEvent
// 0x0060 (0x0060 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMachineColorSelectWindow*              MachineColorSelectWindow;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable;                                // 0x0014(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineSelect_Sub_Ready_C*         K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Ready; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaMachineSelectSequence*            CallFunc_GetSequence_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable_1;                              // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMachineSelectBase*                CallFunc_GetCharaMachineSubWindow_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharaMachineSelectBase*                CallFunc_GetCharaMachineSubWindow_ReturnValue_1;   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllPlayerSelected_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    CallFunc_Array_Get_Item;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent) == 0x000060, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, MachineColorSelectWindow) == 0x000008, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::MachineColorSelectWindow' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, PlayerIndex) == 0x000010, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, Temp_byte_Variable) == 0x000014, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_MakeLiteralByte_ReturnValue) == 0x000015, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Ready) == 0x000018, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Ready' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_GetMachineColorSelectWindow_ReturnValue) == 0x000028, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_GetMachineColorSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000030, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_GetSequence_ReturnValue) == 0x000038, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, Temp_byte_Variable_1) == 0x000040, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_GetCharaMachineSubWindow_ReturnValue) == 0x000048, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_GetCharaMachineSubWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_GetCharaMachineSubWindow_ReturnValue_1) == 0x000050, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_GetCharaMachineSubWindow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_IsAllPlayerSelected_ReturnValue) == 0x000058, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_IsAllPlayerSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_Array_Get_Item) == 0x00005A, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005B, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorCancelEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorDecisionEvent
// 0x01A8 (0x01A8 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue_1;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0008(0x0078)()
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue_2;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData_1; // 0x0088(0x0078)()
	struct FUserMachineCustomizeData              K2Node_SetFieldsInStruct_StructOut;                // 0x0100(0x0078)()
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue;  // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGadgetPlateUIData                     CallFunc_GetSelectedGadgetPlateUIData_OutGadgetPlateUIData; // 0x0180(0x0028)()
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent) == 0x0001A8, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000004, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetSelectedMachineId_ReturnValue_1) == 0x000005, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetSelectedMachineId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000008, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetSelectedMachineId_ReturnValue_2) == 0x000080, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetSelectedMachineId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData_1) == 0x000088, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, K2Node_SetFieldsInStruct_StructOut) == 0x000100, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetMachineColorSelectWindow_ReturnValue) == 0x000178, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetMachineColorSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent, CallFunc_GetSelectedGadgetPlateUIData_OutGadgetPlateUIData) == 0x000180, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorDecisionEvent::CallFunc_GetSelectedGadgetPlateUIData_OutGadgetPlateUIData' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorFocusEvent
// 0x0208 (0x0208 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent final
{
public:
	struct FST_ColorPresetSelectPageItemData      ColorPreset;                                       // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMenuWorldSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMenuRacerBase*                         CallFunc_GetMenuRacer_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuRacerPreview_C*                 K2Node_DynamicCast_AsBP_Menu_Racer_Preview;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineSelect_Sub_ColorWindow_C*   K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_Get_Customize_Data_OutCustomizeData;      // 0x0098(0x0078)()
	struct FUserMachineCustomizeData              K2Node_SetFieldsInStruct_StructOut;                // 0x0110(0x0078)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_SetAllMachineColorsAsPreset_ReturnValue;  // 0x0190(0x0078)()
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent) == 0x000208, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, ColorPreset) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::ColorPreset' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, PlayerIndex) == 0x000058, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, ButtonIndex) == 0x00005C, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::ButtonIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000060, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, CallFunc_GetMenuRacer_ReturnValue) == 0x000068, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::CallFunc_GetMenuRacer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, CallFunc_GetMachineColorSelectWindow_ReturnValue) == 0x000070, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::CallFunc_GetMachineColorSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, K2Node_DynamicCast_AsBP_Menu_Racer_Preview) == 0x000078, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::K2Node_DynamicCast_AsBP_Menu_Racer_Preview' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window) == 0x000088, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, CallFunc_Get_Customize_Data_OutCustomizeData) == 0x000098, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::CallFunc_Get_Customize_Data_OutCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, K2Node_SetFieldsInStruct_StructOut) == 0x000110, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000188, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent, CallFunc_SetAllMachineColorsAsPreset_ReturnValue) == 0x000190, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorFocusEvent::CallFunc_SetAllMachineColorsAsPreset_ReturnValue' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineColorSelectEvent
// 0x0150 (0x0150 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent final
{
public:
	struct FST_ColorPresetSelectPageItemData      ColorPreset;                                       // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0060(0x0078)()
	struct FUserMachineCustomizeData              K2Node_SetFieldsInStruct_StructOut;                // 0x00D8(0x0078)()
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent) == 0x000150, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent, ColorPreset) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent::ColorPreset' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent, PlayerIndex) == 0x000058, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent, CallFunc_GetSelectedMachineId_ReturnValue) == 0x00005C, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000060, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent, K2Node_SetFieldsInStruct_StructOut) == 0x0000D8, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineColorSelectEvent::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsCancelEvent
// 0x0018 (0x0018 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMachineSelectBase*                CallFunc_GetCharaMachineSubWindow_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable;                                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllPlayerSelected_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable_1;                              // 0x0013(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    CallFunc_Array_Get_Item;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent) == 0x000018, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000004, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, CallFunc_GetCharaMachineSubWindow_ReturnValue) == 0x000008, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::CallFunc_GetCharaMachineSubWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, Temp_byte_Variable) == 0x000010, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, CallFunc_IsAllPlayerSelected_ReturnValue) == 0x000011, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::CallFunc_IsAllPlayerSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, Temp_byte_Variable_1) == 0x000013, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, CallFunc_Array_Get_Item) == 0x000014, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsCancelEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsDecisionEvent
// 0x0090 (0x0090 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0004(0x0004)()
	class UCharaMachineSelectBase*                CallFunc_GetCharaMachineSubWindow_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0018(0x0078)()
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent) == 0x000090, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent, CallFunc_SoundPlay_ReturnValue) == 0x000004, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent, CallFunc_GetCharaMachineSubWindow_ReturnValue) == 0x000008, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent::CallFunc_GetCharaMachineSubWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000010, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000018, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsDecisionEvent::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsFocusEvent
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    FrontPartsId;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    RearPartsId;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    TirePartsId;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent) == 0x000004, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent) == 0x000008, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent, PlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent, FrontPartsId) == 0x000004, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent::FrontPartsId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent, RearPartsId) == 0x000005, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent::RearPartsId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent, TirePartsId) == 0x000006, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsFocusEvent::TirePartsId' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachinePartsSelectEvent
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    FrontPartsId;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    RearPartsId;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    TirePartsId;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent) == 0x000004, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent) == 0x000008, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent, PlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent, FrontPartsId) == 0x000004, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent::FrontPartsId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent, RearPartsId) == 0x000005, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent::RearPartsId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent, TirePartsId) == 0x000006, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachinePartsSelectEvent::TirePartsId' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.CharaMachineSelect_OnMachineSelectModeChanged
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UNION::EMachineSelectMode                     Mode;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged) == 0x000004, "Wrong alignment on BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged");
static_assert(sizeof(BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged) == 0x000008, "Wrong size on BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged, PlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged, Mode) == 0x000004, "Member 'BPC_MachineState_C_CharaMachineSelect_OnMachineSelectModeChanged::Mode' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.DecideMachine
// 0x0004 (0x0004 - 0x0000)
struct BPC_MachineState_C_DecideMachine final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_DecideMachine) == 0x000004, "Wrong alignment on BPC_MachineState_C_DecideMachine");
static_assert(sizeof(BPC_MachineState_C_DecideMachine) == 0x000004, "Wrong size on BPC_MachineState_C_DecideMachine");
static_assert(offsetof(BPC_MachineState_C_DecideMachine, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_DecideMachine::InPlayerIndex' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.ExecuteUbergraph_BPC_MachineState
// 0x01A0 (0x01A0 - 0x0000)
struct BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 PlayerIndex, UNION::EMachineSelectMode Mode)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 PlayerIndex, EMachineId FrontPartsId, EMachineId RearPartsId, EMachineId TirePartsId)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 PlayerIndex, EMachineId FrontPartsId, EMachineId RearPartsId, EMachineId TirePartsId)> K2Node_CreateDelegate_OutputDelegate_6; // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate_7;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineCustom_Sub_PresetPaint_C*   K2Node_CustomEvent_InColorWindow_1;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InPlayerIndex)>          K2Node_CreateDelegate_OutputDelegate_8;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FST_ColorPresetSelectPageItemData& ItemData, int32 InPlayerIndex)> K2Node_CreateDelegate_OutputDelegate_9; // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FST_ColorPresetSelectPageItemData& ItemData, int32 InPlayerIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_10; // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_PresetPaint_C*   K2Node_CustomEvent_InColorWindow;                  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeScrollControl*              K2Node_Event_InMachineTypeSelectWindow_1;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SelectedPlayerControllerIndex, ECarStatusType SelectedMachineType, EMachineId SelectedBaseMachineId)> K2Node_CreateDelegate_OutputDelegate_11; // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate_12;       // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SelectedPlayerControllerIndex)> K2Node_CreateDelegate_OutputDelegate_13;    // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SelectedPlayerControllerIndex, ECarStatusType SelectedMachineType, EMachineId SelectedBaseMachineId)> K2Node_CreateDelegate_OutputDelegate_14; // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharaMachineSelectBase*                K2Node_Event_InWindow_1;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharaMachineSelectBase*                K2Node_Event_InWindow;                             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeScrollControl*              K2Node_Event_InMachineTypeSelectWindow;            // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHintId                                       CallFunc_GetHintId_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineTypeScrollControl*              CallFunc_GetMachineTypeSelectWindow_ReturnValue;   // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InPlayerIndex;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetSelectedMachineType_ReturnValue;       // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllPlayerSelected_ReturnValue;          // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0148(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x014C(0x0004)()
	int32                                         Temp_int_Variable;                                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveDataManageSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRemainTime_Result;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedPlayerCount_ReturnValue;       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable;                                // 0x0170(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaMachineSelectSequence*            CallFunc_GetSequence_ReturnValue;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CharaMachineSequence_C*             K2Node_DynamicCast_AsBP_Chara_Machine_Sequence;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateRemainTime_InDeltaTime_ImplicitCast; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState) == 0x000008, "Wrong alignment on BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState");
static_assert(sizeof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState) == 0x0001A0, "Wrong size on BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, EntryPoint) == 0x000000, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_6) == 0x000064, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_7) == 0x000074, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CustomEvent_InColorWindow_1) == 0x000088, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CustomEvent_InColorWindow_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_8) == 0x000090, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000A0, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000B0, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CustomEvent_InColorWindow) == 0x0000C0, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CustomEvent_InColorWindow' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_Event_InMachineTypeSelectWindow_1) == 0x0000C8, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_Event_InMachineTypeSelectWindow_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000D0, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_12) == 0x0000E0, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_13) == 0x0000F0, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CreateDelegate_OutputDelegate_14) == 0x000100, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_Event_InWindow_1) == 0x000110, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_Event_InWindow_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_Event_InWindow) == 0x000118, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_Event_InWindow' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_Event_InMachineTypeSelectWindow) == 0x000120, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_Event_InMachineTypeSelectWindow' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetHintId_ReturnValue) == 0x000128, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetHintId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetMachineTypeSelectWindow_ReturnValue) == 0x000138, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetMachineTypeSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_CustomEvent_InPlayerIndex) == 0x000140, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_CustomEvent_InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000144, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetSelectedMachineType_ReturnValue) == 0x000145, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetSelectedMachineType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_IsAllPlayerSelected_ReturnValue) == 0x000146, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_IsAllPlayerSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_SoundPlay_ReturnValue) == 0x000148, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_SoundPlay_ReturnValue_1) == 0x00014C, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, Temp_int_Variable) == 0x000150, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_Add_IntInt_ReturnValue) == 0x000154, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_Event_DeltaSeconds) == 0x000158, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000160, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_UpdateRemainTime_Result) == 0x000168, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_UpdateRemainTime_Result' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetSelectedPlayerCount_ReturnValue) == 0x00016C, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetSelectedPlayerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, Temp_byte_Variable) == 0x000170, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_Subtract_IntInt_ReturnValue) == 0x000174, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_GetSequence_ReturnValue) == 0x000180, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_DynamicCast_AsBP_Chara_Machine_Sequence) == 0x000188, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_DynamicCast_AsBP_Chara_Machine_Sequence' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState, CallFunc_UpdateRemainTime_InDeltaTime_ImplicitCast) == 0x000198, "Member 'BPC_MachineState_C_ExecuteUbergraph_BPC_MachineState::CallFunc_UpdateRemainTime_InDeltaTime_ImplicitCast' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeCancelCallback
// 0x00B0 (0x00B0 - 0x0000)
struct BPC_MachineState_C_OnMachineTypeCancelCallback final
{
public:
	int32                                         SelectedPlayerControllerIndex;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuWorldSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMenuRacerBase*                         CallFunc_GetMenuRacer_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0028(0x0078)()
	class ABP_MenuRacerPreview_C*                 K2Node_DynamicCast_AsBP_Menu_Racer_Preview;        // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable_1;                              // 0x00AA(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable_2;                              // 0x00AB(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable_3;                              // 0x00AE(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_OnMachineTypeCancelCallback) == 0x000008, "Wrong alignment on BPC_MachineState_C_OnMachineTypeCancelCallback");
static_assert(sizeof(BPC_MachineState_C_OnMachineTypeCancelCallback) == 0x0000B0, "Wrong size on BPC_MachineState_C_OnMachineTypeCancelCallback");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, SelectedPlayerControllerIndex) == 0x000000, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::SelectedPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, PlayerIndex) == 0x000004, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, Temp_byte_Variable) == 0x000008, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000018, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, CallFunc_GetMenuRacer_ReturnValue) == 0x000020, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::CallFunc_GetMenuRacer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000028, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, K2Node_DynamicCast_AsBP_Menu_Racer_Preview) == 0x0000A0, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::K2Node_DynamicCast_AsBP_Menu_Racer_Preview' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, Temp_byte_Variable_1) == 0x0000AA, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, Temp_byte_Variable_2) == 0x0000AB, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000AC, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, K2Node_SwitchEnum_CmpSuccess) == 0x0000AD, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeCancelCallback, Temp_byte_Variable_3) == 0x0000AE, "Member 'BPC_MachineState_C_OnMachineTypeCancelCallback::Temp_byte_Variable_3' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeDecideCallback
// 0x0168 (0x0168 - 0x0000)
struct BPC_MachineState_C_OnMachineTypeDecideCallback final
{
public:
	int32                                         SelectedPlayerControllerIndex;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                SelectedMachineType;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    SelectedBaseMachineId;                             // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                machineType;                                       // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineSelectControlState                    Temp_byte_Variable;                                // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveDataManageSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DisablePartsListNewFlagByType_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMachineSelectBase*                CallFunc_GetCharaMachineSubWindow_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetDefaultMachineCustomizeData_OutCustomizeData; // 0x0030(0x0078)()
	bool                                          CallFunc_IsValidMachineCustomizeData_ReturnValue;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimpleCustomMachineId_ReturnValue;      // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetPlateUIData                     CallFunc_GetSelectedGadgetPlateUIData_OutGadgetPlateUIData; // 0x00B0(0x0028)()
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue_1;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x00E0(0x0078)()
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedMachineID_OutExecsPin;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutputExecsPin_SuccessFailed                 CallFunc_SetSelectedMachineType_OutExecsPin;       // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadHint_ReturnValue;                   // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0160(0x0004)()
};
static_assert(alignof(BPC_MachineState_C_OnMachineTypeDecideCallback) == 0x000008, "Wrong alignment on BPC_MachineState_C_OnMachineTypeDecideCallback");
static_assert(sizeof(BPC_MachineState_C_OnMachineTypeDecideCallback) == 0x000168, "Wrong size on BPC_MachineState_C_OnMachineTypeDecideCallback");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, SelectedPlayerControllerIndex) == 0x000000, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::SelectedPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, SelectedMachineType) == 0x000004, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::SelectedMachineType' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, SelectedBaseMachineId) == 0x000005, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::SelectedBaseMachineId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, MachineId) == 0x000006, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::MachineId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, machineType) == 0x000007, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::machineType' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, PlayerIndex) == 0x000008, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, Temp_byte_Variable) == 0x00000C, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_DisablePartsListNewFlagByType_ReturnValue) == 0x000018, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_DisablePartsListNewFlagByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetCharaMachineSubWindow_ReturnValue) == 0x000020, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetCharaMachineSubWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetCarStatusType_ReturnValue) == 0x000028, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetCarStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetDefaultMachineCustomizeData_OutCustomizeData) == 0x000030, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetDefaultMachineCustomizeData_OutCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_IsValidMachineCustomizeData_ReturnValue) == 0x0000A8, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_IsValidMachineCustomizeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetSelectedMachineId_ReturnValue) == 0x0000A9, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_IsSimpleCustomMachineId_ReturnValue) == 0x0000AA, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_IsSimpleCustomMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetSelectedGadgetPlateUIData_OutGadgetPlateUIData) == 0x0000B0, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetSelectedGadgetPlateUIData_OutGadgetPlateUIData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetSelectedMachineId_ReturnValue_1) == 0x0000D8, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetSelectedMachineId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000DC, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x0000E0, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_SetSelectedMachineID_OutExecsPin) == 0x000158, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_SetSelectedMachineID_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, K2Node_SwitchEnum_CmpSuccess) == 0x000159, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_SetSelectedMachineType_OutExecsPin) == 0x00015A, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_SetSelectedMachineType_OutExecsPin' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, K2Node_SwitchEnum_CmpSuccess_1) == 0x00015B, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_IsReadHint_ReturnValue) == 0x00015C, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_IsReadHint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeDecideCallback, CallFunc_SoundPlay_ReturnValue) == 0x000160, "Member 'BPC_MachineState_C_OnMachineTypeDecideCallback::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeFocusEvent
// 0x0010 (0x0010 - 0x0000)
struct BPC_MachineState_C_OnMachineTypeFocusEvent final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowSimpleCustomizeTipsWindow_bOutShouldShow; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_OnMachineTypeFocusEvent) == 0x000008, "Wrong alignment on BPC_MachineState_C_OnMachineTypeFocusEvent");
static_assert(sizeof(BPC_MachineState_C_OnMachineTypeFocusEvent) == 0x000010, "Wrong size on BPC_MachineState_C_OnMachineTypeFocusEvent");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeFocusEvent, Button) == 0x000000, "Member 'BPC_MachineState_C_OnMachineTypeFocusEvent::Button' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeFocusEvent, CallFunc_ShouldShowSimpleCustomizeTipsWindow_bOutShouldShow) == 0x000008, "Member 'BPC_MachineState_C_OnMachineTypeFocusEvent::CallFunc_ShouldShowSimpleCustomizeTipsWindow_bOutShouldShow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.OnMachineTypeScrollEndCallback
// 0x000C (0x000C - 0x0000)
struct BPC_MachineState_C_OnMachineTypeScrollEndCallback final
{
public:
	int32                                         SelectedPlayerControllerIndex;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                SelectedMachineType;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    SelectedBaseMachineId;                             // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    MachineId;                                         // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                machineType;                                       // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_OnMachineTypeScrollEndCallback) == 0x000004, "Wrong alignment on BPC_MachineState_C_OnMachineTypeScrollEndCallback");
static_assert(sizeof(BPC_MachineState_C_OnMachineTypeScrollEndCallback) == 0x00000C, "Wrong size on BPC_MachineState_C_OnMachineTypeScrollEndCallback");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeScrollEndCallback, SelectedPlayerControllerIndex) == 0x000000, "Member 'BPC_MachineState_C_OnMachineTypeScrollEndCallback::SelectedPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeScrollEndCallback, SelectedMachineType) == 0x000004, "Member 'BPC_MachineState_C_OnMachineTypeScrollEndCallback::SelectedMachineType' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeScrollEndCallback, SelectedBaseMachineId) == 0x000005, "Member 'BPC_MachineState_C_OnMachineTypeScrollEndCallback::SelectedBaseMachineId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeScrollEndCallback, MachineId) == 0x000006, "Member 'BPC_MachineState_C_OnMachineTypeScrollEndCallback::MachineId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeScrollEndCallback, machineType) == 0x000007, "Member 'BPC_MachineState_C_OnMachineTypeScrollEndCallback::machineType' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_OnMachineTypeScrollEndCallback, PlayerControllerIndex) == 0x000008, "Member 'BPC_MachineState_C_OnMachineTypeScrollEndCallback::PlayerControllerIndex' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_MachineState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_MachineState_C_ReceiveTick");
static_assert(sizeof(BPC_MachineState_C_ReceiveTick) == 0x000004, "Wrong size on BPC_MachineState_C_ReceiveTick");
static_assert(offsetof(BPC_MachineState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_MachineState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.SetupMachineColorSelectWindow
// 0x01F0 (0x01F0 - 0x0000)
struct BPC_MachineState_C_SetupMachineColorSelectWindow final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ColorPresetSelectPageData          PageData;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_PresetPaint_C*   ColorPresetSelectPage;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaMachineSelectSequence*            CallFunc_GetSequence_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastFocusedButton_OutLastFocusedButtonIndex; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetLastFocusedButton_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    CallFunc_GetSelectedMachineId_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData; // 0x0058(0x0078)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineCustom_Sub_PresetPaint_C*   K2Node_DynamicCast_AsWBP_Machine_Custom_Sub_Preset_Paint; // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMachineColorPresetUIData>      CallFunc_GetSelectableMachineColorPresets_OutPresets; // 0x00F8(0x0010)(ReferenceParm)
	struct FMachineColorPresetUIData              CallFunc_Array_Get_Item;                           // 0x0108(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ColorPresetSelectPageItemData      K2Node_MakeStruct_ST_ColorPresetSelectPageItemData; // 0x0168(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue_1; // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MachineSelect_Sub_ColorWindow_C*   K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window; // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_SetupMachineColorSelectWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_SetupMachineColorSelectWindow");
static_assert(sizeof(BPC_MachineState_C_SetupMachineColorSelectWindow) == 0x0001F0, "Wrong size on BPC_MachineState_C_SetupMachineColorSelectWindow");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, PageData) == 0x000008, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::PageData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, ColorPresetSelectPage) == 0x000020, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::ColorPresetSelectPage' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, PlayerIndex) == 0x000028, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetSequence_ReturnValue) == 0x000038, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetLastFocusedButton_OutLastFocusedButtonIndex) == 0x000040, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetLastFocusedButton_OutLastFocusedButtonIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetLastFocusedButton_ReturnValue) == 0x000048, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetLastFocusedButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetSelectedMachineId_ReturnValue) == 0x000050, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetSelectedMachineId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData) == 0x000058, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetMachineCustomizeDataById_OutUserMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetMachineColorSelectWindow_ReturnValue) == 0x0000E0, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetMachineColorSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, K2Node_DynamicCast_AsWBP_Machine_Custom_Sub_Preset_Paint) == 0x0000E8, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::K2Node_DynamicCast_AsWBP_Machine_Custom_Sub_Preset_Paint' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetSelectableMachineColorPresets_OutPresets) == 0x0000F8, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetSelectableMachineColorPresets_OutPresets' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_Array_Get_Item) == 0x000108, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000164, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_BooleanAND_ReturnValue) == 0x000165, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, K2Node_MakeStruct_ST_ColorPresetSelectPageItemData) == 0x000168, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::K2Node_MakeStruct_ST_ColorPresetSelectPageItemData' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_Array_Add_ReturnValue) == 0x0001C0, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, Temp_int_Loop_Counter_Variable) == 0x0001C4, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_Add_IntInt_ReturnValue) == 0x0001CC, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D0, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, CallFunc_GetMachineColorSelectWindow_ReturnValue_1) == 0x0001D8, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::CallFunc_GetMachineColorSelectWindow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window) == 0x0001E0, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_SetupMachineColorSelectWindow, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'BPC_MachineState_C_SetupMachineColorSelectWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.ShouldShowSimpleCustomizeTipsWindow
// 0x0014 (0x0014 - 0x0000)
struct BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow final
{
public:
	bool                                          bOutShouldShow;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsOnlineGameMode_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnteredMachineCustomizeSequence_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedPlayerCount_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadHint_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow) == 0x000004, "Wrong alignment on BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow");
static_assert(sizeof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow) == 0x000014, "Wrong size on BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, bOutShouldShow) == 0x000000, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::bOutShouldShow' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_GetIsOnlineGameMode_ReturnValue) == 0x000001, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_GetIsOnlineGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_HasEnteredMachineCustomizeSequence_ReturnValue) == 0x000005, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_HasEnteredMachineCustomizeSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_GetSelectedPlayerCount_ReturnValue) == 0x000008, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_GetSelectedPlayerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_IsReadHint_ReturnValue) == 0x00000C, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_IsReadHint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_BooleanAND_ReturnValue_1) == 0x000010, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_BooleanAND_ReturnValue_2) == 0x000011, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow, CallFunc_BooleanAND_ReturnValue_3) == 0x000012, "Member 'BPC_MachineState_C_ShouldShowSimpleCustomizeTipsWindow::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.ShowTipsWindow
// 0x0040 (0x0040 - 0x0000)
struct BPC_MachineState_C_ShowTipsWindow final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Popup_Window_Hint_C*               CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMachineTypeScrollControl*              CallFunc_GetMachineTypeSelectWindow_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_ShowTipsWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_ShowTipsWindow");
static_assert(sizeof(BPC_MachineState_C_ShowTipsWindow) == 0x000040, "Wrong size on BPC_MachineState_C_ShowTipsWindow");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, InHintId) == 0x000000, "Member 'BPC_MachineState_C_ShowTipsWindow::InHintId' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BPC_MachineState_C_ShowTipsWindow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BPC_MachineState_C_ShowTipsWindow::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, CallFunc_GetMachineTypeSelectWindow_ReturnValue) == 0x000018, "Member 'BPC_MachineState_C_ShowTipsWindow::CallFunc_GetMachineTypeSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BPC_MachineState_C_ShowTipsWindow::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BPC_MachineState_C_ShowTipsWindow::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_ShowTipsWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BPC_MachineState_C_ShowTipsWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.UnbindCharaMachineSelectWindow
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_UnbindCharaMachineSelectWindow final
{
public:
	class UCharaMachineSelectBase*                InWindow;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_UnbindCharaMachineSelectWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_UnbindCharaMachineSelectWindow");
static_assert(sizeof(BPC_MachineState_C_UnbindCharaMachineSelectWindow) == 0x000008, "Wrong size on BPC_MachineState_C_UnbindCharaMachineSelectWindow");
static_assert(offsetof(BPC_MachineState_C_UnbindCharaMachineSelectWindow, InWindow) == 0x000000, "Member 'BPC_MachineState_C_UnbindCharaMachineSelectWindow::InWindow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.UnbindColorWindow
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_UnbindColorWindow final
{
public:
	class UWBP_MachineCustom_Sub_PresetPaint_C*   InColorWindow;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_UnbindColorWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_UnbindColorWindow");
static_assert(sizeof(BPC_MachineState_C_UnbindColorWindow) == 0x000008, "Wrong size on BPC_MachineState_C_UnbindColorWindow");
static_assert(offsetof(BPC_MachineState_C_UnbindColorWindow, InColorWindow) == 0x000000, "Member 'BPC_MachineState_C_UnbindColorWindow::InColorWindow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.UnbindMachineTypeSelectWindow
// 0x0008 (0x0008 - 0x0000)
struct BPC_MachineState_C_UnbindMachineTypeSelectWindow final
{
public:
	class UMachineTypeScrollControl*              InMachineTypeSelectWindow;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_UnbindMachineTypeSelectWindow) == 0x000008, "Wrong alignment on BPC_MachineState_C_UnbindMachineTypeSelectWindow");
static_assert(sizeof(BPC_MachineState_C_UnbindMachineTypeSelectWindow) == 0x000008, "Wrong size on BPC_MachineState_C_UnbindMachineTypeSelectWindow");
static_assert(offsetof(BPC_MachineState_C_UnbindMachineTypeSelectWindow, InMachineTypeSelectWindow) == 0x000000, "Member 'BPC_MachineState_C_UnbindMachineTypeSelectWindow::InMachineTypeSelectWindow' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.UpdateNavigationSimpleCustomizeColor
// 0x00A0 (0x00A0 - 0x0000)
struct BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMachineColorSelectWindow*              CallFunc_GetMachineColorSelectWindow_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineSelect_Sub_ColorWindow_C*   K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachineCustom_Sub_PresetPaint_C*   K2Node_DynamicCast_AsWBP_Machine_Custom_Sub_Preset_Paint; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_MachinrCustom_Sub_Paint_PresetWindow_C*> CallFunc_GetPage_OutList;             // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MachinrCustom_Sub_Paint_PresetWindow_C* CallFunc_Array_Get_Item;                      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUnionUIGridNavigationBuilder*          CallFunc_GetNavigation_GridNavigationBuilder;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnionUIButtonBase*>             CallFunc_GetButtonsByColumnIndex_OutButtons;       // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor) == 0x000008, "Wrong alignment on BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor");
static_assert(sizeof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor) == 0x0000A0, "Wrong size on BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, ButtonIndex) == 0x000000, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::ButtonIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, PlayerIndex) == 0x000004, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_GetMachineColorSelectWindow_ReturnValue) == 0x000008, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_GetMachineColorSelectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window) == 0x000018, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::K2Node_DynamicCast_AsWBP_Machine_Select_Sub_Color_Window' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, K2Node_DynamicCast_AsWBP_Machine_Custom_Sub_Preset_Paint) == 0x000030, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::K2Node_DynamicCast_AsWBP_Machine_Custom_Sub_Preset_Paint' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_GetPage_OutList) == 0x000040, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_GetPage_OutList' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_GetNavigation_GridNavigationBuilder) == 0x000060, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_GetNavigation_GridNavigationBuilder' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_GetButtonsByColumnIndex_OutButtons) == 0x000070, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_GetButtonsByColumnIndex_OutButtons' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Array_LastIndex_ReturnValue) == 0x000090, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'BPC_MachineState_C_UpdateNavigationSimpleCustomizeColor::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function BPC_MachineState.BPC_MachineState_C.UpdateRemainTime
// 0x0020 (0x0020 - 0x0000)
struct BPC_MachineState_C_UpdateRemainTime final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaTime;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MachineState_C_UpdateRemainTime) == 0x000008, "Wrong alignment on BPC_MachineState_C_UpdateRemainTime");
static_assert(sizeof(BPC_MachineState_C_UpdateRemainTime) == 0x000020, "Wrong size on BPC_MachineState_C_UpdateRemainTime");
static_assert(offsetof(BPC_MachineState_C_UpdateRemainTime, InPlayerIndex) == 0x000000, "Member 'BPC_MachineState_C_UpdateRemainTime::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateRemainTime, InDeltaTime) == 0x000008, "Member 'BPC_MachineState_C_UpdateRemainTime::InDeltaTime' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateRemainTime, Result) == 0x000010, "Member 'BPC_MachineState_C_UpdateRemainTime::Result' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateRemainTime, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000011, "Member 'BPC_MachineState_C_UpdateRemainTime::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateRemainTime, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000012, "Member 'BPC_MachineState_C_UpdateRemainTime::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MachineState_C_UpdateRemainTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_MachineState_C_UpdateRemainTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

}

