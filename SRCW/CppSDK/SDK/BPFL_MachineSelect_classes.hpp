#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_MachineSelect

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_classes.hpp"
#include "UnionRun_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_MachineSelect.BPFL_MachineSelect_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_MachineSelect_C final : public UBlueprintFunctionLibrary
{
public:
	static void CalcMachineTypeByMachineId(EMachineId MachineId, class UObject* __WorldContext, ECarStatusType* StatusType);
	static void CalcMachineTypeByRom1stMachineId(ERom1stMachineId Rom1stMachineId, class UObject* __WorldContext, ECarStatusType* StatusType);
	static void CanSelectCharaAndHover(const EDriverId& InCheckDriverId, class UObject* __WorldContext, bool* bCanUse, bool* bDontUsedHover);
	static void ConvertRom1stTypeIndexToMachineId(ECarStatusType machineType, int32 Index_0, int32 TypeCount, class UObject* __WorldContext, EMachineId* MachineId);
	static void ConvertTypeIndexToMachineId(ECarStatusType machineType, int32 Index_0, class UObject* __WorldContext, EMachineId* MachineId);
	static void GetRom1stMachineCountPerType(ECarStatusType StatusType, class UObject* __WorldContext, int32* Count);
	static void GetRom1stMachineIdByMachineId(EMachineId InMachineID, class UObject* __WorldContext, int32* OnestMAchineIndex);
	static void GetRom1stMachineName(int32 Rom1stIndex, class UObject* __WorldContext, class FText* MachineNameText);
	static void GetTypeIndexFromRom1stId(int32 Rom1stId, class UObject* __WorldContext, int32* TypeIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_MachineSelect_C">();
	}
	static class UBPFL_MachineSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_MachineSelect_C>();
	}
};
static_assert(alignof(UBPFL_MachineSelect_C) == 0x000008, "Wrong alignment on UBPFL_MachineSelect_C");
static_assert(sizeof(UBPFL_MachineSelect_C) == 0x000028, "Wrong size on UBPFL_MachineSelect_C");

}

