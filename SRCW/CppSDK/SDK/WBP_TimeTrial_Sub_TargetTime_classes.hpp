#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_TargetTime

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TimeTrial_Sub_TargetTime.WBP_TimeTrial_Sub_TargetTime_C
// 0x0030 (0x0310 - 0x02E0)
class UWBP_TimeTrial_Sub_TargetTime_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NEW_Loop;                                          // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               DSP_Overlay_NEW;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_TimeDifference_C*        DSP_WBP_TimeTrial_TimeDifference;                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Txt;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_TargetTime;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_TimeTrial_Sub_TargetTime(int32 EntryPoint);
	void SetTotalLapTime(const class FText& TimeText);
	void SetupReadyWindow(const class FText& InTimeText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TimeTrial_Sub_TargetTime_C">();
	}
	static class UWBP_TimeTrial_Sub_TargetTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TimeTrial_Sub_TargetTime_C>();
	}
};
static_assert(alignof(UWBP_TimeTrial_Sub_TargetTime_C) == 0x000008, "Wrong alignment on UWBP_TimeTrial_Sub_TargetTime_C");
static_assert(sizeof(UWBP_TimeTrial_Sub_TargetTime_C) == 0x000310, "Wrong size on UWBP_TimeTrial_Sub_TargetTime_C");
static_assert(offsetof(UWBP_TimeTrial_Sub_TargetTime_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_TimeTrial_Sub_TargetTime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_TargetTime_C, NEW_Loop) == 0x0002E8, "Member 'UWBP_TimeTrial_Sub_TargetTime_C::NEW_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_TargetTime_C, DSP_Overlay_NEW) == 0x0002F0, "Member 'UWBP_TimeTrial_Sub_TargetTime_C::DSP_Overlay_NEW' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_TargetTime_C, DSP_WBP_TimeTrial_TimeDifference) == 0x0002F8, "Member 'UWBP_TimeTrial_Sub_TargetTime_C::DSP_WBP_TimeTrial_TimeDifference' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_TargetTime_C, Overlay_Txt) == 0x000300, "Member 'UWBP_TimeTrial_Sub_TargetTime_C::Overlay_Txt' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_TargetTime_C, TXT_TargetTime) == 0x000308, "Member 'UWBP_TimeTrial_Sub_TargetTime_C::TXT_TargetTime' has a wrong offset!");

}

