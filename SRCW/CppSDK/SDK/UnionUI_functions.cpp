#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnionUI

#include "Basic.hpp"

#include "UnionUI_classes.hpp"
#include "UnionUI_parameters.hpp"


namespace SDK
{

// Function UnionUI.BPFL_ChallengeManagerUtil.GetChallengeClearList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ListLength                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FChallengeStruct>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChallengeStruct> UBPFL_ChallengeManagerUtil::GetChallengeClearList(int32 ListLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "GetChallengeClearList");

	Params::BPFL_ChallengeManagerUtil_GetChallengeClearList Parms{};

	Parms.ListLength = ListLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.GetChallengeClearOwnerList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FChallengeOwnerStruct>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChallengeOwnerStruct> UBPFL_ChallengeManagerUtil::GetChallengeClearOwnerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "GetChallengeClearOwnerList");

	Params::BPFL_ChallengeManagerUtil_GetChallengeClearOwnerList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.GetChallengeProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  NowProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_ChallengeManagerUtil::GetChallengeProgress(const class UObject* WorldContextObject, int32* NowProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "GetChallengeProgress");

	Params::BPFL_ChallengeManagerUtil_GetChallengeProgress Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NowProgress != nullptr)
		*NowProgress = Parms.NowProgress;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.GetChallengeSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EChallengeCategory                      InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FChallengeStruct>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChallengeStruct> UBPFL_ChallengeManagerUtil::GetChallengeSaveData(EChallengeCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "GetChallengeSaveData");

	Params::BPFL_ChallengeManagerUtil_GetChallengeSaveData Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.GetChallengeShowList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FChallengeStruct>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChallengeStruct> UBPFL_ChallengeManagerUtil::GetChallengeShowList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "GetChallengeShowList");

	Params::BPFL_ChallengeManagerUtil_GetChallengeShowList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.GetSpecialChallengeProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  NowProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_ChallengeManagerUtil::GetSpecialChallengeProgress(const class UObject* WorldContextObject, int32* NowProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "GetSpecialChallengeProgress");

	Params::BPFL_ChallengeManagerUtil_GetSpecialChallengeProgress Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NowProgress != nullptr)
		*NowProgress = Parms.NowProgress;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.IsChallengeCategoryClear
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EChallengeCategory                      Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBPFL_ChallengeManagerUtil::IsChallengeCategoryClear(EChallengeCategory Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "IsChallengeCategoryClear");

	Params::BPFL_ChallengeManagerUtil_IsChallengeCategoryClear Parms{};

	Parms.Category = Category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_ChallengeManagerUtil.IsOpenSpecialChallenge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBPFL_ChallengeManagerUtil::IsOpenSpecialChallenge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_ChallengeManagerUtil", "IsOpenSpecialChallenge");

	Params::BPFL_ChallengeManagerUtil_IsOpenSpecialChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.ConvertMenuButtonType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutIsValid                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonMenuButtonType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECommonMenuButtonType UBPFL_UnionUI::ConvertMenuButtonType(const class FString& InString, bool* OutIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "ConvertMenuButtonType");

	Params::BPFL_UnionUI_ConvertMenuButtonType Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIsValid != nullptr)
		*OutIsValid = Parms.OutIsValid;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetArrowKeyControlDir
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EUnionUIControlDir*                     OutControlDir                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_UnionUI::GetArrowKeyControlDir(const struct FKeyEvent& InKeyEvent, EUnionUIControlDir* OutControlDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetArrowKeyControlDir");

	Params::BPFL_UnionUI_GetArrowKeyControlDir Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutControlDir != nullptr)
		*OutControlDir = Parms.OutControlDir;
}


// Function UnionUI.BPFL_UnionUI.GetDPadControlDir
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EUnionUIControlDir*                     OutControlDir                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_UnionUI::GetDPadControlDir(const struct FKeyEvent& InKeyEvent, EUnionUIControlDir* OutControlDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetDPadControlDir");

	Params::BPFL_UnionUI_GetDPadControlDir Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutControlDir != nullptr)
		*OutControlDir = Parms.OutControlDir;
}


// Function UnionUI.BPFL_UnionUI.GetJoyStickControlDir
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EUnionUIControlDir*                     OutControlDir                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_UnionUI::GetJoyStickControlDir(const struct FKeyEvent& InKeyEvent, EUnionUIControlDir* OutControlDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetJoyStickControlDir");

	Params::BPFL_UnionUI_GetJoyStickControlDir Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutControlDir != nullptr)
		*OutControlDir = Parms.OutControlDir;
}


// Function UnionUI.BPFL_UnionUI.GetKeyboardControlDir
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKeyEvent&                 InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EUnionUIControlDir*                     OutControlDir                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_UnionUI::GetKeyboardControlDir(const struct FKeyEvent& InKeyEvent, EUnionUIControlDir* OutControlDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetKeyboardControlDir");

	Params::BPFL_UnionUI_GetKeyboardControlDir Parms{};

	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutControlDir != nullptr)
		*OutControlDir = Parms.OutControlDir;
}


// Function UnionUI.BPFL_UnionUI.GetTerminologyText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       InTableId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InKey                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBPFL_UnionUI::GetTerminologyText(const class FName InTableId, const class FString& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetTerminologyText");

	Params::BPFL_UnionUI_GetTerminologyText Parms{};

	Parms.InTableId = InTableId;
	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetTerminologyTextByText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InTex                                                  (ConstParm, Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBPFL_UnionUI::GetTerminologyTextByText(const class FText& InTex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetTerminologyTextByText");

	Params::BPFL_UnionUI_GetTerminologyTextByText Parms{};

	Parms.InTex = std::move(InTex);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetTextAddCommasToValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBPFL_UnionUI::GetTextAddCommasToValue(const int32& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetTextAddCommasToValue");

	Params::BPFL_UnionUI_GetTextAddCommasToValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetUserIndexByFocusEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBPFL_UnionUI::GetUserIndexByFocusEvent(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetUserIndexByFocusEvent");

	Params::BPFL_UnionUI_GetUserIndexByFocusEvent Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetUserIndexByInputEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputEvent&               InInputEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBPFL_UnionUI::GetUserIndexByInputEvent(const struct FInputEvent& InInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetUserIndexByInputEvent");

	Params::BPFL_UnionUI_GetUserIndexByInputEvent Parms{};

	Parms.InInputEvent = std::move(InInputEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetUserIndexByMouseEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPointerEvent&             InInputEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBPFL_UnionUI::GetUserIndexByMouseEvent(const struct FPointerEvent& InInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetUserIndexByMouseEvent");

	Params::BPFL_UnionUI_GetUserIndexByMouseEvent Parms{};

	Parms.InInputEvent = std::move(InInputEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.BPFL_UnionUI.GetWidgetRenderTransform
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UWidget*                    InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWidgetTransform*                OutRenderTransform                                     (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UBPFL_UnionUI::GetWidgetRenderTransform(const class UWidget* InWidget, struct FWidgetTransform* OutRenderTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionUI", "GetWidgetRenderTransform");

	Params::BPFL_UnionUI_GetWidgetRenderTransform Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRenderTransform != nullptr)
		*OutRenderTransform = std::move(Parms.OutRenderTransform);
}


// Function UnionUI.FontFunctionObject.CalcFontPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EFontSizeType&                    InSrcFontType                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EFontSizeType&                    InDstFontType                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            InFontPoint                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutFontPoint                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFontFunctionObject::CalcFontPoint(const EFontSizeType& InSrcFontType, const EFontSizeType& InDstFontType, const int32& InFontPoint, bool* bSuccess, int32* OutFontPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FontFunctionObject", "CalcFontPoint");

	Params::FontFunctionObject_CalcFontPoint Parms{};

	Parms.InSrcFontType = InSrcFontType;
	Parms.InDstFontType = InDstFontType;
	Parms.InFontPoint = InFontPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (OutFontPoint != nullptr)
		*OutFontPoint = Parms.OutFontPoint;
}


// Function UnionUI.WidgetManContainer.AddWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanelSlot*                 Slot                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          LogicObjectRef                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::AddWidget(class UUserWidget* Widget, class UCanvasPanelSlot* Slot, class UObject* LogicObjectRef, bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "AddWidget");

	Params::WidgetManContainer_AddWidget Parms{};

	Parms.Widget = Widget;
	Parms.Slot = Slot;
	Parms.LogicObjectRef = LogicObjectRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function UnionUI.WidgetManContainer.FindWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsFound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::FindWidget(class UUserWidget* Widget, bool* IsFound, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "FindWidget");

	Params::WidgetManContainer_FindWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsFound != nullptr)
		*IsFound = Parms.IsFound;

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function UnionUI.WidgetManContainer.GetWidgetAt
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget**                     Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         LogicObject                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::GetWidgetAt(int32 Index_0, bool* IsSucceeded, class UUserWidget** Widget, class UObject** LogicObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "GetWidgetAt");

	Params::WidgetManContainer_GetWidgetAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;

	if (Widget != nullptr)
		*Widget = Parms.Widget;

	if (LogicObject != nullptr)
		*LogicObject = Parms.LogicObject;
}


// Function UnionUI.WidgetManContainer.GetWidgetCount
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  WidgetCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::GetWidgetCount(int32* WidgetCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "GetWidgetCount");

	Params::WidgetManContainer_GetWidgetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WidgetCount != nullptr)
		*WidgetCount = Parms.WidgetCount;
}


// Function UnionUI.WidgetManContainer.Initialize
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ZOrder                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanelSlot*                 Slot                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          LogicObjectRef                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSubWidget                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::Initialize(class UUserWidget* Widget, const int32 ZOrder, class UCanvasPanelSlot* Slot, class UObject* LogicObjectRef, bool bSubWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "Initialize");

	Params::WidgetManContainer_Initialize Parms{};

	Parms.Widget = Widget;
	Parms.ZOrder = ZOrder;
	Parms.Slot = Slot;
	Parms.LogicObjectRef = LogicObjectRef;
	Parms.bSubWidget = bSubWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManContainer.IsSubWidgetContainer
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool*                                   bSubWidget                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::IsSubWidgetContainer(bool* bSubWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "IsSubWidgetContainer");

	Params::WidgetManContainer_IsSubWidgetContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSubWidget != nullptr)
		*bSubWidget = Parms.bSubWidget;
}


// Function UnionUI.WidgetManContainer.OffsetZOrder
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::OffsetZOrder(int32 Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "OffsetZOrder");

	Params::WidgetManContainer_OffsetZOrder Parms{};

	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManContainer.SetZOrder
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InZOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManContainer::SetZOrder(int32 InZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManContainer", "SetZOrder");

	Params::WidgetManContainer_SetZOrder Parms{};

	Parms.InZOrder = InZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.CameraCharaSlide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::CameraCharaSlide(class AActor* Target, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "CameraCharaSlide");

	Params::MenuCameraManager_CameraCharaSlide Parms{};

	Parms.Target = Target;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.CameraMoveToTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                TargetTransform                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::CameraMoveToTransform(const struct FTransform& TargetTransform, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "CameraMoveToTransform");

	Params::MenuCameraManager_CameraMoveToTransform Parms{};

	Parms.TargetTransform = std::move(TargetTransform);
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.CameraZoomIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::CameraZoomIn(class AActor* Target, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "CameraZoomIn");

	Params::MenuCameraManager_CameraZoomIn Parms{};

	Parms.Target = Target;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.CameraZoomOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::CameraZoomOut(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "CameraZoomOut");

	Params::MenuCameraManager_CameraZoomOut Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.ForceResetCameraMove
// (Final, Native, Public, BlueprintCallable)

void AMenuCameraManager::ForceResetCameraMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "ForceResetCameraMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.SetCameraParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Camera                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEasingFunc                             InEasingFunc                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::SetCameraParam(class AActor* Camera, EEasingFunc InEasingFunc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "SetCameraParam");

	Params::MenuCameraManager_SetCameraParam Parms{};

	Parms.Camera = Camera;
	Parms.InEasingFunc = InEasingFunc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.SetLookAtRacerCameraPos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   OffsetPos                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OffsetLookAtPos                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::SetLookAtRacerCameraPos(const struct FVector& OffsetPos, const struct FVector& OffsetLookAtPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "SetLookAtRacerCameraPos");

	Params::MenuCameraManager_SetLookAtRacerCameraPos Parms{};

	Parms.OffsetPos = std::move(OffsetPos);
	Parms.OffsetLookAtPos = std::move(OffsetLookAtPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.SetManualFocusDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InManualDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::SetManualFocusDistance(float InManualDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "SetManualFocusDistance");

	Params::MenuCameraManager_SetManualFocusDistance Parms{};

	Parms.InManualDistance = InManualDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.MenuCameraManager.SetUpCameraFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InFOV                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMenuCameraManager::SetUpCameraFOV(float InFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCameraManager", "SetUpCameraFOV");

	Params::MenuCameraManager_SetUpCameraFOV Parms{};

	Parms.InFOV = InFOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.RichTextBlockRubyDecorator.UpdateOriginalTextIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InOriginalTextIndex                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URichTextBlockRubyDecorator::UpdateOriginalTextIndex(const int32 InOriginalTextIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RichTextBlockRubyDecorator", "UpdateOriginalTextIndex");

	Params::RichTextBlockRubyDecorator_UpdateOriginalTextIndex Parms{};

	Parms.InOriginalTextIndex = InOriginalTextIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UICapture2DTargetInterface.GetCaptureTargetActorArr
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> IUICapture2DTargetInterface::GetCaptureTargetActorArr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UICapture2DTargetInterface", "GetCaptureTargetActorArr");

	Params::UICapture2DTargetInterface_GetCaptureTargetActorArr Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionUI.UnionComboBoxString.FilterOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilterText                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionComboBoxString::FilterOptions(const class FString& FilterText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionComboBoxString", "FilterOptions");

	Params::UnionComboBoxString_FilterOptions Parms{};

	Parms.FilterText = std::move(FilterText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionComboBoxString.InitializeOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            Initialize                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionComboBoxString::InitializeOptions(const TArray<class FString>& Initialize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionComboBoxString", "InitializeOptions");

	Params::UnionComboBoxString_InitializeOptions Parms{};

	Parms.Initialize = std::move(Initialize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.RefreshText
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionFontScroll::RefreshText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "RefreshText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionFontScroll.SetIsRefreshingText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Refreshing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionFontScroll::SetIsRefreshingText(bool Refreshing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "SetIsRefreshingText");

	Params::UnionFontScroll_SetIsRefreshingText Parms{};

	Parms.Refreshing = Refreshing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void UUnionFontScroll::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "SetText");

	Params::UnionFontScroll_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.SetupTextScroll
// (Final, Native, Public, BlueprintCallable)

void UUnionFontScroll::SetupTextScroll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "SetupTextScroll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.SetupTextStartPosition
// (Final, Native, Public, BlueprintCallable)

void UUnionFontScroll::SetupTextStartPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "SetupTextStartPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.StartScroll
// (Final, Native, Public, BlueprintCallable)

void UUnionFontScroll::StartScroll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "StartScroll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.StartScrollDelayEvent
// (Final, Native, Public, BlueprintCallable)

void UUnionFontScroll::StartScrollDelayEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "StartScrollDelayEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.StopScroll
// (Final, Native, Public, BlueprintCallable)

void UUnionFontScroll::StopScroll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "StopScroll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.UpdateText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void UUnionFontScroll::UpdateText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "UpdateText");

	Params::UnionFontScroll_UpdateText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionFontScroll.UpdateTextWithoutStartScroll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (Parm, NativeAccessSpecifierPublic)

void UUnionFontScroll::UpdateTextWithoutStartScroll(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFontScroll", "UpdateTextWithoutStartScroll");

	Params::UnionFontScroll_UpdateTextWithoutStartScroll Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionLoadingGauge.IsEqLoadingGaugeState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionLoadingGauge::IsEqLoadingGaugeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionLoadingGauge", "IsEqLoadingGaugeState");

	Params::UnionLoadingGauge_IsEqLoadingGaugeState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionLoadingGauge.IsSkipLoadingGaugeState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionLoadingGauge::IsSkipLoadingGaugeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionLoadingGauge", "IsSkipLoadingGaugeState");

	Params::UnionLoadingGauge_IsSkipLoadingGaugeState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionLoadingGauge.IsTargetStateBigger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionLoadingGauge::IsTargetStateBigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionLoadingGauge", "IsTargetStateBigger");

	Params::UnionLoadingGauge_IsTargetStateBigger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionLoadingGauge.ProceedTargetState
// (Final, Native, Public, BlueprintCallable)

void UUnionLoadingGauge::ProceedTargetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionLoadingGauge", "ProceedTargetState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionLoadingGauge.SkipNowState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionLoadingGauge::SkipNowState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionLoadingGauge", "SkipNowState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionLoadingGauge.UpdateLoadingGaugeTargetState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionLoadingGaugeState                 InTargetState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionLoadingGauge::UpdateLoadingGaugeTargetState(EUnionLoadingGaugeState InTargetState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionLoadingGauge", "UpdateLoadingGaugeTargetState");

	Params::UnionLoadingGauge_UpdateLoadingGaugeTargetState Parms{};

	Parms.InTargetState = InTargetState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.MouseButtonBlueprintFunctionLibrary.IsEnableMouseClick
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMouseButtonBlueprintFunctionLibrary::IsEnableMouseClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MouseButtonBlueprintFunctionLibrary", "IsEnableMouseClick");

	Params::MouseButtonBlueprintFunctionLibrary_IsEnableMouseClick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.MouseButtonBlueprintFunctionLibrary.IsEnableMouseHover
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMouseButtonBlueprintFunctionLibrary::IsEnableMouseHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MouseButtonBlueprintFunctionLibrary", "IsEnableMouseHover");

	Params::MouseButtonBlueprintFunctionLibrary_IsEnableMouseHover Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionRichTextBlockImageDecorator.FindResorceObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TagOrId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OutObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlockImageDecorator::FindResorceObject(class FName TagOrId, class UObject* OutObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlockImageDecorator", "FindResorceObject");

	Params::UnionRichTextBlockImageDecorator_FindResorceObject Parms{};

	Parms.TagOrId = TagOrId;
	Parms.OutObject = OutObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlockImageDecorator.FindRichImageRow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TagOrId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRichImageRow*                   OutRichImageRow                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UUnionRichTextBlockImageDecorator::FindRichImageRow(class FName TagOrId, struct FRichImageRow* OutRichImageRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlockImageDecorator", "FindRichImageRow");

	Params::UnionRichTextBlockImageDecorator_FindRichImageRow Parms{};

	Parms.TagOrId = TagOrId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRichImageRow != nullptr)
		*OutRichImageRow = std::move(Parms.OutRichImageRow);
}


// Function UnionUI.UnionRichTextBlockImageDecorator.FindRichSlateBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TagOrId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush*                     OutSlateBrush                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UUnionRichTextBlockImageDecorator::FindRichSlateBrush(class FName TagOrId, struct FSlateBrush* OutSlateBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlockImageDecorator", "FindRichSlateBrush");

	Params::UnionRichTextBlockImageDecorator_FindRichSlateBrush Parms{};

	Parms.TagOrId = TagOrId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSlateBrush != nullptr)
		*OutSlateBrush = std::move(Parms.OutSlateBrush);
}


// Function UnionUI.UnionRichTextBlockImageDecorator.SetEachPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEachPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlockImageDecorator::SetEachPlayer(bool InEachPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlockImageDecorator", "SetEachPlayer");

	Params::UnionRichTextBlockImageDecorator_SetEachPlayer Parms{};

	Parms.InEachPlayer = InEachPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlockImageDecorator.SetPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlockImageDecorator::SetPlayerIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlockImageDecorator", "SetPlayerIndex");

	Params::UnionRichTextBlockImageDecorator_SetPlayerIndex Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionScreenCaptureActor.SaveTextureToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FColor>&            Bitmap                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionScreenCaptureActor::SaveTextureToFile(class UTextureRenderTarget2D* InRenderTarget, const TArray<struct FColor>& Bitmap, const class FString& InFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionScreenCaptureActor", "SaveTextureToFile");

	Params::UnionScreenCaptureActor_SaveTextureToFile Parms{};

	Parms.InRenderTarget = InRenderTarget;
	Parms.Bitmap = std::move(Bitmap);
	Parms.InFilePath = std::move(InFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionScreenCaptureActor.CaptureScreen
// (Final, Native, Public, BlueprintCallable)

void AUnionScreenCaptureActor::CaptureScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionScreenCaptureActor", "CaptureScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionScreenCaptureActor.GetTextureRenderTarget2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* AUnionScreenCaptureActor::GetTextureRenderTarget2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionScreenCaptureActor", "GetTextureRenderTarget2D");

	Params::UnionScreenCaptureActor_GetTextureRenderTarget2D Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionStickerFrame.AddStaticMeshComponent
// (Native, Public, BlueprintCallable)

void AUnionStickerFrame::AddStaticMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionStickerFrame", "AddStaticMeshComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIWidgetBase.CallCustomActionbyID
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWidgetBase::CallCustomActionbyID(int32 ActionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWidgetBase", "CallCustomActionbyID");

	Params::UnionUIWidgetBase_CallCustomActionbyID Parms{};

	Parms.ActionIndex = ActionIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.UnionUIWidgetBase.GetAllAnimations
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class UWidgetAnimation*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UWidgetAnimation*> UUnionUIWidgetBase::GetAllAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWidgetBase", "GetAllAnimations");

	Params::UnionUIWidgetBase_GetAllAnimations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIWidgetBase.WidgetPlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AnimIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWidgetBase::WidgetPlayAnim(int32 AnimIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWidgetBase", "WidgetPlayAnim");

	Params::UnionUIWidgetBase_WidgetPlayAnim Parms{};

	Parms.AnimIndex = AnimIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIInputWidget.RegisterMainMenu
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIInputWidget::RegisterMainMenu(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "RegisterMainMenu");

	Params::UnionUIInputWidget_RegisterMainMenu Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIInputWidget.SetAutoRegisterMainMenuEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIInputWidget::SetAutoRegisterMainMenuEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "SetAutoRegisterMainMenuEnabled");

	Params::UnionUIInputWidget_SetAutoRegisterMainMenuEnabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIInputWidget.UnregisterMainMenu
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIInputWidget::UnregisterMainMenu(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "UnregisterMainMenu");

	Params::UnionUIInputWidget_UnregisterMainMenu Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIInputWidget.VisibilityChange
// (Native, Protected)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIInputWidget::VisibilityChange(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "VisibilityChange");

	Params::UnionUIInputWidget_VisibilityChange Parms{};

	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIInputWidget.GetFocusPlayerController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UUnionUIInputWidget::GetFocusPlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "GetFocusPlayerController");

	Params::UnionUIInputWidget_GetFocusPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIInputWidget.GetFocusPlayerIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUIInputWidget::GetFocusPlayerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "GetFocusPlayerIndex");

	Params::UnionUIInputWidget_GetFocusPlayerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIInputWidget.GetRegistPriority
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EMainMenuRegistPriority                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMainMenuRegistPriority UUnionUIInputWidget::GetRegistPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIInputWidget", "GetRegistPriority");

	Params::UnionUIInputWidget_GetRegistPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonBaseCore.GetNavigationExplicitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EUINavigation                           Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget**                         FocusToWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIButtonBaseCore::GetNavigationExplicitWidget(EUINavigation Direction, class UWidget** FocusToWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "GetNavigationExplicitWidget");

	Params::UnionUIButtonBaseCore_GetNavigationExplicitWidget Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FocusToWidget != nullptr)
		*FocusToWidget = Parms.FocusToWidget;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonBaseCore.PlayButtonAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 LoopAnimation                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::PlayButtonAnimation(class UWidgetAnimation* Animation, class UWidgetAnimation* LoopAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "PlayButtonAnimation");

	Params::UnionUIButtonBaseCore_PlayButtonAnimation Parms{};

	Parms.Animation = Animation;
	Parms.LoopAnimation = LoopAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.PlayButtonAnimationWithFinished
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 LoopAnimation                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Aborted)>&    OnFninished                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::PlayButtonAnimationWithFinished(class UWidgetAnimation* Animation, class UWidgetAnimation* LoopAnimation, const TDelegate<void(bool Aborted)>& OnFninished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "PlayButtonAnimationWithFinished");

	Params::UnionUIButtonBaseCore_PlayButtonAnimationWithFinished Parms{};

	Parms.Animation = Animation;
	Parms.LoopAnimation = LoopAnimation;
	Parms.OnFninished = OnFninished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.SetChangeableButtonState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InChangeableButtonState                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::SetChangeableButtonState(bool InChangeableButtonState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "SetChangeableButtonState");

	Params::UnionUIButtonBaseCore_SetChangeableButtonState Parms{};

	Parms.InChangeableButtonState = InChangeableButtonState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.SetInteractableState
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Interactable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::SetInteractableState(bool Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "SetInteractableState");

	Params::UnionUIButtonBaseCore_SetInteractableState Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.SetMouseInteractionButton
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UButton*                          InMouseInteractionButton                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::SetMouseInteractionButton(class UButton* InMouseInteractionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "SetMouseInteractionButton");

	Params::UnionUIButtonBaseCore_SetMouseInteractionButton Parms{};

	Parms.InMouseInteractionButton = InMouseInteractionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.SetNavigationExplicitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          FocusToWidget                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::SetNavigationExplicitWidget(EUINavigation Direction, class UWidget* FocusToWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "SetNavigationExplicitWidget");

	Params::UnionUIButtonBaseCore_SetNavigationExplicitWidget Parms{};

	Parms.Direction = Direction;
	Parms.FocusToWidget = FocusToWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.StartDelayEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBaseCore::StartDelayEnable(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "StartDelayEnable");

	Params::UnionUIButtonBaseCore_StartDelayEnable Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBaseCore.GetChangeableButtonState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIButtonBaseCore::GetChangeableButtonState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "GetChangeableButtonState");

	Params::UnionUIButtonBaseCore_GetChangeableButtonState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonBaseCore.GetMouseInteractionButton
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UButton*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UButton* UUnionUIButtonBaseCore::GetMouseInteractionButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBaseCore", "GetMouseInteractionButton");

	Params::UnionUIButtonBaseCore_GetMouseInteractionButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonBase.CallbackEnableMouseClick
// (Final, Native, Protected)

void UUnionUIButtonBase::CallbackEnableMouseClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "CallbackEnableMouseClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.CallbackEnableMouseHover
// (Final, Native, Protected)

void UUnionUIButtonBase::CallbackEnableMouseHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "CallbackEnableMouseHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.CallOnDecision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               InButton                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::CallOnDecision(class UUnionUIButtonBase* InButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "CallOnDecision");

	Params::UnionUIButtonBase_CallOnDecision Parms{};

	Parms.InButton = InButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.CallOnOnCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               InButton                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::CallOnOnCancel(class UUnionUIButtonBase* InButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "CallOnOnCancel");

	Params::UnionUIButtonBase_CallOnOnCancel Parms{};

	Parms.InButton = InButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.DisableMouseClick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAutoOnTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::DisableMouseClick(float InAutoOnTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "DisableMouseClick");

	Params::UnionUIButtonBase_DisableMouseClick Parms{};

	Parms.InAutoOnTime = InAutoOnTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.DisableMouseControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAutoOnTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::DisableMouseControl(float InAutoOnTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "DisableMouseControl");

	Params::UnionUIButtonBase_DisableMouseControl Parms{};

	Parms.InAutoOnTime = InAutoOnTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.DisableMouseHover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAutoOnTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::DisableMouseHover(float InAutoOnTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "DisableMouseHover");

	Params::UnionUIButtonBase_DisableMouseHover Parms{};

	Parms.InAutoOnTime = InAutoOnTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.FireFocusEvent
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonBase::FireFocusEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "FireFocusEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.FireUnfocusEvent
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonBase::FireUnfocusEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "FireUnfocusEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.OnClickedMouseButton
// (Native, Protected)

void UUnionUIButtonBase::OnClickedMouseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnClickedMouseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.OnFocusAnimFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIButtonBase::OnFocusAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnFocusAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.OnFocusAnimStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIButtonBase::OnFocusAnimStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnFocusAnimStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.OnHoverdMouseButton
// (Native, Protected)

void UUnionUIButtonBase::OnHoverdMouseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnHoverdMouseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.OnMouseButtonDownBP
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIButtonBase::OnMouseButtonDownBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnMouseButtonDownBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIButtonBase.OnMouseButtonUpBP
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIButtonBase::OnMouseButtonUpBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnMouseButtonUpBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIButtonBase.OnUnFocusAnimFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIButtonBase::OnUnFocusAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnUnFocusAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.OnUnFocusAnimStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIButtonBase::OnUnFocusAnimStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "OnUnFocusAnimStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.SetButtonIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewButtonIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::SetButtonIndex(int32 NewButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "SetButtonIndex");

	Params::UnionUIButtonBase_SetButtonIndex Parms{};

	Parms.NewButtonIndex = NewButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonBase.SetFocusSoundEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonBase::SetFocusSoundEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonBase", "SetFocusSoundEnable");

	Params::UnionUIButtonBase_SetFocusSoundEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.CalcNextCenterElementIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InLastAnimDownRight                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUIAnimScrollControl::CalcNextCenterElementIndex(bool InLastAnimDownRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "CalcNextCenterElementIndex");

	Params::UnionUIAnimScrollControl_CalcNextCenterElementIndex Parms{};

	Parms.InLastAnimDownRight = InLastAnimDownRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIAnimScrollControl.OnFinishedScrollAnimation
// (Final, Native, Public, BlueprintCallable)

void UUnionUIAnimScrollControl::OnFinishedScrollAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "OnFinishedScrollAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.OnFinishedScrollAnimationBP
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIAnimScrollControl::OnFinishedScrollAnimationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "OnFinishedScrollAnimationBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.PlayScrollAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      ScrollDir                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIAnimScrollControl::PlayScrollAnimation(EUnionUIControlDir ScrollDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "PlayScrollAnimation");

	Params::UnionUIAnimScrollControl_PlayScrollAnimation Parms{};

	Parms.ScrollDir = ScrollDir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.Repopurate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDownRight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIAnimScrollControl::Repopurate(bool bDownRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "Repopurate");

	Params::UnionUIAnimScrollControl_Repopurate Parms{};

	Parms.bDownRight = bDownRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.SetControllableFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InControllable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIAnimScrollControl::SetControllableFlag(bool InControllable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "SetControllableFlag");

	Params::UnionUIAnimScrollControl_SetControllableFlag Parms{};

	Parms.InControllable = InControllable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.SetElementTexture
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            InIndex                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       InTexture                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIAnimScrollControl::SetElementTexture(const int32& InIndex, class UTexture2D* InTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "SetElementTexture");

	Params::UnionUIAnimScrollControl_SetElementTexture Parms{};

	Parms.InIndex = InIndex;
	Parms.InTexture = InTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.UnionUIAnimScrollControl.SetScrollAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      ControlDir                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIAnimScrollControl::SetScrollAnimation(EUnionUIControlDir ControlDir, class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "SetScrollAnimation");

	Params::UnionUIAnimScrollControl_SetScrollAnimation Parms{};

	Parms.ControlDir = ControlDir;
	Parms.Animation = Animation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.UpdateAnimation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIAnimScrollControl::UpdateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "UpdateAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.UpdateCenterElementIndex
// (Final, Native, Public, BlueprintCallable)

void UUnionUIAnimScrollControl::UpdateCenterElementIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "UpdateCenterElementIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIAnimScrollControl.GetCenterElementIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUIAnimScrollControl::GetCenterElementIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "GetCenterElementIndex");

	Params::UnionUIAnimScrollControl_GetCenterElementIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIAnimScrollControl.GetControllableFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIAnimScrollControl::GetControllableFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "GetControllableFlag");

	Params::UnionUIAnimScrollControl_GetControllableFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIAnimScrollControl.GetElementArrIndexbyPivot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUIAnimScrollControl::GetElementArrIndexbyPivot(int32 Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIAnimScrollControl", "GetElementArrIndexbyPivot");

	Params::UnionUIAnimScrollControl_GetElementArrIndexbyPivot Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButton.RepeatEnd
// (Native, Protected)

void UUnionUIButton::RepeatEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButton", "RepeatEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButton.RepeatStart
// (Native, Protected)

void UUnionUIButton::RepeatStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButton", "RepeatStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButton.SetEnableMouseInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButton::SetEnableMouseInput(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButton", "SetEnableMouseInput");

	Params::UnionUIButton_SetEnableMouseInput Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.Activate
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonStandard::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.Deactivate
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonStandard::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.Decide
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonStandard::Decide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "Decide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.Deselect
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonStandard::Deselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "Deselect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnClicked
// (Native, Event, Protected, BlueprintEvent)

void UUnionUIButtonStandard::OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnClickedMouseInteractionButton
// (Native, Protected)

void UUnionUIButtonStandard::OnClickedMouseInteractionButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnClickedMouseInteractionButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnFocused
// (Native, Event, Protected, BlueprintEvent)

void UUnionUIButtonStandard::OnFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnFocused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnHoverdMouseInteractionButton
// (Native, Protected)

void UUnionUIButtonStandard::OnHoverdMouseInteractionButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnHoverdMouseInteractionButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnHovered
// (Native, Event, Protected, BlueprintEvent)

void UUnionUIButtonStandard::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnPressed
// (Native, Event, Protected, BlueprintEvent)

void UUnionUIButtonStandard::OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnPressedMouseInteractionButton
// (Native, Protected)

void UUnionUIButtonStandard::OnPressedMouseInteractionButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnPressedMouseInteractionButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnUnfocused
// (Native, Event, Protected, BlueprintEvent)

void UUnionUIButtonStandard::OnUnfocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnUnfocused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnUnhoverdMouseInteractionButton
// (Native, Protected)

void UUnionUIButtonStandard::OnUnhoverdMouseInteractionButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnUnhoverdMouseInteractionButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.OnUnhovered
// (Native, Event, Protected, BlueprintEvent)

void UUnionUIButtonStandard::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "OnUnhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.ReleaseDecided
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonStandard::ReleaseDecided()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "ReleaseDecided");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.Select
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsSoundPass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonStandard::Select(bool bIsSoundPass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "Select");

	Params::UnionUIButtonStandard_Select Parms{};

	Parms.bIsSoundPass = bIsSoundPass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.SetDecidedKeep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    DecidedKeep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonStandard::SetDecidedKeep(bool DecidedKeep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "SetDecidedKeep");

	Params::UnionUIButtonStandard_SetDecidedKeep Parms{};

	Parms.DecidedKeep = DecidedKeep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.SetSelectable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Selectable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonStandard::SetSelectable(bool Selectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "SetSelectable");

	Params::UnionUIButtonStandard_SetSelectable Parms{};

	Parms.Selectable = Selectable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.SetToggleEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ToggleEnabled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonStandard::SetToggleEnabled(bool ToggleEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "SetToggleEnabled");

	Params::UnionUIButtonStandard_SetToggleEnabled Parms{};

	Parms.ToggleEnabled = ToggleEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonStandard.IsDecided
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIButtonStandard::IsDecided() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "IsDecided");

	Params::UnionUIButtonStandard_IsDecided Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonStandard.IsSelectable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIButtonStandard::IsSelectable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "IsSelectable");

	Params::UnionUIButtonStandard_IsSelectable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonStandard.IsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIButtonStandard::IsSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonStandard", "IsSelected");

	Params::UnionUIButtonStandard_IsSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUICapture2DActor.AddShowOnlyActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            InShowOnlyActors                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AUnionUICapture2DActor::AddShowOnlyActors(const TArray<class AActor*>& InShowOnlyActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "AddShowOnlyActors");

	Params::UnionUICapture2DActor_AddShowOnlyActors Parms{};

	Parms.InShowOnlyActors = std::move(InShowOnlyActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.ClearShowOnlyActors
// (Final, Native, Public, BlueprintCallable)

void AUnionUICapture2DActor::ClearShowOnlyActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "ClearShowOnlyActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.DoCapture
// (Final, Native, Public, BlueprintCallable)

void AUnionUICapture2DActor::DoCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "DoCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.InitTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            Width                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            Height                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionUICapture2DActor::InitTexture(const int32& Width, const int32& Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "InitTexture");

	Params::UnionUICapture2DActor_InitTexture Parms{};

	Parms.Width = Width;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.RemoveShowOnlyActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InShowOnlyActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionUICapture2DActor::RemoveShowOnlyActors(class AActor* InShowOnlyActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "RemoveShowOnlyActors");

	Params::UnionUICapture2DActor_RemoveShowOnlyActors Parms{};

	Parms.InShowOnlyActor = InShowOnlyActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.RemoveShowOnlyActors_Multi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            InShowOnlyActors                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AUnionUICapture2DActor::RemoveShowOnlyActors_Multi(const TArray<class AActor*>& InShowOnlyActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "RemoveShowOnlyActors_Multi");

	Params::UnionUICapture2DActor_RemoveShowOnlyActors_Multi Parms{};

	Parms.InShowOnlyActors = std::move(InShowOnlyActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.SetShowOnlyActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            ShowOnlyActors                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AUnionUICapture2DActor::SetShowOnlyActors(const TArray<class AActor*>& ShowOnlyActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "SetShowOnlyActors");

	Params::UnionUICapture2DActor_SetShowOnlyActors Parms{};

	Parms.ShowOnlyActors = std::move(ShowOnlyActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICapture2DActor.GetRenderTarget2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTextureRenderTarget2D*     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTextureRenderTarget2D* AUnionUICapture2DActor::GetRenderTarget2D() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICapture2DActor", "GetRenderTarget2D");

	Params::UnionUICapture2DActor_GetRenderTarget2D Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonsPanel.AddFocusButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::AddFocusButton(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "AddFocusButton");

	Params::UnionUIButtonsPanel_AddFocusButton Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.ClearButton
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonsPanel::ClearButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "ClearButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.GetLastFocusedButton
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutLastFocusedButtonIndex                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonBase*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIButtonBase* UUnionUIButtonsPanel::GetLastFocusedButton(int32* OutLastFocusedButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "GetLastFocusedButton");

	Params::UnionUIButtonsPanel_GetLastFocusedButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLastFocusedButtonIndex != nullptr)
		*OutLastFocusedButtonIndex = Parms.OutLastFocusedButtonIndex;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonsPanel.GetLastFocusedButtonByPlayerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutLastFocusedButtonIndex                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonBase*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIButtonBase* UUnionUIButtonsPanel::GetLastFocusedButtonByPlayerIndex(int32 PlayerControllerIndex, int32* OutLastFocusedButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "GetLastFocusedButtonByPlayerIndex");

	Params::UnionUIButtonsPanel_GetLastFocusedButtonByPlayerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLastFocusedButtonIndex != nullptr)
		*OutLastFocusedButtonIndex = Parms.OutLastFocusedButtonIndex;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIButtonsPanel.InitParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InPanelIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool&                             InExclusiveFocus                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::InitParam(const int32& InPanelIndex, const bool& InExclusiveFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "InitParam");

	Params::UnionUIButtonsPanel_InitParam Parms{};

	Parms.InPanelIndex = InPanelIndex;
	Parms.InExclusiveFocus = InExclusiveFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelCancelDownEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelCancelDownEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelCancelDownEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelCancelDownEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelCancelEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelCancelEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelCancelEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelCancelEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelDecisionDownEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelDecisionDownEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelDecisionDownEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelDecisionDownEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelDecisionEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelDecisionEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelDecisionEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelDecisionEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelDirectionEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIControlDir                      Dir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelDirectionEvent_Impl(class UUnionUIButtonBase* UnionButton, EUnionUIControlDir Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelDirectionEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelDirectionEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.Dir = Dir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelFaceTopEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelFaceTopEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelFaceTopEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelFaceTopEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelFocusEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelFocusEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelFocusEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelFocusEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelLeftShoulderEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelLeftShoulderEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelLeftShoulderEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelLeftShoulderEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelRightShoulderEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelRightShoulderEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelRightShoulderEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelRightShoulderEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.OnUIButtonsPanelUnFocusEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::OnUIButtonsPanelUnFocusEvent_Impl(class UUnionUIButtonBase* UnionButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "OnUIButtonsPanelUnFocusEvent_Impl");

	Params::UnionUIButtonsPanel_OnUIButtonsPanelUnFocusEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetFocusSilent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InButtonIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::SetFocusSilent(int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetFocusSilent");

	Params::UnionUIButtonsPanel_SetFocusSilent Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetFocusSoundEnableAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::SetFocusSoundEnableAll(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetFocusSoundEnableAll");

	Params::UnionUIButtonsPanel_SetFocusSoundEnableAll Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetInitialFocus
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonsPanel::SetInitialFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetInitialFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetLastFocusedButtonIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InButtonIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::SetLastFocusedButtonIndex(int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetLastFocusedButtonIndex");

	Params::UnionUIButtonsPanel_SetLastFocusedButtonIndex Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetLastFocusedButtonIndexByPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InButtonIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::SetLastFocusedButtonIndexByPlayerIndex(int32 PlayerControllerIndex, int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetLastFocusedButtonIndexByPlayerIndex");

	Params::UnionUIButtonsPanel_SetLastFocusedButtonIndexByPlayerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetOwnerPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIButtonsPanel::SetOwnerPlayerController(class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetOwnerPlayerController");

	Params::UnionUIButtonsPanel_SetOwnerPlayerController Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIButtonsPanel.SetUnFocusState
// (Final, Native, Public, BlueprintCallable)

void UUnionUIButtonsPanel::SetUnFocusState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIButtonsPanel", "SetUnFocusState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICrossButtons.SetCrossButtons
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UpButton                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonBase*               RightButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonBase*               DownButton                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonBase*               LeftButton                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUICrossButtons::SetCrossButtons(class UUnionUIButtonBase* UpButton, class UUnionUIButtonBase* RightButton, class UUnionUIButtonBase* DownButton, class UUnionUIButtonBase* LeftButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICrossButtons", "SetCrossButtons");

	Params::UnionUICrossButtons_SetCrossButtons Parms{};

	Parms.UpButton = UpButton;
	Parms.RightButton = RightButton;
	Parms.DownButton = DownButton;
	Parms.LeftButton = LeftButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIFrameGrabber.BeginCapture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIFrameGrabber::BeginCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFrameGrabber", "BeginCapture");

	Params::UnionUIFrameGrabber_BeginCapture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIFrameGrabber.EndCapture
// (Final, Native, Public, BlueprintCallable)

void UUnionUIFrameGrabber::EndCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFrameGrabber", "EndCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIFrameGrabber.SetMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         MI                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIFrameGrabber::SetMaterialInstanceDynamic(class UMaterialInstanceDynamic* MI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFrameGrabber", "SetMaterialInstanceDynamic");

	Params::UnionUIFrameGrabber_SetMaterialInstanceDynamic Parms{};

	Parms.MI = MI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUICrossFade.StartCapture
// (Final, Native, Public, BlueprintCallable)

void UUnionUICrossFade::StartCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUICrossFade", "StartCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIFade.AutoReverseFade
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIFade::AutoReverseFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFade", "AutoReverseFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIFade.AutoStartLoopFade
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIFade::AutoStartLoopFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFade", "AutoStartLoopFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIFade.FinishedFade
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIFade::FinishedFade(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFade", "FinishedFade");

	Params::UnionUIFade_FinishedFade Parms{};

	Parms.FadeDirection = FadeDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIFade.StartFade
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeColor                       FadeColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIFadeDirection                   FadeDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIFade::StartFade(EUnionUIFadeColor FadeColor, EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFade", "StartFade");

	Params::UnionUIFade_StartFade Parms{};

	Parms.FadeColor = FadeColor;
	Parms.FadeDirection = FadeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.UnionUIFade.StartLoopFade
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUnionUIFadeColor                       FadeColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIFade::StartLoopFade(EUnionUIFadeColor FadeColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFade", "StartLoopFade");

	Params::UnionUIFade_StartLoopFade Parms{};

	Parms.FadeColor = FadeColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.UnionUIFixedScrollBox.ScrollInternal
// (Final, Native, Private)

void UUnionUIFixedScrollBox::ScrollInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIFixedScrollBox", "ScrollInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.AddButton
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUnionUIGridLayoutButtonData&InButtonData                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::AddButton(const struct FUnionUIGridLayoutButtonData& InButtonData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "AddButton");

	Params::UnionUIGridLayoutControl_AddButton Parms{};

	Parms.InButtonData = std::move(InButtonData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.Button_OnDirectionEvent
// (Final, Native, Private)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIControlDir                      Dir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::Button_OnDirectionEvent(class UUnionUIButtonBase* Button, EUnionUIControlDir Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "Button_OnDirectionEvent");

	Params::UnionUIGridLayoutControl_Button_OnDirectionEvent Parms{};

	Parms.Button = Button;
	Parms.Dir = Dir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.Button_OnFocusEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::Button_OnFocusEvent(class UUnionUIButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "Button_OnFocusEvent");

	Params::UnionUIGridLayoutControl_Button_OnFocusEvent Parms{};

	Parms.Button = Button;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.Clear
// (Final, Native, Public, BlueprintCallable)

void UUnionUIGridLayoutControl::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.GetButtonDataList
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FUnionUIGridLayoutButtonData>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FUnionUIGridLayoutButtonData> UUnionUIGridLayoutControl::GetButtonDataList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "GetButtonDataList");

	Params::UnionUIGridLayoutControl_GetButtonDataList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIGridLayoutControl.SetSideNav
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUnionUIGridLayoutSideNav& InSideNav                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::SetSideNav(const struct FUnionUIGridLayoutSideNav& InSideNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "SetSideNav");

	Params::UnionUIGridLayoutControl_SetSideNav Parms{};

	Parms.InSideNav = std::move(InSideNav);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.SetSideNavRuleBase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIGridLayoutSideNavRule           InRule                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::SetSideNavRuleBase(EUnionUIControlDir InDirection, EUnionUIGridLayoutSideNavRule InRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "SetSideNavRuleBase");

	Params::UnionUIGridLayoutControl_SetSideNavRuleBase Parms{};

	Parms.InDirection = InDirection;
	Parms.InRule = InRule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.SetSideNavRuleCustom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EUnionUIControlDir Direction, const struct FUnionUIGridLayoutButtonData& ButtonData)>&InCustomDelegate                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::SetSideNavRuleCustom(EUnionUIControlDir InDirection, const TDelegate<void(EUnionUIControlDir Direction, const struct FUnionUIGridLayoutButtonData& ButtonData)>& InCustomDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "SetSideNavRuleCustom");

	Params::UnionUIGridLayoutControl_SetSideNavRuleCustom Parms{};

	Parms.InDirection = InDirection;
	Parms.InCustomDelegate = InCustomDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.SetSideNavRuleExplicit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::SetSideNavRuleExplicit(EUnionUIControlDir InDirection, class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "SetSideNavRuleExplicit");

	Params::UnionUIGridLayoutControl_SetSideNavRuleExplicit Parms{};

	Parms.InDirection = InDirection;
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.SetSideNavRuleWrap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::SetSideNavRuleWrap(EUnionUIControlDir InDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "SetSideNavRuleWrap");

	Params::UnionUIGridLayoutControl_SetSideNavRuleWrap Parms{};

	Parms.InDirection = InDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.Setup
// (Final, Native, Public, BlueprintCallable)

void UUnionUIGridLayoutControl::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridLayoutControl.GetButtonDataListByLocationX
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InLocationX                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FUnionUIGridLayoutButtonData>*OutButtonDataList                                      (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::GetButtonDataListByLocationX(int32 InLocationX, TArray<struct FUnionUIGridLayoutButtonData>* OutButtonDataList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "GetButtonDataListByLocationX");

	Params::UnionUIGridLayoutControl_GetButtonDataListByLocationX Parms{};

	Parms.InLocationX = InLocationX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutButtonDataList != nullptr)
		*OutButtonDataList = std::move(Parms.OutButtonDataList);
}


// Function UnionUI.UnionUIGridLayoutControl.GetButtonDataListByLocationY
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InLocationX                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FUnionUIGridLayoutButtonData>*OutButtonDataList                                      (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridLayoutControl::GetButtonDataListByLocationY(int32 InLocationX, TArray<struct FUnionUIGridLayoutButtonData>* OutButtonDataList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "GetButtonDataListByLocationY");

	Params::UnionUIGridLayoutControl_GetButtonDataListByLocationY Parms{};

	Parms.InLocationX = InLocationX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutButtonDataList != nullptr)
		*OutButtonDataList = std::move(Parms.OutButtonDataList);
}


// Function UnionUI.UnionUIGridLayoutControl.GetCurrentLocationX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUIGridLayoutControl::GetCurrentLocationX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "GetCurrentLocationX");

	Params::UnionUIGridLayoutControl_GetCurrentLocationX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIGridLayoutControl.GetCurrentLocationY
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUIGridLayoutControl::GetCurrentLocationY() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "GetCurrentLocationY");

	Params::UnionUIGridLayoutControl_GetCurrentLocationY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIGridLayoutControl.GetSideNav
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUnionUIGridLayoutSideNav  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FUnionUIGridLayoutSideNav UUnionUIGridLayoutControl::GetSideNav() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridLayoutControl", "GetSideNav");

	Params::UnionUIGridLayoutControl_GetSideNav Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIGridNavigationBuilderEventHandler.NavigationDirectionEvent
// (Final, Native, Public)
// Parameters:
// EUINavigation                           Navigation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UUnionUIGridNavigationBuilderEventHandler::NavigationDirectionEvent(EUINavigation Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilderEventHandler", "NavigationDirectionEvent");

	Params::UnionUIGridNavigationBuilderEventHandler_NavigationDirectionEvent Parms{};

	Parms.Navigation = Navigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIGridNavigationBuilder.AddButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               InButton                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRowIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InColumnIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::AddButton(class UUnionUIButtonBase* InButton, int32 InRowIndex, int32 InColumnIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "AddButton");

	Params::UnionUIGridNavigationBuilder_AddButton Parms{};

	Parms.InButton = InButton;
	Parms.InRowIndex = InRowIndex;
	Parms.InColumnIndex = InColumnIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridNavigationBuilder.Build
// (Final, Native, Public, BlueprintCallable)

void UUnionUIGridNavigationBuilder::Build()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "Build");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridNavigationBuilder.Clear
// (Final, Native, Public, BlueprintCallable)

void UUnionUIGridNavigationBuilder::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridNavigationBuilder.GetButtonsByColumnIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InColumnIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UUnionUIButtonBase*>*      OutButtons                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::GetButtonsByColumnIndex(int32 InColumnIndex, TArray<class UUnionUIButtonBase*>* OutButtons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "GetButtonsByColumnIndex");

	Params::UnionUIGridNavigationBuilder_GetButtonsByColumnIndex Parms{};

	Parms.InColumnIndex = InColumnIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutButtons != nullptr)
		*OutButtons = std::move(Parms.OutButtons);
}


// Function UnionUI.UnionUIGridNavigationBuilder.GetButtonsByRowIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InRowIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UUnionUIButtonBase*>*      OutButtons                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::GetButtonsByRowIndex(int32 InRowIndex, TArray<class UUnionUIButtonBase*>* OutButtons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "GetButtonsByRowIndex");

	Params::UnionUIGridNavigationBuilder_GetButtonsByRowIndex Parms{};

	Parms.InRowIndex = InRowIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutButtons != nullptr)
		*OutButtons = std::move(Parms.OutButtons);
}


// Function UnionUI.UnionUIGridNavigationBuilder.GetSideNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUnionUIGridSideNavigation       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FUnionUIGridSideNavigation UUnionUIGridNavigationBuilder::GetSideNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "GetSideNavigation");

	Params::UnionUIGridNavigationBuilder_GetSideNavigation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIGridNavigationBuilder.SetSideNavigation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUnionUIGridSideNavigation&InSideNavigation                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::SetSideNavigation(const struct FUnionUIGridSideNavigation& InSideNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "SetSideNavigation");

	Params::UnionUIGridNavigationBuilder_SetSideNavigation Parms{};

	Parms.InSideNavigation = std::move(InSideNavigation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridNavigationBuilder.SetSideNavigationRuleCustom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EUnionUIControlDir InDirection, class UUnionUIButtonBase* InButton, int32 InRowIndex, int32 InColumnIndex)>&InCustomDelegate                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::SetSideNavigationRuleCustom(EUnionUIControlDir InDirection, const TDelegate<void(EUnionUIControlDir InDirection, class UUnionUIButtonBase* InButton, int32 InRowIndex, int32 InColumnIndex)>& InCustomDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "SetSideNavigationRuleCustom");

	Params::UnionUIGridNavigationBuilder_SetSideNavigationRuleCustom Parms{};

	Parms.InDirection = InDirection;
	Parms.InCustomDelegate = InCustomDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridNavigationBuilder.SetSideNavigationRuleExplicit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::SetSideNavigationRuleExplicit(EUnionUIControlDir InDirection, class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "SetSideNavigationRuleExplicit");

	Params::UnionUIGridNavigationBuilder_SetSideNavigationRuleExplicit Parms{};

	Parms.InDirection = InDirection;
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIGridNavigationBuilder.SetSideNavigationRuleWrap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIControlDir                      InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIGridNavigationBuilder::SetSideNavigationRuleWrap(EUnionUIControlDir InDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIGridNavigationBuilder", "SetSideNavigationRuleWrap");

	Params::UnionUIGridNavigationBuilder_SetSideNavigationRuleWrap Parms{};

	Parms.InDirection = InDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoadingDisplay.GetLoadingDisplayType
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELoadingDisplayType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELoadingDisplayType UUnionUILoadingDisplay::GetLoadingDisplayType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "GetLoadingDisplayType");

	Params::UnionUILoadingDisplay_GetLoadingDisplayType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUILoadingDisplay.Hide
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUILoadingDisplay::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUILoadingDisplay.ProceedLoadingPhase
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUILoadingDisplay::ProceedLoadingPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "ProceedLoadingPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUILoadingDisplay.SetLoadingGaugeParam
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LoadingPhaseNum                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetProgress                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoadingDisplay::SetLoadingGaugeParam(int32 LoadingPhaseNum, bool bSetProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "SetLoadingGaugeParam");

	Params::UnionUILoadingDisplay_SetLoadingGaugeParam Parms{};

	Parms.LoadingPhaseNum = LoadingPhaseNum;
	Parms.bSetProgress = bSetProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.UnionUILoadingDisplay.SetLoadingProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LoadingProgress                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoadingDisplay::SetLoadingProgress(float LoadingProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "SetLoadingProgress");

	Params::UnionUILoadingDisplay_SetLoadingProgress Parms{};

	Parms.LoadingProgress = LoadingProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.UnionUILoadingDisplay.Show
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUILoadingDisplay::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUILoadingDisplay.StartLoading
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUILoadingDisplay::StartLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "StartLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUILoadingDisplay.UpdateLoadingPhase
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EndLoadingPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoadingDisplay::UpdateLoadingPhase(int32 EndLoadingPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoadingDisplay", "UpdateLoadingPhase");

	Params::UnionUILoadingDisplay_UpdateLoadingPhase Parms{};

	Parms.EndLoadingPhase = EndLoadingPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionUI.WidgetManComponent.AddWidgetToTopAsGroup
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Logic                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::AddWidgetToTopAsGroup(class UUserWidget* Widget, class UObject* Logic, bool* IsSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "AddWidgetToTopAsGroup");

	Params::WidgetManComponent_AddWidgetToTopAsGroup Parms{};

	Parms.Widget = Widget;
	Parms.Logic = Logic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;
}


// Function UnionUI.WidgetManComponent.AttachDebugStringObject
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetManDebugString*            DebugStringObjectRef                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::AttachDebugStringObject(class UWidgetManDebugString* DebugStringObjectRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "AttachDebugStringObject");

	Params::WidgetManComponent_AttachDebugStringObject Parms{};

	Parms.DebugStringObjectRef = DebugStringObjectRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.DetachDebugStringObject
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetManDebugString*            DebugStringObjectRef                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::DetachDebugStringObject(class UWidgetManDebugString* DebugStringObjectRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "DetachDebugStringObject");

	Params::WidgetManComponent_DetachDebugStringObject Parms{};

	Parms.DebugStringObjectRef = DebugStringObjectRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventBeginBaseWidget
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventBeginBaseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventBeginBaseWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventBeginDebug
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventBeginDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventBeginDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventBeginStack
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventBeginStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventBeginStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventDrawDebug
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventEndBaseWidget
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventEndBaseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventEndBaseWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventEndDebug
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventEndDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventEndDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.EventEndStack
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::EventEndStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "EventEndStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.FindWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsFound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  IndexFromTop                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  IndexInGroup                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::FindWidget(class UUserWidget* Widget, bool* IsFound, int32* IndexFromTop, int32* IndexInGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "FindWidget");

	Params::WidgetManComponent_FindWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsFound != nullptr)
		*IsFound = Parms.IsFound;

	if (IndexFromTop != nullptr)
		*IndexFromTop = Parms.IndexFromTop;

	if (IndexInGroup != nullptr)
		*IndexInGroup = Parms.IndexInGroup;
}


// Function UnionUI.WidgetManComponent.GetTopWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget**                     Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSubWidget                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         Logic                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::GetTopWidget(int32 Index_0, bool* IsSucceeded, class UUserWidget** Widget, bool* IsSubWidget, class UObject** Logic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "GetTopWidget");

	Params::WidgetManComponent_GetTopWidget Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;

	if (Widget != nullptr)
		*Widget = Parms.Widget;

	if (IsSubWidget != nullptr)
		*IsSubWidget = Parms.IsSubWidget;

	if (Logic != nullptr)
		*Logic = Parms.Logic;
}


// Function UnionUI.WidgetManComponent.GetTopWidgetCount
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  WidgetCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::GetTopWidgetCount(int32* WidgetCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "GetTopWidgetCount");

	Params::WidgetManComponent_GetTopWidgetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WidgetCount != nullptr)
		*WidgetCount = Parms.WidgetCount;
}


// Function UnionUI.WidgetManComponent.NotifyLostPriority
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::NotifyLostPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "NotifyLostPriority");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.NotifyPoped
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Logic                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::NotifyPoped(class UUserWidget* Widget, class UObject* Logic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "NotifyPoped");

	Params::WidgetManComponent_NotifyPoped Parms{};

	Parms.Widget = Widget;
	Parms.Logic = Logic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.NotifyPushed
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Logic                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::NotifyPushed(class UUserWidget* Widget, class UObject* Logic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "NotifyPushed");

	Params::WidgetManComponent_NotifyPushed Parms{};

	Parms.Widget = Widget;
	Parms.Logic = Logic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.NotifyRegainPriority
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::NotifyRegainPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "NotifyRegainPriority");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.PopAllWidgets
// (Native, Public, BlueprintCallable)

void UWidgetManComponent::PopAllWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "PopAllWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.PopWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::PopWidget(bool* IsSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "PopWidget");

	Params::WidgetManComponent_PopWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;
}


// Function UnionUI.WidgetManComponent.PushSubWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      SubWidget                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Logic                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::PushSubWidget(class UUserWidget* SubWidget, class UObject* Logic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "PushSubWidget");

	Params::WidgetManComponent_PushSubWidget Parms{};

	Parms.SubWidget = SubWidget;
	Parms.Logic = Logic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManComponent.PushWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Logic                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetManZLayer                        ZLayer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWidgetManComponent::PushWidget(class UUserWidget* Widget, class UObject* Logic, EWidgetManZLayer ZLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "PushWidget");

	Params::WidgetManComponent_PushWidget Parms{};

	Parms.Widget = Widget;
	Parms.Logic = Logic;
	Parms.ZLayer = ZLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.WidgetManComponent.SwapTopWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::SwapTopWidget(class UUserWidget* Widget, bool* IsSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "SwapTopWidget");

	Params::WidgetManComponent_SwapTopWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;
}


// Function UnionUI.WidgetManComponent.SwapTopWidgetByIndex
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   IndexFromTop                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManComponent::SwapTopWidgetByIndex(int32 IndexFromTop, bool* IsSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManComponent", "SwapTopWidgetByIndex");

	Params::WidgetManComponent_SwapTopWidgetByIndex Parms{};

	Parms.IndexFromTop = IndexFromTop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;
}


// Function UnionUI.UnionUILoopScrollBox.ArrayShift
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDownRight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoopScrollBox::ArrayShift(bool bDownRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "ArrayShift");

	Params::UnionUILoopScrollBox_ArrayShift Parms{};

	Parms.bDownRight = bDownRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.OnMoveAnimFinished
// (Final, Native, Protected, BlueprintCallable)

void UUnionUILoopScrollBox::OnMoveAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "OnMoveAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.OnMoveAnimFinishedBP
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UUnionUILoopScrollBox::OnMoveAnimFinishedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "OnMoveAnimFinishedBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.PlayMoveAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsDownRight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInImmediateReflection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoopScrollBox::PlayMoveAnim(bool IsDownRight, bool bInImmediateReflection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "PlayMoveAnim");

	Params::UnionUILoopScrollBox_PlayMoveAnim Parms{};

	Parms.IsDownRight = IsDownRight;
	Parms.bInImmediateReflection = bInImmediateReflection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.Repopurate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDownRight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoopScrollBox::Repopurate(bool bDownRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "Repopurate");

	Params::UnionUILoopScrollBox_Repopurate Parms{};

	Parms.bDownRight = bDownRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.SetControllableFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InControllable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoopScrollBox::SetControllableFlag(bool InControllable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "SetControllableFlag");

	Params::UnionUILoopScrollBox_SetControllableFlag Parms{};

	Parms.InControllable = InControllable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.SetElementArr
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UObject*>&           InElementArr                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionUILoopScrollBox::SetElementArr(const TArray<class UObject*>& InElementArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "SetElementArr");

	Params::UnionUILoopScrollBox_SetElementArr Parms{};

	Parms.InElementArr = std::move(InElementArr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.SetMoveAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InParentWidget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 InMoveAnim                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUILoopScrollBox::SetMoveAnim(class UUserWidget* InParentWidget, class UWidgetAnimation* InMoveAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "SetMoveAnim");

	Params::UnionUILoopScrollBox_SetMoveAnim Parms{};

	Parms.InParentWidget = InParentWidget;
	Parms.InMoveAnim = InMoveAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.StopMoveAnim
// (Final, Native, Public, BlueprintCallable)

void UUnionUILoopScrollBox::StopMoveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "StopMoveAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.UpdateDuaringMoveAnim
// (Final, Native, Protected, BlueprintCallable)

void UUnionUILoopScrollBox::UpdateDuaringMoveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "UpdateDuaringMoveAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUILoopScrollBox.GetControllableFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUILoopScrollBox::GetControllableFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUILoopScrollBox", "GetControllableFlag");

	Params::UnionUILoopScrollBox_GetControllableFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIMovieTransition.CloseMovie
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIMovieTransition::CloseMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIMovieTransition", "CloseMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIMovieTransition.PauseMovie
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIMovieTransition::PauseMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIMovieTransition", "PauseMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIMovieTransition.PlayMovie
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIMovieTransition::PlayMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIMovieTransition", "PlayMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIMovieTransition.IsPausedMovie
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIMovieTransition::IsPausedMovie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIMovieTransition", "IsPausedMovie");

	Params::UnionUIMovieTransition_IsPausedMovie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIMovieTransition.IsPlayingMovie
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIMovieTransition::IsPlayingMovie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIMovieTransition", "IsPlayingMovie");

	Params::UnionUIMovieTransition_IsPlayingMovie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITextBlock.UpdateFontSize
// (Final, Native, Public, BlueprintCallable)

void UUnionUITextBlock::UpdateFontSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITextBlock", "UpdateFontSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.AddButtonsPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonsPanel*             InAddButtonsPanel                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::AddButtonsPanel(class UUnionUIButtonsPanel* InAddButtonsPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "AddButtonsPanel");

	Params::UnionUISceneBase_AddButtonsPanel Parms{};

	Parms.InAddButtonsPanel = InAddButtonsPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.CreateButtonsPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonsPanel*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIButtonsPanel* UUnionUISceneBase::CreateButtonsPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "CreateButtonsPanel");

	Params::UnionUISceneBase_CreateButtonsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneBase.GetLastFocusedButton
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutLastFocusedButtonIndex                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUnionUISceneBase::GetLastFocusedButton(int32* OutLastFocusedButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "GetLastFocusedButton");

	Params::UnionUISceneBase_GetLastFocusedButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLastFocusedButtonIndex != nullptr)
		*OutLastFocusedButtonIndex = Parms.OutLastFocusedButtonIndex;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneBase.GetLastFocusedButtonByPlayerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutLastFocusedButtonIndex                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUnionUISceneBase::GetLastFocusedButtonByPlayerIndex(int32 PlayerControllerIndex, int32* OutLastFocusedButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "GetLastFocusedButtonByPlayerIndex");

	Params::UnionUISceneBase_GetLastFocusedButtonByPlayerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLastFocusedButtonIndex != nullptr)
		*OutLastFocusedButtonIndex = Parms.OutLastFocusedButtonIndex;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneBase.GetLastFocusedButtonsPanel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutLastFocusedButtonsPanelIndex                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonsPanel*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIButtonsPanel* UUnionUISceneBase::GetLastFocusedButtonsPanel(int32* OutLastFocusedButtonsPanelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "GetLastFocusedButtonsPanel");

	Params::UnionUISceneBase_GetLastFocusedButtonsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLastFocusedButtonsPanelIndex != nullptr)
		*OutLastFocusedButtonsPanelIndex = Parms.OutLastFocusedButtonsPanelIndex;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneBase.GetLastFocusedButtonsPanelByPlayerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutLastFocusedButtonsPanelIndex                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonsPanel*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIButtonsPanel* UUnionUISceneBase::GetLastFocusedButtonsPanelByPlayerIndex(int32 PlayerControllerIndex, int32* OutLastFocusedButtonsPanelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "GetLastFocusedButtonsPanelByPlayerIndex");

	Params::UnionUISceneBase_GetLastFocusedButtonsPanelByPlayerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLastFocusedButtonsPanelIndex != nullptr)
		*OutLastFocusedButtonsPanelIndex = Parms.OutLastFocusedButtonsPanelIndex;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneBase.OnUISceneCancelDownEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneCancelDownEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneCancelDownEvent_Impl");

	Params::UnionUISceneBase_OnUISceneCancelDownEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneCancelEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneCancelEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneCancelEvent_Impl");

	Params::UnionUISceneBase_OnUISceneCancelEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneDecisionDownEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneDecisionDownEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneDecisionDownEvent_Impl");

	Params::UnionUISceneBase_OnUISceneDecisionDownEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneDecisionEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneDecisionEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneDecisionEvent_Impl");

	Params::UnionUISceneBase_OnUISceneDecisionEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneDirectionEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIControlDir                      Dir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneDirectionEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex, EUnionUIControlDir Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneDirectionEvent_Impl");

	Params::UnionUISceneBase_OnUISceneDirectionEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;
	Parms.Dir = Dir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneFaceTopEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneFaceTopEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneFaceTopEvent_Impl");

	Params::UnionUISceneBase_OnUISceneFaceTopEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneFocusEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneFocusEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneFocusEvent_Impl");

	Params::UnionUISceneBase_OnUISceneFocusEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneLeftShoulderEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneLeftShoulderEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneLeftShoulderEvent_Impl");

	Params::UnionUISceneBase_OnUISceneLeftShoulderEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneRightShoulderEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneRightShoulderEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneRightShoulderEvent_Impl");

	Params::UnionUISceneBase_OnUISceneRightShoulderEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.OnUISceneUnFocusEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::OnUISceneUnFocusEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "OnUISceneUnFocusEvent_Impl");

	Params::UnionUISceneBase_OnUISceneUnFocusEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.SetFocusSoundEnableAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::SetFocusSoundEnableAll(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "SetFocusSoundEnableAll");

	Params::UnionUISceneBase_SetFocusSoundEnableAll Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.SetOwnerPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPanelIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::SetOwnerPlayerController(int32 InPanelIndex, class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "SetOwnerPlayerController");

	Params::UnionUISceneBase_SetOwnerPlayerController Parms{};

	Parms.InPanelIndex = InPanelIndex;
	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.SetUnFocusState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPanelIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneBase::SetUnFocusState(int32 InPanelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "SetUnFocusState");

	Params::UnionUISceneBase_SetUnFocusState Parms{};

	Parms.InPanelIndex = InPanelIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneBase.SetupButtonsPanel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UUnionUIButtonBase*>&Buttons                                                (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const int32&                            InPanelIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool&                             InExclusiveFocus                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIButtonsPanel*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIButtonsPanel* UUnionUISceneBase::SetupButtonsPanel(const TArray<class UUnionUIButtonBase*>& Buttons, const int32& InPanelIndex, const bool& InExclusiveFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "SetupButtonsPanel");

	Params::UnionUISceneBase_SetupButtonsPanel Parms{};

	Parms.Buttons = std::move(Buttons);
	Parms.InPanelIndex = InPanelIndex;
	Parms.InExclusiveFocus = InExclusiveFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneBase.UnbindAllEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUISceneBase::UnbindAllEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneBase", "UnbindAllEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIPopupWindowManager.CreatePopupWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPopupWindowType                        WindowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUIPopupWindowBase*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIPopupWindowBase* UUnionUIPopupWindowManager::CreatePopupWindow(EPopupWindowType WindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIPopupWindowManager", "CreatePopupWindow");

	Params::UnionUIPopupWindowManager_CreatePopupWindow Parms{};

	Parms.WindowType = WindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIPopupWindowManager.IsAlreadyPopupWindowExist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIPopupWindowManager::IsAlreadyPopupWindowExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIPopupWindowManager", "IsAlreadyPopupWindowExist");

	Params::UnionUIPopupWindowManager_IsAlreadyPopupWindowExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIPopupWindowManager.IsPopupTypeExist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPopupWindowType                        WindowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUIPopupWindowManager::IsPopupTypeExist(EPopupWindowType WindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIPopupWindowManager", "IsPopupTypeExist");

	Params::UnionUIPopupWindowManager_IsPopupTypeExist Parms{};

	Parms.WindowType = WindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIPopupWindowManager.OnPopupWindowRemoveFromParent
// (Final, Native, Private)
// Parameters:
// class UUnionUIPopupWindowBase*          RemovedPopupWindow                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIPopupWindowManager::OnPopupWindowRemoveFromParent(class UUnionUIPopupWindowBase* RemovedPopupWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIPopupWindowManager", "OnPopupWindowRemoveFromParent");

	Params::UnionUIPopupWindowManager_OnPopupWindowRemoveFromParent Parms{};

	Parms.RemovedPopupWindow = RemovedPopupWindow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIPopupWindowManager.SetFocusExistPopupWindow
// (Final, Native, Public, BlueprintCallable)

void UUnionUIPopupWindowManager::SetFocusExistPopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIPopupWindowManager", "SetFocusExistPopupWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.GetFontMaterialsFromDefaultTextStyleOverride
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject**                         FontBodyMaterial                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         OutlineMaterial                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::GetFontMaterialsFromDefaultTextStyleOverride(class UObject** FontBodyMaterial, class UObject** OutlineMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "GetFontMaterialsFromDefaultTextStyleOverride");

	Params::UnionRichTextBlock_GetFontMaterialsFromDefaultTextStyleOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FontBodyMaterial != nullptr)
		*FontBodyMaterial = Parms.FontBodyMaterial;

	if (OutlineMaterial != nullptr)
		*OutlineMaterial = Parms.OutlineMaterial;
}


// Function UnionUI.UnionRichTextBlock.InitFontSizeSetting
// (Final, Native, Public, BlueprintCallable)

void UUnionRichTextBlock::InitFontSizeSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "InitFontSizeSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.IsPlayLetterEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRichTextBlock::IsPlayLetterEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "IsPlayLetterEnd");

	Params::UnionRichTextBlock_IsPlayLetterEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionRichTextBlock.ParseBaseText
// (Final, Native, Public, BlueprintCallable)

void UUnionRichTextBlock::ParseBaseText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "ParseBaseText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.PlayNextLetter
// (Final, Native, Public, BlueprintCallable)

void UUnionRichTextBlock::PlayNextLetter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "PlayNextLetter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.RemoveXml
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::RemoveXml(const class FString& InString, class FString* OutString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "RemoveXml");

	Params::UnionRichTextBlock_RemoveXml Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutString != nullptr)
		*OutString = std::move(Parms.OutString);
}


// Function UnionUI.UnionRichTextBlock.SetDefaultFontSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::SetDefaultFontSize(int32 NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "SetDefaultFontSize");

	Params::UnionRichTextBlock_SetDefaultFontSize Parms{};

	Parms.NewSize = NewSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.SetFontMaterialForDefaultTextStyleOverride
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          FontBodyMaterial                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OutlineMaterial                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::SetFontMaterialForDefaultTextStyleOverride(class UObject* FontBodyMaterial, class UObject* OutlineMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "SetFontMaterialForDefaultTextStyleOverride");

	Params::UnionRichTextBlock_SetFontMaterialForDefaultTextStyleOverride Parms{};

	Parms.FontBodyMaterial = FontBodyMaterial;
	Parms.OutlineMaterial = OutlineMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.SetScrollEnable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInEnableScroll                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::SetScrollEnable(bool bInEnableScroll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "SetScrollEnable");

	Params::UnionRichTextBlock_SetScrollEnable Parms{};

	Parms.bInEnableScroll = bInEnableScroll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.SetSequentialText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::SetSequentialText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "SetSequentialText");

	Params::UnionRichTextBlock_SetSequentialText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.UpdateOriginalLetterIndex
// (Final, Native, Public, BlueprintCallable)

void UUnionRichTextBlock::UpdateOriginalLetterIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "UpdateOriginalLetterIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.UpdateText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URichTextBlockDecorator>DecoratorClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRichTextBlock::UpdateText(TSubclassOf<class URichTextBlockDecorator> DecoratorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "UpdateText");

	Params::UnionRichTextBlock_UpdateText Parms{};

	Parms.DecoratorClass = DecoratorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionRichTextBlock.GetDefaultFontSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRichTextBlock::GetDefaultFontSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "GetDefaultFontSize");

	Params::UnionRichTextBlock_GetDefaultFontSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionRichTextBlock.GetScrollEnable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRichTextBlock::GetScrollEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRichTextBlock", "GetScrollEnable");

	Params::UnionRichTextBlock_GetScrollEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIRivalTransition.FinishedTransition
// (Final, Native, Protected, BlueprintCallable)

void UUnionUIRivalTransition::FinishedTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIRivalTransition", "FinishedTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIRivalTransition.SetTransitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERivalTransitionType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIRivalTransition::SetTransitionType(ERivalTransitionType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIRivalTransition", "SetTransitionType");

	Params::UnionUIRivalTransition_SetTransitionType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIRivalTransition.StartTransition
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIRivalTransition::StartTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIRivalTransition", "StartTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUIRivalTransition.StopTransitionAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionUIRivalTransition::StopTransitionAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIRivalTransition", "StopTransitionAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionUI.UnionUISceneCaptureManager.GetCaptureCameraActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AUnionUICapture2DActor*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AUnionUICapture2DActor*> UUnionUISceneCaptureManager::GetCaptureCameraActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneCaptureManager", "GetCaptureCameraActor");

	Params::UnionUISceneCaptureManager_GetCaptureCameraActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneCaptureManager.GetCaptureCameraActorByPlayerControllerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AUnionUICapture2DActor*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AUnionUICapture2DActor* UUnionUISceneCaptureManager::GetCaptureCameraActorByPlayerControllerIndex(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneCaptureManager", "GetCaptureCameraActorByPlayerControllerIndex");

	Params::UnionUISceneCaptureManager_GetCaptureCameraActorByPlayerControllerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneCaptureManager.GetCaptureTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UUnionUISceneCaptureManager::GetCaptureTargetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneCaptureManager", "GetCaptureTargetActor");

	Params::UnionUISceneCaptureManager_GetCaptureTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUISceneCaptureManager.RegisterCaptureCameraActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AUnionUICapture2DActor*           CaptureActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneCaptureManager::RegisterCaptureCameraActor(const int32& PlayerControllerIndex, class AUnionUICapture2DActor* CaptureActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneCaptureManager", "RegisterCaptureCameraActor");

	Params::UnionUISceneCaptureManager_RegisterCaptureCameraActor Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.CaptureActor = CaptureActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneCaptureManager.RegisterCaptureTargetActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           CaptureActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneCaptureManager::RegisterCaptureTargetActor(const int32& PlayerControllerIndex, class AActor* CaptureActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneCaptureManager", "RegisterCaptureTargetActor");

	Params::UnionUISceneCaptureManager_RegisterCaptureTargetActor Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.CaptureActor = CaptureActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISceneCaptureManager.UnRegisterCaptureCameraActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUISceneCaptureManager::UnRegisterCaptureCameraActor(const int32& PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUISceneCaptureManager", "UnRegisterCaptureCameraActor");

	Params::UnionUISceneCaptureManager_UnRegisterCaptureCameraActor Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISequenceInterface.Begin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionUISequenceInterface::Begin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionUISequenceInterface", "Begin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISequenceInterface.Close
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSelfRemove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionUISequenceInterface::Close(bool bSelfRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionUISequenceInterface", "Close");

	Params::UnionUISequenceInterface_Close Parms{};

	Parms.bSelfRemove = bSelfRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUISequenceInterface.Init
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionUISequenceInterface::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionUISequenceInterface", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.AutoReverseFade
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::AutoReverseFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "AutoReverseFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.AutoStartLoopFade
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::AutoStartLoopFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "AutoStartLoopFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.CreateCrossFadeWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUICrossFade*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUICrossFade* UUnionUITransitionManager::CreateCrossFadeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "CreateCrossFadeWidget");

	Params::UnionUITransitionManager_CreateCrossFadeWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.CreateLoadingDisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELoadingDisplayType                     CreateType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionUILoadingDisplay*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUILoadingDisplay* UUnionUITransitionManager::CreateLoadingDisplayWidget(ELoadingDisplayType CreateType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "CreateLoadingDisplayWidget");

	Params::UnionUITransitionManager_CreateLoadingDisplayWidget Parms{};

	Parms.CreateType = CreateType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.CreateMovieTransitionWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIMovieTransition*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIMovieTransition* UUnionUITransitionManager::CreateMovieTransitionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "CreateMovieTransitionWidget");

	Params::UnionUITransitionManager_CreateMovieTransitionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.CreateRivalTransitionWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIRivalTransition*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIRivalTransition* UUnionUITransitionManager::CreateRivalTransitionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "CreateRivalTransitionWidget");

	Params::UnionUITransitionManager_CreateRivalTransitionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.DestroyCrossFadeWidget
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::DestroyCrossFadeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "DestroyCrossFadeWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.DestroyLoadingDisplayWidget
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::DestroyLoadingDisplayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "DestroyLoadingDisplayWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.DestroyMovieTransitionWidget
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::DestroyMovieTransitionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "DestroyMovieTransitionWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.DestroyRivalTransitionWidget
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::DestroyRivalTransitionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "DestroyRivalTransitionWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.FinishFade
// (Final, Native, Private)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::FinishFade(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "FinishFade");

	Params::UnionUITransitionManager_FinishFade Parms{};

	Parms.FadeDirection = FadeDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.FinishSubFade
// (Final, Native, Private)
// Parameters:
// EUnionUIFadeDirection                   FadeDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::FinishSubFade(EUnionUIFadeDirection FadeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "FinishSubFade");

	Params::UnionUITransitionManager_FinishSubFade Parms{};

	Parms.FadeDirection = FadeDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.ForceCallFinishedFadeEvent
// (Final, Native, Public)

void UUnionUITransitionManager::ForceCallFinishedFadeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "ForceCallFinishedFadeEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.GetCrossFadeWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUICrossFade*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUICrossFade* UUnionUITransitionManager::GetCrossFadeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetCrossFadeWidget");

	Params::UnionUITransitionManager_GetCrossFadeWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetLastDisplayedSceneUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUnionUITransitionManager::GetLastDisplayedSceneUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetLastDisplayedSceneUI");

	Params::UnionUITransitionManager_GetLastDisplayedSceneUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetLoadingDisplayType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELoadingDisplayType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELoadingDisplayType UUnionUITransitionManager::GetLoadingDisplayType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetLoadingDisplayType");

	Params::UnionUITransitionManager_GetLoadingDisplayType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetLoadingDisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUILoadingDisplay*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUILoadingDisplay* UUnionUITransitionManager::GetLoadingDisplayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetLoadingDisplayWidget");

	Params::UnionUITransitionManager_GetLoadingDisplayWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetMovieTransitionWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIMovieTransition*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIMovieTransition* UUnionUITransitionManager::GetMovieTransitionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetMovieTransitionWidget");

	Params::UnionUITransitionManager_GetMovieTransitionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetNowLoadingZOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionUITransitionManager::GetNowLoadingZOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetNowLoadingZOrder");

	Params::UnionUITransitionManager_GetNowLoadingZOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetRivalTransitionWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIRivalTransition*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIRivalTransition* UUnionUITransitionManager::GetRivalTransitionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetRivalTransitionWidget");

	Params::UnionUITransitionManager_GetRivalTransitionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.GetUIFadeWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIFade*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionUIFade* UUnionUITransitionManager::GetUIFadeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetUIFadeWidget");

	Params::UnionUITransitionManager_GetUIFadeWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.SetLastDisplayedSceneUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InLastDisplayedSceneUI                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::SetLastDisplayedSceneUI(class UUserWidget* InLastDisplayedSceneUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "SetLastDisplayedSceneUI");

	Params::UnionUITransitionManager_SetLastDisplayedSceneUI Parms{};

	Parms.InLastDisplayedSceneUI = InLastDisplayedSceneUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.SetLastDisplayedSceneUIVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRemove                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::SetLastDisplayedSceneUIVisible(bool bRemove, ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "SetLastDisplayedSceneUIVisible");

	Params::UnionUITransitionManager_SetLastDisplayedSceneUIVisible Parms{};

	Parms.bRemove = bRemove;
	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.SetRivalTransitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ERivalTransitionType              TransitionType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::SetRivalTransitionType(const ERivalTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "SetRivalTransitionType");

	Params::UnionUITransitionManager_SetRivalTransitionType Parms{};

	Parms.TransitionType = TransitionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.SetShouldCheckFadeIgnoreInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldIgnore                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::SetShouldCheckFadeIgnoreInput(bool ShouldIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "SetShouldCheckFadeIgnoreInput");

	Params::UnionUITransitionManager_SetShouldCheckFadeIgnoreInput Parms{};

	Parms.ShouldIgnore = ShouldIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.StartFade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIFadeColor                       FadeColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIFadeDirection                   FadeDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EUnionUIFadeDirection FadeDirection)>OnFinished                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::StartFade(EUnionUIFadeColor FadeColor, EUnionUIFadeDirection FadeDirection, TDelegate<void(EUnionUIFadeDirection FadeDirection)> OnFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "StartFade");

	Params::UnionUITransitionManager_StartFade Parms{};

	Parms.FadeColor = FadeColor;
	Parms.FadeDirection = FadeDirection;
	Parms.OnFinished = OnFinished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.StartLoopFade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIFadeColor                       FadeColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::StartLoopFade(EUnionUIFadeColor FadeColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "StartLoopFade");

	Params::UnionUITransitionManager_StartLoopFade Parms{};

	Parms.FadeColor = FadeColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.StartRivalTransition
// (Final, Native, Public, BlueprintCallable)

void UUnionUITransitionManager::StartRivalTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "StartRivalTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.StartSubFade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionUIFadeColor                       FadeColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionUIFadeDirection                   FadeDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EUnionUIFadeDirection FadeDirection)>OnFinished                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUITransitionManager::StartSubFade(EUnionUIFadeColor FadeColor, EUnionUIFadeDirection FadeDirection, TDelegate<void(EUnionUIFadeDirection FadeDirection)> OnFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "StartSubFade");

	Params::UnionUITransitionManager_StartSubFade Parms{};

	Parms.FadeColor = FadeColor;
	Parms.FadeDirection = FadeDirection;
	Parms.OnFinished = OnFinished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUITransitionManager.GetLastFadeColor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUnionUIFadeColor                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionUIFadeColor UUnionUITransitionManager::GetLastFadeColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "GetLastFadeColor");

	Params::UnionUITransitionManager_GetLastFadeColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.IsLastFadeDirectionIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUITransitionManager::IsLastFadeDirectionIn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "IsLastFadeDirectionIn");

	Params::UnionUITransitionManager_IsLastFadeDirectionIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.IsLastFadeDirectionOut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUITransitionManager::IsLastFadeDirectionOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "IsLastFadeDirectionOut");

	Params::UnionUITransitionManager_IsLastFadeDirectionOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUITransitionManager.IsPlayingFade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionUITransitionManager::IsPlayingFade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUITransitionManager", "IsPlayingFade");

	Params::UnionUITransitionManager_IsPlayingFade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.UnionUIWheelMenu.OnUISceneWheelSelectEvent_Impl
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionUIButtonBase*               UnionButton                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWheelMenu::OnUISceneWheelSelectEvent_Impl(class UUnionUIButtonBase* UnionButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWheelMenu", "OnUISceneWheelSelectEvent_Impl");

	Params::UnionUIWheelMenu_OnUISceneWheelSelectEvent_Impl Parms{};

	Parms.UnionButton = UnionButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIWheelMenu.SetUpWheelParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsLeftTurn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLStickIgone                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsTopHalf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBitweenDeathZone                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWheelMenu::SetUpWheelParam(bool bInIsLeftTurn, float InLStickIgone, bool bInIsTopHalf, float InBitweenDeathZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWheelMenu", "SetUpWheelParam");

	Params::UnionUIWheelMenu_SetUpWheelParam Parms{};

	Parms.bInIsLeftTurn = bInIsLeftTurn;
	Parms.InLStickIgone = InLStickIgone;
	Parms.bInIsTopHalf = bInIsTopHalf;
	Parms.InBitweenDeathZone = InBitweenDeathZone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIWheelMenu.UISceneWheelMenuKeyBind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWheelMenu::UISceneWheelMenuKeyBind(class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWheelMenu", "UISceneWheelMenuKeyBind");

	Params::UnionUIWheelMenu_UISceneWheelMenuKeyBind Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIWheelMenu.UISceneWheelMenuKeyUnBind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWheelMenu::UISceneWheelMenuKeyUnBind(class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWheelMenu", "UISceneWheelMenuKeyUnBind");

	Params::UnionUIWheelMenu_UISceneWheelMenuKeyUnBind Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIWheelMenu.WheelMenuSelect_Impl
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InStickVector                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWheelMenu::WheelMenuSelect_Impl(const struct FVector& InStickVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWheelMenu", "WheelMenuSelect_Impl");

	Params::UnionUIWheelMenu_WheelMenuSelect_Impl Parms{};

	Parms.InStickVector = std::move(InStickVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.UnionUIWheelMenu.WheelMenuSelectInput_Impl
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InStickVector                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionUIWheelMenu::WheelMenuSelectInput_Impl(class UObject* Object, const struct FVector2D& InStickVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionUIWheelMenu", "WheelMenuSelectInput_Impl");

	Params::UnionUIWheelMenu_WheelMenuSelectInput_Impl Parms{};

	Parms.Object = Object;
	Parms.InStickVector = std::move(InStickVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetFunctionLibrary.ClipboardCopy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetFunctionLibrary::ClipboardCopy(const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "ClipboardCopy");

	Params::WidgetFunctionLibrary_ClipboardCopy Parms{};

	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetFunctionLibrary.ClipboardPaste
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          Dest                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetFunctionLibrary::ClipboardPaste(class FString* Dest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "ClipboardPaste");

	Params::WidgetFunctionLibrary_ClipboardPaste Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dest != nullptr)
		*Dest = std::move(Parms.Dest);
}


// Function UnionUI.WidgetFunctionLibrary.ConvMilliSecondToMinute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Millisecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UWidgetFunctionLibrary::ConvMilliSecondToMinute(int32 Millisecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "ConvMilliSecondToMinute");

	Params::WidgetFunctionLibrary_ConvMilliSecondToMinute Parms{};

	Parms.Millisecond = Millisecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.WidgetFunctionLibrary.ConvMilliSecondToSecond
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Millisecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWidgetFunctionLibrary::ConvMilliSecondToSecond(int32 Millisecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "ConvMilliSecondToSecond");

	Params::WidgetFunctionLibrary_ConvMilliSecondToSecond Parms{};

	Parms.Millisecond = Millisecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.WidgetFunctionLibrary.CulcDigitNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWidgetFunctionLibrary::CulcDigitNumber(int32 Index_0, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "CulcDigitNumber");

	Params::WidgetFunctionLibrary_CulcDigitNumber Parms{};

	Parms.Index_0 = Index_0;
	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionUI.WidgetFunctionLibrary.DrawWidgetToTarget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      WidgetToRender                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 DrawSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseGamma                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextureFilter                          Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetFunctionLibrary::DrawWidgetToTarget(class UTextureRenderTarget2D* Target, class UUserWidget* WidgetToRender, const struct FVector2D& DrawSize, bool UseGamma, ETextureFilter Filter, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "DrawWidgetToTarget");

	Params::WidgetFunctionLibrary_DrawWidgetToTarget Parms{};

	Parms.Target = Target;
	Parms.WidgetToRender = WidgetToRender;
	Parms.DrawSize = std::move(DrawSize);
	Parms.UseGamma = UseGamma;
	Parms.Filter = Filter;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetFunctionLibrary.ExportWidgetAsImage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 DrawSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Scale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EDesiredImageFormat               Format                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bOverwriteFile                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bAsync                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETextureFilter                    Filter                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseGammaCorrection                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetFunctionLibrary::ExportWidgetAsImage(class UUserWidget* Widget, const class FString& Filename, const struct FVector2D& DrawSize, const float Scale, const EDesiredImageFormat Format, const bool bOverwriteFile, const bool bAsync, const ETextureFilter Filter, const bool bUseGammaCorrection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "ExportWidgetAsImage");

	Params::WidgetFunctionLibrary_ExportWidgetAsImage Parms{};

	Parms.Widget = Widget;
	Parms.Filename = std::move(Filename);
	Parms.DrawSize = std::move(DrawSize);
	Parms.Scale = Scale;
	Parms.Format = Format;
	Parms.bOverwriteFile = bOverwriteFile;
	Parms.bAsync = bAsync;
	Parms.Filter = Filter;
	Parms.bUseGammaCorrection = bUseGammaCorrection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetFunctionLibrary.GetWidgetCenterLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ParentWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetFunctionLibrary::GetWidgetCenterLocation(class UWidget* Widget, class UWidget* ParentWidget, struct FVector2D* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "GetWidgetCenterLocation");

	Params::WidgetFunctionLibrary_GetWidgetCenterLocation Parms{};

	Parms.Widget = Widget;
	Parms.ParentWidget = ParentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}


// Function UnionUI.WidgetFunctionLibrary.GetWidgetZOrder
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EWidgetZOrder                           Layer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ZOrder                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetFunctionLibrary::GetWidgetZOrder(EWidgetZOrder Layer, int32 Priority, int32* ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctionLibrary", "GetWidgetZOrder");

	Params::WidgetFunctionLibrary_GetWidgetZOrder Parms{};

	Parms.Layer = Layer;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ZOrder != nullptr)
		*ZOrder = Parms.ZOrder;
}


// Function UnionUI.WidgetManBaseWidget.AddChild
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ChildWidget                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanelSlot*                 ChildSlot                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManBaseWidget::AddChild(class UUserWidget* ChildWidget, class UCanvasPanelSlot* ChildSlot, int32 ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManBaseWidget", "AddChild");

	Params::WidgetManBaseWidget_AddChild Parms{};

	Parms.ChildWidget = ChildWidget;
	Parms.ChildSlot = ChildSlot;
	Parms.ZOrder = ZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManBaseWidget.AppendDebugString
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String__const                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManBaseWidget::AppendDebugString(const class FString& String__const)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManBaseWidget", "AppendDebugString");

	Params::WidgetManBaseWidget_AppendDebugString Parms{};

	Parms.String__const = std::move(String__const);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManBaseWidget.AttachDebugStringObject
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetManDebugString*            DebugStringObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManBaseWidget::AttachDebugStringObject(class UWidgetManDebugString* DebugStringObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManBaseWidget", "AttachDebugStringObject");

	Params::WidgetManBaseWidget_AttachDebugStringObject Parms{};

	Parms.DebugStringObject = DebugStringObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManBaseWidget.ClearDebugString
// (Native, Public, BlueprintCallable)

void UWidgetManBaseWidget::ClearDebugString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManBaseWidget", "ClearDebugString");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManBaseWidget.DetachDebugStringObject
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetManDebugString*            DebugStringObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManBaseWidget::DetachDebugStringObject(class UWidgetManDebugString* DebugStringObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManBaseWidget", "DetachDebugStringObject");

	Params::WidgetManBaseWidget_DetachDebugStringObject Parms{};

	Parms.DebugStringObject = DebugStringObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManBaseWidget.RemoveChild
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsSucceeded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManBaseWidget::RemoveChild(class UUserWidget* Widget, bool* IsSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManBaseWidget", "RemoveChild");

	Params::WidgetManBaseWidget_RemoveChild Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsSucceeded != nullptr)
		*IsSucceeded = Parms.IsSucceeded;
}


// Function UnionUI.WidgetManDebugString.AppendDebugString
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::AppendDebugString(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "AppendDebugString");

	Params::WidgetManDebugString_AppendDebugString Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManDebugString.ClearDebugString
// (Native, Public, BlueprintCallable)

void UWidgetManDebugString::ClearDebugString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "ClearDebugString");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManDebugString.Draw_Internal
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPaintContext*                   PaintContext                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UWidgetManDebugString::Draw_Internal(struct FPaintContext* PaintContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "Draw_Internal");

	Params::WidgetManDebugString_Draw_Internal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PaintContext != nullptr)
		*PaintContext = std::move(Parms.PaintContext);
}


// Function UnionUI.WidgetManDebugString.GetDebugString
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                          String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::GetDebugString(class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "GetDebugString");

	Params::WidgetManDebugString_GetDebugString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function UnionUI.WidgetManDebugString.SetColor
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              NewColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::SetColor(const struct FLinearColor& NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "SetColor");

	Params::WidgetManDebugString_SetColor Parms{};

	Parms.NewColor = std::move(NewColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManDebugString.SetFontSize
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewFontSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::SetFontSize(int32 NewFontSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "SetFontSize");

	Params::WidgetManDebugString_SetFontSize Parms{};

	Parms.NewFontSize = NewFontSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManDebugString.SetPosition
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::SetPosition(float NewX, float NewY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "SetPosition");

	Params::WidgetManDebugString_SetPosition Parms{};

	Parms.NewX = NewX;
	Parms.NewY = NewY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManDebugString.SetShadowColorAndOffset
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              NewColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewOffsetX                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewOffsetY                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::SetShadowColorAndOffset(const struct FLinearColor& NewColor, float NewOffsetX, float NewOffsetY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "SetShadowColorAndOffset");

	Params::WidgetManDebugString_SetShadowColorAndOffset Parms{};

	Parms.NewColor = std::move(NewColor);
	Parms.NewOffsetX = NewOffsetX;
	Parms.NewOffsetY = NewOffsetY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManDebugString.SetShowHide
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetManDebugString::SetShowHide(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetManDebugString", "SetShowHide");

	Params::WidgetManDebugString_SetShowHide Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionUI.WidgetManLogicInterface.OnLostPriority
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWidgetManLogicInterface::OnLostPriority(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("WidgetManLogicInterface", "OnLostPriority");

	Params::WidgetManLogicInterface_OnLostPriority Parms{};

	Parms.Widget = Widget;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UnionUI.WidgetManLogicInterface.OnPoped
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWidgetManLogicInterface::OnPoped(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("WidgetManLogicInterface", "OnPoped");

	Params::WidgetManLogicInterface_OnPoped Parms{};

	Parms.Widget = Widget;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UnionUI.WidgetManLogicInterface.OnPushed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWidgetManLogicInterface::OnPushed(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("WidgetManLogicInterface", "OnPushed");

	Params::WidgetManLogicInterface_OnPushed Parms{};

	Parms.Widget = Widget;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UnionUI.WidgetManLogicInterface.OnRegainPriority
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWidgetManLogicInterface::OnRegainPriority(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("WidgetManLogicInterface", "OnRegainPriority");

	Params::WidgetManLogicInterface_OnRegainPriority Parms{};

	Parms.Widget = Widget;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

