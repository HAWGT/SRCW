#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge.WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C
// 0x00C8 (0x03A8 - 0x02E0)
class UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RingGauge_Change_Normal;                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RingGauge_Change_Boost;                            // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RingGauge_Loop_Normal;                             // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bar_Boost;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_Normal;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_Normal_Eff;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Base;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Just_03;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Line_01;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Line_02;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Ring;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_S_01;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_S_02;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_S_03;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MLC_Base_Team;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Boost;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              PanelDebugTexture;                                 // 0x0378(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsBoost;                                           // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeToBoost();
	void ChangeToNormal();
	void ExecuteUbergraph_WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge(int32 EntryPoint);
	void GetNormalGaugePercent(double* GaugePercent);
	void Initialize();
	void PlayEffBase();
	void PlayGroupChargeEffect(double ChargePer, bool isSingle);
	void PreConstruct(bool IsDesignTime);
	void Set_Normal_GaugePercent(double Percent);
	void SetBoostGaugePercent(double Percent);
	void StopGroupChargeEffect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C">();
	}
	static class UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C) == 0x0003A8, "Wrong size on UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, RingGauge_Change_Normal) == 0x0002E8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::RingGauge_Change_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, RingGauge_Change_Boost) == 0x0002F0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::RingGauge_Change_Boost' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, RingGauge_Loop_Normal) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::RingGauge_Loop_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Bar_Boost) == 0x000300, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Bar_Boost' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Bar_Normal) == 0x000308, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Bar_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Bar_Normal_Eff) == 0x000310, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Bar_Normal_Eff' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, base) == 0x000318, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_Base) == 0x000320, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_Base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_Core) == 0x000328, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_Core' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_Just_03) == 0x000330, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_Just_03' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_Line_01) == 0x000338, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_Line_01' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_Line_02) == 0x000340, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_Line_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_Ring) == 0x000348, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_Ring' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_S_01) == 0x000350, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_S_01' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_S_02) == 0x000358, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_S_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, Eff_S_03) == 0x000360, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::Eff_S_03' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, MLC_Base_Team) == 0x000368, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::MLC_Base_Team' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, TXT_Boost) == 0x000370, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::TXT_Boost' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, PanelDebugTexture) == 0x000378, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::PanelDebugTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C, IsBoost) == 0x0003A0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C::IsBoost' has a wrong offset!");

}

