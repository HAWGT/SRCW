#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GhostResultUploadActor

#include "Basic.hpp"

#include "BP_GhostResultUploadActor_classes.hpp"
#include "BP_GhostResultUploadActor_parameters.hpp"


namespace SDK
{

// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.BindUploaderEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::BindUploaderEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "BindUploaderEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.Create Network Error Window
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EResponseCodeAbstract                   ResponseCode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::Create_Network_Error_Window(EResponseCodeAbstract ResponseCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "Create Network Error Window");

	Params::BP_GhostResultUploadActor_C_Create_Network_Error_Window Parms{};

	Parms.ResponseCode = ResponseCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.CreateErrorWindow
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      MessageText                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GhostResultUploadActor_C::CreateErrorWindow(const class FText& MessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "CreateErrorWindow");

	Params::BP_GhostResultUploadActor_C_CreateErrorWindow Parms{};

	Parms.MessageText = std::move(MessageText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.ExecuteUbergraph_BP_GhostResultUploadActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::ExecuteUbergraph_BP_GhostResultUploadActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "ExecuteUbergraph_BP_GhostResultUploadActor");

	Params::BP_GhostResultUploadActor_C_ExecuteUbergraph_BP_GhostResultUploadActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.OnCancelUpload
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::OnCancelUpload(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "OnCancelUpload");

	Params::BP_GhostResultUploadActor_C_OnCancelUpload Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GhostResultUploadActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "ReceiveEndPlay");

	Params::BP_GhostResultUploadActor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "ReceiveTick");

	Params::BP_GhostResultUploadActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.Setup All Upload
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::Setup_All_Upload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "Setup All Upload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.Setup Single Upload
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESpeedClassId                           InSpeedClassId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EStageId                                InStageId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::Setup_Single_Upload(ESpeedClassId InSpeedClassId, EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "Setup Single Upload");

	Params::BP_GhostResultUploadActor_C_Setup_Single_Upload Parms{};

	Parms.InSpeedClassId = InSpeedClassId;
	Parms.InStageId = InStageId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.StartCancelEntry
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::StartCancelEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "StartCancelEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.StartUpload
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::StartUpload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "StartUpload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.TimeTrialErrorWindow_OnDecide
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::TimeTrialErrorWindow_OnDecide(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "TimeTrialErrorWindow_OnDecide");

	Params::BP_GhostResultUploadActor_C_TimeTrialErrorWindow_OnDecide Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.UnbindCancel
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::UnbindCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "UnbindCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.UnbindUploaderEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::UnbindUploaderEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "UnbindUploaderEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.UploadCompleteEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsError                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUploadState                            UploadState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GhostResultUploadActor_C::UploadCompleteEvent(bool IsError, EUploadState UploadState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "UploadCompleteEvent");

	Params::BP_GhostResultUploadActor_C_UploadCompleteEvent Parms{};

	Parms.IsError = IsError;
	Parms.UploadState = UploadState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.UploadFinish
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::UploadFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "UploadFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GhostResultUploadActor.BP_GhostResultUploadActor_C.UploadFinishEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GhostResultUploadActor_C::UploadFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GhostResultUploadActor_C", "UploadFinishEvent");

	UObject::ProcessEvent(Func, nullptr);
}

}

