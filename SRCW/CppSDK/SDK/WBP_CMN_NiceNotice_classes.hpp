#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CMN_NiceNotice

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CMN_NiceNotice.WBP_CMN_NiceNotice_C
// 0x00A0 (0x0380 - 0x02E0)
class UWBP_CMN_NiceNotice_C final : public UNoticeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Nice_Notice_Hidden;                                // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Nice_Notice_Out;                                   // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Nice_Notice_Loop;                                  // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Nice_Notice_In;                                    // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Challenge_NoticeBase;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Nice_NoticeBase;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Challenge;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Nice;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_ChallengeIcon;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_PlatformIcon;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_ChallengeName;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_PlayerName;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FontScroll_C*                      WBP_FontScroll_ChallengeName;                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_Notice;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWBP_CMN_NiceNotice_C* Widget)> OnOutAnimEnd;                // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         NiceNoticeLiteral;                                 // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsChallengeClear;                                 // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBox*                               OwnerWarpBox;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_CMN_NiceNotice(int32 EntryPoint);
	void Finished_1E4A955E4489BE95F2D4EE9B3D7AD6D4();
	void Hidden();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OutAnimEndEvent_ChallengeClear(class UWBP_CMN_NiceNotice_C* Widget);
	void SetChallengeId(EChallengeId InChallengeId);
	void SetupChallengeClearNotice(class UWrapBox* Owner, const int32 InChallengeIndex, const float InTime);
	void SetUpNiceNotice(const class FText& InName, ECrossplayPlatform InPlatformType);
	void ShowOnly(EChallengeId ChallengeId);
	void TimerEvent_NiceNoticeWait();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CMN_NiceNotice_C">();
	}
	static class UWBP_CMN_NiceNotice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CMN_NiceNotice_C>();
	}
};
static_assert(alignof(UWBP_CMN_NiceNotice_C) == 0x000008, "Wrong alignment on UWBP_CMN_NiceNotice_C");
static_assert(sizeof(UWBP_CMN_NiceNotice_C) == 0x000380, "Wrong size on UWBP_CMN_NiceNotice_C");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_CMN_NiceNotice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Nice_Notice_Hidden) == 0x0002E8, "Member 'UWBP_CMN_NiceNotice_C::Nice_Notice_Hidden' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Nice_Notice_Out) == 0x0002F0, "Member 'UWBP_CMN_NiceNotice_C::Nice_Notice_Out' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Nice_Notice_Loop) == 0x0002F8, "Member 'UWBP_CMN_NiceNotice_C::Nice_Notice_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Nice_Notice_In) == 0x000300, "Member 'UWBP_CMN_NiceNotice_C::Nice_Notice_In' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Challenge_NoticeBase) == 0x000308, "Member 'UWBP_CMN_NiceNotice_C::Challenge_NoticeBase' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Nice_NoticeBase) == 0x000310, "Member 'UWBP_CMN_NiceNotice_C::Nice_NoticeBase' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Overlay_0) == 0x000318, "Member 'UWBP_CMN_NiceNotice_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Overlay_Challenge) == 0x000320, "Member 'UWBP_CMN_NiceNotice_C::Overlay_Challenge' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, Overlay_Nice) == 0x000328, "Member 'UWBP_CMN_NiceNotice_C::Overlay_Nice' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, PAT_ChallengeIcon) == 0x000330, "Member 'UWBP_CMN_NiceNotice_C::PAT_ChallengeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, PAT_PlatformIcon) == 0x000338, "Member 'UWBP_CMN_NiceNotice_C::PAT_PlatformIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, TXT_ChallengeName) == 0x000340, "Member 'UWBP_CMN_NiceNotice_C::TXT_ChallengeName' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, TXT_PlayerName) == 0x000348, "Member 'UWBP_CMN_NiceNotice_C::TXT_PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, WBP_FontScroll_ChallengeName) == 0x000350, "Member 'UWBP_CMN_NiceNotice_C::WBP_FontScroll_ChallengeName' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, WS_Notice) == 0x000358, "Member 'UWBP_CMN_NiceNotice_C::WS_Notice' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, OnOutAnimEnd) == 0x000360, "Member 'UWBP_CMN_NiceNotice_C::OnOutAnimEnd' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, NiceNoticeLiteral) == 0x000370, "Member 'UWBP_CMN_NiceNotice_C::NiceNoticeLiteral' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, bIsChallengeClear) == 0x000374, "Member 'UWBP_CMN_NiceNotice_C::bIsChallengeClear' has a wrong offset!");
static_assert(offsetof(UWBP_CMN_NiceNotice_C, OwnerWarpBox) == 0x000378, "Member 'UWBP_CMN_NiceNotice_C::OwnerWarpBox' has a wrong offset!");

}

