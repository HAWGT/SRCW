#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ItemVioletVoid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_ItemVioletVoid_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ItemVioletVoid.ABP_ItemVioletVoid_C
// 0x0380 (0x06F0 - 0x0370)
class UABP_ItemVioletVoid_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_ItemVioletVoid::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;           // 0x0378(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0430(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0458(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x04C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0508(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0528(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0570(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0590(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05D8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x05F8(0x00C8)()
	double                                        AppearPlaySpeed;                                   // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisappearPlaySpeed;                                // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EatingPlaySpeed;                                   // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Appearance;                                        // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInSleep;                                         // 0x06D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEating;                                          // 0x06DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DB[0x5];                                      // 0x06DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FName SEName)> PlaySE_2D;                                    // 0x06E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_OnEnterEating();
	void AnimNotify_OnEnterSleep();
	void AnimNotify_OnLeaveEating();
	void AnimNotify_OnLeaveSleep();
	void AnimNotify_PlaySEVioletVoidEat();
	void ExecuteUbergraph_ABP_ItemVioletVoid(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ItemVioletVoid_C">();
	}
	static class UABP_ItemVioletVoid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ItemVioletVoid_C>();
	}
};
static_assert(alignof(UABP_ItemVioletVoid_C) == 0x000010, "Wrong alignment on UABP_ItemVioletVoid_C");
static_assert(sizeof(UABP_ItemVioletVoid_C) == 0x0006F0, "Wrong size on UABP_ItemVioletVoid_C");
static_assert(offsetof(UABP_ItemVioletVoid_C, UberGraphFrame) == 0x000370, "Member 'UABP_ItemVioletVoid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_ItemVioletVoid_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UABP_ItemVioletVoid_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UABP_ItemVioletVoid_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_Root) == 0x000398, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_TransitionResult_3) == 0x0003B8, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_TransitionResult_2) == 0x0003E0, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_TransitionResult_1) == 0x000408, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_TransitionResult) == 0x000430, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_SequencePlayer_3) == 0x000458, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_StateResult_3) == 0x0004A0, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_SequencePlayer_2) == 0x0004C0, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_StateResult_2) == 0x000508, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_SequencePlayer_1) == 0x000528, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_StateResult_1) == 0x000570, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_SequencePlayer) == 0x000590, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_StateResult) == 0x0005D8, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AnimGraphNode_StateMachine) == 0x0005F8, "Member 'UABP_ItemVioletVoid_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, AppearPlaySpeed) == 0x0006C0, "Member 'UABP_ItemVioletVoid_C::AppearPlaySpeed' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, DisappearPlaySpeed) == 0x0006C8, "Member 'UABP_ItemVioletVoid_C::DisappearPlaySpeed' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, EatingPlaySpeed) == 0x0006D0, "Member 'UABP_ItemVioletVoid_C::EatingPlaySpeed' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, Appearance) == 0x0006D8, "Member 'UABP_ItemVioletVoid_C::Appearance' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, IsInSleep) == 0x0006D9, "Member 'UABP_ItemVioletVoid_C::IsInSleep' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, IsEating) == 0x0006DA, "Member 'UABP_ItemVioletVoid_C::IsEating' has a wrong offset!");
static_assert(offsetof(UABP_ItemVioletVoid_C, PlaySE_2D) == 0x0006E0, "Member 'UABP_ItemVioletVoid_C::PlaySE_2D' has a wrong offset!");

}

