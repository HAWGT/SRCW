#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_Machine

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function WBP_TimeTrial_Sub_Machine.WBP_TimeTrial_Sub_Machine_C.ExecuteUbergraph_WBP_TimeTrial_Sub_Machine
// 0x0210 (0x0210 - 0x0000)
struct WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachinePartsType                             Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	EMachineId                                    K2Node_CustomEvent_InFrontPart;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_CustomEvent_InRearPart;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_CustomEvent_InTirePart;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ForceGetIsMachineReleased_ReturnValue;    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ForceGetIsMachineReleased_ReturnValue_1;  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ForceGetIsMachineReleased_ReturnValue_2;  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CallFunc_GetCarStatusType_ReturnValue;             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0030(0x0010)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent______;                          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_CustomEvent_InMachineId;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachinePartsType                             K2Node_CustomEvent_Selection;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMachinePartsUIData                    CallFunc_LoadTirePartsById_OutTirePartsUIData;     // 0x0060(0x0058)()
	struct FMachinePartsUIData                    CallFunc_LoadFrontPartsById_OutFrontPartsUIData;   // 0x00B8(0x0058)()
	struct FMachinePartsUIData                    CallFunc_LoadRearPartsById_OutRearPartsUIData;     // 0x0110(0x0058)()
	class FText                                   Temp_text_Variable_3;                              // 0x0168(0x0010)()
	struct FMachinePartsUIData                    K2Node_Select_Default_1;                           // 0x0178(0x0058)(ConstParm)
	class FText                                   Temp_text_Variable_4;                              // 0x01D0(0x0010)()
	ECarStatusType                                Temp_byte_Variable_3;                              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x01F0(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    Temp_byte_Variable_4;                              // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_3;                           // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    K2Node_Select_Default_4;                           // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine");
static_assert(sizeof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine) == 0x000210, "Wrong size on WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, EntryPoint) == 0x000000, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_byte_Variable) == 0x000004, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_bool_Variable) == 0x000005, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_byte_Variable_2) == 0x000007, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_text_Variable) == 0x000008, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_CustomEvent_InFrontPart) == 0x000018, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_CustomEvent_InFrontPart' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_CustomEvent_InRearPart) == 0x000019, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_CustomEvent_InRearPart' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_CustomEvent_InTirePart) == 0x00001A, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_CustomEvent_InTirePart' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_ForceGetIsMachineReleased_ReturnValue) == 0x00001B, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_ForceGetIsMachineReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_ForceGetIsMachineReleased_ReturnValue_1) == 0x00001C, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_ForceGetIsMachineReleased_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_ForceGetIsMachineReleased_ReturnValue_2) == 0x00001D, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_ForceGetIsMachineReleased_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_GetCarStatusType_ReturnValue) == 0x00001E, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_GetCarStatusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_Select_Default) == 0x00001F, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_text_Variable_1) == 0x000020, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_text_Variable_2) == 0x000030, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_CustomEvent______) == 0x000050, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_CustomEvent______' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_CustomEvent_InMachineId) == 0x000058, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_CustomEvent_InMachineId' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_CustomEvent_Selection) == 0x000059, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_CustomEvent_Selection' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_SwitchEnum_CmpSuccess) == 0x00005A, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_LoadTirePartsById_OutTirePartsUIData) == 0x000060, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_LoadTirePartsById_OutTirePartsUIData' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_LoadFrontPartsById_OutFrontPartsUIData) == 0x0000B8, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_LoadFrontPartsById_OutFrontPartsUIData' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_LoadRearPartsById_OutRearPartsUIData) == 0x000110, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_LoadRearPartsById_OutRearPartsUIData' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_text_Variable_3) == 0x000168, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_Select_Default_1) == 0x000178, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_text_Variable_4) == 0x0001D0, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_byte_Variable_3) == 0x0001E0, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x0001E8, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_Select_Default_2) == 0x0001F0, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_bool_Variable_1) == 0x000200, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_byte_Variable_4) == 0x000201, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_Select_Default_3) == 0x000202, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, Temp_bool_Variable_2) == 0x000203, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, K2Node_Select_Default_4) == 0x000204, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000208, "Member 'WBP_TimeTrial_Sub_Machine_C_ExecuteUbergraph_WBP_TimeTrial_Sub_Machine::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_TimeTrial_Sub_Machine.WBP_TimeTrial_Sub_Machine_C.SetIconTexture
// 0x0010 (0x0010 - 0x0000)
struct WBP_TimeTrial_Sub_Machine_C_SetIconTexture final
{
public:
	class UImage*                                 ターゲット;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    InMachineID;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachinePartsType                             Selection;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_Machine_C_SetIconTexture) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_Machine_C_SetIconTexture");
static_assert(sizeof(WBP_TimeTrial_Sub_Machine_C_SetIconTexture) == 0x000010, "Wrong size on WBP_TimeTrial_Sub_Machine_C_SetIconTexture");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_SetIconTexture, ターゲット) == 0x000000, "Member 'WBP_TimeTrial_Sub_Machine_C_SetIconTexture::ターゲット' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_SetIconTexture, InMachineID) == 0x000008, "Member 'WBP_TimeTrial_Sub_Machine_C_SetIconTexture::InMachineID' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_SetIconTexture, Selection) == 0x000009, "Member 'WBP_TimeTrial_Sub_Machine_C_SetIconTexture::Selection' has a wrong offset!");

// Function WBP_TimeTrial_Sub_Machine.WBP_TimeTrial_Sub_Machine_C.SetupMachineView
// 0x0003 (0x0003 - 0x0000)
struct WBP_TimeTrial_Sub_Machine_C_SetupMachineView final
{
public:
	EMachineId                                    InFrontPart;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    InRearPart;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMachineId                                    InTirePart;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_Machine_C_SetupMachineView) == 0x000001, "Wrong alignment on WBP_TimeTrial_Sub_Machine_C_SetupMachineView");
static_assert(sizeof(WBP_TimeTrial_Sub_Machine_C_SetupMachineView) == 0x000003, "Wrong size on WBP_TimeTrial_Sub_Machine_C_SetupMachineView");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_SetupMachineView, InFrontPart) == 0x000000, "Member 'WBP_TimeTrial_Sub_Machine_C_SetupMachineView::InFrontPart' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_SetupMachineView, InRearPart) == 0x000001, "Member 'WBP_TimeTrial_Sub_Machine_C_SetupMachineView::InRearPart' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_Machine_C_SetupMachineView, InTirePart) == 0x000002, "Member 'WBP_TimeTrial_Sub_Machine_C_SetupMachineView::InTirePart' has a wrong offset!");

}

