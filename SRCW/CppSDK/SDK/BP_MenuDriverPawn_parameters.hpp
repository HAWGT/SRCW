#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuDriverPawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.CreateDriver
// 0x0018 (0x0018 - 0x0000)
struct BP_MenuDriverPawn_C_CreateDriver final
{
public:
	EDriverId                                     ID;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                OwnerPawn;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_CreateDriver) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_CreateDriver");
static_assert(sizeof(BP_MenuDriverPawn_C_CreateDriver) == 0x000018, "Wrong size on BP_MenuDriverPawn_C_CreateDriver");
static_assert(offsetof(BP_MenuDriverPawn_C_CreateDriver, ID) == 0x000000, "Member 'BP_MenuDriverPawn_C_CreateDriver::ID' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_CreateDriver, OwnerPawn) == 0x000008, "Member 'BP_MenuDriverPawn_C_CreateDriver::OwnerPawn' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_CreateDriver, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_MenuDriverPawn_C_CreateDriver::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_CreateDriver, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_MenuDriverPawn_C_CreateDriver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_CreateDriver, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000012, "Member 'BP_MenuDriverPawn_C_CreateDriver::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.ExecuteUbergraph_BP_MenuDriverPawn
// 0x04A0 (0x04A0 - 0x0000)
struct BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuDriverAnimationStateId                   Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_1;                              // 0x00BC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_2;                              // 0x00BD(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_3;                              // 0x00BE(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_4;                              // 0x00BF(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_5;                              // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_6;                              // 0x00C1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_7;                              // 0x00C8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_8;                              // 0x00C9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_9;                              // 0x00CA(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_10;                             // 0x00CB(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_11;                             // 0x00CC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       Temp_byte_Variable_12;                             // 0x00CD(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                K2Node_Event_StatusType;                           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuDriverAnimationStateId                   Temp_byte_Variable_13;                             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Channel0;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Channel1;                             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Channel2;                             // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UABPT_MenuDriver_C*                     K2Node_DynamicCast_AsABPT_Menu_Driver;             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMenuDriverAnimationStateId                   K2Node_CustomEvent_InStateId;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_InIndex;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       K2Node_Select_Default;                             // 0x0138(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0140(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverAnimationAssetId                       K2Node_Select_Default_1;                           // 0x0190(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0198(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0200(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0210(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0220(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0268(0x0048)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABPT_MenuDriver_C*                     K2Node_DynamicCast_AsABPT_Menu_Driver_1;           // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Hoverboarder_Form_bHoverboarderForm;   // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CB[0x5];                                      // 0x02CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue;          // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_1;        // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_2;        // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_3;        // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0300(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0324(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0348(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0358(0x0048)(HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_4;        // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03A8(0x0010)(ReferenceParm)
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_5;        // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03C0(0x0010)()
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_6;        // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageAssetById_ReturnValue_7;        // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_3;                           // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0410(0x0010)()
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0420(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0430(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0478(0x0010)(ReferenceParm)
	const class UClass*                           K2Node_Event_NewClass;                             // 0x0488(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0490(0x0010)()
};
static_assert(alignof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn");
static_assert(sizeof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn) == 0x0004A0, "Wrong size on BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, EntryPoint) == 0x000000, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_9) == 0x000004, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_object_Variable) == 0x000010, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_object_Variable_1) == 0x000018, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_4) == 0x000020, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_3) == 0x000038, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_2) == 0x000050, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_1) == 0x000068, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName) == 0x000080, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_4) == 0x000088, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_name_Variable) == 0x000098, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable) == 0x0000A0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_object_Variable_2) == 0x0000A8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_object_Variable_3) == 0x0000B0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_int_Variable) == 0x0000B8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_1) == 0x0000BC, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_2) == 0x0000BD, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_3) == 0x0000BE, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_4) == 0x0000BF, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_5) == 0x0000C0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_6) == 0x0000C1, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_int_Variable_1) == 0x0000C4, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_7) == 0x0000C8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_8) == 0x0000C9, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_9) == 0x0000CA, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_10) == 0x0000CB, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_11) == 0x0000CC, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_12) == 0x0000CD, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue) == 0x0000CE, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_1) == 0x0000CF, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_2) == 0x0000D0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_3) == 0x0000D1, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Event_StatusType) == 0x0000D2, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Event_StatusType' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_byte_Variable_13) == 0x0000D3, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D4, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Not_PreBool_ReturnValue) == 0x0000D5, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetAnimInstance_ReturnValue) == 0x0000D8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Event_Channel0) == 0x0000E0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Event_Channel0' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Event_Channel1) == 0x0000E1, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Event_Channel1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Event_Channel2) == 0x0000E2, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Event_Channel2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_DynamicCast_AsABPT_Menu_Driver) == 0x0000E8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_DynamicCast_AsABPT_Menu_Driver' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, Temp_name_Variable_1) == 0x0000F4, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_5) == 0x0000FC, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_5) == 0x000104, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_InStateId) == 0x000114, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_InStateId' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_InIndex) == 0x000118, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_InIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_6) == 0x00011C, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000130, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Select_Default) == 0x000138, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeStruct_FormatArgumentData) == 0x000140, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000188, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Select_Default_1) == 0x000190, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeStruct_FormatArgumentData_1) == 0x000198, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001E0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0001F0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Conv_StringToText_ReturnValue) == 0x000200, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000210, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeStruct_FormatArgumentData_2) == 0x000220, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeStruct_FormatArgumentData_3) == 0x000268, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_6) == 0x0002B0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0002B8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_DynamicCast_AsABPT_Menu_Driver_1) == 0x0002C0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_DynamicCast_AsABPT_Menu_Driver_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_DynamicCast_bSuccess_1) == 0x0002C8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_4) == 0x0002C9, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Is_Hoverboarder_Form_bHoverboarderForm) == 0x0002CA, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Is_Hoverboarder_Form_bHoverboarderForm' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue) == 0x0002D0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002D8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_1) == 0x0002E0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_2) == 0x0002E8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_3) == 0x0002F0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Select_Default_2) == 0x0002F8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_7) == 0x000300, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000310, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_5) == 0x000318, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_6) == 0x000319, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_7) == 0x00031C, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_8) == 0x000324, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000338, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000348, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeStruct_FormatArgumentData_4) == 0x000358, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_4) == 0x0003A0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeArray_Array) == 0x0003A8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_5) == 0x0003B8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Format_ReturnValue) == 0x0003C0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_6) == 0x0003D0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetMontageAssetById_ReturnValue_7) == 0x0003D8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetMontageAssetById_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CustomEvent_NotifyName_8) == 0x0003E0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Select_Default_3) == 0x0003E8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0003F0, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_7) == 0x0003F8, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_IsValid_ReturnValue_8) == 0x0003F9, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000400, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000410, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_CreateDelegate_OutputDelegate_9) == 0x000420, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeStruct_FormatArgumentData_5) == 0x000430, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_MakeArray_Array_1) == 0x000478, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, K2Node_Event_NewClass) == 0x000488, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::K2Node_Event_NewClass' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn, CallFunc_Format_ReturnValue_1) == 0x000490, "Member 'BP_MenuDriverPawn_C_ExecuteUbergraph_BP_MenuDriverPawn::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.LoadMasterDataAssets
// 0x0478 (0x0478 - 0x0000)
struct BP_MenuDriverPawn_C_LoadMasterDataAssets final
{
public:
	EDriverId                                     ID;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterDataManageSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	struct FDriverData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0390)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0410(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0420(0x0010)()
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_As__________;                   // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_As_________;                    // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_LoadMasterDataAssets) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_LoadMasterDataAssets");
static_assert(sizeof(BP_MenuDriverPawn_C_LoadMasterDataAssets) == 0x000478, "Wrong size on BP_MenuDriverPawn_C_LoadMasterDataAssets");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, ID) == 0x000000, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::ID' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_GetEnumeratorName_ReturnValue) == 0x000010, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_Conv_NameToText_ReturnValue) == 0x000020, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000408, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, K2Node_MakeArray_Array) == 0x000410, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_Format_ReturnValue) == 0x000420, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000430, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000438, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, K2Node_DynamicCast_As__________) == 0x000440, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::K2Node_DynamicCast_As__________' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, K2Node_DynamicCast_bSuccess) == 0x000448, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000450, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000458, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000460, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, K2Node_DynamicCast_As_________) == 0x000468, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, K2Node_DynamicCast_bSuccess_1) == 0x000470, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_LoadMasterDataAssets, CallFunc_SetStaticMesh_ReturnValue) == 0x000471, "Member 'BP_MenuDriverPawn_C_LoadMasterDataAssets::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(sizeof(BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(offsetof(BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnBlendOut_423A03694E2DDBCDB50531B12CDAB3A7::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(sizeof(BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(offsetof(BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnBlendOut_650D5ABC44CE98FE2AD3D39CE35BEAAC::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(sizeof(BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(offsetof(BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnCompleted_423A03694E2DDBCDB50531B12CDAB3A7::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(sizeof(BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(offsetof(BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnCompleted_650D5ABC44CE98FE2AD3D39CE35BEAAC::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(sizeof(BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(offsetof(BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnInterrupted_423A03694E2DDBCDB50531B12CDAB3A7::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(sizeof(BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(offsetof(BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnInterrupted_650D5ABC44CE98FE2AD3D39CE35BEAAC::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(sizeof(BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(offsetof(BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnNotifyBegin_423A03694E2DDBCDB50531B12CDAB3A7::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(sizeof(BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(offsetof(BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnNotifyBegin_650D5ABC44CE98FE2AD3D39CE35BEAAC::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(sizeof(BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7");
static_assert(offsetof(BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnNotifyEnd_423A03694E2DDBCDB50531B12CDAB3A7::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(sizeof(BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC");
static_assert(offsetof(BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC, NotifyName) == 0x000000, "Member 'BP_MenuDriverPawn_C_OnNotifyEnd_650D5ABC44CE98FE2AD3D39CE35BEAAC::NotifyName' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.Play Animation
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuDriverPawn_C_Play_Animation final
{
public:
	EMenuDriverAnimationStateId                   StateId;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABPT_MenuDriver_C*                     K2Node_DynamicCast_AsABPT_Menu_Driver;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuDriverAnimationStateId                   CallFunc_Get_Animation_State_Id_StateId;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_Play_Animation) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_Play_Animation");
static_assert(sizeof(BP_MenuDriverPawn_C_Play_Animation) == 0x000020, "Wrong size on BP_MenuDriverPawn_C_Play_Animation");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, StateId) == 0x000000, "Member 'BP_MenuDriverPawn_C_Play_Animation::StateId' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, Index_0) == 0x000004, "Member 'BP_MenuDriverPawn_C_Play_Animation::Index_0' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_MenuDriverPawn_C_Play_Animation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, K2Node_DynamicCast_AsABPT_Menu_Driver) == 0x000010, "Member 'BP_MenuDriverPawn_C_Play_Animation::K2Node_DynamicCast_AsABPT_Menu_Driver' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MenuDriverPawn_C_Play_Animation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, CallFunc_Get_Animation_State_Id_StateId) == 0x000019, "Member 'BP_MenuDriverPawn_C_Play_Animation::CallFunc_Get_Animation_State_Id_StateId' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_MenuDriverPawn_C_Play_Animation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BP_MenuDriverPawn_C_Play_Animation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_Play_Animation, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_MenuDriverPawn_C_Play_Animation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.PlayFaceOverrideMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_PlayFaceOverrideMontage final
{
public:
	EMenuDriverAnimationStateId                   InStateId;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InIndex;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_PlayFaceOverrideMontage) == 0x000004, "Wrong alignment on BP_MenuDriverPawn_C_PlayFaceOverrideMontage");
static_assert(sizeof(BP_MenuDriverPawn_C_PlayFaceOverrideMontage) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_PlayFaceOverrideMontage");
static_assert(offsetof(BP_MenuDriverPawn_C_PlayFaceOverrideMontage, InStateId) == 0x000000, "Member 'BP_MenuDriverPawn_C_PlayFaceOverrideMontage::InStateId' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_PlayFaceOverrideMontage, InIndex) == 0x000004, "Member 'BP_MenuDriverPawn_C_PlayFaceOverrideMontage::InIndex' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.SetAnimationBoneSetting
// 0x0058 (0x0058 - 0x0000)
struct BP_MenuDriverPawn_C_SetAnimationBoneSetting final
{
public:
	bool                                          UseBoneControl;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NeckRotation;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               SpineRotation;                                     // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABPT_MenuDriver_C*                     K2Node_DynamicCast_AsABPT_Menu_Driver;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_SetAnimationBoneSetting) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_SetAnimationBoneSetting");
static_assert(sizeof(BP_MenuDriverPawn_C_SetAnimationBoneSetting) == 0x000058, "Wrong size on BP_MenuDriverPawn_C_SetAnimationBoneSetting");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, UseBoneControl) == 0x000000, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::UseBoneControl' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, NeckRotation) == 0x000008, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::NeckRotation' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, SpineRotation) == 0x000020, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::SpineRotation' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, K2Node_DynamicCast_AsABPT_Menu_Driver) == 0x000048, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::K2Node_DynamicCast_AsABPT_Menu_Driver' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationBoneSetting, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_MenuDriverPawn_C_SetAnimationBoneSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.SetAnimationIsDriveIdleLowLoop
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop final
{
public:
	bool                                          IsDriveIdleLowLoop;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABPT_MenuDriver_C*                     K2Node_DynamicCast_AsABPT_Menu_Driver;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop");
static_assert(sizeof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop) == 0x000020, "Wrong size on BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop, IsDriveIdleLowLoop) == 0x000000, "Member 'BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop::IsDriveIdleLowLoop' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop, K2Node_DynamicCast_AsABPT_Menu_Driver) == 0x000010, "Member 'BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop::K2Node_DynamicCast_AsABPT_Menu_Driver' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MenuDriverPawn_C_SetAnimationIsDriveIdleLowLoop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.SetAnimClass
// 0x0008 (0x0008 - 0x0000)
struct BP_MenuDriverPawn_C_SetAnimClass final
{
public:
	const class UClass*                           NewClass;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_SetAnimClass) == 0x000008, "Wrong alignment on BP_MenuDriverPawn_C_SetAnimClass");
static_assert(sizeof(BP_MenuDriverPawn_C_SetAnimClass) == 0x000008, "Wrong size on BP_MenuDriverPawn_C_SetAnimClass");
static_assert(offsetof(BP_MenuDriverPawn_C_SetAnimClass, NewClass) == 0x000000, "Member 'BP_MenuDriverPawn_C_SetAnimClass::NewClass' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.SetEnableGfur
// 0x0001 (0x0001 - 0x0000)
struct BP_MenuDriverPawn_C_SetEnableGfur final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_SetEnableGfur) == 0x000001, "Wrong alignment on BP_MenuDriverPawn_C_SetEnableGfur");
static_assert(sizeof(BP_MenuDriverPawn_C_SetEnableGfur) == 0x000001, "Wrong size on BP_MenuDriverPawn_C_SetEnableGfur");
static_assert(offsetof(BP_MenuDriverPawn_C_SetEnableGfur, Condition) == 0x000000, "Member 'BP_MenuDriverPawn_C_SetEnableGfur::Condition' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.SetLightingChannels
// 0x0003 (0x0003 - 0x0000)
struct BP_MenuDriverPawn_C_SetLightingChannels final
{
public:
	bool                                          Channel0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Channel1;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Channel2;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_SetLightingChannels) == 0x000001, "Wrong alignment on BP_MenuDriverPawn_C_SetLightingChannels");
static_assert(sizeof(BP_MenuDriverPawn_C_SetLightingChannels) == 0x000003, "Wrong size on BP_MenuDriverPawn_C_SetLightingChannels");
static_assert(offsetof(BP_MenuDriverPawn_C_SetLightingChannels, Channel0) == 0x000000, "Member 'BP_MenuDriverPawn_C_SetLightingChannels::Channel0' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetLightingChannels, Channel1) == 0x000001, "Member 'BP_MenuDriverPawn_C_SetLightingChannels::Channel1' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_SetLightingChannels, Channel2) == 0x000002, "Member 'BP_MenuDriverPawn_C_SetLightingChannels::Channel2' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.SetRideableStatusType
// 0x0001 (0x0001 - 0x0000)
struct BP_MenuDriverPawn_C_SetRideableStatusType final
{
public:
	ECarStatusType                                StatusType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_SetRideableStatusType) == 0x000001, "Wrong alignment on BP_MenuDriverPawn_C_SetRideableStatusType");
static_assert(sizeof(BP_MenuDriverPawn_C_SetRideableStatusType) == 0x000001, "Wrong size on BP_MenuDriverPawn_C_SetRideableStatusType");
static_assert(offsetof(BP_MenuDriverPawn_C_SetRideableStatusType, StatusType) == 0x000000, "Member 'BP_MenuDriverPawn_C_SetRideableStatusType::StatusType' has a wrong offset!");

// Function BP_MenuDriverPawn.BP_MenuDriverPawn_C.PlayVoice
// 0x0002 (0x0002 - 0x0000)
struct BP_MenuDriverPawn_C_PlayVoice final
{
public:
	EDriverVoiceId                                InDriverVoiceId;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundPan                                     InSoundPan;                                        // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuDriverPawn_C_PlayVoice) == 0x000001, "Wrong alignment on BP_MenuDriverPawn_C_PlayVoice");
static_assert(sizeof(BP_MenuDriverPawn_C_PlayVoice) == 0x000002, "Wrong size on BP_MenuDriverPawn_C_PlayVoice");
static_assert(offsetof(BP_MenuDriverPawn_C_PlayVoice, InDriverVoiceId) == 0x000000, "Member 'BP_MenuDriverPawn_C_PlayVoice::InDriverVoiceId' has a wrong offset!");
static_assert(offsetof(BP_MenuDriverPawn_C_PlayVoice, InSoundPan) == 0x000001, "Member 'BP_MenuDriverPawn_C_PlayVoice::InSoundPan' has a wrong offset!");

}

