#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_BtnPlay_Offline

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_TimeTrial_Sub_BtnPlay_Offline.WBP_TimeTrial_Sub_BtnPlay_Offline_C.ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline
// 0x0178 (0x0178 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimeTrialClearRankId                         Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     Temp_byte_Variable_4;                              // 0x0039(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x003C(0x0008)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0050(0x0008)(NoDestructor)
	bool                                          K2Node_CustomEvent_bTimeClear;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_TimeText;                       // 0x0060(0x0010)()
	struct FUserTimeTrialRaceData                 K2Node_CustomEvent_RaceData;                       // 0x0070(0x0050)()
	EStageId                                      K2Node_CustomEvent_StageId;                        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00C8(0x0010)()
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00E8(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserTimeTrialRaceData                 K2Node_CustomEvent_InTimeTrialRaceData;            // 0x0100(0x0050)()
	bool                                          CallFunc_CanUseCharacter_ReturnValue;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDriverId                                     K2Node_Select_Default_2;                           // 0x0160(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetCharacterIconTexture_ReturnValue;      // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline) == 0x000178, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, EntryPoint) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_byte_Variable) == 0x000004, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_bool_Variable) == 0x000005, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_byte_Variable_2) == 0x000007, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_byte_Variable_3) == 0x000008, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_object_Variable) == 0x000010, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_object_Variable_1) == 0x000018, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_object_Variable_2) == 0x000020, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_object_Variable_3) == 0x000028, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_object_Variable_4) == 0x000030, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_byte_Variable_4) == 0x000039, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_Event_InFocusEvent_1) == 0x00003C, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_Event_InFocusEvent) == 0x000050, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_CustomEvent_bTimeClear) == 0x000058, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_CustomEvent_bTimeClear' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_CustomEvent_TimeText) == 0x000060, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_CustomEvent_TimeText' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_CustomEvent_RaceData) == 0x000070, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_CustomEvent_RaceData' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_CustomEvent_StageId) == 0x0000C0, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_CustomEvent_StageId' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_MakeLiteralText_ReturnValue) == 0x0000C8, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_Select_Default) == 0x0000D8, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000E8, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_Select_Default_1) == 0x0000F8, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_CustomEvent_InTimeTrialRaceData) == 0x000100, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_CustomEvent_InTimeTrialRaceData' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_CanUseCharacter_ReturnValue) == 0x000150, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_CanUseCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000158, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_Select_Default_2) == 0x000160, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, CallFunc_GetCharacterIconTexture_ReturnValue) == 0x000168, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::CallFunc_GetCharacterIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_byte_Variable_5) == 0x000170, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, Temp_bool_Variable_2) == 0x000171, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline, K2Node_Select_Default_3) == 0x000172, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_ExecuteUbergraph_WBP_TimeTrial_Sub_BtnPlay_Offline::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Offline.WBP_TimeTrial_Sub_BtnPlay_Offline_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost) == 0x000008, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Offline.WBP_TimeTrial_Sub_BtnPlay_Offline_C.OnFocusLostImpl
// 0x0008 (0x0008 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl) == 0x000004, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl) == 0x000008, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl, InFocusEvent) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusLostImpl::InFocusEvent' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Offline.WBP_TimeTrial_Sub_BtnPlay_Offline_C.OnFocusReceived
// 0x0268 (0x0268 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
	struct FEventReply                            CallFunc_OnFocusReceivedImpl_ReturnValue;          // 0x01B0(0x00B8)()
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived) == 0x000268, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived, CallFunc_OnFocusReceivedImpl_ReturnValue) == 0x0001B0, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_OnFocusReceived::CallFunc_OnFocusReceivedImpl_ReturnValue' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Offline.WBP_TimeTrial_Sub_BtnPlay_Offline_C.SetGhostRaceData
// 0x0050 (0x0050 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData final
{
public:
	struct FUserTimeTrialRaceData                 InTimeTrialRaceData;                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData) == 0x000050, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData, InTimeTrialRaceData) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetGhostRaceData::InTimeTrialRaceData' has a wrong offset!");

// Function WBP_TimeTrial_Sub_BtnPlay_Offline.WBP_TimeTrial_Sub_BtnPlay_Offline_C.SetupOfflinePanel
// 0x0070 (0x0070 - 0x0000)
struct WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel final
{
public:
	bool                                          bTimeClear;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TimeText;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FUserTimeTrialRaceData                 RaceData;                                          // 0x0018(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	EStageId                                      StageId;                                           // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel) == 0x000008, "Wrong alignment on WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel");
static_assert(sizeof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel) == 0x000070, "Wrong size on WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel, bTimeClear) == 0x000000, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel::bTimeClear' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel, TimeText) == 0x000008, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel::TimeText' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel, RaceData) == 0x000018, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel::RaceData' has a wrong offset!");
static_assert(offsetof(WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel, StageId) == 0x000068, "Member 'WBP_TimeTrial_Sub_BtnPlay_Offline_C_SetupOfflinePanel::StageId' has a wrong offset!");

}

