#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnionSystem

#include "Basic.hpp"

#include "CriWareRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function UnionSystem.UnionStaticMeshComponent.ChangeMaterial
// 0x0010 (0x0010 - 0x0000)
struct UnionStaticMeshComponent_ChangeMaterial final
{
public:
	int32                                         MaterialID;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChange;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     InMaterial;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStaticMeshComponent_ChangeMaterial) == 0x000008, "Wrong alignment on UnionStaticMeshComponent_ChangeMaterial");
static_assert(sizeof(UnionStaticMeshComponent_ChangeMaterial) == 0x000010, "Wrong size on UnionStaticMeshComponent_ChangeMaterial");
static_assert(offsetof(UnionStaticMeshComponent_ChangeMaterial, MaterialID) == 0x000000, "Member 'UnionStaticMeshComponent_ChangeMaterial::MaterialID' has a wrong offset!");
static_assert(offsetof(UnionStaticMeshComponent_ChangeMaterial, bChange) == 0x000004, "Member 'UnionStaticMeshComponent_ChangeMaterial::bChange' has a wrong offset!");
static_assert(offsetof(UnionStaticMeshComponent_ChangeMaterial, InMaterial) == 0x000008, "Member 'UnionStaticMeshComponent_ChangeMaterial::InMaterial' has a wrong offset!");

// Function UnionSystem.UnionStaticMeshComponent.IsNotChangedMaterial
// 0x0008 (0x0008 - 0x0000)
struct UnionStaticMeshComponent_IsNotChangedMaterial final
{
public:
	int32                                         MaterialID;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionStaticMeshComponent_IsNotChangedMaterial) == 0x000004, "Wrong alignment on UnionStaticMeshComponent_IsNotChangedMaterial");
static_assert(sizeof(UnionStaticMeshComponent_IsNotChangedMaterial) == 0x000008, "Wrong size on UnionStaticMeshComponent_IsNotChangedMaterial");
static_assert(offsetof(UnionStaticMeshComponent_IsNotChangedMaterial, MaterialID) == 0x000000, "Member 'UnionStaticMeshComponent_IsNotChangedMaterial::MaterialID' has a wrong offset!");
static_assert(offsetof(UnionStaticMeshComponent_IsNotChangedMaterial, ReturnValue) == 0x000004, "Member 'UnionStaticMeshComponent_IsNotChangedMaterial::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppControllerInputManager.GetMenuPlayerController
// 0x0010 (0x0010 - 0x0000)
struct AppControllerInputManager_GetMenuPlayerController final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMenuPlayerController*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppControllerInputManager_GetMenuPlayerController) == 0x000008, "Wrong alignment on AppControllerInputManager_GetMenuPlayerController");
static_assert(sizeof(AppControllerInputManager_GetMenuPlayerController) == 0x000010, "Wrong size on AppControllerInputManager_GetMenuPlayerController");
static_assert(offsetof(AppControllerInputManager_GetMenuPlayerController, PlayerControllerIndex) == 0x000000, "Member 'AppControllerInputManager_GetMenuPlayerController::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppControllerInputManager_GetMenuPlayerController, ReturnValue) == 0x000008, "Member 'AppControllerInputManager_GetMenuPlayerController::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppControllerInputManager.GetPlayerController
// 0x0010 (0x0010 - 0x0000)
struct AppControllerInputManager_GetPlayerController final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppControllerInputManager_GetPlayerController) == 0x000008, "Wrong alignment on AppControllerInputManager_GetPlayerController");
static_assert(sizeof(AppControllerInputManager_GetPlayerController) == 0x000010, "Wrong size on AppControllerInputManager_GetPlayerController");
static_assert(offsetof(AppControllerInputManager_GetPlayerController, PlayerControllerIndex) == 0x000000, "Member 'AppControllerInputManager_GetPlayerController::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppControllerInputManager_GetPlayerController, ReturnValue) == 0x000008, "Member 'AppControllerInputManager_GetPlayerController::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppControllerInputManager.IsMenuMouseInputMode
// 0x0008 (0x0008 - 0x0000)
struct AppControllerInputManager_IsMenuMouseInputMode final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppControllerInputManager_IsMenuMouseInputMode) == 0x000004, "Wrong alignment on AppControllerInputManager_IsMenuMouseInputMode");
static_assert(sizeof(AppControllerInputManager_IsMenuMouseInputMode) == 0x000008, "Wrong size on AppControllerInputManager_IsMenuMouseInputMode");
static_assert(offsetof(AppControllerInputManager_IsMenuMouseInputMode, PlayerControllerIndex) == 0x000000, "Member 'AppControllerInputManager_IsMenuMouseInputMode::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppControllerInputManager_IsMenuMouseInputMode, ReturnValue) == 0x000004, "Member 'AppControllerInputManager_IsMenuMouseInputMode::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppControllerInputManager.RemovePlayer
// 0x0010 (0x0010 - 0x0000)
struct AppControllerInputManager_RemovePlayer final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyPawn;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppControllerInputManager_RemovePlayer) == 0x000008, "Wrong alignment on AppControllerInputManager_RemovePlayer");
static_assert(sizeof(AppControllerInputManager_RemovePlayer) == 0x000010, "Wrong size on AppControllerInputManager_RemovePlayer");
static_assert(offsetof(AppControllerInputManager_RemovePlayer, PlayerController) == 0x000000, "Member 'AppControllerInputManager_RemovePlayer::PlayerController' has a wrong offset!");
static_assert(offsetof(AppControllerInputManager_RemovePlayer, bDestroyPawn) == 0x000008, "Member 'AppControllerInputManager_RemovePlayer::bDestroyPawn' has a wrong offset!");

// Function UnionSystem.AppControllerInputManager.SetTickable
// 0x0001 (0x0001 - 0x0000)
struct AppControllerInputManager_SetTickable final
{
public:
	bool                                          bTickable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppControllerInputManager_SetTickable) == 0x000001, "Wrong alignment on AppControllerInputManager_SetTickable");
static_assert(sizeof(AppControllerInputManager_SetTickable) == 0x000001, "Wrong size on AppControllerInputManager_SetTickable");
static_assert(offsetof(AppControllerInputManager_SetTickable, bTickable) == 0x000000, "Member 'AppControllerInputManager_SetTickable::bTickable' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.GetBackupSequenceMainType
// 0x0001 (0x0001 - 0x0000)
struct AppSequenceLogManagerSubsystem_GetBackupSequenceMainType final
{
public:
	ESequenceMainType                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_GetBackupSequenceMainType) == 0x000001, "Wrong alignment on AppSequenceLogManagerSubsystem_GetBackupSequenceMainType");
static_assert(sizeof(AppSequenceLogManagerSubsystem_GetBackupSequenceMainType) == 0x000001, "Wrong size on AppSequenceLogManagerSubsystem_GetBackupSequenceMainType");
static_assert(offsetof(AppSequenceLogManagerSubsystem_GetBackupSequenceMainType, ReturnValue) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_GetBackupSequenceMainType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.GetBackupSequenceSubType
// 0x0001 (0x0001 - 0x0000)
struct AppSequenceLogManagerSubsystem_GetBackupSequenceSubType final
{
public:
	ESequenceSubType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_GetBackupSequenceSubType) == 0x000001, "Wrong alignment on AppSequenceLogManagerSubsystem_GetBackupSequenceSubType");
static_assert(sizeof(AppSequenceLogManagerSubsystem_GetBackupSequenceSubType) == 0x000001, "Wrong size on AppSequenceLogManagerSubsystem_GetBackupSequenceSubType");
static_assert(offsetof(AppSequenceLogManagerSubsystem_GetBackupSequenceSubType, ReturnValue) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_GetBackupSequenceSubType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.GetSequenceMainType
// 0x0001 (0x0001 - 0x0000)
struct AppSequenceLogManagerSubsystem_GetSequenceMainType final
{
public:
	ESequenceMainType                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_GetSequenceMainType) == 0x000001, "Wrong alignment on AppSequenceLogManagerSubsystem_GetSequenceMainType");
static_assert(sizeof(AppSequenceLogManagerSubsystem_GetSequenceMainType) == 0x000001, "Wrong size on AppSequenceLogManagerSubsystem_GetSequenceMainType");
static_assert(offsetof(AppSequenceLogManagerSubsystem_GetSequenceMainType, ReturnValue) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_GetSequenceMainType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.GetSequenceSubType
// 0x0001 (0x0001 - 0x0000)
struct AppSequenceLogManagerSubsystem_GetSequenceSubType final
{
public:
	ESequenceSubType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_GetSequenceSubType) == 0x000001, "Wrong alignment on AppSequenceLogManagerSubsystem_GetSequenceSubType");
static_assert(sizeof(AppSequenceLogManagerSubsystem_GetSequenceSubType) == 0x000001, "Wrong size on AppSequenceLogManagerSubsystem_GetSequenceSubType");
static_assert(offsetof(AppSequenceLogManagerSubsystem_GetSequenceSubType, ReturnValue) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_GetSequenceSubType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.SetSequenceSubType
// 0x0001 (0x0001 - 0x0000)
struct AppSequenceLogManagerSubsystem_SetSequenceSubType final
{
public:
	ESequenceSubType                              SubType;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_SetSequenceSubType) == 0x000001, "Wrong alignment on AppSequenceLogManagerSubsystem_SetSequenceSubType");
static_assert(sizeof(AppSequenceLogManagerSubsystem_SetSequenceSubType) == 0x000001, "Wrong size on AppSequenceLogManagerSubsystem_SetSequenceSubType");
static_assert(offsetof(AppSequenceLogManagerSubsystem_SetSequenceSubType, SubType) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_SetSequenceSubType::SubType' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.SetSequenceType
// 0x0002 (0x0002 - 0x0000)
struct AppSequenceLogManagerSubsystem_SetSequenceType final
{
public:
	ESequenceMainType                             MainType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESequenceSubType                              SubType;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_SetSequenceType) == 0x000001, "Wrong alignment on AppSequenceLogManagerSubsystem_SetSequenceType");
static_assert(sizeof(AppSequenceLogManagerSubsystem_SetSequenceType) == 0x000002, "Wrong size on AppSequenceLogManagerSubsystem_SetSequenceType");
static_assert(offsetof(AppSequenceLogManagerSubsystem_SetSequenceType, MainType) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_SetSequenceType::MainType' has a wrong offset!");
static_assert(offsetof(AppSequenceLogManagerSubsystem_SetSequenceType, SubType) == 0x000001, "Member 'AppSequenceLogManagerSubsystem_SetSequenceType::SubType' has a wrong offset!");

// Function UnionSystem.AppSequenceLogManagerSubsystem.GetSequenceTypeNum
// 0x0004 (0x0004 - 0x0000)
struct AppSequenceLogManagerSubsystem_GetSequenceTypeNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSequenceLogManagerSubsystem_GetSequenceTypeNum) == 0x000004, "Wrong alignment on AppSequenceLogManagerSubsystem_GetSequenceTypeNum");
static_assert(sizeof(AppSequenceLogManagerSubsystem_GetSequenceTypeNum) == 0x000004, "Wrong size on AppSequenceLogManagerSubsystem_GetSequenceTypeNum");
static_assert(offsetof(AppSequenceLogManagerSubsystem_GetSequenceTypeNum, ReturnValue) == 0x000000, "Member 'AppSequenceLogManagerSubsystem_GetSequenceTypeNum::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetClampUserNameLength
// 0x0004 (0x0004 - 0x0000)
struct AppFunctionLibrary_GetClampUserNameLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetClampUserNameLength) == 0x000004, "Wrong alignment on AppFunctionLibrary_GetClampUserNameLength");
static_assert(sizeof(AppFunctionLibrary_GetClampUserNameLength) == 0x000004, "Wrong size on AppFunctionLibrary_GetClampUserNameLength");
static_assert(offsetof(AppFunctionLibrary_GetClampUserNameLength, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_GetClampUserNameLength::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetDateString
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_GetDateString final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetDateString) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetDateString");
static_assert(sizeof(AppFunctionLibrary_GetDateString) == 0x000018, "Wrong size on AppFunctionLibrary_GetDateString");
static_assert(offsetof(AppFunctionLibrary_GetDateString, DateTime) == 0x000000, "Member 'AppFunctionLibrary_GetDateString::DateTime' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetDateString, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetDateString::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetDateTimeString
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_GetDateTimeString final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetDateTimeString) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetDateTimeString");
static_assert(sizeof(AppFunctionLibrary_GetDateTimeString) == 0x000018, "Wrong size on AppFunctionLibrary_GetDateTimeString");
static_assert(offsetof(AppFunctionLibrary_GetDateTimeString, DateTime) == 0x000000, "Member 'AppFunctionLibrary_GetDateTimeString::DateTime' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetDateTimeString, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetDateTimeString::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetDateTimeStringWithoutSecond
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_GetDateTimeStringWithoutSecond final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetDateTimeStringWithoutSecond) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetDateTimeStringWithoutSecond");
static_assert(sizeof(AppFunctionLibrary_GetDateTimeStringWithoutSecond) == 0x000018, "Wrong size on AppFunctionLibrary_GetDateTimeStringWithoutSecond");
static_assert(offsetof(AppFunctionLibrary_GetDateTimeStringWithoutSecond, DateTime) == 0x000000, "Member 'AppFunctionLibrary_GetDateTimeStringWithoutSecond::DateTime' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetDateTimeStringWithoutSecond, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetDateTimeStringWithoutSecond::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetHexString
// 0x0020 (0x0020 - 0x0000)
struct AppFunctionLibrary_GetHexString final
{
public:
	int32                                         Input;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Length;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AddZero;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetHexString) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetHexString");
static_assert(sizeof(AppFunctionLibrary_GetHexString) == 0x000020, "Wrong size on AppFunctionLibrary_GetHexString");
static_assert(offsetof(AppFunctionLibrary_GetHexString, Input) == 0x000000, "Member 'AppFunctionLibrary_GetHexString::Input' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetHexString, Length) == 0x000004, "Member 'AppFunctionLibrary_GetHexString::Length' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetHexString, AddZero) == 0x000008, "Member 'AppFunctionLibrary_GetHexString::AddZero' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetHexString, ReturnValue) == 0x000010, "Member 'AppFunctionLibrary_GetHexString::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetLocalDateTime
// 0x0010 (0x0010 - 0x0000)
struct AppFunctionLibrary_GetLocalDateTime final
{
public:
	int64                                         UnixTimestampFromServer;                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetLocalDateTime) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetLocalDateTime");
static_assert(sizeof(AppFunctionLibrary_GetLocalDateTime) == 0x000010, "Wrong size on AppFunctionLibrary_GetLocalDateTime");
static_assert(offsetof(AppFunctionLibrary_GetLocalDateTime, UnixTimestampFromServer) == 0x000000, "Member 'AppFunctionLibrary_GetLocalDateTime::UnixTimestampFromServer' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetLocalDateTime, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetLocalDateTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetLocalDateTimeString
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_GetLocalDateTimeString final
{
public:
	int64                                         UnixTimestampFromServer;                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetLocalDateTimeString) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetLocalDateTimeString");
static_assert(sizeof(AppFunctionLibrary_GetLocalDateTimeString) == 0x000018, "Wrong size on AppFunctionLibrary_GetLocalDateTimeString");
static_assert(offsetof(AppFunctionLibrary_GetLocalDateTimeString, UnixTimestampFromServer) == 0x000000, "Member 'AppFunctionLibrary_GetLocalDateTimeString::UnixTimestampFromServer' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetLocalDateTimeString, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetLocalDateTimeString::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetMileStoneVersion
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_GetMileStoneVersion final
{
public:
	EMilestoneVersion                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetMileStoneVersion) == 0x000001, "Wrong alignment on AppFunctionLibrary_GetMileStoneVersion");
static_assert(sizeof(AppFunctionLibrary_GetMileStoneVersion) == 0x000001, "Wrong size on AppFunctionLibrary_GetMileStoneVersion");
static_assert(offsetof(AppFunctionLibrary_GetMileStoneVersion, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_GetMileStoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetMileStoneVersionWithWorldContext
// 0x0010 (0x0010 - 0x0000)
struct AppFunctionLibrary_GetMileStoneVersionWithWorldContext final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMilestoneVersion                             ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppFunctionLibrary_GetMileStoneVersionWithWorldContext) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetMileStoneVersionWithWorldContext");
static_assert(sizeof(AppFunctionLibrary_GetMileStoneVersionWithWorldContext) == 0x000010, "Wrong size on AppFunctionLibrary_GetMileStoneVersionWithWorldContext");
static_assert(offsetof(AppFunctionLibrary_GetMileStoneVersionWithWorldContext, WorldContextObject) == 0x000000, "Member 'AppFunctionLibrary_GetMileStoneVersionWithWorldContext::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetMileStoneVersionWithWorldContext, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetMileStoneVersionWithWorldContext::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetPlatform
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_GetPlatform final
{
public:
	EAppSupportedPlatform                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetPlatform) == 0x000001, "Wrong alignment on AppFunctionLibrary_GetPlatform");
static_assert(sizeof(AppFunctionLibrary_GetPlatform) == 0x000001, "Wrong size on AppFunctionLibrary_GetPlatform");
static_assert(offsetof(AppFunctionLibrary_GetPlatform, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_GetPlatform::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetPlatformGroup
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_GetPlatformGroup final
{
public:
	ECrossplayPlatform                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetPlatformGroup) == 0x000001, "Wrong alignment on AppFunctionLibrary_GetPlatformGroup");
static_assert(sizeof(AppFunctionLibrary_GetPlatformGroup) == 0x000001, "Wrong size on AppFunctionLibrary_GetPlatformGroup");
static_assert(offsetof(AppFunctionLibrary_GetPlatformGroup, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_GetPlatformGroup::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.GetUtcDateTimeString
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_GetUtcDateTimeString final
{
public:
	int64                                         UnixTimestampFromServer;                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_GetUtcDateTimeString) == 0x000008, "Wrong alignment on AppFunctionLibrary_GetUtcDateTimeString");
static_assert(sizeof(AppFunctionLibrary_GetUtcDateTimeString) == 0x000018, "Wrong size on AppFunctionLibrary_GetUtcDateTimeString");
static_assert(offsetof(AppFunctionLibrary_GetUtcDateTimeString, UnixTimestampFromServer) == 0x000000, "Member 'AppFunctionLibrary_GetUtcDateTimeString::UnixTimestampFromServer' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_GetUtcDateTimeString, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_GetUtcDateTimeString::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.HexToNumber
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_HexToNumber final
{
public:
	class FString                                 str;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppFunctionLibrary_HexToNumber) == 0x000008, "Wrong alignment on AppFunctionLibrary_HexToNumber");
static_assert(sizeof(AppFunctionLibrary_HexToNumber) == 0x000018, "Wrong size on AppFunctionLibrary_HexToNumber");
static_assert(offsetof(AppFunctionLibrary_HexToNumber, str) == 0x000000, "Member 'AppFunctionLibrary_HexToNumber::str' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_HexToNumber, ReturnValue) == 0x000010, "Member 'AppFunctionLibrary_HexToNumber::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.Is2ndRom
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_Is2ndRom final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_Is2ndRom) == 0x000001, "Wrong alignment on AppFunctionLibrary_Is2ndRom");
static_assert(sizeof(AppFunctionLibrary_Is2ndRom) == 0x000001, "Wrong size on AppFunctionLibrary_Is2ndRom");
static_assert(offsetof(AppFunctionLibrary_Is2ndRom, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_Is2ndRom::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.Is2ndRomWithWorldContext
// 0x0010 (0x0010 - 0x0000)
struct AppFunctionLibrary_Is2ndRomWithWorldContext final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppFunctionLibrary_Is2ndRomWithWorldContext) == 0x000008, "Wrong alignment on AppFunctionLibrary_Is2ndRomWithWorldContext");
static_assert(sizeof(AppFunctionLibrary_Is2ndRomWithWorldContext) == 0x000010, "Wrong size on AppFunctionLibrary_Is2ndRomWithWorldContext");
static_assert(offsetof(AppFunctionLibrary_Is2ndRomWithWorldContext, WorldContextObject) == 0x000000, "Member 'AppFunctionLibrary_Is2ndRomWithWorldContext::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_Is2ndRomWithWorldContext, ReturnValue) == 0x000008, "Member 'AppFunctionLibrary_Is2ndRomWithWorldContext::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsDevelopmentBuild
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsDevelopmentBuild final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsDevelopmentBuild) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsDevelopmentBuild");
static_assert(sizeof(AppFunctionLibrary_IsDevelopmentBuild) == 0x000001, "Wrong size on AppFunctionLibrary_IsDevelopmentBuild");
static_assert(offsetof(AppFunctionLibrary_IsDevelopmentBuild, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsDevelopmentBuild::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsMasterLaunchOptionEnabled
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsMasterLaunchOptionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsMasterLaunchOptionEnabled) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsMasterLaunchOptionEnabled");
static_assert(sizeof(AppFunctionLibrary_IsMasterLaunchOptionEnabled) == 0x000001, "Wrong size on AppFunctionLibrary_IsMasterLaunchOptionEnabled");
static_assert(offsetof(AppFunctionLibrary_IsMasterLaunchOptionEnabled, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsMasterLaunchOptionEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsPlayInEditor
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsPlayInEditor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsPlayInEditor) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsPlayInEditor");
static_assert(sizeof(AppFunctionLibrary_IsPlayInEditor) == 0x000001, "Wrong size on AppFunctionLibrary_IsPlayInEditor");
static_assert(offsetof(AppFunctionLibrary_IsPlayInEditor, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsPlayInEditor::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsPlayStation
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsPlayStation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsPlayStation) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsPlayStation");
static_assert(sizeof(AppFunctionLibrary_IsPlayStation) == 0x000001, "Wrong size on AppFunctionLibrary_IsPlayStation");
static_assert(offsetof(AppFunctionLibrary_IsPlayStation, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsPlayStation::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsPre2ndRom
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsPre2ndRom final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsPre2ndRom) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsPre2ndRom");
static_assert(sizeof(AppFunctionLibrary_IsPre2ndRom) == 0x000001, "Wrong size on AppFunctionLibrary_IsPre2ndRom");
static_assert(offsetof(AppFunctionLibrary_IsPre2ndRom, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsPre2ndRom::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsShippingBuild
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsShippingBuild final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsShippingBuild) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsShippingBuild");
static_assert(sizeof(AppFunctionLibrary_IsShippingBuild) == 0x000001, "Wrong size on AppFunctionLibrary_IsShippingBuild");
static_assert(offsetof(AppFunctionLibrary_IsShippingBuild, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsShippingBuild::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsSupportHDVibration
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsSupportHDVibration final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsSupportHDVibration) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsSupportHDVibration");
static_assert(sizeof(AppFunctionLibrary_IsSupportHDVibration) == 0x000001, "Wrong size on AppFunctionLibrary_IsSupportHDVibration");
static_assert(offsetof(AppFunctionLibrary_IsSupportHDVibration, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsSupportHDVibration::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsSwitch
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsSwitch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsSwitch) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsSwitch");
static_assert(sizeof(AppFunctionLibrary_IsSwitch) == 0x000001, "Wrong size on AppFunctionLibrary_IsSwitch");
static_assert(offsetof(AppFunctionLibrary_IsSwitch, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsSwitch::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsTestBuild
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsTestBuild final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsTestBuild) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsTestBuild");
static_assert(sizeof(AppFunctionLibrary_IsTestBuild) == 0x000001, "Wrong size on AppFunctionLibrary_IsTestBuild");
static_assert(offsetof(AppFunctionLibrary_IsTestBuild, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsTestBuild::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsVersionOverThan10100
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsVersionOverThan10100 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsVersionOverThan10100) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsVersionOverThan10100");
static_assert(sizeof(AppFunctionLibrary_IsVersionOverThan10100) == 0x000001, "Wrong size on AppFunctionLibrary_IsVersionOverThan10100");
static_assert(offsetof(AppFunctionLibrary_IsVersionOverThan10100, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsVersionOverThan10100::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsWindows
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsWindows final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsWindows) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsWindows");
static_assert(sizeof(AppFunctionLibrary_IsWindows) == 0x000001, "Wrong size on AppFunctionLibrary_IsWindows");
static_assert(offsetof(AppFunctionLibrary_IsWindows, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsWindows::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.IsXbox
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_IsXbox final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_IsXbox) == 0x000001, "Wrong alignment on AppFunctionLibrary_IsXbox");
static_assert(sizeof(AppFunctionLibrary_IsXbox) == 0x000001, "Wrong size on AppFunctionLibrary_IsXbox");
static_assert(offsetof(AppFunctionLibrary_IsXbox, ReturnValue) == 0x000000, "Member 'AppFunctionLibrary_IsXbox::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.OutputUE_LOG
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_OutputUE_LOG final
{
public:
	EAppLogLevel                                  InLevel;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_OutputUE_LOG) == 0x000008, "Wrong alignment on AppFunctionLibrary_OutputUE_LOG");
static_assert(sizeof(AppFunctionLibrary_OutputUE_LOG) == 0x000018, "Wrong size on AppFunctionLibrary_OutputUE_LOG");
static_assert(offsetof(AppFunctionLibrary_OutputUE_LOG, InLevel) == 0x000000, "Member 'AppFunctionLibrary_OutputUE_LOG::InLevel' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_OutputUE_LOG, Message) == 0x000008, "Member 'AppFunctionLibrary_OutputUE_LOG::Message' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.SetMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct AppFunctionLibrary_SetMilestoneVersion final
{
public:
	EMilestoneVersion                             NewMilestoneVersion;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_SetMilestoneVersion) == 0x000001, "Wrong alignment on AppFunctionLibrary_SetMilestoneVersion");
static_assert(sizeof(AppFunctionLibrary_SetMilestoneVersion) == 0x000001, "Wrong size on AppFunctionLibrary_SetMilestoneVersion");
static_assert(offsetof(AppFunctionLibrary_SetMilestoneVersion, NewMilestoneVersion) == 0x000000, "Member 'AppFunctionLibrary_SetMilestoneVersion::NewMilestoneVersion' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.TruncateStringWithEllipsis
// 0x0028 (0x0028 - 0x0000)
struct AppFunctionLibrary_TruncateStringWithEllipsis final
{
public:
	class FString                                 str;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Length;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_TruncateStringWithEllipsis) == 0x000008, "Wrong alignment on AppFunctionLibrary_TruncateStringWithEllipsis");
static_assert(sizeof(AppFunctionLibrary_TruncateStringWithEllipsis) == 0x000028, "Wrong size on AppFunctionLibrary_TruncateStringWithEllipsis");
static_assert(offsetof(AppFunctionLibrary_TruncateStringWithEllipsis, str) == 0x000000, "Member 'AppFunctionLibrary_TruncateStringWithEllipsis::str' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_TruncateStringWithEllipsis, Length) == 0x000010, "Member 'AppFunctionLibrary_TruncateStringWithEllipsis::Length' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_TruncateStringWithEllipsis, ReturnValue) == 0x000018, "Member 'AppFunctionLibrary_TruncateStringWithEllipsis::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.TruncateTextWithEllipsis
// 0x0028 (0x0028 - 0x0000)
struct AppFunctionLibrary_TruncateTextWithEllipsis final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	int32                                         Length;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_TruncateTextWithEllipsis) == 0x000008, "Wrong alignment on AppFunctionLibrary_TruncateTextWithEllipsis");
static_assert(sizeof(AppFunctionLibrary_TruncateTextWithEllipsis) == 0x000028, "Wrong size on AppFunctionLibrary_TruncateTextWithEllipsis");
static_assert(offsetof(AppFunctionLibrary_TruncateTextWithEllipsis, Text) == 0x000000, "Member 'AppFunctionLibrary_TruncateTextWithEllipsis::Text' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_TruncateTextWithEllipsis, Length) == 0x000010, "Member 'AppFunctionLibrary_TruncateTextWithEllipsis::Length' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_TruncateTextWithEllipsis, ReturnValue) == 0x000018, "Member 'AppFunctionLibrary_TruncateTextWithEllipsis::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppFunctionLibrary.TryLoadAsset
// 0x0018 (0x0018 - 0x0000)
struct AppFunctionLibrary_TryLoadAsset final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppFunctionLibrary_TryLoadAsset) == 0x000008, "Wrong alignment on AppFunctionLibrary_TryLoadAsset");
static_assert(sizeof(AppFunctionLibrary_TryLoadAsset) == 0x000018, "Wrong size on AppFunctionLibrary_TryLoadAsset");
static_assert(offsetof(AppFunctionLibrary_TryLoadAsset, AssetPath) == 0x000000, "Member 'AppFunctionLibrary_TryLoadAsset::AssetPath' has a wrong offset!");
static_assert(offsetof(AppFunctionLibrary_TryLoadAsset, ReturnValue) == 0x000010, "Member 'AppFunctionLibrary_TryLoadAsset::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.AddChallengeStats
// 0x0008 (0x0008 - 0x0000)
struct ChallengeStatsUtility_AddChallengeStats final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InValue;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_AddChallengeStats) == 0x000004, "Wrong alignment on ChallengeStatsUtility_AddChallengeStats");
static_assert(sizeof(ChallengeStatsUtility_AddChallengeStats) == 0x000008, "Wrong size on ChallengeStatsUtility_AddChallengeStats");
static_assert(offsetof(ChallengeStatsUtility_AddChallengeStats, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_AddChallengeStats::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_AddChallengeStats, InValue) == 0x000004, "Member 'ChallengeStatsUtility_AddChallengeStats::InValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.ChallengeProgressUpdateCategory
// 0x0001 (0x0001 - 0x0000)
struct ChallengeStatsUtility_ChallengeProgressUpdateCategory final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_ChallengeProgressUpdateCategory) == 0x000001, "Wrong alignment on ChallengeStatsUtility_ChallengeProgressUpdateCategory");
static_assert(sizeof(ChallengeStatsUtility_ChallengeProgressUpdateCategory) == 0x000001, "Wrong size on ChallengeStatsUtility_ChallengeProgressUpdateCategory");
static_assert(offsetof(ChallengeStatsUtility_ChallengeProgressUpdateCategory, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_ChallengeProgressUpdateCategory::InCategory' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetCategoryChallenge
// 0x0018 (0x0018 - 0x0000)
struct ChallengeStatsUtility_GetCategoryChallenge final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EChallengeId>                          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetCategoryChallenge) == 0x000008, "Wrong alignment on ChallengeStatsUtility_GetCategoryChallenge");
static_assert(sizeof(ChallengeStatsUtility_GetCategoryChallenge) == 0x000018, "Wrong size on ChallengeStatsUtility_GetCategoryChallenge");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryChallenge, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_GetCategoryChallenge::InCategory' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryChallenge, ReturnValue) == 0x000008, "Member 'ChallengeStatsUtility_GetCategoryChallenge::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetCategoryChallengeData
// 0x0018 (0x0018 - 0x0000)
struct ChallengeStatsUtility_GetCategoryChallengeData final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChallengeStruct>               ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetCategoryChallengeData) == 0x000008, "Wrong alignment on ChallengeStatsUtility_GetCategoryChallengeData");
static_assert(sizeof(ChallengeStatsUtility_GetCategoryChallengeData) == 0x000018, "Wrong size on ChallengeStatsUtility_GetCategoryChallengeData");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryChallengeData, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_GetCategoryChallengeData::InCategory' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryChallengeData, ReturnValue) == 0x000008, "Member 'ChallengeStatsUtility_GetCategoryChallengeData::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetCategoryClearCount
// 0x0008 (0x0008 - 0x0000)
struct ChallengeStatsUtility_GetCategoryClearCount final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetCategoryClearCount) == 0x000004, "Wrong alignment on ChallengeStatsUtility_GetCategoryClearCount");
static_assert(sizeof(ChallengeStatsUtility_GetCategoryClearCount) == 0x000008, "Wrong size on ChallengeStatsUtility_GetCategoryClearCount");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryClearCount, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_GetCategoryClearCount::InCategory' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryClearCount, ReturnValue) == 0x000004, "Member 'ChallengeStatsUtility_GetCategoryClearCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetCategoryStats
// 0x0018 (0x0018 - 0x0000)
struct ChallengeStatsUtility_GetCategoryStats final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChallengeStatsData>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetCategoryStats) == 0x000008, "Wrong alignment on ChallengeStatsUtility_GetCategoryStats");
static_assert(sizeof(ChallengeStatsUtility_GetCategoryStats) == 0x000018, "Wrong size on ChallengeStatsUtility_GetCategoryStats");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryStats, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_GetCategoryStats::InCategory' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetCategoryStats, ReturnValue) == 0x000008, "Member 'ChallengeStatsUtility_GetCategoryStats::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetChallengeCategory
// 0x0002 (0x0002 - 0x0000)
struct ChallengeStatsUtility_GetChallengeCategory final
{
public:
	EChallengeId                                  InId;                                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChallengeCategory                            ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetChallengeCategory) == 0x000001, "Wrong alignment on ChallengeStatsUtility_GetChallengeCategory");
static_assert(sizeof(ChallengeStatsUtility_GetChallengeCategory) == 0x000002, "Wrong size on ChallengeStatsUtility_GetChallengeCategory");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeCategory, InId) == 0x000000, "Member 'ChallengeStatsUtility_GetChallengeCategory::InId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeCategory, ReturnValue) == 0x000001, "Member 'ChallengeStatsUtility_GetChallengeCategory::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetChallengeData
// 0x0050 (0x0050 - 0x0000)
struct ChallengeStatsUtility_GetChallengeData final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChallengeStruct                       ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetChallengeData) == 0x000008, "Wrong alignment on ChallengeStatsUtility_GetChallengeData");
static_assert(sizeof(ChallengeStatsUtility_GetChallengeData) == 0x000050, "Wrong size on ChallengeStatsUtility_GetChallengeData");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeData, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_GetChallengeData::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeData, ReturnValue) == 0x000008, "Member 'ChallengeStatsUtility_GetChallengeData::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetChallengeProgressCount
// 0x0004 (0x0004 - 0x0000)
struct ChallengeStatsUtility_GetChallengeProgressCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetChallengeProgressCount) == 0x000004, "Wrong alignment on ChallengeStatsUtility_GetChallengeProgressCount");
static_assert(sizeof(ChallengeStatsUtility_GetChallengeProgressCount) == 0x000004, "Wrong size on ChallengeStatsUtility_GetChallengeProgressCount");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeProgressCount, ReturnValue) == 0x000000, "Member 'ChallengeStatsUtility_GetChallengeProgressCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetChallengeProgressState
// 0x0002 (0x0002 - 0x0000)
struct ChallengeStatsUtility_GetChallengeProgressState final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChallengeProgressState                       ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetChallengeProgressState) == 0x000001, "Wrong alignment on ChallengeStatsUtility_GetChallengeProgressState");
static_assert(sizeof(ChallengeStatsUtility_GetChallengeProgressState) == 0x000002, "Wrong size on ChallengeStatsUtility_GetChallengeProgressState");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeProgressState, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_GetChallengeProgressState::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeProgressState, ReturnValue) == 0x000001, "Member 'ChallengeStatsUtility_GetChallengeProgressState::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetChallengeStats
// 0x000C (0x000C - 0x0000)
struct ChallengeStatsUtility_GetChallengeStats final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChallengeStatsData                    ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetChallengeStats) == 0x000004, "Wrong alignment on ChallengeStatsUtility_GetChallengeStats");
static_assert(sizeof(ChallengeStatsUtility_GetChallengeStats) == 0x00000C, "Wrong size on ChallengeStatsUtility_GetChallengeStats");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeStats, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_GetChallengeStats::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeStats, ReturnValue) == 0x000004, "Member 'ChallengeStatsUtility_GetChallengeStats::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetChallengeStatsCount
// 0x0008 (0x0008 - 0x0000)
struct ChallengeStatsUtility_GetChallengeStatsCount final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetChallengeStatsCount) == 0x000004, "Wrong alignment on ChallengeStatsUtility_GetChallengeStatsCount");
static_assert(sizeof(ChallengeStatsUtility_GetChallengeStatsCount) == 0x000008, "Wrong size on ChallengeStatsUtility_GetChallengeStatsCount");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeStatsCount, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_GetChallengeStatsCount::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetChallengeStatsCount, ReturnValue) == 0x000004, "Member 'ChallengeStatsUtility_GetChallengeStatsCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetPointReward
// 0x0014 (0x0014 - 0x0000)
struct ChallengeStatsUtility_GetPointReward final
{
public:
	int32                                         ItemGetBgIdx;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemGetPointIdx;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChallengePointReward                  ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetPointReward) == 0x000004, "Wrong alignment on ChallengeStatsUtility_GetPointReward");
static_assert(sizeof(ChallengeStatsUtility_GetPointReward) == 0x000014, "Wrong size on ChallengeStatsUtility_GetPointReward");
static_assert(offsetof(ChallengeStatsUtility_GetPointReward, ItemGetBgIdx) == 0x000000, "Member 'ChallengeStatsUtility_GetPointReward::ItemGetBgIdx' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetPointReward, ItemGetPointIdx) == 0x000004, "Member 'ChallengeStatsUtility_GetPointReward::ItemGetPointIdx' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_GetPointReward, ReturnValue) == 0x000008, "Member 'ChallengeStatsUtility_GetPointReward::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.GetSpecialChallengeClearCount
// 0x0004 (0x0004 - 0x0000)
struct ChallengeStatsUtility_GetSpecialChallengeClearCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_GetSpecialChallengeClearCount) == 0x000004, "Wrong alignment on ChallengeStatsUtility_GetSpecialChallengeClearCount");
static_assert(sizeof(ChallengeStatsUtility_GetSpecialChallengeClearCount) == 0x000004, "Wrong size on ChallengeStatsUtility_GetSpecialChallengeClearCount");
static_assert(offsetof(ChallengeStatsUtility_GetSpecialChallengeClearCount, ReturnValue) == 0x000000, "Member 'ChallengeStatsUtility_GetSpecialChallengeClearCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.IsChallengeAcquiredStateCheck
// 0x0001 (0x0001 - 0x0000)
struct ChallengeStatsUtility_IsChallengeAcquiredStateCheck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_IsChallengeAcquiredStateCheck) == 0x000001, "Wrong alignment on ChallengeStatsUtility_IsChallengeAcquiredStateCheck");
static_assert(sizeof(ChallengeStatsUtility_IsChallengeAcquiredStateCheck) == 0x000001, "Wrong size on ChallengeStatsUtility_IsChallengeAcquiredStateCheck");
static_assert(offsetof(ChallengeStatsUtility_IsChallengeAcquiredStateCheck, ReturnValue) == 0x000000, "Member 'ChallengeStatsUtility_IsChallengeAcquiredStateCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.IsChallengeCategoryNewIcon
// 0x0002 (0x0002 - 0x0000)
struct ChallengeStatsUtility_IsChallengeCategoryNewIcon final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_IsChallengeCategoryNewIcon) == 0x000001, "Wrong alignment on ChallengeStatsUtility_IsChallengeCategoryNewIcon");
static_assert(sizeof(ChallengeStatsUtility_IsChallengeCategoryNewIcon) == 0x000002, "Wrong size on ChallengeStatsUtility_IsChallengeCategoryNewIcon");
static_assert(offsetof(ChallengeStatsUtility_IsChallengeCategoryNewIcon, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_IsChallengeCategoryNewIcon::InCategory' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_IsChallengeCategoryNewIcon, ReturnValue) == 0x000001, "Member 'ChallengeStatsUtility_IsChallengeCategoryNewIcon::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.IsCompleteChallenge
// 0x0002 (0x0002 - 0x0000)
struct ChallengeStatsUtility_IsCompleteChallenge final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_IsCompleteChallenge) == 0x000001, "Wrong alignment on ChallengeStatsUtility_IsCompleteChallenge");
static_assert(sizeof(ChallengeStatsUtility_IsCompleteChallenge) == 0x000002, "Wrong size on ChallengeStatsUtility_IsCompleteChallenge");
static_assert(offsetof(ChallengeStatsUtility_IsCompleteChallenge, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_IsCompleteChallenge::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_IsCompleteChallenge, ReturnValue) == 0x000001, "Member 'ChallengeStatsUtility_IsCompleteChallenge::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.IsCompleteChallengeCategory
// 0x0002 (0x0002 - 0x0000)
struct ChallengeStatsUtility_IsCompleteChallengeCategory final
{
public:
	EChallengeCategory                            InCategory;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_IsCompleteChallengeCategory) == 0x000001, "Wrong alignment on ChallengeStatsUtility_IsCompleteChallengeCategory");
static_assert(sizeof(ChallengeStatsUtility_IsCompleteChallengeCategory) == 0x000002, "Wrong size on ChallengeStatsUtility_IsCompleteChallengeCategory");
static_assert(offsetof(ChallengeStatsUtility_IsCompleteChallengeCategory, InCategory) == 0x000000, "Member 'ChallengeStatsUtility_IsCompleteChallengeCategory::InCategory' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_IsCompleteChallengeCategory, ReturnValue) == 0x000001, "Member 'ChallengeStatsUtility_IsCompleteChallengeCategory::ReturnValue' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.SetChallengeProgressState
// 0x0002 (0x0002 - 0x0000)
struct ChallengeStatsUtility_SetChallengeProgressState final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChallengeProgressState                       InProgressState;                                   // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_SetChallengeProgressState) == 0x000001, "Wrong alignment on ChallengeStatsUtility_SetChallengeProgressState");
static_assert(sizeof(ChallengeStatsUtility_SetChallengeProgressState) == 0x000002, "Wrong size on ChallengeStatsUtility_SetChallengeProgressState");
static_assert(offsetof(ChallengeStatsUtility_SetChallengeProgressState, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_SetChallengeProgressState::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_SetChallengeProgressState, InProgressState) == 0x000001, "Member 'ChallengeStatsUtility_SetChallengeProgressState::InProgressState' has a wrong offset!");

// Function UnionSystem.ChallengeStatsUtility.SetChallengeStats
// 0x0008 (0x0008 - 0x0000)
struct ChallengeStatsUtility_SetChallengeStats final
{
public:
	EChallengeId                                  InChallengeId;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InValue;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChallengeStatsUtility_SetChallengeStats) == 0x000004, "Wrong alignment on ChallengeStatsUtility_SetChallengeStats");
static_assert(sizeof(ChallengeStatsUtility_SetChallengeStats) == 0x000008, "Wrong size on ChallengeStatsUtility_SetChallengeStats");
static_assert(offsetof(ChallengeStatsUtility_SetChallengeStats, InChallengeId) == 0x000000, "Member 'ChallengeStatsUtility_SetChallengeStats::InChallengeId' has a wrong offset!");
static_assert(offsetof(ChallengeStatsUtility_SetChallengeStats, InValue) == 0x000004, "Member 'ChallengeStatsUtility_SetChallengeStats::InValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.GetEnablePrelaunchAnotherStageLotteryMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion final
{
public:
	EMilestoneVersion                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion");
static_assert(sizeof(MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion");
static_assert(offsetof(MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_GetEnablePrelaunchAnotherStageLotteryMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.GetGrandPrixRivalDriverIds
// 0x0010 (0x0010 - 0x0000)
struct MilestoneUtil_GetGrandPrixRivalDriverIds final
{
public:
	TArray<EDriverId>                             ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_GetGrandPrixRivalDriverIds) == 0x000008, "Wrong alignment on MilestoneUtil_GetGrandPrixRivalDriverIds");
static_assert(sizeof(MilestoneUtil_GetGrandPrixRivalDriverIds) == 0x000010, "Wrong size on MilestoneUtil_GetGrandPrixRivalDriverIds");
static_assert(offsetof(MilestoneUtil_GetGrandPrixRivalDriverIds, ReturnValue) == 0x000000, "Member 'MilestoneUtil_GetGrandPrixRivalDriverIds::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.GetRivalByMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_GetRivalByMilestoneVersion final
{
public:
	EDriverId                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_GetRivalByMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_GetRivalByMilestoneVersion");
static_assert(sizeof(MilestoneUtil_GetRivalByMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_GetRivalByMilestoneVersion");
static_assert(offsetof(MilestoneUtil_GetRivalByMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_GetRivalByMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsAlreadyGrandPrixLeast1Play
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsAlreadyGrandPrixLeast1Play final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsAlreadyGrandPrixLeast1Play) == 0x000001, "Wrong alignment on MilestoneUtil_IsAlreadyGrandPrixLeast1Play");
static_assert(sizeof(MilestoneUtil_IsAlreadyGrandPrixLeast1Play) == 0x000001, "Wrong size on MilestoneUtil_IsAlreadyGrandPrixLeast1Play");
static_assert(offsetof(MilestoneUtil_IsAlreadyGrandPrixLeast1Play, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsAlreadyGrandPrixLeast1Play::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsCharaIconLockCover
// 0x0002 (0x0002 - 0x0000)
struct MilestoneUtil_IsCharaIconLockCover final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsCharaIconLockCover) == 0x000001, "Wrong alignment on MilestoneUtil_IsCharaIconLockCover");
static_assert(sizeof(MilestoneUtil_IsCharaIconLockCover) == 0x000002, "Wrong size on MilestoneUtil_IsCharaIconLockCover");
static_assert(offsetof(MilestoneUtil_IsCharaIconLockCover, DriverId) == 0x000000, "Member 'MilestoneUtil_IsCharaIconLockCover::DriverId' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsCharaIconLockCover, ReturnValue) == 0x000001, "Member 'MilestoneUtil_IsCharaIconLockCover::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsCloseCourseInRaceParkCustomMatchMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsCloseCourseInRaceParkCustomMatchMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableDecisionInRaceParkMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableDecisionInRaceParkMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableEtceteraChallengeMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableEtceteraChallengeMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableEtceteraHintMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableEtceteraHintMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableEtceteraHintMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableEtceteraHintMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableEtceteraHintMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableEtceteraHintMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableEtceteraHintMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableEtceteraHintMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableEtceteraOthersMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableEtceteraOthersMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableEtceteraStoreMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableEtceteraStoreMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableEtceteraTitleMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableEtceteraTitleMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableFestaMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableFestaMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableFestaMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableFestaMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableFestaMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableFestaMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableFestaMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableFestaMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableFriendlistMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableFriendlistMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableFriendlistMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableFriendlistMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableFriendlistMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableFriendlistMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableFriendlistMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableFriendlistMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixCourse2MilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableGrandPrixCourse2MilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixCourse3MilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableGrandPrixCourse3MilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixCourseMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableGrandPrixCourseMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableGrandPrixMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableGrandPrixMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableGrandPrixMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableGrandPrixMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableGrandPrixMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableGrandPrixMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableGrandPrixMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableGrandPrixMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableHornAuraTabMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableHornAuraTabMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableHornAuraTabMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableHornAuraTabMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableHornAuraTabMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableHornAuraTabMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableHornAuraTabMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableHornAuraTabMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableRaceParkMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableRaceParkMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableRaceParkMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableRaceParkMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableRaceParkMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableRaceParkMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableRaceParkMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableRaceParkMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableRaceParkRivalOnOffMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableRaceParkRivalOnOffMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableSelectTimeTrialMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableSelectTimeTrialMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableTimeTrialMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableTimeTrialMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableTimeTrialMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableTimeTrialMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableTimeTrialMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableTimeTrialMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableTimeTrialMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableTimeTrialMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableTopMenuFestaRuleMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableTopMenuFestaRuleMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableTopMenuNewsMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableTopMenuNewsMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsDisableTrialMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsDisableTrialMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsDisableTrialMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsDisableTrialMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsDisableTrialMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsDisableTrialMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsDisableTrialMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsDisableTrialMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableAdvertiseRatingMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableAdvertiseRatingMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableEtceteraFullGameStoreMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableEtceteraFullGameStoreMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableResetSaveDataMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableResetSaveDataMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableResetSaveDataMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableResetSaveDataMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableResetSaveDataMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableResetSaveDataMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableResetSaveDataMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableResetSaveDataMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableSpecificTitleDebugCommandMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableSpecificTitleDebugCommandMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableThumbnailCollaboRaceMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableThumbnailCollaboRaceMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableTitleDemoMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableTitleDemoMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableTitleDemoMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableTitleDemoMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableTitleDemoMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableTitleDemoMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableTitleDemoMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableTitleDemoMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableTitleStoreMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableTitleStoreMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableTitleStoreMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableTitleStoreMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableTitleStoreMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableTitleStoreMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableTitleStoreMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableTitleStoreMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableTopMenuStoreMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableTopMenuStoreMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsEnableTopMenuStorePopupAutoMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsEnableTopMenuStorePopupAutoMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsExclusionGhostUpDownloadEventMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsExclusionGhostUpDownloadEventMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsForceEnableTopMenuNewsMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsForceEnableTopMenuNewsMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsHiddenCharacter
// 0x0002 (0x0002 - 0x0000)
struct MilestoneUtil_IsHiddenCharacter final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsHiddenCharacter) == 0x000001, "Wrong alignment on MilestoneUtil_IsHiddenCharacter");
static_assert(sizeof(MilestoneUtil_IsHiddenCharacter) == 0x000002, "Wrong size on MilestoneUtil_IsHiddenCharacter");
static_assert(offsetof(MilestoneUtil_IsHiddenCharacter, DriverId) == 0x000000, "Member 'MilestoneUtil_IsHiddenCharacter::DriverId' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsHiddenCharacter, ReturnValue) == 0x000001, "Member 'MilestoneUtil_IsHiddenCharacter::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsHiddenMachineParts
// 0x0002 (0x0002 - 0x0000)
struct MilestoneUtil_IsHiddenMachineParts final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsHiddenMachineParts) == 0x000001, "Wrong alignment on MilestoneUtil_IsHiddenMachineParts");
static_assert(sizeof(MilestoneUtil_IsHiddenMachineParts) == 0x000002, "Wrong size on MilestoneUtil_IsHiddenMachineParts");
static_assert(offsetof(MilestoneUtil_IsHiddenMachineParts, MachineId) == 0x000000, "Member 'MilestoneUtil_IsHiddenMachineParts::MachineId' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsHiddenMachineParts, ReturnValue) == 0x000001, "Member 'MilestoneUtil_IsHiddenMachineParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsHiddenRomVerMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsHiddenRomVerMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsHiddenRomVerMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsHiddenRomVerMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsHiddenRomVerMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsHiddenRomVerMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsHiddenRomVerMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsHiddenRomVerMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsHiddenWebManualQRcodeMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsHiddenWebManualQRcodeMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsInitialMachineParts
// 0x0014 (0x0014 - 0x0000)
struct MilestoneUtil_IsInitialMachineParts final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FrontPrice;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RearPrice;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TirePrice;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MilestoneUtil_IsInitialMachineParts) == 0x000004, "Wrong alignment on MilestoneUtil_IsInitialMachineParts");
static_assert(sizeof(MilestoneUtil_IsInitialMachineParts) == 0x000014, "Wrong size on MilestoneUtil_IsInitialMachineParts");
static_assert(offsetof(MilestoneUtil_IsInitialMachineParts, MachineId) == 0x000000, "Member 'MilestoneUtil_IsInitialMachineParts::MachineId' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsInitialMachineParts, FrontPrice) == 0x000004, "Member 'MilestoneUtil_IsInitialMachineParts::FrontPrice' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsInitialMachineParts, RearPrice) == 0x000008, "Member 'MilestoneUtil_IsInitialMachineParts::RearPrice' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsInitialMachineParts, TirePrice) == 0x00000C, "Member 'MilestoneUtil_IsInitialMachineParts::TirePrice' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsInitialMachineParts, ReturnValue) == 0x000010, "Member 'MilestoneUtil_IsInitialMachineParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsLimitDonpaTicketMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsLimitDonpaTicketMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsLimitDonpaTicketMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsLimitDonpaTicketMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsLimitDonpaTicketMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsLimitDonpaTicketMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsLimitDonpaTicketMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsLimitDonpaTicketMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsLimitRewardInRaceParkMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsLimitRewardInRaceParkMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsOfflineMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsOfflineMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsOfflineMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsOfflineMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsOfflineMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsOfflineMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsOfflineMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsOfflineMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsRaceUnLockedMilestoneVersion
// 0x0003 (0x0003 - 0x0000)
struct MilestoneUtil_IsRaceUnLockedMilestoneVersion final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsRaceUnLockedMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsRaceUnLockedMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsRaceUnLockedMilestoneVersion) == 0x000003, "Wrong size on MilestoneUtil_IsRaceUnLockedMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsRaceUnLockedMilestoneVersion, InGameModeId) == 0x000000, "Member 'MilestoneUtil_IsRaceUnLockedMilestoneVersion::InGameModeId' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsRaceUnLockedMilestoneVersion, InStageId) == 0x000001, "Member 'MilestoneUtil_IsRaceUnLockedMilestoneVersion::InStageId' has a wrong offset!");
static_assert(offsetof(MilestoneUtil_IsRaceUnLockedMilestoneVersion, ReturnValue) == 0x000002, "Member 'MilestoneUtil_IsRaceUnLockedMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsSkipDodonpaEventMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsSkipDodonpaEventMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsSkipDodonpaEventMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsSkipDodonpaEventMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsSkipDodonpaEventMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsSkipDodonpaEventMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsSkipDodonpaEventMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsSkipDodonpaEventMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsSkipSelectPlayNumMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsSkipSelectPlayNumMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsTopMenuAccessLoginSuccessOnly
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsTopMenuAccessLoginSuccessOnly final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsTopMenuAccessLoginSuccessOnly) == 0x000001, "Wrong alignment on MilestoneUtil_IsTopMenuAccessLoginSuccessOnly");
static_assert(sizeof(MilestoneUtil_IsTopMenuAccessLoginSuccessOnly) == 0x000001, "Wrong size on MilestoneUtil_IsTopMenuAccessLoginSuccessOnly");
static_assert(offsetof(MilestoneUtil_IsTopMenuAccessLoginSuccessOnly, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsTopMenuAccessLoginSuccessOnly::ReturnValue' has a wrong offset!");

// Function UnionSystem.MilestoneUtil.IsVisibleCompanyNameMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct MilestoneUtil_IsVisibleCompanyNameMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MilestoneUtil_IsVisibleCompanyNameMilestoneVersion) == 0x000001, "Wrong alignment on MilestoneUtil_IsVisibleCompanyNameMilestoneVersion");
static_assert(sizeof(MilestoneUtil_IsVisibleCompanyNameMilestoneVersion) == 0x000001, "Wrong size on MilestoneUtil_IsVisibleCompanyNameMilestoneVersion");
static_assert(offsetof(MilestoneUtil_IsVisibleCompanyNameMilestoneVersion, ReturnValue) == 0x000000, "Member 'MilestoneUtil_IsVisibleCompanyNameMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppGameInstance.Set2ndRom
// 0x0001 (0x0001 - 0x0000)
struct AppGameInstance_Set2ndRom final
{
public:
	bool                                          Is2ndRom;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppGameInstance_Set2ndRom) == 0x000001, "Wrong alignment on AppGameInstance_Set2ndRom");
static_assert(sizeof(AppGameInstance_Set2ndRom) == 0x000001, "Wrong size on AppGameInstance_Set2ndRom");
static_assert(offsetof(AppGameInstance_Set2ndRom, Is2ndRom) == 0x000000, "Member 'AppGameInstance_Set2ndRom::Is2ndRom' has a wrong offset!");

// Function UnionSystem.AppGameInstance.GetVCSRevisionNum
// 0x0004 (0x0004 - 0x0000)
struct AppGameInstance_GetVCSRevisionNum final
{
public:
	int32                                         OutVCSRevisionNum;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppGameInstance_GetVCSRevisionNum) == 0x000004, "Wrong alignment on AppGameInstance_GetVCSRevisionNum");
static_assert(sizeof(AppGameInstance_GetVCSRevisionNum) == 0x000004, "Wrong size on AppGameInstance_GetVCSRevisionNum");
static_assert(offsetof(AppGameInstance_GetVCSRevisionNum, OutVCSRevisionNum) == 0x000000, "Member 'AppGameInstance_GetVCSRevisionNum::OutVCSRevisionNum' has a wrong offset!");

// Function UnionSystem.AppGameInstance.GetVCSRevisionStr
// 0x0010 (0x0010 - 0x0000)
struct AppGameInstance_GetVCSRevisionStr final
{
public:
	class FString                                 OutVCSString;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppGameInstance_GetVCSRevisionStr) == 0x000008, "Wrong alignment on AppGameInstance_GetVCSRevisionStr");
static_assert(sizeof(AppGameInstance_GetVCSRevisionStr) == 0x000010, "Wrong size on AppGameInstance_GetVCSRevisionStr");
static_assert(offsetof(AppGameInstance_GetVCSRevisionStr, OutVCSString) == 0x000000, "Member 'AppGameInstance_GetVCSRevisionStr::OutVCSString' has a wrong offset!");

// Function UnionSystem.HonorTitleListDataAsset.GetAllHonorTitleAndIdWithRarity
// 0x0028 (0x0028 - 0x0000)
struct HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity final
{
public:
	int32                                         Rarity;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 outHonorTitleIdArray;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHonorTitleListData>            ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity) == 0x000008, "Wrong alignment on HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity");
static_assert(sizeof(HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity) == 0x000028, "Wrong size on HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity");
static_assert(offsetof(HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity, Rarity) == 0x000000, "Member 'HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity::Rarity' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity, outHonorTitleIdArray) == 0x000008, "Member 'HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity::outHonorTitleIdArray' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity, ReturnValue) == 0x000018, "Member 'HonorTitleListDataAsset_GetAllHonorTitleAndIdWithRarity::ReturnValue' has a wrong offset!");

// Function UnionSystem.HonorTitleListDataAsset.GetAllHonorTitleWithRarity
// 0x0018 (0x0018 - 0x0000)
struct HonorTitleListDataAsset_GetAllHonorTitleWithRarity final
{
public:
	int32                                         Rarity;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHonorTitleListData>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HonorTitleListDataAsset_GetAllHonorTitleWithRarity) == 0x000008, "Wrong alignment on HonorTitleListDataAsset_GetAllHonorTitleWithRarity");
static_assert(sizeof(HonorTitleListDataAsset_GetAllHonorTitleWithRarity) == 0x000018, "Wrong size on HonorTitleListDataAsset_GetAllHonorTitleWithRarity");
static_assert(offsetof(HonorTitleListDataAsset_GetAllHonorTitleWithRarity, Rarity) == 0x000000, "Member 'HonorTitleListDataAsset_GetAllHonorTitleWithRarity::Rarity' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetAllHonorTitleWithRarity, ReturnValue) == 0x000008, "Member 'HonorTitleListDataAsset_GetAllHonorTitleWithRarity::ReturnValue' has a wrong offset!");

// Function UnionSystem.HonorTitleListDataAsset.GetHonorTitlePlate
// 0x0030 (0x0030 - 0x0000)
struct HonorTitleListDataAsset_GetHonorTitlePlate final
{
public:
	int32                                         HonorTitleId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HonorTitleListDataAsset_GetHonorTitlePlate) == 0x000008, "Wrong alignment on HonorTitleListDataAsset_GetHonorTitlePlate");
static_assert(sizeof(HonorTitleListDataAsset_GetHonorTitlePlate) == 0x000030, "Wrong size on HonorTitleListDataAsset_GetHonorTitlePlate");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitlePlate, HonorTitleId) == 0x000000, "Member 'HonorTitleListDataAsset_GetHonorTitlePlate::HonorTitleId' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitlePlate, ReturnValue) == 0x000008, "Member 'HonorTitleListDataAsset_GetHonorTitlePlate::ReturnValue' has a wrong offset!");

// Function UnionSystem.HonorTitleListDataAsset.GetHonorTitleRarity
// 0x0008 (0x0008 - 0x0000)
struct HonorTitleListDataAsset_GetHonorTitleRarity final
{
public:
	int32                                         HonorTitleId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HonorTitleListDataAsset_GetHonorTitleRarity) == 0x000004, "Wrong alignment on HonorTitleListDataAsset_GetHonorTitleRarity");
static_assert(sizeof(HonorTitleListDataAsset_GetHonorTitleRarity) == 0x000008, "Wrong size on HonorTitleListDataAsset_GetHonorTitleRarity");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitleRarity, HonorTitleId) == 0x000000, "Member 'HonorTitleListDataAsset_GetHonorTitleRarity::HonorTitleId' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitleRarity, ReturnValue) == 0x000004, "Member 'HonorTitleListDataAsset_GetHonorTitleRarity::ReturnValue' has a wrong offset!");

// Function UnionSystem.HonorTitleListDataAsset.GetHonorTitleVBName
// 0x0018 (0x0018 - 0x0000)
struct HonorTitleListDataAsset_GetHonorTitleVBName final
{
public:
	int32                                         HonorTitleId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HonorTitleListDataAsset_GetHonorTitleVBName) == 0x000008, "Wrong alignment on HonorTitleListDataAsset_GetHonorTitleVBName");
static_assert(sizeof(HonorTitleListDataAsset_GetHonorTitleVBName) == 0x000018, "Wrong size on HonorTitleListDataAsset_GetHonorTitleVBName");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitleVBName, HonorTitleId) == 0x000000, "Member 'HonorTitleListDataAsset_GetHonorTitleVBName::HonorTitleId' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitleVBName, IsValid) == 0x000004, "Member 'HonorTitleListDataAsset_GetHonorTitleVBName::IsValid' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetHonorTitleVBName, ReturnValue) == 0x000008, "Member 'HonorTitleListDataAsset_GetHonorTitleVBName::ReturnValue' has a wrong offset!");

// Function UnionSystem.HonorTitleListDataAsset.GetIsHonorTitleDLC
// 0x0008 (0x0008 - 0x0000)
struct HonorTitleListDataAsset_GetIsHonorTitleDLC final
{
public:
	int32                                         HonorTitleIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HonorTitleListDataAsset_GetIsHonorTitleDLC) == 0x000004, "Wrong alignment on HonorTitleListDataAsset_GetIsHonorTitleDLC");
static_assert(sizeof(HonorTitleListDataAsset_GetIsHonorTitleDLC) == 0x000008, "Wrong size on HonorTitleListDataAsset_GetIsHonorTitleDLC");
static_assert(offsetof(HonorTitleListDataAsset_GetIsHonorTitleDLC, HonorTitleIndex) == 0x000000, "Member 'HonorTitleListDataAsset_GetIsHonorTitleDLC::HonorTitleIndex' has a wrong offset!");
static_assert(offsetof(HonorTitleListDataAsset_GetIsHonorTitleDLC, ReturnValue) == 0x000004, "Member 'HonorTitleListDataAsset_GetIsHonorTitleDLC::ReturnValue' has a wrong offset!");

// Function UnionSystem.AtomListenerFocusPointForCamera.SetCamera
// 0x0008 (0x0008 - 0x0000)
struct AtomListenerFocusPointForCamera_SetCamera final
{
public:
	class UCameraComponent*                       NewCamera;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AtomListenerFocusPointForCamera_SetCamera) == 0x000008, "Wrong alignment on AtomListenerFocusPointForCamera_SetCamera");
static_assert(sizeof(AtomListenerFocusPointForCamera_SetCamera) == 0x000008, "Wrong size on AtomListenerFocusPointForCamera_SetCamera");
static_assert(offsetof(AtomListenerFocusPointForCamera_SetCamera, NewCamera) == 0x000000, "Member 'AtomListenerFocusPointForCamera_SetCamera::NewCamera' has a wrong offset!");

// Function UnionSystem.AppListenerFocusPoint.SetupComponent
// 0x0008 (0x0008 - 0x0000)
struct AppListenerFocusPoint_SetupComponent final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumLocalPlayers;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppListenerFocusPoint_SetupComponent) == 0x000004, "Wrong alignment on AppListenerFocusPoint_SetupComponent");
static_assert(sizeof(AppListenerFocusPoint_SetupComponent) == 0x000008, "Wrong size on AppListenerFocusPoint_SetupComponent");
static_assert(offsetof(AppListenerFocusPoint_SetupComponent, PlayerIndex) == 0x000000, "Member 'AppListenerFocusPoint_SetupComponent::PlayerIndex' has a wrong offset!");
static_assert(offsetof(AppListenerFocusPoint_SetupComponent, NumLocalPlayers) == 0x000004, "Member 'AppListenerFocusPoint_SetupComponent::NumLocalPlayers' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.AllowCrossPlay
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_AllowCrossPlay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_AllowCrossPlay) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_AllowCrossPlay");
static_assert(sizeof(AppOptionConfigSaveGameHelper_AllowCrossPlay) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_AllowCrossPlay");
static_assert(offsetof(AppOptionConfigSaveGameHelper_AllowCrossPlay, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_AllowCrossPlay::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.AllowCrossPlayOnlyAppSetting
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting");
static_assert(sizeof(AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting");
static_assert(offsetof(AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_AllowCrossPlayOnlyAppSetting::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyFullscreenMode
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_ApplyFullscreenMode final
{
public:
	bool                                          ApplyImmediately;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_ApplyFullscreenMode) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_ApplyFullscreenMode");
static_assert(sizeof(AppOptionConfigSaveGameHelper_ApplyFullscreenMode) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_ApplyFullscreenMode");
static_assert(offsetof(AppOptionConfigSaveGameHelper_ApplyFullscreenMode, ApplyImmediately) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_ApplyFullscreenMode::ApplyImmediately' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyResolutionSize
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_ApplyResolutionSize final
{
public:
	bool                                          ApplyImmediately;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_ApplyResolutionSize) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_ApplyResolutionSize");
static_assert(sizeof(AppOptionConfigSaveGameHelper_ApplyResolutionSize) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_ApplyResolutionSize");
static_assert(offsetof(AppOptionConfigSaveGameHelper_ApplyResolutionSize, ApplyImmediately) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_ApplyResolutionSize::ApplyImmediately' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyUseDisplay
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_ApplyUseDisplay final
{
public:
	bool                                          ApplyImmediately;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_ApplyUseDisplay) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_ApplyUseDisplay");
static_assert(sizeof(AppOptionConfigSaveGameHelper_ApplyUseDisplay) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_ApplyUseDisplay");
static_assert(offsetof(AppOptionConfigSaveGameHelper_ApplyUseDisplay, ApplyImmediately) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_ApplyUseDisplay::ApplyImmediately' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.ApplyVSync
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_ApplyVSync final
{
public:
	bool                                          ApplyImmediately;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_ApplyVSync) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_ApplyVSync");
static_assert(sizeof(AppOptionConfigSaveGameHelper_ApplyVSync) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_ApplyVSync");
static_assert(offsetof(AppOptionConfigSaveGameHelper_ApplyVSync, ApplyImmediately) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_ApplyVSync::ApplyImmediately' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.CalcGetUserAssistData
// 0x0010 (0x0010 - 0x0000)
struct AppOptionConfigSaveGameHelper_CalcGetUserAssistData final
{
public:
	TArray<struct FUserAssistData>                OutAssistData;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_CalcGetUserAssistData) == 0x000008, "Wrong alignment on AppOptionConfigSaveGameHelper_CalcGetUserAssistData");
static_assert(sizeof(AppOptionConfigSaveGameHelper_CalcGetUserAssistData) == 0x000010, "Wrong size on AppOptionConfigSaveGameHelper_CalcGetUserAssistData");
static_assert(offsetof(AppOptionConfigSaveGameHelper_CalcGetUserAssistData, OutAssistData) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_CalcGetUserAssistData::OutAssistData' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.GetCaptionVisibility
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_GetCaptionVisibility final
{
public:
	ECaptionVisible                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_GetCaptionVisibility) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_GetCaptionVisibility");
static_assert(sizeof(AppOptionConfigSaveGameHelper_GetCaptionVisibility) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_GetCaptionVisibility");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetCaptionVisibility, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_GetCaptionVisibility::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.GetControllerOperationType
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_GetControllerOperationType final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyConfigOperationType                       ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_GetControllerOperationType) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_GetControllerOperationType");
static_assert(sizeof(AppOptionConfigSaveGameHelper_GetControllerOperationType) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_GetControllerOperationType");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetControllerOperationType, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_GetControllerOperationType::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetControllerOperationType, ReturnValue) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_GetControllerOperationType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.GetForceFeedbackLevel
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_GetForceFeedbackLevel final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EForceFeedbackLevel                           ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_GetForceFeedbackLevel) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_GetForceFeedbackLevel");
static_assert(sizeof(AppOptionConfigSaveGameHelper_GetForceFeedbackLevel) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_GetForceFeedbackLevel");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetForceFeedbackLevel, PlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_GetForceFeedbackLevel::PlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetForceFeedbackLevel, ReturnValue) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_GetForceFeedbackLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.GetTextLangFromSave
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_GetTextLangFromSave final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_GetTextLangFromSave) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_GetTextLangFromSave");
static_assert(sizeof(AppOptionConfigSaveGameHelper_GetTextLangFromSave) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_GetTextLangFromSave");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetTextLangFromSave, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_GetTextLangFromSave::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.GetVoiceLangFromSave
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_GetVoiceLangFromSave final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_GetVoiceLangFromSave) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_GetVoiceLangFromSave");
static_assert(sizeof(AppOptionConfigSaveGameHelper_GetVoiceLangFromSave) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_GetVoiceLangFromSave");
static_assert(offsetof(AppOptionConfigSaveGameHelper_GetVoiceLangFromSave, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_GetVoiceLangFromSave::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.IsControllerGyroAssistEnabled
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled");
static_assert(sizeof(AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled, ReturnValue) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_IsControllerGyroAssistEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.IsControllerOperationTypeCustom
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom");
static_assert(sizeof(AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom, ReturnValue) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_IsControllerOperationTypeCustom::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.IsDiffUserAssistDataWithSaveData
// 0x0018 (0x0018 - 0x0000)
struct AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData final
{
public:
	TArray<struct FUserAssistData>                InAssistData;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData) == 0x000008, "Wrong alignment on AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData");
static_assert(sizeof(AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData) == 0x000018, "Wrong size on AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData, InAssistData) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData::InAssistData' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData, ReturnValue) == 0x000010, "Member 'AppOptionConfigSaveGameHelper_IsDiffUserAssistDataWithSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.IsInverseAcceptAndCancel
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel");
static_assert(sizeof(AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel, ReturnValue) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_IsInverseAcceptAndCancel::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.IsInverseFlyModeUpDown
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown");
static_assert(sizeof(AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown, ReturnValue) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_IsInverseFlyModeUpDown::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.IsRunningOnSteamDeck
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck");
static_assert(sizeof(AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck");
static_assert(offsetof(AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_IsRunningOnSteamDeck::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.SetControllerGyroAssistEnabled
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InEnable;                                          // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled");
static_assert(sizeof(AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled, InEnable) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_SetControllerGyroAssistEnabled::InEnable' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.SetControllerOperationType
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_SetControllerOperationType final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyConfigOperationType                       InOperationType;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_SetControllerOperationType) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_SetControllerOperationType");
static_assert(sizeof(AppOptionConfigSaveGameHelper_SetControllerOperationType) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_SetControllerOperationType");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetControllerOperationType, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_SetControllerOperationType::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetControllerOperationType, InOperationType) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_SetControllerOperationType::InOperationType' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.SetForceFeedbackLevel
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_SetForceFeedbackLevel final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EForceFeedbackLevel                           VibrationLevel;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_SetForceFeedbackLevel) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_SetForceFeedbackLevel");
static_assert(sizeof(AppOptionConfigSaveGameHelper_SetForceFeedbackLevel) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_SetForceFeedbackLevel");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetForceFeedbackLevel, PlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_SetForceFeedbackLevel::PlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetForceFeedbackLevel, VibrationLevel) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_SetForceFeedbackLevel::VibrationLevel' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.SetInverseAcceptAndCancel
// 0x0008 (0x0008 - 0x0000)
struct AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InInverse;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel) == 0x000004, "Wrong alignment on AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel");
static_assert(sizeof(AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel) == 0x000008, "Wrong size on AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel, InPlayerIndex) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel, InInverse) == 0x000004, "Member 'AppOptionConfigSaveGameHelper_SetInverseAcceptAndCancel::InInverse' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.SetTextLangToSave
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_SetTextLangToSave final
{
public:
	ELanguage                                     NewLanguage;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_SetTextLangToSave) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_SetTextLangToSave");
static_assert(sizeof(AppOptionConfigSaveGameHelper_SetTextLangToSave) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_SetTextLangToSave");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetTextLangToSave, NewLanguage) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_SetTextLangToSave::NewLanguage' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.SetVoiceLangToSave
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_SetVoiceLangToSave final
{
public:
	ELanguage                                     NewLanguage;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_SetVoiceLangToSave) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_SetVoiceLangToSave");
static_assert(sizeof(AppOptionConfigSaveGameHelper_SetVoiceLangToSave) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_SetVoiceLangToSave");
static_assert(offsetof(AppOptionConfigSaveGameHelper_SetVoiceLangToSave, NewLanguage) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_SetVoiceLangToSave::NewLanguage' has a wrong offset!");

// Function UnionSystem.AppOptionConfigSaveGameHelper.UpdateGraphicSettingsAtFirstTime
// 0x0001 (0x0001 - 0x0000)
struct AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime) == 0x000001, "Wrong alignment on AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime");
static_assert(sizeof(AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime) == 0x000001, "Wrong size on AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime");
static_assert(offsetof(AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime, ReturnValue) == 0x000000, "Member 'AppOptionConfigSaveGameHelper_UpdateGraphicSettingsAtFirstTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.AddRegisterSubMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_AddRegisterSubMenu final
{
public:
	class UObject*                                InMenuObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPriority;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_AddRegisterSubMenu) == 0x000008, "Wrong alignment on AppPlayerController_AddRegisterSubMenu");
static_assert(sizeof(AppPlayerController_AddRegisterSubMenu) == 0x000010, "Wrong size on AppPlayerController_AddRegisterSubMenu");
static_assert(offsetof(AppPlayerController_AddRegisterSubMenu, InMenuObject) == 0x000000, "Member 'AppPlayerController_AddRegisterSubMenu::InMenuObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_AddRegisterSubMenu, InPriority) == 0x000008, "Member 'AppPlayerController_AddRegisterSubMenu::InPriority' has a wrong offset!");

// Function UnionSystem.AppPlayerController.CalcIsMousePositionInViewport
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_CalcIsMousePositionInViewport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_CalcIsMousePositionInViewport) == 0x000001, "Wrong alignment on AppPlayerController_CalcIsMousePositionInViewport");
static_assert(sizeof(AppPlayerController_CalcIsMousePositionInViewport) == 0x000001, "Wrong size on AppPlayerController_CalcIsMousePositionInViewport");
static_assert(offsetof(AppPlayerController_CalcIsMousePositionInViewport, ReturnValue) == 0x000000, "Member 'AppPlayerController_CalcIsMousePositionInViewport::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.CalcTutorialControllerType
// 0x0002 (0x0002 - 0x0000)
struct AppPlayerController_CalcTutorialControllerType final
{
public:
	uint8                                         Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Platform;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_CalcTutorialControllerType) == 0x000001, "Wrong alignment on AppPlayerController_CalcTutorialControllerType");
static_assert(sizeof(AppPlayerController_CalcTutorialControllerType) == 0x000002, "Wrong size on AppPlayerController_CalcTutorialControllerType");
static_assert(offsetof(AppPlayerController_CalcTutorialControllerType, Type) == 0x000000, "Member 'AppPlayerController_CalcTutorialControllerType::Type' has a wrong offset!");
static_assert(offsetof(AppPlayerController_CalcTutorialControllerType, Platform) == 0x000001, "Member 'AppPlayerController_CalcTutorialControllerType::Platform' has a wrong offset!");

// Function UnionSystem.AppPlayerController.DoInputMenu
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_DoInputMenu final
{
public:
	EMenuInputKey                                 InKey;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_DoInputMenu) == 0x000001, "Wrong alignment on AppPlayerController_DoInputMenu");
static_assert(sizeof(AppPlayerController_DoInputMenu) == 0x000001, "Wrong size on AppPlayerController_DoInputMenu");
static_assert(offsetof(AppPlayerController_DoInputMenu, InKey) == 0x000000, "Member 'AppPlayerController_DoInputMenu::InKey' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetCurrentInputType
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_GetCurrentInputType final
{
public:
	EAppControllerInputType                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetCurrentInputType) == 0x000001, "Wrong alignment on AppPlayerController_GetCurrentInputType");
static_assert(sizeof(AppPlayerController_GetCurrentInputType) == 0x000001, "Wrong size on AppPlayerController_GetCurrentInputType");
static_assert(offsetof(AppPlayerController_GetCurrentInputType, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetCurrentInputType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetLastHoveredObject
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_GetLastHoveredObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetLastHoveredObject) == 0x000008, "Wrong alignment on AppPlayerController_GetLastHoveredObject");
static_assert(sizeof(AppPlayerController_GetLastHoveredObject) == 0x000008, "Wrong size on AppPlayerController_GetLastHoveredObject");
static_assert(offsetof(AppPlayerController_GetLastHoveredObject, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetLastHoveredObject::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetMappableKeyByMappingName
// 0x0020 (0x0020 - 0x0000)
struct AppPlayerController_GetMappableKeyByMappingName final
{
public:
	class FName                                   MappingName;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetMappableKeyByMappingName) == 0x000008, "Wrong alignment on AppPlayerController_GetMappableKeyByMappingName");
static_assert(sizeof(AppPlayerController_GetMappableKeyByMappingName) == 0x000020, "Wrong size on AppPlayerController_GetMappableKeyByMappingName");
static_assert(offsetof(AppPlayerController_GetMappableKeyByMappingName, MappingName) == 0x000000, "Member 'AppPlayerController_GetMappableKeyByMappingName::MappingName' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetMappableKeyByMappingName, ReturnValue) == 0x000008, "Member 'AppPlayerController_GetMappableKeyByMappingName::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetMenuConfigKey
// 0x0028 (0x0028 - 0x0000)
struct AppPlayerController_GetMenuConfigKey final
{
public:
	class FName                                   InActionName;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGamepad;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAnalog;                                          // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetMenuConfigKey) == 0x000008, "Wrong alignment on AppPlayerController_GetMenuConfigKey");
static_assert(sizeof(AppPlayerController_GetMenuConfigKey) == 0x000028, "Wrong size on AppPlayerController_GetMenuConfigKey");
static_assert(offsetof(AppPlayerController_GetMenuConfigKey, InActionName) == 0x000000, "Member 'AppPlayerController_GetMenuConfigKey::InActionName' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetMenuConfigKey, IsGamepad) == 0x000008, "Member 'AppPlayerController_GetMenuConfigKey::IsGamepad' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetMenuConfigKey, IsAnalog) == 0x000009, "Member 'AppPlayerController_GetMenuConfigKey::IsAnalog' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetMenuConfigKey, ReturnValue) == 0x000010, "Member 'AppPlayerController_GetMenuConfigKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetRaceConfigKey
// 0x0028 (0x0028 - 0x0000)
struct AppPlayerController_GetRaceConfigKey final
{
public:
	class FName                                   InActionName;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPrimary;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGamepad;                                         // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetRaceConfigKey) == 0x000008, "Wrong alignment on AppPlayerController_GetRaceConfigKey");
static_assert(sizeof(AppPlayerController_GetRaceConfigKey) == 0x000028, "Wrong size on AppPlayerController_GetRaceConfigKey");
static_assert(offsetof(AppPlayerController_GetRaceConfigKey, InActionName) == 0x000000, "Member 'AppPlayerController_GetRaceConfigKey::InActionName' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetRaceConfigKey, IsPrimary) == 0x000008, "Member 'AppPlayerController_GetRaceConfigKey::IsPrimary' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetRaceConfigKey, IsGamepad) == 0x000009, "Member 'AppPlayerController_GetRaceConfigKey::IsGamepad' has a wrong offset!");
static_assert(offsetof(AppPlayerController_GetRaceConfigKey, ReturnValue) == 0x000010, "Member 'AppPlayerController_GetRaceConfigKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnChangeControllerInputType
// 0x0002 (0x0002 - 0x0000)
struct AppPlayerController_OnChangeControllerInputType final
{
public:
	EAppControllerInputType                       BeforeType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppControllerInputType                       AfterType;                                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnChangeControllerInputType) == 0x000001, "Wrong alignment on AppPlayerController_OnChangeControllerInputType");
static_assert(sizeof(AppPlayerController_OnChangeControllerInputType) == 0x000002, "Wrong size on AppPlayerController_OnChangeControllerInputType");
static_assert(offsetof(AppPlayerController_OnChangeControllerInputType, BeforeType) == 0x000000, "Member 'AppPlayerController_OnChangeControllerInputType::BeforeType' has a wrong offset!");
static_assert(offsetof(AppPlayerController_OnChangeControllerInputType, AfterType) == 0x000001, "Member 'AppPlayerController_OnChangeControllerInputType::AfterType' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnLeftStickVectorAxisEvent
// 0x0018 (0x0018 - 0x0000)
struct AppPlayerController_OnLeftStickVectorAxisEvent final
{
public:
	struct FVector                                InStickVector;                                     // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnLeftStickVectorAxisEvent) == 0x000008, "Wrong alignment on AppPlayerController_OnLeftStickVectorAxisEvent");
static_assert(sizeof(AppPlayerController_OnLeftStickVectorAxisEvent) == 0x000018, "Wrong size on AppPlayerController_OnLeftStickVectorAxisEvent");
static_assert(offsetof(AppPlayerController_OnLeftStickVectorAxisEvent, InStickVector) == 0x000000, "Member 'AppPlayerController_OnLeftStickVectorAxisEvent::InStickVector' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnMousePointer
// 0x0078 (0x0078 - 0x0000)
struct AppPlayerController_OnMousePointer final
{
public:
	struct FPointerEvent                          InPointerEvent;                                    // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnMousePointer) == 0x000008, "Wrong alignment on AppPlayerController_OnMousePointer");
static_assert(sizeof(AppPlayerController_OnMousePointer) == 0x000078, "Wrong size on AppPlayerController_OnMousePointer");
static_assert(offsetof(AppPlayerController_OnMousePointer, InPointerEvent) == 0x000000, "Member 'AppPlayerController_OnMousePointer::InPointerEvent' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnMousePointerEventBP
// 0x0078 (0x0078 - 0x0000)
struct AppPlayerController_OnMousePointerEventBP final
{
public:
	struct FPointerEvent                          InPointerEvent;                                    // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnMousePointerEventBP) == 0x000008, "Wrong alignment on AppPlayerController_OnMousePointerEventBP");
static_assert(sizeof(AppPlayerController_OnMousePointerEventBP) == 0x000078, "Wrong size on AppPlayerController_OnMousePointerEventBP");
static_assert(offsetof(AppPlayerController_OnMousePointerEventBP, InPointerEvent) == 0x000000, "Member 'AppPlayerController_OnMousePointerEventBP::InPointerEvent' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnMousePointerUp
// 0x0078 (0x0078 - 0x0000)
struct AppPlayerController_OnMousePointerUp final
{
public:
	struct FPointerEvent                          InPointerEvent;                                    // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnMousePointerUp) == 0x000008, "Wrong alignment on AppPlayerController_OnMousePointerUp");
static_assert(sizeof(AppPlayerController_OnMousePointerUp) == 0x000078, "Wrong size on AppPlayerController_OnMousePointerUp");
static_assert(offsetof(AppPlayerController_OnMousePointerUp, InPointerEvent) == 0x000000, "Member 'AppPlayerController_OnMousePointerUp::InPointerEvent' has a wrong offset!");

// Function UnionSystem.AppPlayerController.RegisterMainMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_RegisterMainMenu final
{
public:
	class UObject*                                InObject;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMainMenuRegistPriority                       InPriority;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_RegisterMainMenu) == 0x000008, "Wrong alignment on AppPlayerController_RegisterMainMenu");
static_assert(sizeof(AppPlayerController_RegisterMainMenu) == 0x000010, "Wrong size on AppPlayerController_RegisterMainMenu");
static_assert(offsetof(AppPlayerController_RegisterMainMenu, InObject) == 0x000000, "Member 'AppPlayerController_RegisterMainMenu::InObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_RegisterMainMenu, InPriority) == 0x000008, "Member 'AppPlayerController_RegisterMainMenu::InPriority' has a wrong offset!");

// Function UnionSystem.AppPlayerController.RegisterMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_RegisterMenu final
{
public:
	class UObject*                                InMenuObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPriority;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_RegisterMenu) == 0x000008, "Wrong alignment on AppPlayerController_RegisterMenu");
static_assert(sizeof(AppPlayerController_RegisterMenu) == 0x000010, "Wrong size on AppPlayerController_RegisterMenu");
static_assert(offsetof(AppPlayerController_RegisterMenu, InMenuObject) == 0x000000, "Member 'AppPlayerController_RegisterMenu::InMenuObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_RegisterMenu, InPriority) == 0x000008, "Member 'AppPlayerController_RegisterMenu::InPriority' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetCurrentInputConfig
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_SetCurrentInputConfig final
{
public:
	class FName                                   InputConfigName;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetCurrentInputConfig) == 0x000004, "Wrong alignment on AppPlayerController_SetCurrentInputConfig");
static_assert(sizeof(AppPlayerController_SetCurrentInputConfig) == 0x000008, "Wrong size on AppPlayerController_SetCurrentInputConfig");
static_assert(offsetof(AppPlayerController_SetCurrentInputConfig, InputConfigName) == 0x000000, "Member 'AppPlayerController_SetCurrentInputConfig::InputConfigName' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableMainMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_SetEnableMainMenu final
{
public:
	const class UObject*                          InObject;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnable;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_SetEnableMainMenu) == 0x000008, "Wrong alignment on AppPlayerController_SetEnableMainMenu");
static_assert(sizeof(AppPlayerController_SetEnableMainMenu) == 0x000010, "Wrong size on AppPlayerController_SetEnableMainMenu");
static_assert(offsetof(AppPlayerController_SetEnableMainMenu, InObject) == 0x000000, "Member 'AppPlayerController_SetEnableMainMenu::InObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_SetEnableMainMenu, IsEnable) == 0x000008, "Member 'AppPlayerController_SetEnableMainMenu::IsEnable' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableMainMenuAll
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_SetEnableMainMenuAll final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetEnableMainMenuAll) == 0x000001, "Wrong alignment on AppPlayerController_SetEnableMainMenuAll");
static_assert(sizeof(AppPlayerController_SetEnableMainMenuAll) == 0x000001, "Wrong size on AppPlayerController_SetEnableMainMenuAll");
static_assert(offsetof(AppPlayerController_SetEnableMainMenuAll, IsEnable) == 0x000000, "Member 'AppPlayerController_SetEnableMainMenuAll::IsEnable' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableMainMenuLowerPriority
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_SetEnableMainMenuLowerPriority final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InPrioirty;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetEnableMainMenuLowerPriority) == 0x000004, "Wrong alignment on AppPlayerController_SetEnableMainMenuLowerPriority");
static_assert(sizeof(AppPlayerController_SetEnableMainMenuLowerPriority) == 0x000008, "Wrong size on AppPlayerController_SetEnableMainMenuLowerPriority");
static_assert(offsetof(AppPlayerController_SetEnableMainMenuLowerPriority, IsEnable) == 0x000000, "Member 'AppPlayerController_SetEnableMainMenuLowerPriority::IsEnable' has a wrong offset!");
static_assert(offsetof(AppPlayerController_SetEnableMainMenuLowerPriority, InPrioirty) == 0x000004, "Member 'AppPlayerController_SetEnableMainMenuLowerPriority::InPrioirty' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableMainMenuUpperPriority
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_SetEnableMainMenuUpperPriority final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InPrioirty;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetEnableMainMenuUpperPriority) == 0x000004, "Wrong alignment on AppPlayerController_SetEnableMainMenuUpperPriority");
static_assert(sizeof(AppPlayerController_SetEnableMainMenuUpperPriority) == 0x000008, "Wrong size on AppPlayerController_SetEnableMainMenuUpperPriority");
static_assert(offsetof(AppPlayerController_SetEnableMainMenuUpperPriority, IsEnable) == 0x000000, "Member 'AppPlayerController_SetEnableMainMenuUpperPriority::IsEnable' has a wrong offset!");
static_assert(offsetof(AppPlayerController_SetEnableMainMenuUpperPriority, InPrioirty) == 0x000004, "Member 'AppPlayerController_SetEnableMainMenuUpperPriority::InPrioirty' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableSubMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_SetEnableSubMenu final
{
public:
	const class UObject*                          InObject;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnable;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_SetEnableSubMenu) == 0x000008, "Wrong alignment on AppPlayerController_SetEnableSubMenu");
static_assert(sizeof(AppPlayerController_SetEnableSubMenu) == 0x000010, "Wrong size on AppPlayerController_SetEnableSubMenu");
static_assert(offsetof(AppPlayerController_SetEnableSubMenu, InObject) == 0x000000, "Member 'AppPlayerController_SetEnableSubMenu::InObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_SetEnableSubMenu, IsEnable) == 0x000008, "Member 'AppPlayerController_SetEnableSubMenu::IsEnable' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableSubMenuAll
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_SetEnableSubMenuAll final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetEnableSubMenuAll) == 0x000001, "Wrong alignment on AppPlayerController_SetEnableSubMenuAll");
static_assert(sizeof(AppPlayerController_SetEnableSubMenuAll) == 0x000001, "Wrong size on AppPlayerController_SetEnableSubMenuAll");
static_assert(offsetof(AppPlayerController_SetEnableSubMenuAll, IsEnable) == 0x000000, "Member 'AppPlayerController_SetEnableSubMenuAll::IsEnable' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableSubMenuLowerPriority
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_SetEnableSubMenuLowerPriority final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InPrioirty;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetEnableSubMenuLowerPriority) == 0x000004, "Wrong alignment on AppPlayerController_SetEnableSubMenuLowerPriority");
static_assert(sizeof(AppPlayerController_SetEnableSubMenuLowerPriority) == 0x000008, "Wrong size on AppPlayerController_SetEnableSubMenuLowerPriority");
static_assert(offsetof(AppPlayerController_SetEnableSubMenuLowerPriority, IsEnable) == 0x000000, "Member 'AppPlayerController_SetEnableSubMenuLowerPriority::IsEnable' has a wrong offset!");
static_assert(offsetof(AppPlayerController_SetEnableSubMenuLowerPriority, InPrioirty) == 0x000004, "Member 'AppPlayerController_SetEnableSubMenuLowerPriority::InPrioirty' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetEnableSubMenuUpperPriority
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_SetEnableSubMenuUpperPriority final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InPrioirty;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetEnableSubMenuUpperPriority) == 0x000004, "Wrong alignment on AppPlayerController_SetEnableSubMenuUpperPriority");
static_assert(sizeof(AppPlayerController_SetEnableSubMenuUpperPriority) == 0x000008, "Wrong size on AppPlayerController_SetEnableSubMenuUpperPriority");
static_assert(offsetof(AppPlayerController_SetEnableSubMenuUpperPriority, IsEnable) == 0x000000, "Member 'AppPlayerController_SetEnableSubMenuUpperPriority::IsEnable' has a wrong offset!");
static_assert(offsetof(AppPlayerController_SetEnableSubMenuUpperPriority, InPrioirty) == 0x000004, "Member 'AppPlayerController_SetEnableSubMenuUpperPriority::InPrioirty' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetForceNonConsumeMouseEvent
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_SetForceNonConsumeMouseEvent final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetForceNonConsumeMouseEvent) == 0x000001, "Wrong alignment on AppPlayerController_SetForceNonConsumeMouseEvent");
static_assert(sizeof(AppPlayerController_SetForceNonConsumeMouseEvent) == 0x000001, "Wrong size on AppPlayerController_SetForceNonConsumeMouseEvent");
static_assert(offsetof(AppPlayerController_SetForceNonConsumeMouseEvent, bEnable) == 0x000000, "Member 'AppPlayerController_SetForceNonConsumeMouseEvent::bEnable' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetInputBlocked
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_SetInputBlocked final
{
public:
	bool                                          InBlocked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetInputBlocked) == 0x000001, "Wrong alignment on AppPlayerController_SetInputBlocked");
static_assert(sizeof(AppPlayerController_SetInputBlocked) == 0x000001, "Wrong size on AppPlayerController_SetInputBlocked");
static_assert(offsetof(AppPlayerController_SetInputBlocked, InBlocked) == 0x000000, "Member 'AppPlayerController_SetInputBlocked::InBlocked' has a wrong offset!");

// Function UnionSystem.AppPlayerController.SetLastHoveredObject
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_SetLastHoveredObject final
{
public:
	class UObject*                                HoveredObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_SetLastHoveredObject) == 0x000008, "Wrong alignment on AppPlayerController_SetLastHoveredObject");
static_assert(sizeof(AppPlayerController_SetLastHoveredObject) == 0x000008, "Wrong size on AppPlayerController_SetLastHoveredObject");
static_assert(offsetof(AppPlayerController_SetLastHoveredObject, HoveredObject) == 0x000000, "Member 'AppPlayerController_SetLastHoveredObject::HoveredObject' has a wrong offset!");

// Function UnionSystem.AppPlayerController.UnregisterMainMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_UnregisterMainMenu final
{
public:
	const class UObject*                          InObject;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_UnregisterMainMenu) == 0x000008, "Wrong alignment on AppPlayerController_UnregisterMainMenu");
static_assert(sizeof(AppPlayerController_UnregisterMainMenu) == 0x000010, "Wrong size on AppPlayerController_UnregisterMainMenu");
static_assert(offsetof(AppPlayerController_UnregisterMainMenu, InObject) == 0x000000, "Member 'AppPlayerController_UnregisterMainMenu::InObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_UnregisterMainMenu, ReturnValue) == 0x000008, "Member 'AppPlayerController_UnregisterMainMenu::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.UnregisterSingleMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_UnregisterSingleMenu final
{
public:
	const class UObject*                          InMenuObject;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_UnregisterSingleMenu) == 0x000008, "Wrong alignment on AppPlayerController_UnregisterSingleMenu");
static_assert(sizeof(AppPlayerController_UnregisterSingleMenu) == 0x000010, "Wrong size on AppPlayerController_UnregisterSingleMenu");
static_assert(offsetof(AppPlayerController_UnregisterSingleMenu, InMenuObject) == 0x000000, "Member 'AppPlayerController_UnregisterSingleMenu::InMenuObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_UnregisterSingleMenu, ReturnValue) == 0x000008, "Member 'AppPlayerController_UnregisterSingleMenu::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.UnregisterSingleSubMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_UnregisterSingleSubMenu final
{
public:
	const class UObject*                          InMenuObject;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerController_UnregisterSingleSubMenu) == 0x000008, "Wrong alignment on AppPlayerController_UnregisterSingleSubMenu");
static_assert(sizeof(AppPlayerController_UnregisterSingleSubMenu) == 0x000010, "Wrong size on AppPlayerController_UnregisterSingleSubMenu");
static_assert(offsetof(AppPlayerController_UnregisterSingleSubMenu, InMenuObject) == 0x000000, "Member 'AppPlayerController_UnregisterSingleSubMenu::InMenuObject' has a wrong offset!");
static_assert(offsetof(AppPlayerController_UnregisterSingleSubMenu, ReturnValue) == 0x000008, "Member 'AppPlayerController_UnregisterSingleSubMenu::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetLeftMouseButtonPressing
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_GetLeftMouseButtonPressing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetLeftMouseButtonPressing) == 0x000001, "Wrong alignment on AppPlayerController_GetLeftMouseButtonPressing");
static_assert(sizeof(AppPlayerController_GetLeftMouseButtonPressing) == 0x000001, "Wrong size on AppPlayerController_GetLeftMouseButtonPressing");
static_assert(offsetof(AppPlayerController_GetLeftMouseButtonPressing, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetLeftMouseButtonPressing::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetLeftStickAxisValue
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_GetLeftStickAxisValue final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetLeftStickAxisValue) == 0x000008, "Wrong alignment on AppPlayerController_GetLeftStickAxisValue");
static_assert(sizeof(AppPlayerController_GetLeftStickAxisValue) == 0x000010, "Wrong size on AppPlayerController_GetLeftStickAxisValue");
static_assert(offsetof(AppPlayerController_GetLeftStickAxisValue, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetLeftStickAxisValue::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetRegisteredMenu
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_GetRegisteredMenu final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetRegisteredMenu) == 0x000008, "Wrong alignment on AppPlayerController_GetRegisteredMenu");
static_assert(sizeof(AppPlayerController_GetRegisteredMenu) == 0x000008, "Wrong size on AppPlayerController_GetRegisteredMenu");
static_assert(offsetof(AppPlayerController_GetRegisteredMenu, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetRegisteredMenu::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetRegisteredSubMenu
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerController_GetRegisteredSubMenu final
{
public:
	TArray<class UObject*>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetRegisteredSubMenu) == 0x000008, "Wrong alignment on AppPlayerController_GetRegisteredSubMenu");
static_assert(sizeof(AppPlayerController_GetRegisteredSubMenu) == 0x000010, "Wrong size on AppPlayerController_GetRegisteredSubMenu");
static_assert(offsetof(AppPlayerController_GetRegisteredSubMenu, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetRegisteredSubMenu::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.GetSystemFocusedWidgetName
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerController_GetSystemFocusedWidgetName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_GetSystemFocusedWidgetName) == 0x000004, "Wrong alignment on AppPlayerController_GetSystemFocusedWidgetName");
static_assert(sizeof(AppPlayerController_GetSystemFocusedWidgetName) == 0x000008, "Wrong size on AppPlayerController_GetSystemFocusedWidgetName");
static_assert(offsetof(AppPlayerController_GetSystemFocusedWidgetName, ReturnValue) == 0x000000, "Member 'AppPlayerController_GetSystemFocusedWidgetName::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnIsMenuInputEnabled
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_OnIsMenuInputEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnIsMenuInputEnabled) == 0x000001, "Wrong alignment on AppPlayerController_OnIsMenuInputEnabled");
static_assert(sizeof(AppPlayerController_OnIsMenuInputEnabled) == 0x000001, "Wrong size on AppPlayerController_OnIsMenuInputEnabled");
static_assert(offsetof(AppPlayerController_OnIsMenuInputEnabled, ReturnValue) == 0x000000, "Member 'AppPlayerController_OnIsMenuInputEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerController.OnIsSubMenuInputEnabled
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerController_OnIsSubMenuInputEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerController_OnIsSubMenuInputEnabled) == 0x000001, "Wrong alignment on AppPlayerController_OnIsSubMenuInputEnabled");
static_assert(sizeof(AppPlayerController_OnIsSubMenuInputEnabled) == 0x000001, "Wrong size on AppPlayerController_OnIsSubMenuInputEnabled");
static_assert(offsetof(AppPlayerController_OnIsSubMenuInputEnabled, ReturnValue) == 0x000000, "Member 'AppPlayerController_OnIsSubMenuInputEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.AddDeviceChangeInterface
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerControllerSubsystem_AddDeviceChangeInterface final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InIFObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_AddDeviceChangeInterface) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_AddDeviceChangeInterface");
static_assert(sizeof(AppPlayerControllerSubsystem_AddDeviceChangeInterface) == 0x000010, "Wrong size on AppPlayerControllerSubsystem_AddDeviceChangeInterface");
static_assert(offsetof(AppPlayerControllerSubsystem_AddDeviceChangeInterface, InPlayerControllerIndex) == 0x000000, "Member 'AppPlayerControllerSubsystem_AddDeviceChangeInterface::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_AddDeviceChangeInterface, InIFObject) == 0x000008, "Member 'AppPlayerControllerSubsystem_AddDeviceChangeInterface::InIFObject' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.CalcCurrentDeviceButtonTexture
// 0x0018 (0x0018 - 0x0000)
struct AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             OutTexure;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppControllerInputType                       ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture");
static_assert(sizeof(AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture) == 0x000018, "Wrong size on AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture");
static_assert(offsetof(AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture, PlayerControllerIndex) == 0x000000, "Member 'AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture, OutTexure) == 0x000008, "Member 'AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture::OutTexure' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture, ReturnValue) == 0x000010, "Member 'AppPlayerControllerSubsystem_CalcCurrentDeviceButtonTexture::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.CallChangeControllerInputType
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_CallChangeControllerInputType final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppControllerInputType                       InControllerInputType;                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerControllerSubsystem_CallChangeControllerInputType) == 0x000004, "Wrong alignment on AppPlayerControllerSubsystem_CallChangeControllerInputType");
static_assert(sizeof(AppPlayerControllerSubsystem_CallChangeControllerInputType) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_CallChangeControllerInputType");
static_assert(offsetof(AppPlayerControllerSubsystem_CallChangeControllerInputType, InPlayerControllerIndex) == 0x000000, "Member 'AppPlayerControllerSubsystem_CallChangeControllerInputType::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_CallChangeControllerInputType, InControllerInputType) == 0x000004, "Member 'AppPlayerControllerSubsystem_CallChangeControllerInputType::InControllerInputType' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.CreatePlayer
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerControllerSubsystem_CreatePlayer final
{
public:
	int32                                         ControllerId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnPlayerController;                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_CreatePlayer) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_CreatePlayer");
static_assert(sizeof(AppPlayerControllerSubsystem_CreatePlayer) == 0x000010, "Wrong size on AppPlayerControllerSubsystem_CreatePlayer");
static_assert(offsetof(AppPlayerControllerSubsystem_CreatePlayer, ControllerId) == 0x000000, "Member 'AppPlayerControllerSubsystem_CreatePlayer::ControllerId' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_CreatePlayer, bSpawnPlayerController) == 0x000004, "Member 'AppPlayerControllerSubsystem_CreatePlayer::bSpawnPlayerController' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_CreatePlayer, ReturnValue) == 0x000008, "Member 'AppPlayerControllerSubsystem_CreatePlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetAppPlayerController
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerControllerSubsystem_GetAppPlayerController final
{
public:
	int32                                         ControllerId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_GetAppPlayerController) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_GetAppPlayerController");
static_assert(sizeof(AppPlayerControllerSubsystem_GetAppPlayerController) == 0x000010, "Wrong size on AppPlayerControllerSubsystem_GetAppPlayerController");
static_assert(offsetof(AppPlayerControllerSubsystem_GetAppPlayerController, ControllerId) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetAppPlayerController::ControllerId' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_GetAppPlayerController, ReturnValue) == 0x000008, "Member 'AppPlayerControllerSubsystem_GetAppPlayerController::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetControllerTextureIndexFromFKey
// 0x0020 (0x0020 - 0x0000)
struct AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey");
static_assert(sizeof(AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey) == 0x000020, "Wrong size on AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey");
static_assert(offsetof(AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey, InKey) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey::InKey' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey, ReturnValue) == 0x000018, "Member 'AppPlayerControllerSubsystem_GetControllerTextureIndexFromFKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetCurrentButtonTextureType
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerControllerSubsystem_GetCurrentButtonTextureType final
{
public:
	EControllerButtonTextureType                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_GetCurrentButtonTextureType) == 0x000001, "Wrong alignment on AppPlayerControllerSubsystem_GetCurrentButtonTextureType");
static_assert(sizeof(AppPlayerControllerSubsystem_GetCurrentButtonTextureType) == 0x000001, "Wrong size on AppPlayerControllerSubsystem_GetCurrentButtonTextureType");
static_assert(offsetof(AppPlayerControllerSubsystem_GetCurrentButtonTextureType, ReturnValue) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetCurrentButtonTextureType::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetCurrentDeviceTexture
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_GetCurrentDeviceTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_GetCurrentDeviceTexture) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_GetCurrentDeviceTexture");
static_assert(sizeof(AppPlayerControllerSubsystem_GetCurrentDeviceTexture) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_GetCurrentDeviceTexture");
static_assert(offsetof(AppPlayerControllerSubsystem_GetCurrentDeviceTexture, ReturnValue) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetCurrentDeviceTexture::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetMenuKeyboardButtonTexture
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture");
static_assert(sizeof(AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture");
static_assert(offsetof(AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture, ReturnValue) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetMenuKeyboardButtonTexture::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetMenuMouseButtonTexture
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_GetMenuMouseButtonTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_GetMenuMouseButtonTexture) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_GetMenuMouseButtonTexture");
static_assert(sizeof(AppPlayerControllerSubsystem_GetMenuMouseButtonTexture) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_GetMenuMouseButtonTexture");
static_assert(offsetof(AppPlayerControllerSubsystem_GetMenuMouseButtonTexture, ReturnValue) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetMenuMouseButtonTexture::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.RemoveDeviceChangeInterface
// 0x0010 (0x0010 - 0x0000)
struct AppPlayerControllerSubsystem_RemoveDeviceChangeInterface final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InIFObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_RemoveDeviceChangeInterface) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_RemoveDeviceChangeInterface");
static_assert(sizeof(AppPlayerControllerSubsystem_RemoveDeviceChangeInterface) == 0x000010, "Wrong size on AppPlayerControllerSubsystem_RemoveDeviceChangeInterface");
static_assert(offsetof(AppPlayerControllerSubsystem_RemoveDeviceChangeInterface, InPlayerControllerIndex) == 0x000000, "Member 'AppPlayerControllerSubsystem_RemoveDeviceChangeInterface::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_RemoveDeviceChangeInterface, InIFObject) == 0x000008, "Member 'AppPlayerControllerSubsystem_RemoveDeviceChangeInterface::InIFObject' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.RemovePlayer
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_RemovePlayer final
{
public:
	int32                                         ControllerId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyPawn;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerControllerSubsystem_RemovePlayer) == 0x000004, "Wrong alignment on AppPlayerControllerSubsystem_RemovePlayer");
static_assert(sizeof(AppPlayerControllerSubsystem_RemovePlayer) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_RemovePlayer");
static_assert(offsetof(AppPlayerControllerSubsystem_RemovePlayer, ControllerId) == 0x000000, "Member 'AppPlayerControllerSubsystem_RemovePlayer::ControllerId' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_RemovePlayer, bDestroyPawn) == 0x000004, "Member 'AppPlayerControllerSubsystem_RemovePlayer::bDestroyPawn' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.SetButtonTextureType
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerControllerSubsystem_SetButtonTextureType final
{
public:
	EControllerButtonTextureType                  InTextureType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_SetButtonTextureType) == 0x000001, "Wrong alignment on AppPlayerControllerSubsystem_SetButtonTextureType");
static_assert(sizeof(AppPlayerControllerSubsystem_SetButtonTextureType) == 0x000001, "Wrong size on AppPlayerControllerSubsystem_SetButtonTextureType");
static_assert(offsetof(AppPlayerControllerSubsystem_SetButtonTextureType, InTextureType) == 0x000000, "Member 'AppPlayerControllerSubsystem_SetButtonTextureType::InTextureType' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.SetPlayer
// 0x0018 (0x0018 - 0x0000)
struct AppPlayerControllerSubsystem_SetPlayer final
{
public:
	int32                                         ControllerId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAppPlayerController*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_SetPlayer) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_SetPlayer");
static_assert(sizeof(AppPlayerControllerSubsystem_SetPlayer) == 0x000018, "Wrong size on AppPlayerControllerSubsystem_SetPlayer");
static_assert(offsetof(AppPlayerControllerSubsystem_SetPlayer, ControllerId) == 0x000000, "Member 'AppPlayerControllerSubsystem_SetPlayer::ControllerId' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_SetPlayer, PlayerController) == 0x000008, "Member 'AppPlayerControllerSubsystem_SetPlayer::PlayerController' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_SetPlayer, ReturnValue) == 0x000010, "Member 'AppPlayerControllerSubsystem_SetPlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.SetTextureForButtonMaterials
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_SetTextureForButtonMaterials final
{
public:
	class UObject*                                InTextureObj;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_SetTextureForButtonMaterials) == 0x000008, "Wrong alignment on AppPlayerControllerSubsystem_SetTextureForButtonMaterials");
static_assert(sizeof(AppPlayerControllerSubsystem_SetTextureForButtonMaterials) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_SetTextureForButtonMaterials");
static_assert(offsetof(AppPlayerControllerSubsystem_SetTextureForButtonMaterials, InTextureObj) == 0x000000, "Member 'AppPlayerControllerSubsystem_SetTextureForButtonMaterials::InTextureObj' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.UpdateButtonMaterialByDeviceType
// 0x0001 (0x0001 - 0x0000)
struct AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType final
{
public:
	uint8                                         DeviceType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType) == 0x000001, "Wrong alignment on AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType");
static_assert(sizeof(AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType) == 0x000001, "Wrong size on AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType");
static_assert(offsetof(AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType, DeviceType) == 0x000000, "Member 'AppPlayerControllerSubsystem_UpdateButtonMaterialByDeviceType::DeviceType' has a wrong offset!");

// Function UnionSystem.AppPlayerControllerSubsystem.GetCurrentDisplayKeytopPattern
// 0x0008 (0x0008 - 0x0000)
struct AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern) == 0x000004, "Wrong alignment on AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern");
static_assert(sizeof(AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern) == 0x000008, "Wrong size on AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern");
static_assert(offsetof(AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern, InPlayerIndex) == 0x000000, "Member 'AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern, ReturnValue) == 0x000004, "Member 'AppPlayerControllerSubsystem_GetCurrentDisplayKeytopPattern::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppRaceEventManager.SetTickable
// 0x0001 (0x0001 - 0x0000)
struct AppRaceEventManager_SetTickable final
{
public:
	bool                                          bTickable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppRaceEventManager_SetTickable) == 0x000001, "Wrong alignment on AppRaceEventManager_SetTickable");
static_assert(sizeof(AppRaceEventManager_SetTickable) == 0x000001, "Wrong size on AppRaceEventManager_SetTickable");
static_assert(offsetof(AppRaceEventManager_SetTickable, bTickable) == 0x000000, "Member 'AppRaceEventManager_SetTickable::bTickable' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.AddCompensationData
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_AddCompensationData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_AddCompensationData) == 0x000004, "Wrong alignment on AppSaveGameHelper_AddCompensationData");
static_assert(sizeof(AppSaveGameHelper_AddCompensationData) == 0x000004, "Wrong size on AppSaveGameHelper_AddCompensationData");
static_assert(offsetof(AppSaveGameHelper_AddCompensationData, ID) == 0x000000, "Member 'AppSaveGameHelper_AddCompensationData::ID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.AddRaceStatsValue
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_AddRaceStatsValue final
{
public:
	EStatsEventId                                 InStatsId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_AddRaceStatsValue) == 0x000004, "Wrong alignment on AppSaveGameHelper_AddRaceStatsValue");
static_assert(sizeof(AppSaveGameHelper_AddRaceStatsValue) == 0x000008, "Wrong size on AppSaveGameHelper_AddRaceStatsValue");
static_assert(offsetof(AppSaveGameHelper_AddRaceStatsValue, InStatsId) == 0x000000, "Member 'AppSaveGameHelper_AddRaceStatsValue::InStatsId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_AddRaceStatsValue, Value) == 0x000004, "Member 'AppSaveGameHelper_AddRaceStatsValue::Value' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.AddRewardGetDisplayRequestData
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_AddRewardGetDisplayRequestData final
{
public:
	ERewardAchievementType                        InRewardAchievementType;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_AddRewardGetDisplayRequestData) == 0x000001, "Wrong alignment on AppSaveGameHelper_AddRewardGetDisplayRequestData");
static_assert(sizeof(AppSaveGameHelper_AddRewardGetDisplayRequestData) == 0x000001, "Wrong size on AppSaveGameHelper_AddRewardGetDisplayRequestData");
static_assert(offsetof(AppSaveGameHelper_AddRewardGetDisplayRequestData, InRewardAchievementType) == 0x000000, "Member 'AppSaveGameHelper_AddRewardGetDisplayRequestData::InRewardAchievementType' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.AddRivalWinCount
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_AddRivalWinCount final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_AddRivalWinCount) == 0x000001, "Wrong alignment on AppSaveGameHelper_AddRivalWinCount");
static_assert(sizeof(AppSaveGameHelper_AddRivalWinCount) == 0x000001, "Wrong size on AppSaveGameHelper_AddRivalWinCount");
static_assert(offsetof(AppSaveGameHelper_AddRivalWinCount, DriverId) == 0x000000, "Member 'AppSaveGameHelper_AddRivalWinCount::DriverId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.CheckRewardGetDisplayRequest
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_CheckRewardGetDisplayRequest final
{
public:
	ERewardAchievementType                        InRewardAchievementType;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_CheckRewardGetDisplayRequest) == 0x000001, "Wrong alignment on AppSaveGameHelper_CheckRewardGetDisplayRequest");
static_assert(sizeof(AppSaveGameHelper_CheckRewardGetDisplayRequest) == 0x000002, "Wrong size on AppSaveGameHelper_CheckRewardGetDisplayRequest");
static_assert(offsetof(AppSaveGameHelper_CheckRewardGetDisplayRequest, InRewardAchievementType) == 0x000000, "Member 'AppSaveGameHelper_CheckRewardGetDisplayRequest::InRewardAchievementType' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_CheckRewardGetDisplayRequest, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_CheckRewardGetDisplayRequest::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.CheckRewardGetDisplayRequestData
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_CheckRewardGetDisplayRequestData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_CheckRewardGetDisplayRequestData) == 0x000001, "Wrong alignment on AppSaveGameHelper_CheckRewardGetDisplayRequestData");
static_assert(sizeof(AppSaveGameHelper_CheckRewardGetDisplayRequestData) == 0x000001, "Wrong size on AppSaveGameHelper_CheckRewardGetDisplayRequestData");
static_assert(offsetof(AppSaveGameHelper_CheckRewardGetDisplayRequestData, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_CheckRewardGetDisplayRequestData::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ClearDriverNew
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ClearDriverNew final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ClearDriverNew) == 0x000001, "Wrong alignment on AppSaveGameHelper_ClearDriverNew");
static_assert(sizeof(AppSaveGameHelper_ClearDriverNew) == 0x000001, "Wrong size on AppSaveGameHelper_ClearDriverNew");
static_assert(offsetof(AppSaveGameHelper_ClearDriverNew, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_ClearDriverNew::InDriverId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ClearHintRead
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ClearHintRead final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ClearHintRead) == 0x000001, "Wrong alignment on AppSaveGameHelper_ClearHintRead");
static_assert(sizeof(AppSaveGameHelper_ClearHintRead) == 0x000001, "Wrong size on AppSaveGameHelper_ClearHintRead");
static_assert(offsetof(AppSaveGameHelper_ClearHintRead, InHintId) == 0x000000, "Member 'AppSaveGameHelper_ClearHintRead::InHintId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ClearRewardGetDisplayRequestData
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ClearRewardGetDisplayRequestData final
{
public:
	ERewardAchievementType                        InRewardAchievementType;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ClearRewardGetDisplayRequestData) == 0x000001, "Wrong alignment on AppSaveGameHelper_ClearRewardGetDisplayRequestData");
static_assert(sizeof(AppSaveGameHelper_ClearRewardGetDisplayRequestData) == 0x000001, "Wrong size on AppSaveGameHelper_ClearRewardGetDisplayRequestData");
static_assert(offsetof(AppSaveGameHelper_ClearRewardGetDisplayRequestData, InRewardAchievementType) == 0x000000, "Member 'AppSaveGameHelper_ClearRewardGetDisplayRequestData::InRewardAchievementType' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ConvertItemSwitchSettingSaveToTableStruct
// 0x0028 (0x0028 - 0x0000)
struct AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct final
{
public:
	struct FItemSwitchSettingSave                 InSetting;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FItemSwitchSetting                     OutSetting;                                        // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct) == 0x000008, "Wrong alignment on AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct");
static_assert(sizeof(AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct) == 0x000028, "Wrong size on AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct");
static_assert(offsetof(AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct, InSetting) == 0x000000, "Member 'AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct::InSetting' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct, OutSetting) == 0x000010, "Member 'AppSaveGameHelper_ConvertItemSwitchSettingSaveToTableStruct::OutSetting' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ConvertPartyRacePresetSettingSaveToTableStruct
// 0x0110 (0x0110 - 0x0000)
struct AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct final
{
public:
	struct FPartyRacePresetSettingSave            InSetting;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FPartyRacePresetSetting                OutSetting;                                        // 0x0058(0x00B8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct) == 0x000008, "Wrong alignment on AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct");
static_assert(sizeof(AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct) == 0x000110, "Wrong size on AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct");
static_assert(offsetof(AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct, InSetting) == 0x000000, "Member 'AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct::InSetting' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct, OutSetting) == 0x000058, "Member 'AppSaveGameHelper_ConvertPartyRacePresetSettingSaveToTableStruct::OutSetting' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetAlbumAvailable
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetAlbumAvailable final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_GetAlbumAvailable) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetAlbumAvailable");
static_assert(sizeof(AppSaveGameHelper_GetAlbumAvailable) == 0x000008, "Wrong size on AppSaveGameHelper_GetAlbumAvailable");
static_assert(offsetof(AppSaveGameHelper_GetAlbumAvailable, ID) == 0x000000, "Member 'AppSaveGameHelper_GetAlbumAvailable::ID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetAlbumAvailable, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetAlbumAvailable::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetAllHonorTitleUnlock
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetAllHonorTitleUnlock final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetAllHonorTitleUnlock) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetAllHonorTitleUnlock");
static_assert(sizeof(AppSaveGameHelper_GetAllHonorTitleUnlock) == 0x000010, "Wrong size on AppSaveGameHelper_GetAllHonorTitleUnlock");
static_assert(offsetof(AppSaveGameHelper_GetAllHonorTitleUnlock, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetAllHonorTitleUnlock::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetAllNewHonorTitleUnlocked
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetAllNewHonorTitleUnlocked final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetAllNewHonorTitleUnlocked) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetAllNewHonorTitleUnlocked");
static_assert(sizeof(AppSaveGameHelper_GetAllNewHonorTitleUnlocked) == 0x000010, "Wrong size on AppSaveGameHelper_GetAllNewHonorTitleUnlocked");
static_assert(offsetof(AppSaveGameHelper_GetAllNewHonorTitleUnlocked, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetAllNewHonorTitleUnlocked::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetChallengeLastShowProgress
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetChallengeLastShowProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetChallengeLastShowProgress) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetChallengeLastShowProgress");
static_assert(sizeof(AppSaveGameHelper_GetChallengeLastShowProgress) == 0x000004, "Wrong size on AppSaveGameHelper_GetChallengeLastShowProgress");
static_assert(offsetof(AppSaveGameHelper_GetChallengeLastShowProgress, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetChallengeLastShowProgress::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetChallengeShowProgress
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetChallengeShowProgress final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetChallengeShowProgress) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetChallengeShowProgress");
static_assert(sizeof(AppSaveGameHelper_GetChallengeShowProgress) == 0x000004, "Wrong size on AppSaveGameHelper_GetChallengeShowProgress");
static_assert(offsetof(AppSaveGameHelper_GetChallengeShowProgress, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetChallengeShowProgress::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetCompensationIdArray
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetCompensationIdArray final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetCompensationIdArray) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetCompensationIdArray");
static_assert(sizeof(AppSaveGameHelper_GetCompensationIdArray) == 0x000010, "Wrong size on AppSaveGameHelper_GetCompensationIdArray");
static_assert(offsetof(AppSaveGameHelper_GetCompensationIdArray, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetCompensationIdArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetCourseSwitchSetting
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_GetCourseSwitchSetting final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EStageId>                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetCourseSwitchSetting) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetCourseSwitchSetting");
static_assert(sizeof(AppSaveGameHelper_GetCourseSwitchSetting) == 0x000018, "Wrong size on AppSaveGameHelper_GetCourseSwitchSetting");
static_assert(offsetof(AppSaveGameHelper_GetCourseSwitchSetting, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_GetCourseSwitchSetting::InGameModeId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetCourseSwitchSetting, ReturnValue) == 0x000008, "Member 'AppSaveGameHelper_GetCourseSwitchSetting::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetCustomLapBGM
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetCustomLapBGM final
{
public:
	int32                                         Lap;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserAlbumTrackID                      ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetCustomLapBGM) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetCustomLapBGM");
static_assert(sizeof(AppSaveGameHelper_GetCustomLapBGM) == 0x000010, "Wrong size on AppSaveGameHelper_GetCustomLapBGM");
static_assert(offsetof(AppSaveGameHelper_GetCustomLapBGM, Lap) == 0x000000, "Member 'AppSaveGameHelper_GetCustomLapBGM::Lap' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetCustomLapBGM, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetCustomLapBGM::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetDodonpaEventCompleteFlag
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_GetDodonpaEventCompleteFlag final
{
public:
	EGrandPrixEventFlag                           SaveDataFlagId;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetDodonpaEventCompleteFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetDodonpaEventCompleteFlag");
static_assert(sizeof(AppSaveGameHelper_GetDodonpaEventCompleteFlag) == 0x000002, "Wrong size on AppSaveGameHelper_GetDodonpaEventCompleteFlag");
static_assert(offsetof(AppSaveGameHelper_GetDodonpaEventCompleteFlag, SaveDataFlagId) == 0x000000, "Member 'AppSaveGameHelper_GetDodonpaEventCompleteFlag::SaveDataFlagId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetDodonpaEventCompleteFlag, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_GetDodonpaEventCompleteFlag::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetFriendShipGivedTicket
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetFriendShipGivedTicket final
{
public:
	EDriverId                                     ID;                                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetFriendShipGivedTicket) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetFriendShipGivedTicket");
static_assert(sizeof(AppSaveGameHelper_GetFriendShipGivedTicket) == 0x000008, "Wrong size on AppSaveGameHelper_GetFriendShipGivedTicket");
static_assert(offsetof(AppSaveGameHelper_GetFriendShipGivedTicket, ID) == 0x000000, "Member 'AppSaveGameHelper_GetFriendShipGivedTicket::ID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetFriendShipGivedTicket, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetFriendShipGivedTicket::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetGadgetCustomizeData
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetGadgetCustomizeData final
{
public:
	struct FUserGadgetCustomizeData               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetGadgetCustomizeData) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetGadgetCustomizeData");
static_assert(sizeof(AppSaveGameHelper_GetGadgetCustomizeData) == 0x000001, "Wrong size on AppSaveGameHelper_GetGadgetCustomizeData");
static_assert(offsetof(AppSaveGameHelper_GetGadgetCustomizeData, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetGadgetCustomizeData::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetGrandPrixBeforeRivalLevel
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetGrandPrixBeforeRivalLevel final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetGrandPrixBeforeRivalLevel) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetGrandPrixBeforeRivalLevel");
static_assert(sizeof(AppSaveGameHelper_GetGrandPrixBeforeRivalLevel) == 0x000008, "Wrong size on AppSaveGameHelper_GetGrandPrixBeforeRivalLevel");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixBeforeRivalLevel, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_GetGrandPrixBeforeRivalLevel::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixBeforeRivalLevel, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetGrandPrixBeforeRivalLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetGrandPrixClassClearedCountByMenuSpeedClass
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass");
static_assert(sizeof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass) == 0x000008, "Wrong size on AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity");
static_assert(sizeof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity) == 0x000008, "Wrong size on AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetGrandPrixClassClearedCountByMenuSpeedClassIgnoreContinuity::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetGrandPrixRivalLevel
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetGrandPrixRivalLevel final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetGrandPrixRivalLevel) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetGrandPrixRivalLevel");
static_assert(sizeof(AppSaveGameHelper_GetGrandPrixRivalLevel) == 0x000008, "Wrong size on AppSaveGameHelper_GetGrandPrixRivalLevel");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixRivalLevel, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_GetGrandPrixRivalLevel::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixRivalLevel, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetGrandPrixRivalLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetGrandPrixWinCount
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetGrandPrixWinCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetGrandPrixWinCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetGrandPrixWinCount");
static_assert(sizeof(AppSaveGameHelper_GetGrandPrixWinCount) == 0x000004, "Wrong size on AppSaveGameHelper_GetGrandPrixWinCount");
static_assert(offsetof(AppSaveGameHelper_GetGrandPrixWinCount, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetGrandPrixWinCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetHonorTitleIndex
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetHonorTitleIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetHonorTitleIndex) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetHonorTitleIndex");
static_assert(sizeof(AppSaveGameHelper_GetHonorTitleIndex) == 0x000004, "Wrong size on AppSaveGameHelper_GetHonorTitleIndex");
static_assert(offsetof(AppSaveGameHelper_GetHonorTitleIndex, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetHonorTitleIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetHonorTitleInfo
// 0x0050 (0x0050 - 0x0000)
struct AppSaveGameHelper_GetHonorTitleInfo final
{
public:
	struct FHonorTitleListData                    ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetHonorTitleInfo) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetHonorTitleInfo");
static_assert(sizeof(AppSaveGameHelper_GetHonorTitleInfo) == 0x000050, "Wrong size on AppSaveGameHelper_GetHonorTitleInfo");
static_assert(offsetof(AppSaveGameHelper_GetHonorTitleInfo, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetHonorTitleInfo::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetHonorTitleUnlock
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetHonorTitleUnlock final
{
public:
	int32                                         HonorTitleIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_GetHonorTitleUnlock) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetHonorTitleUnlock");
static_assert(sizeof(AppSaveGameHelper_GetHonorTitleUnlock) == 0x000008, "Wrong size on AppSaveGameHelper_GetHonorTitleUnlock");
static_assert(offsetof(AppSaveGameHelper_GetHonorTitleUnlock, HonorTitleIndex) == 0x000000, "Member 'AppSaveGameHelper_GetHonorTitleUnlock::HonorTitleIndex' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetHonorTitleUnlock, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetHonorTitleUnlock::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetIsGhostUploaded
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetIsGhostUploaded final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutIsValid;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetIsGhostUploaded) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetIsGhostUploaded");
static_assert(sizeof(AppSaveGameHelper_GetIsGhostUploaded) == 0x000004, "Wrong size on AppSaveGameHelper_GetIsGhostUploaded");
static_assert(offsetof(AppSaveGameHelper_GetIsGhostUploaded, InStageId) == 0x000000, "Member 'AppSaveGameHelper_GetIsGhostUploaded::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetIsGhostUploaded, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_GetIsGhostUploaded::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetIsGhostUploaded, bOutIsValid) == 0x000002, "Member 'AppSaveGameHelper_GetIsGhostUploaded::bOutIsValid' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetIsGhostUploaded, ReturnValue) == 0x000003, "Member 'AppSaveGameHelper_GetIsGhostUploaded::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetIsValidGhost
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_GetIsValidGhost final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetIsValidGhost) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetIsValidGhost");
static_assert(sizeof(AppSaveGameHelper_GetIsValidGhost) == 0x000003, "Wrong size on AppSaveGameHelper_GetIsValidGhost");
static_assert(offsetof(AppSaveGameHelper_GetIsValidGhost, InStageId) == 0x000000, "Member 'AppSaveGameHelper_GetIsValidGhost::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetIsValidGhost, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_GetIsValidGhost::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetIsValidGhost, ReturnValue) == 0x000002, "Member 'AppSaveGameHelper_GetIsValidGhost::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetItemSwitchSetting
// 0x0020 (0x0020 - 0x0000)
struct AppSaveGameHelper_GetItemSwitchSetting final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSwitchSetting                     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetItemSwitchSetting) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetItemSwitchSetting");
static_assert(sizeof(AppSaveGameHelper_GetItemSwitchSetting) == 0x000020, "Wrong size on AppSaveGameHelper_GetItemSwitchSetting");
static_assert(offsetof(AppSaveGameHelper_GetItemSwitchSetting, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_GetItemSwitchSetting::InGameModeId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetItemSwitchSetting, ReturnValue) == 0x000008, "Member 'AppSaveGameHelper_GetItemSwitchSetting::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetItemSwitchSettingSave
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_GetItemSwitchSettingSave final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSwitchSettingSave                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetItemSwitchSettingSave) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetItemSwitchSettingSave");
static_assert(sizeof(AppSaveGameHelper_GetItemSwitchSettingSave) == 0x000018, "Wrong size on AppSaveGameHelper_GetItemSwitchSettingSave");
static_assert(offsetof(AppSaveGameHelper_GetItemSwitchSettingSave, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_GetItemSwitchSettingSave::InGameModeId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetItemSwitchSettingSave, ReturnValue) == 0x000008, "Member 'AppSaveGameHelper_GetItemSwitchSettingSave::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetMachineColorPresetAll
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetMachineColorPresetAll final
{
public:
	TArray<EMachineColorPresetId>                 OutMachineColorPresetId;                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetMachineColorPresetAll) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetMachineColorPresetAll");
static_assert(sizeof(AppSaveGameHelper_GetMachineColorPresetAll) == 0x000010, "Wrong size on AppSaveGameHelper_GetMachineColorPresetAll");
static_assert(offsetof(AppSaveGameHelper_GetMachineColorPresetAll, OutMachineColorPresetId) == 0x000000, "Member 'AppSaveGameHelper_GetMachineColorPresetAll::OutMachineColorPresetId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetMachinePartsAll
// 0x0030 (0x0030 - 0x0000)
struct AppSaveGameHelper_GetMachinePartsAll final
{
public:
	TArray<EMachineId>                            OutFrontPartsId;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EMachineId>                            OutRearPartsId;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EMachineId>                            OutTirePartsId;                                    // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetMachinePartsAll) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetMachinePartsAll");
static_assert(sizeof(AppSaveGameHelper_GetMachinePartsAll) == 0x000030, "Wrong size on AppSaveGameHelper_GetMachinePartsAll");
static_assert(offsetof(AppSaveGameHelper_GetMachinePartsAll, OutFrontPartsId) == 0x000000, "Member 'AppSaveGameHelper_GetMachinePartsAll::OutFrontPartsId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetMachinePartsAll, OutRearPartsId) == 0x000010, "Member 'AppSaveGameHelper_GetMachinePartsAll::OutRearPartsId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetMachinePartsAll, OutTirePartsId) == 0x000020, "Member 'AppSaveGameHelper_GetMachinePartsAll::OutTirePartsId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetNewHonorTitleUnlocked
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetNewHonorTitleUnlocked final
{
public:
	int32                                         HonorTitleIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_GetNewHonorTitleUnlocked) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetNewHonorTitleUnlocked");
static_assert(sizeof(AppSaveGameHelper_GetNewHonorTitleUnlocked) == 0x000008, "Wrong size on AppSaveGameHelper_GetNewHonorTitleUnlocked");
static_assert(offsetof(AppSaveGameHelper_GetNewHonorTitleUnlocked, HonorTitleIndex) == 0x000000, "Member 'AppSaveGameHelper_GetNewHonorTitleUnlocked::HonorTitleIndex' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetNewHonorTitleUnlocked, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetNewHonorTitleUnlocked::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetNoticeLobbyInvitationOnRace
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetNoticeLobbyInvitationOnRace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetNoticeLobbyInvitationOnRace) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetNoticeLobbyInvitationOnRace");
static_assert(sizeof(AppSaveGameHelper_GetNoticeLobbyInvitationOnRace) == 0x000001, "Wrong size on AppSaveGameHelper_GetNoticeLobbyInvitationOnRace");
static_assert(offsetof(AppSaveGameHelper_GetNoticeLobbyInvitationOnRace, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetNoticeLobbyInvitationOnRace::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetPlayerIconBgColorId
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetPlayerIconBgColorId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetPlayerIconBgColorId) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetPlayerIconBgColorId");
static_assert(sizeof(AppSaveGameHelper_GetPlayerIconBgColorId) == 0x000004, "Wrong size on AppSaveGameHelper_GetPlayerIconBgColorId");
static_assert(offsetof(AppSaveGameHelper_GetPlayerIconBgColorId, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetPlayerIconBgColorId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetPlayerIconId
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetPlayerIconId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetPlayerIconId) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetPlayerIconId");
static_assert(sizeof(AppSaveGameHelper_GetPlayerIconId) == 0x000004, "Wrong size on AppSaveGameHelper_GetPlayerIconId");
static_assert(offsetof(AppSaveGameHelper_GetPlayerIconId, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetPlayerIconId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetProgressIdGrandPrixAnyClass
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_GetProgressIdGrandPrixAnyClass final
{
public:
	EGrandPrixId                                  GrandPrixId;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrandPrixProgressId                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetProgressIdGrandPrixAnyClass) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetProgressIdGrandPrixAnyClass");
static_assert(sizeof(AppSaveGameHelper_GetProgressIdGrandPrixAnyClass) == 0x000002, "Wrong size on AppSaveGameHelper_GetProgressIdGrandPrixAnyClass");
static_assert(offsetof(AppSaveGameHelper_GetProgressIdGrandPrixAnyClass, GrandPrixId) == 0x000000, "Member 'AppSaveGameHelper_GetProgressIdGrandPrixAnyClass::GrandPrixId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetProgressIdGrandPrixAnyClass, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_GetProgressIdGrandPrixAnyClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetProgressIdGrandPrixMenuSpeedClass
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass final
{
public:
	EGrandPrixId                                  GrandPirxId;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMenuSpeedClassId                             MenuSpeedClassId;                                  // 0x0001(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrandPrixProgressId                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass");
static_assert(sizeof(AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass) == 0x000003, "Wrong size on AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass");
static_assert(offsetof(AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass, GrandPirxId) == 0x000000, "Member 'AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass::GrandPirxId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass, MenuSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass::MenuSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass, ReturnValue) == 0x000002, "Member 'AppSaveGameHelper_GetProgressIdGrandPrixMenuSpeedClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRaceParkCustomRaceSetting
// 0x00B8 (0x00B8 - 0x0000)
struct AppSaveGameHelper_GetRaceParkCustomRaceSetting final
{
public:
	struct FPartyRacePresetSetting                OutSetting;                                        // 0x0000(0x00B8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRaceParkCustomRaceSetting) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetRaceParkCustomRaceSetting");
static_assert(sizeof(AppSaveGameHelper_GetRaceParkCustomRaceSetting) == 0x0000B8, "Wrong size on AppSaveGameHelper_GetRaceParkCustomRaceSetting");
static_assert(offsetof(AppSaveGameHelper_GetRaceParkCustomRaceSetting, OutSetting) == 0x000000, "Member 'AppSaveGameHelper_GetRaceParkCustomRaceSetting::OutSetting' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRaceStatsValue
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetRaceStatsValue final
{
public:
	EStatsEventId                                 InStatsId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRaceStatsValue) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetRaceStatsValue");
static_assert(sizeof(AppSaveGameHelper_GetRaceStatsValue) == 0x000008, "Wrong size on AppSaveGameHelper_GetRaceStatsValue");
static_assert(offsetof(AppSaveGameHelper_GetRaceStatsValue, InStatsId) == 0x000000, "Member 'AppSaveGameHelper_GetRaceStatsValue::InStatsId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetRaceStatsValue, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetRaceStatsValue::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRedStarRingAcquisitionPerStage
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_GetRedStarRingAcquisitionPerStage final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRedStarRingAcquisitionPerStage) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetRedStarRingAcquisitionPerStage");
static_assert(sizeof(AppSaveGameHelper_GetRedStarRingAcquisitionPerStage) == 0x000018, "Wrong size on AppSaveGameHelper_GetRedStarRingAcquisitionPerStage");
static_assert(offsetof(AppSaveGameHelper_GetRedStarRingAcquisitionPerStage, InStageId) == 0x000000, "Member 'AppSaveGameHelper_GetRedStarRingAcquisitionPerStage::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetRedStarRingAcquisitionPerStage, ReturnValue) == 0x000008, "Member 'AppSaveGameHelper_GetRedStarRingAcquisitionPerStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRivalAppearanceCount
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetRivalAppearanceCount final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRivalAppearanceCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetRivalAppearanceCount");
static_assert(sizeof(AppSaveGameHelper_GetRivalAppearanceCount) == 0x000008, "Wrong size on AppSaveGameHelper_GetRivalAppearanceCount");
static_assert(offsetof(AppSaveGameHelper_GetRivalAppearanceCount, DriverId) == 0x000000, "Member 'AppSaveGameHelper_GetRivalAppearanceCount::DriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetRivalAppearanceCount, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetRivalAppearanceCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRivalAppearanceCountMin
// 0x0028 (0x0028 - 0x0000)
struct AppSaveGameHelper_GetRivalAppearanceCountMin final
{
public:
	TArray<EDriverId>                             CheckDriverIds;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EDriverId>                             IgnoreDriverIds;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_GetRivalAppearanceCountMin) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetRivalAppearanceCountMin");
static_assert(sizeof(AppSaveGameHelper_GetRivalAppearanceCountMin) == 0x000028, "Wrong size on AppSaveGameHelper_GetRivalAppearanceCountMin");
static_assert(offsetof(AppSaveGameHelper_GetRivalAppearanceCountMin, CheckDriverIds) == 0x000000, "Member 'AppSaveGameHelper_GetRivalAppearanceCountMin::CheckDriverIds' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetRivalAppearanceCountMin, IgnoreDriverIds) == 0x000010, "Member 'AppSaveGameHelper_GetRivalAppearanceCountMin::IgnoreDriverIds' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetRivalAppearanceCountMin, ReturnValue) == 0x000020, "Member 'AppSaveGameHelper_GetRivalAppearanceCountMin::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRivalLevelAdjust
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetRivalLevelAdjust final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRivalLevelAdjust) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetRivalLevelAdjust");
static_assert(sizeof(AppSaveGameHelper_GetRivalLevelAdjust) == 0x000004, "Wrong size on AppSaveGameHelper_GetRivalLevelAdjust");
static_assert(offsetof(AppSaveGameHelper_GetRivalLevelAdjust, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetRivalLevelAdjust::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRivalWinCount
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetRivalWinCount final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRivalWinCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetRivalWinCount");
static_assert(sizeof(AppSaveGameHelper_GetRivalWinCount) == 0x000008, "Wrong size on AppSaveGameHelper_GetRivalWinCount");
static_assert(offsetof(AppSaveGameHelper_GetRivalWinCount, DriverId) == 0x000000, "Member 'AppSaveGameHelper_GetRivalWinCount::DriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetRivalWinCount, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetRivalWinCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetRivalWinRewardEventCount
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetRivalWinRewardEventCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetRivalWinRewardEventCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetRivalWinRewardEventCount");
static_assert(sizeof(AppSaveGameHelper_GetRivalWinRewardEventCount) == 0x000004, "Wrong size on AppSaveGameHelper_GetRivalWinRewardEventCount");
static_assert(offsetof(AppSaveGameHelper_GetRivalWinRewardEventCount, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetRivalWinRewardEventCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetSelectedGadgetPresetId
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetSelectedGadgetPresetId final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetSelectedGadgetPresetId) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetSelectedGadgetPresetId");
static_assert(sizeof(AppSaveGameHelper_GetSelectedGadgetPresetId) == 0x000008, "Wrong size on AppSaveGameHelper_GetSelectedGadgetPresetId");
static_assert(offsetof(AppSaveGameHelper_GetSelectedGadgetPresetId, InPlayerIndex) == 0x000000, "Member 'AppSaveGameHelper_GetSelectedGadgetPresetId::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetSelectedGadgetPresetId, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetSelectedGadgetPresetId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetSelectedGadgetPresetIdsAllPlayer
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer");
static_assert(sizeof(AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer) == 0x000010, "Wrong size on AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer");
static_assert(offsetof(AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetSelectedGadgetPresetIdsAllPlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTimeTrialLastResultId
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetTimeTrialLastResultId final
{
public:
	ETimeTrialWinLoseDispId                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTimeTrialLastResultId) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTimeTrialLastResultId");
static_assert(sizeof(AppSaveGameHelper_GetTimeTrialLastResultId) == 0x000001, "Wrong size on AppSaveGameHelper_GetTimeTrialLastResultId");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialLastResultId, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetTimeTrialLastResultId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTimeTrialMedalAcquisition
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_GetTimeTrialMedalAcquisition final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTimeTrialMedalAcquisition) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTimeTrialMedalAcquisition");
static_assert(sizeof(AppSaveGameHelper_GetTimeTrialMedalAcquisition) == 0x000003, "Wrong size on AppSaveGameHelper_GetTimeTrialMedalAcquisition");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialMedalAcquisition, InStageId) == 0x000000, "Member 'AppSaveGameHelper_GetTimeTrialMedalAcquisition::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialMedalAcquisition, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_GetTimeTrialMedalAcquisition::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialMedalAcquisition, ReturnValue) == 0x000002, "Member 'AppSaveGameHelper_GetTimeTrialMedalAcquisition::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTimeTrialRaceData
// 0x0058 (0x0058 - 0x0000)
struct AppSaveGameHelper_GetTimeTrialRaceData final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutIsGhostValid;                                  // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserTimeTrialRaceData                 ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTimeTrialRaceData) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetTimeTrialRaceData");
static_assert(sizeof(AppSaveGameHelper_GetTimeTrialRaceData) == 0x000058, "Wrong size on AppSaveGameHelper_GetTimeTrialRaceData");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialRaceData, InStageId) == 0x000000, "Member 'AppSaveGameHelper_GetTimeTrialRaceData::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialRaceData, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_GetTimeTrialRaceData::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialRaceData, bOutIsGhostValid) == 0x000002, "Member 'AppSaveGameHelper_GetTimeTrialRaceData::bOutIsGhostValid' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialRaceData, ReturnValue) == 0x000008, "Member 'AppSaveGameHelper_GetTimeTrialRaceData::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTimeTrialRewardCount
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetTimeTrialRewardCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTimeTrialRewardCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetTimeTrialRewardCount");
static_assert(sizeof(AppSaveGameHelper_GetTimeTrialRewardCount) == 0x000004, "Wrong size on AppSaveGameHelper_GetTimeTrialRewardCount");
static_assert(offsetof(AppSaveGameHelper_GetTimeTrialRewardCount, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetTimeTrialRewardCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTipsDisplayIndex
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetTipsDisplayIndex final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTipsDisplayIndex) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTipsDisplayIndex");
static_assert(sizeof(AppSaveGameHelper_GetTipsDisplayIndex) == 0x000001, "Wrong size on AppSaveGameHelper_GetTipsDisplayIndex");
static_assert(offsetof(AppSaveGameHelper_GetTipsDisplayIndex, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetTipsDisplayIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTopKnockdownRivalLevel
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_GetTopKnockdownRivalLevel final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     DriverId;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTopKnockdownRivalLevel) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTopKnockdownRivalLevel");
static_assert(sizeof(AppSaveGameHelper_GetTopKnockdownRivalLevel) == 0x000003, "Wrong size on AppSaveGameHelper_GetTopKnockdownRivalLevel");
static_assert(offsetof(AppSaveGameHelper_GetTopKnockdownRivalLevel, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_GetTopKnockdownRivalLevel::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTopKnockdownRivalLevel, DriverId) == 0x000001, "Member 'AppSaveGameHelper_GetTopKnockdownRivalLevel::DriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTopKnockdownRivalLevel, ReturnValue) == 0x000002, "Member 'AppSaveGameHelper_GetTopKnockdownRivalLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTopKnockdownRivalLevelArray
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_GetTopKnockdownRivalLevelArray final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTopKnockdownRivalLevelArray) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetTopKnockdownRivalLevelArray");
static_assert(sizeof(AppSaveGameHelper_GetTopKnockdownRivalLevelArray) == 0x000018, "Wrong size on AppSaveGameHelper_GetTopKnockdownRivalLevelArray");
static_assert(offsetof(AppSaveGameHelper_GetTopKnockdownRivalLevelArray, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_GetTopKnockdownRivalLevelArray::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTopKnockdownRivalLevelArray, ReturnValue) == 0x000008, "Member 'AppSaveGameHelper_GetTopKnockdownRivalLevelArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTrackAvailable
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_GetTrackAvailable final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_GetTrackAvailable) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetTrackAvailable");
static_assert(sizeof(AppSaveGameHelper_GetTrackAvailable) == 0x000008, "Wrong size on AppSaveGameHelper_GetTrackAvailable");
static_assert(offsetof(AppSaveGameHelper_GetTrackAvailable, ID) == 0x000000, "Member 'AppSaveGameHelper_GetTrackAvailable::ID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTrackAvailable, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_GetTrackAvailable::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTutorialActionCompletedFlag
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_GetTutorialActionCompletedFlag final
{
public:
	ETutorialAction                               tutorialAction;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTutorialActionCompletedFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTutorialActionCompletedFlag");
static_assert(sizeof(AppSaveGameHelper_GetTutorialActionCompletedFlag) == 0x000002, "Wrong size on AppSaveGameHelper_GetTutorialActionCompletedFlag");
static_assert(offsetof(AppSaveGameHelper_GetTutorialActionCompletedFlag, tutorialAction) == 0x000000, "Member 'AppSaveGameHelper_GetTutorialActionCompletedFlag::tutorialAction' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTutorialActionCompletedFlag, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_GetTutorialActionCompletedFlag::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTutorialCompletedFlagPerStage
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_GetTutorialCompletedFlagPerStage final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTutorialCompletedFlagPerStage) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTutorialCompletedFlagPerStage");
static_assert(sizeof(AppSaveGameHelper_GetTutorialCompletedFlagPerStage) == 0x000002, "Wrong size on AppSaveGameHelper_GetTutorialCompletedFlagPerStage");
static_assert(offsetof(AppSaveGameHelper_GetTutorialCompletedFlagPerStage, InStageId) == 0x000000, "Member 'AppSaveGameHelper_GetTutorialCompletedFlagPerStage::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetTutorialCompletedFlagPerStage, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_GetTutorialCompletedFlagPerStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetTutorialPopupDispFlag
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetTutorialPopupDispFlag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetTutorialPopupDispFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetTutorialPopupDispFlag");
static_assert(sizeof(AppSaveGameHelper_GetTutorialPopupDispFlag) == 0x000001, "Wrong size on AppSaveGameHelper_GetTutorialPopupDispFlag");
static_assert(offsetof(AppSaveGameHelper_GetTutorialPopupDispFlag, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetTutorialPopupDispFlag::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserCommonData
// 0x0078 (0x0078 - 0x0000)
struct AppSaveGameHelper_GetUserCommonData final
{
public:
	struct FUserCommonData                        OutUserCommonData;                                 // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserCommonData) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetUserCommonData");
static_assert(sizeof(AppSaveGameHelper_GetUserCommonData) == 0x000078, "Wrong size on AppSaveGameHelper_GetUserCommonData");
static_assert(offsetof(AppSaveGameHelper_GetUserCommonData, OutUserCommonData) == 0x000000, "Member 'AppSaveGameHelper_GetUserCommonData::OutUserCommonData' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserDriverData
// 0x0050 (0x0050 - 0x0000)
struct AppSaveGameHelper_GetUserDriverData final
{
public:
	struct FUserDriverData                        OutUserDriverData;                                 // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserDriverData) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetUserDriverData");
static_assert(sizeof(AppSaveGameHelper_GetUserDriverData) == 0x000050, "Wrong size on AppSaveGameHelper_GetUserDriverData");
static_assert(offsetof(AppSaveGameHelper_GetUserDriverData, OutUserDriverData) == 0x000000, "Member 'AppSaveGameHelper_GetUserDriverData::OutUserDriverData' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserDriverProperty
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_GetUserDriverProperty final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserDriverProperty                    OutUserDriverProperty;                             // 0x0001(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserDriverProperty) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetUserDriverProperty");
static_assert(sizeof(AppSaveGameHelper_GetUserDriverProperty) == 0x000003, "Wrong size on AppSaveGameHelper_GetUserDriverProperty");
static_assert(offsetof(AppSaveGameHelper_GetUserDriverProperty, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_GetUserDriverProperty::InDriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetUserDriverProperty, OutUserDriverProperty) == 0x000001, "Member 'AppSaveGameHelper_GetUserDriverProperty::OutUserDriverProperty' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserHintData
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_GetUserHintData final
{
public:
	struct FUserHintData                          OutUserHintData;                                   // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserHintData) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetUserHintData");
static_assert(sizeof(AppSaveGameHelper_GetUserHintData) == 0x000018, "Wrong size on AppSaveGameHelper_GetUserHintData");
static_assert(offsetof(AppSaveGameHelper_GetUserHintData, OutUserHintData) == 0x000000, "Member 'AppSaveGameHelper_GetUserHintData::OutUserHintData' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserHintProperty
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_GetUserHintProperty final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserHintProperty                      OutUserHintProperty;                               // 0x0001(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserHintProperty) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetUserHintProperty");
static_assert(sizeof(AppSaveGameHelper_GetUserHintProperty) == 0x000003, "Wrong size on AppSaveGameHelper_GetUserHintProperty");
static_assert(offsetof(AppSaveGameHelper_GetUserHintProperty, InHintId) == 0x000000, "Member 'AppSaveGameHelper_GetUserHintProperty::InHintId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetUserHintProperty, OutUserHintProperty) == 0x000001, "Member 'AppSaveGameHelper_GetUserHintProperty::OutUserHintProperty' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserMachineCustomizeData
// 0x0080 (0x0080 - 0x0000)
struct AppSaveGameHelper_GetUserMachineCustomizeData final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              OutUserMachineCustomizeData;                       // 0x0008(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserMachineCustomizeData) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetUserMachineCustomizeData");
static_assert(sizeof(AppSaveGameHelper_GetUserMachineCustomizeData) == 0x000080, "Wrong size on AppSaveGameHelper_GetUserMachineCustomizeData");
static_assert(offsetof(AppSaveGameHelper_GetUserMachineCustomizeData, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_GetUserMachineCustomizeData::InMachineID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_GetUserMachineCustomizeData, OutUserMachineCustomizeData) == 0x000008, "Member 'AppSaveGameHelper_GetUserMachineCustomizeData::OutUserMachineCustomizeData' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserNiceCount
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_GetUserNiceCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserNiceCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_GetUserNiceCount");
static_assert(sizeof(AppSaveGameHelper_GetUserNiceCount) == 0x000004, "Wrong size on AppSaveGameHelper_GetUserNiceCount");
static_assert(offsetof(AppSaveGameHelper_GetUserNiceCount, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetUserNiceCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserRewardGetDisplayRequestData
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_GetUserRewardGetDisplayRequestData final
{
public:
	struct FUserRewardGetDisplayRequestData       OutUserRewardGetDisplayRequestData;                // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserRewardGetDisplayRequestData) == 0x000008, "Wrong alignment on AppSaveGameHelper_GetUserRewardGetDisplayRequestData");
static_assert(sizeof(AppSaveGameHelper_GetUserRewardGetDisplayRequestData) == 0x000010, "Wrong size on AppSaveGameHelper_GetUserRewardGetDisplayRequestData");
static_assert(offsetof(AppSaveGameHelper_GetUserRewardGetDisplayRequestData, OutUserRewardGetDisplayRequestData) == 0x000000, "Member 'AppSaveGameHelper_GetUserRewardGetDisplayRequestData::OutUserRewardGetDisplayRequestData' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserSelectedDriverId
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetUserSelectedDriverId final
{
public:
	EDriverId                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserSelectedDriverId) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetUserSelectedDriverId");
static_assert(sizeof(AppSaveGameHelper_GetUserSelectedDriverId) == 0x000001, "Wrong size on AppSaveGameHelper_GetUserSelectedDriverId");
static_assert(offsetof(AppSaveGameHelper_GetUserSelectedDriverId, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetUserSelectedDriverId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.GetUserSelectedMachineId
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_GetUserSelectedMachineId final
{
public:
	EMachineId                                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_GetUserSelectedMachineId) == 0x000001, "Wrong alignment on AppSaveGameHelper_GetUserSelectedMachineId");
static_assert(sizeof(AppSaveGameHelper_GetUserSelectedMachineId) == 0x000001, "Wrong size on AppSaveGameHelper_GetUserSelectedMachineId");
static_assert(offsetof(AppSaveGameHelper_GetUserSelectedMachineId, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_GetUserSelectedMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.HasAgreedNoticeAgreement
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_HasAgreedNoticeAgreement final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_HasAgreedNoticeAgreement) == 0x000001, "Wrong alignment on AppSaveGameHelper_HasAgreedNoticeAgreement");
static_assert(sizeof(AppSaveGameHelper_HasAgreedNoticeAgreement) == 0x000001, "Wrong size on AppSaveGameHelper_HasAgreedNoticeAgreement");
static_assert(offsetof(AppSaveGameHelper_HasAgreedNoticeAgreement, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_HasAgreedNoticeAgreement::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.HasEnteredMachineCustomizeSequence
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_HasEnteredMachineCustomizeSequence final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_HasEnteredMachineCustomizeSequence) == 0x000001, "Wrong alignment on AppSaveGameHelper_HasEnteredMachineCustomizeSequence");
static_assert(sizeof(AppSaveGameHelper_HasEnteredMachineCustomizeSequence) == 0x000001, "Wrong size on AppSaveGameHelper_HasEnteredMachineCustomizeSequence");
static_assert(offsetof(AppSaveGameHelper_HasEnteredMachineCustomizeSequence, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_HasEnteredMachineCustomizeSequence::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsClearedGrandPrixAnySpeedClass
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass final
{
public:
	EGrandPrixId                                  GrandPrixId;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass");
static_assert(sizeof(AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass) == 0x000002, "Wrong size on AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass");
static_assert(offsetof(AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass, GrandPrixId) == 0x000000, "Member 'AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass::GrandPrixId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsClearedGrandPrixAnySpeedClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsClearedGrandPrixMenuSpeedClass
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass final
{
public:
	EGrandPrixId                                  GrandPirxId;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0001(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass");
static_assert(sizeof(AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass) == 0x000003, "Wrong size on AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass");
static_assert(offsetof(AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass, GrandPirxId) == 0x000000, "Member 'AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass::GrandPirxId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass, SpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass, ReturnValue) == 0x000002, "Member 'AppSaveGameHelper_IsClearedGrandPrixMenuSpeedClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsCompletedGrandPrixEvent
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsCompletedGrandPrixEvent final
{
public:
	EGrandPrixEventFlag                           EventFlagId;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsCompletedGrandPrixEvent) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsCompletedGrandPrixEvent");
static_assert(sizeof(AppSaveGameHelper_IsCompletedGrandPrixEvent) == 0x000002, "Wrong size on AppSaveGameHelper_IsCompletedGrandPrixEvent");
static_assert(offsetof(AppSaveGameHelper_IsCompletedGrandPrixEvent, EventFlagId) == 0x000000, "Member 'AppSaveGameHelper_IsCompletedGrandPrixEvent::EventFlagId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsCompletedGrandPrixEvent, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsCompletedGrandPrixEvent::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsCompletedMachineParts
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsCompletedMachineParts final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsCompletedMachineParts) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsCompletedMachineParts");
static_assert(sizeof(AppSaveGameHelper_IsCompletedMachineParts) == 0x000002, "Wrong size on AppSaveGameHelper_IsCompletedMachineParts");
static_assert(offsetof(AppSaveGameHelper_IsCompletedMachineParts, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_IsCompletedMachineParts::InMachineID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsCompletedMachineParts, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsCompletedMachineParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsCompleteMainChallenge
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsCompleteMainChallenge final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsCompleteMainChallenge) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsCompleteMainChallenge");
static_assert(sizeof(AppSaveGameHelper_IsCompleteMainChallenge) == 0x000001, "Wrong size on AppSaveGameHelper_IsCompleteMainChallenge");
static_assert(offsetof(AppSaveGameHelper_IsCompleteMainChallenge, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsCompleteMainChallenge::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsCompleteSpecialChallenge
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsCompleteSpecialChallenge final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsCompleteSpecialChallenge) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsCompleteSpecialChallenge");
static_assert(sizeof(AppSaveGameHelper_IsCompleteSpecialChallenge) == 0x000001, "Wrong size on AppSaveGameHelper_IsCompleteSpecialChallenge");
static_assert(offsetof(AppSaveGameHelper_IsCompleteSpecialChallenge, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsCompleteSpecialChallenge::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsDiffGadgetPresetIds
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_IsDiffGadgetPresetIds final
{
public:
	TArray<int32>                                 GadgetPresetIds;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_IsDiffGadgetPresetIds) == 0x000008, "Wrong alignment on AppSaveGameHelper_IsDiffGadgetPresetIds");
static_assert(sizeof(AppSaveGameHelper_IsDiffGadgetPresetIds) == 0x000018, "Wrong size on AppSaveGameHelper_IsDiffGadgetPresetIds");
static_assert(offsetof(AppSaveGameHelper_IsDiffGadgetPresetIds, GadgetPresetIds) == 0x000000, "Member 'AppSaveGameHelper_IsDiffGadgetPresetIds::GadgetPresetIds' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsDiffGadgetPresetIds, ReturnValue) == 0x000010, "Member 'AppSaveGameHelper_IsDiffGadgetPresetIds::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsFinishedAdvertiseLogoFlow
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsFinishedAdvertiseLogoFlow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsFinishedAdvertiseLogoFlow) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsFinishedAdvertiseLogoFlow");
static_assert(sizeof(AppSaveGameHelper_IsFinishedAdvertiseLogoFlow) == 0x000001, "Wrong size on AppSaveGameHelper_IsFinishedAdvertiseLogoFlow");
static_assert(offsetof(AppSaveGameHelper_IsFinishedAdvertiseLogoFlow, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsFinishedAdvertiseLogoFlow::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGetFrontParts
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsGetFrontParts final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGetFrontParts) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGetFrontParts");
static_assert(sizeof(AppSaveGameHelper_IsGetFrontParts) == 0x000002, "Wrong size on AppSaveGameHelper_IsGetFrontParts");
static_assert(offsetof(AppSaveGameHelper_IsGetFrontParts, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_IsGetFrontParts::InMachineID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsGetFrontParts, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsGetFrontParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGetMachineColorPreset
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsGetMachineColorPreset final
{
public:
	EMachineColorPresetId                         InMachineColorPresetId;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGetMachineColorPreset) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGetMachineColorPreset");
static_assert(sizeof(AppSaveGameHelper_IsGetMachineColorPreset) == 0x000002, "Wrong size on AppSaveGameHelper_IsGetMachineColorPreset");
static_assert(offsetof(AppSaveGameHelper_IsGetMachineColorPreset, InMachineColorPresetId) == 0x000000, "Member 'AppSaveGameHelper_IsGetMachineColorPreset::InMachineColorPresetId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsGetMachineColorPreset, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsGetMachineColorPreset::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGetRearParts
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsGetRearParts final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGetRearParts) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGetRearParts");
static_assert(sizeof(AppSaveGameHelper_IsGetRearParts) == 0x000002, "Wrong size on AppSaveGameHelper_IsGetRearParts");
static_assert(offsetof(AppSaveGameHelper_IsGetRearParts, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_IsGetRearParts::InMachineID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsGetRearParts, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsGetRearParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGetTireParts
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsGetTireParts final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGetTireParts) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGetTireParts");
static_assert(sizeof(AppSaveGameHelper_IsGetTireParts) == 0x000002, "Wrong size on AppSaveGameHelper_IsGetTireParts");
static_assert(offsetof(AppSaveGameHelper_IsGetTireParts, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_IsGetTireParts::InMachineID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsGetTireParts, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsGetTireParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGrandPrixFirstIrregularAppeared
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared");
static_assert(sizeof(AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared) == 0x000001, "Wrong size on AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared");
static_assert(offsetof(AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsGrandPrixFirstIrregularAppeared::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGrandPrixLeast1Play
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsGrandPrixLeast1Play final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGrandPrixLeast1Play) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGrandPrixLeast1Play");
static_assert(sizeof(AppSaveGameHelper_IsGrandPrixLeast1Play) == 0x000001, "Wrong size on AppSaveGameHelper_IsGrandPrixLeast1Play");
static_assert(offsetof(AppSaveGameHelper_IsGrandPrixLeast1Play, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsGrandPrixLeast1Play::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGrandPrixLeast1PlayEachGrandPrix
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix final
{
public:
	EGrandPrixId                                  GrandPrixId;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix");
static_assert(sizeof(AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix) == 0x000002, "Wrong size on AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix");
static_assert(offsetof(AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix, GrandPrixId) == 0x000000, "Member 'AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix::GrandPrixId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsGrandPrixLeast1PlayEachGrandPrix::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGrandPrixSelectTimeTrialLinkFirst
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst");
static_assert(sizeof(AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst) == 0x000001, "Wrong size on AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst");
static_assert(offsetof(AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsGrandPrixSelectTimeTrialLinkFirst::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsGrandPrixWinRewardOverTiming
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsGrandPrixWinRewardOverTiming final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsGrandPrixWinRewardOverTiming) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsGrandPrixWinRewardOverTiming");
static_assert(sizeof(AppSaveGameHelper_IsGrandPrixWinRewardOverTiming) == 0x000001, "Wrong size on AppSaveGameHelper_IsGrandPrixWinRewardOverTiming");
static_assert(offsetof(AppSaveGameHelper_IsGrandPrixWinRewardOverTiming, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsGrandPrixWinRewardOverTiming::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsIncompleteCollaboGPVictoryPopupRequired
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired");
static_assert(sizeof(AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired) == 0x000001, "Wrong size on AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired");
static_assert(offsetof(AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsIncompleteCollaboGPVictoryPopupRequired::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsNewDriver
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsNewDriver final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsNewDriver) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsNewDriver");
static_assert(sizeof(AppSaveGameHelper_IsNewDriver) == 0x000002, "Wrong size on AppSaveGameHelper_IsNewDriver");
static_assert(offsetof(AppSaveGameHelper_IsNewDriver, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_IsNewDriver::InDriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsNewDriver, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsNewDriver::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsNewHint
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsNewHint final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsNewHint) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsNewHint");
static_assert(sizeof(AppSaveGameHelper_IsNewHint) == 0x000002, "Wrong size on AppSaveGameHelper_IsNewHint");
static_assert(offsetof(AppSaveGameHelper_IsNewHint, InHintId) == 0x000000, "Member 'AppSaveGameHelper_IsNewHint::InHintId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsNewHint, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsNewHint::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsOpenedMirrorClass
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsOpenedMirrorClass final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsOpenedMirrorClass) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsOpenedMirrorClass");
static_assert(sizeof(AppSaveGameHelper_IsOpenedMirrorClass) == 0x000001, "Wrong size on AppSaveGameHelper_IsOpenedMirrorClass");
static_assert(offsetof(AppSaveGameHelper_IsOpenedMirrorClass, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsOpenedMirrorClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsOpenMirror
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsOpenMirror final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsOpenMirror) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsOpenMirror");
static_assert(sizeof(AppSaveGameHelper_IsOpenMirror) == 0x000001, "Wrong size on AppSaveGameHelper_IsOpenMirror");
static_assert(offsetof(AppSaveGameHelper_IsOpenMirror, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsOpenMirror::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsOpenSuperSonicSpeed
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsOpenSuperSonicSpeed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsOpenSuperSonicSpeed) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsOpenSuperSonicSpeed");
static_assert(sizeof(AppSaveGameHelper_IsOpenSuperSonicSpeed) == 0x000001, "Wrong size on AppSaveGameHelper_IsOpenSuperSonicSpeed");
static_assert(offsetof(AppSaveGameHelper_IsOpenSuperSonicSpeed, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsOpenSuperSonicSpeed::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsPatchUpdate
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsPatchUpdate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsPatchUpdate) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsPatchUpdate");
static_assert(sizeof(AppSaveGameHelper_IsPatchUpdate) == 0x000001, "Wrong size on AppSaveGameHelper_IsPatchUpdate");
static_assert(offsetof(AppSaveGameHelper_IsPatchUpdate, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsPatchUpdate::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsReadHint
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsReadHint final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsReadHint) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsReadHint");
static_assert(sizeof(AppSaveGameHelper_IsReadHint) == 0x000002, "Wrong size on AppSaveGameHelper_IsReadHint");
static_assert(offsetof(AppSaveGameHelper_IsReadHint, InHintId) == 0x000000, "Member 'AppSaveGameHelper_IsReadHint::InHintId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsReadHint, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsReadHint::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsSelectableDriver
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsSelectableDriver final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsSelectableDriver) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsSelectableDriver");
static_assert(sizeof(AppSaveGameHelper_IsSelectableDriver) == 0x000002, "Wrong size on AppSaveGameHelper_IsSelectableDriver");
static_assert(offsetof(AppSaveGameHelper_IsSelectableDriver, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_IsSelectableDriver::InDriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsSelectableDriver, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsSelectableDriver::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsSpawnGrandPrixLevelDownUIFlag
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag");
static_assert(sizeof(AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag) == 0x000002, "Wrong size on AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag");
static_assert(offsetof(AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag, ReturnValue) == 0x000001, "Member 'AppSaveGameHelper_IsSpawnGrandPrixLevelDownUIFlag::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsSpawnPowerRivalFlag
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_IsSpawnPowerRivalFlag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_IsSpawnPowerRivalFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_IsSpawnPowerRivalFlag");
static_assert(sizeof(AppSaveGameHelper_IsSpawnPowerRivalFlag) == 0x000001, "Wrong size on AppSaveGameHelper_IsSpawnPowerRivalFlag");
static_assert(offsetof(AppSaveGameHelper_IsSpawnPowerRivalFlag, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_IsSpawnPowerRivalFlag::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.IsStickerUnlocked
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_IsStickerUnlocked final
{
public:
	int32                                         InStickerId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_IsStickerUnlocked) == 0x000004, "Wrong alignment on AppSaveGameHelper_IsStickerUnlocked");
static_assert(sizeof(AppSaveGameHelper_IsStickerUnlocked) == 0x000008, "Wrong size on AppSaveGameHelper_IsStickerUnlocked");
static_assert(offsetof(AppSaveGameHelper_IsStickerUnlocked, InStickerId) == 0x000000, "Member 'AppSaveGameHelper_IsStickerUnlocked::InStickerId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_IsStickerUnlocked, ReturnValue) == 0x000004, "Member 'AppSaveGameHelper_IsStickerUnlocked::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ReflectRivalLose
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ReflectRivalLose final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ReflectRivalLose) == 0x000001, "Wrong alignment on AppSaveGameHelper_ReflectRivalLose");
static_assert(sizeof(AppSaveGameHelper_ReflectRivalLose) == 0x000001, "Wrong size on AppSaveGameHelper_ReflectRivalLose");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalLose, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_ReflectRivalLose::SpeedClassId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ReflectRivalWin
// 0x0014 (0x0014 - 0x0000)
struct AppSaveGameHelper_ReflectRivalWin final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     DriverId;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxRivalLevel;                                     // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PowerRivalAddLevel;                                // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KnockdownRivalLevel;                               // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnedPowRival;                                  // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_ReflectRivalWin) == 0x000004, "Wrong alignment on AppSaveGameHelper_ReflectRivalWin");
static_assert(sizeof(AppSaveGameHelper_ReflectRivalWin) == 0x000014, "Wrong size on AppSaveGameHelper_ReflectRivalWin");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalWin, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_ReflectRivalWin::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalWin, DriverId) == 0x000001, "Member 'AppSaveGameHelper_ReflectRivalWin::DriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalWin, MaxRivalLevel) == 0x000004, "Member 'AppSaveGameHelper_ReflectRivalWin::MaxRivalLevel' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalWin, PowerRivalAddLevel) == 0x000008, "Member 'AppSaveGameHelper_ReflectRivalWin::PowerRivalAddLevel' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalWin, KnockdownRivalLevel) == 0x00000C, "Member 'AppSaveGameHelper_ReflectRivalWin::KnockdownRivalLevel' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_ReflectRivalWin, bSpawnedPowRival) == 0x000010, "Member 'AppSaveGameHelper_ReflectRivalWin::bSpawnedPowRival' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.RemoveCompensationData
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_RemoveCompensationData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_RemoveCompensationData) == 0x000004, "Wrong alignment on AppSaveGameHelper_RemoveCompensationData");
static_assert(sizeof(AppSaveGameHelper_RemoveCompensationData) == 0x000004, "Wrong size on AppSaveGameHelper_RemoveCompensationData");
static_assert(offsetof(AppSaveGameHelper_RemoveCompensationData, ID) == 0x000000, "Member 'AppSaveGameHelper_RemoveCompensationData::ID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ResetCourseSwitchSetting
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ResetCourseSwitchSetting final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ResetCourseSwitchSetting) == 0x000001, "Wrong alignment on AppSaveGameHelper_ResetCourseSwitchSetting");
static_assert(sizeof(AppSaveGameHelper_ResetCourseSwitchSetting) == 0x000001, "Wrong size on AppSaveGameHelper_ResetCourseSwitchSetting");
static_assert(offsetof(AppSaveGameHelper_ResetCourseSwitchSetting, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_ResetCourseSwitchSetting::InGameModeId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ResetItemSwitchSetting
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ResetItemSwitchSetting final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ResetItemSwitchSetting) == 0x000001, "Wrong alignment on AppSaveGameHelper_ResetItemSwitchSetting");
static_assert(sizeof(AppSaveGameHelper_ResetItemSwitchSetting) == 0x000001, "Wrong size on AppSaveGameHelper_ResetItemSwitchSetting");
static_assert(offsetof(AppSaveGameHelper_ResetItemSwitchSetting, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_ResetItemSwitchSetting::InGameModeId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ResetNewHonorTitle
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_ResetNewHonorTitle final
{
public:
	int32                                         HonorTitleIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ResetNewHonorTitle) == 0x000004, "Wrong alignment on AppSaveGameHelper_ResetNewHonorTitle");
static_assert(sizeof(AppSaveGameHelper_ResetNewHonorTitle) == 0x000004, "Wrong size on AppSaveGameHelper_ResetNewHonorTitle");
static_assert(offsetof(AppSaveGameHelper_ResetNewHonorTitle, HonorTitleIndex) == 0x000000, "Member 'AppSaveGameHelper_ResetNewHonorTitle::HonorTitleIndex' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.ResetSaveDataIfSpecificMilestoneVersion
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion) == 0x000001, "Wrong alignment on AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion");
static_assert(sizeof(AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion) == 0x000001, "Wrong size on AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion");
static_assert(offsetof(AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion, ReturnValue) == 0x000000, "Member 'AppSaveGameHelper_ResetSaveDataIfSpecificMilestoneVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.RollbackRivalResult
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_RollbackRivalResult final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_RollbackRivalResult) == 0x000001, "Wrong alignment on AppSaveGameHelper_RollbackRivalResult");
static_assert(sizeof(AppSaveGameHelper_RollbackRivalResult) == 0x000001, "Wrong size on AppSaveGameHelper_RollbackRivalResult");
static_assert(offsetof(AppSaveGameHelper_RollbackRivalResult, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_RollbackRivalResult::SpeedClassId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SaveTimeTrialMedalAcquisition
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_SaveTimeTrialMedalAcquisition final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInAcquisition;                                    // 0x0002(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SaveTimeTrialMedalAcquisition) == 0x000001, "Wrong alignment on AppSaveGameHelper_SaveTimeTrialMedalAcquisition");
static_assert(sizeof(AppSaveGameHelper_SaveTimeTrialMedalAcquisition) == 0x000003, "Wrong size on AppSaveGameHelper_SaveTimeTrialMedalAcquisition");
static_assert(offsetof(AppSaveGameHelper_SaveTimeTrialMedalAcquisition, InStageId) == 0x000000, "Member 'AppSaveGameHelper_SaveTimeTrialMedalAcquisition::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SaveTimeTrialMedalAcquisition, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_SaveTimeTrialMedalAcquisition::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SaveTimeTrialMedalAcquisition, bInAcquisition) == 0x000002, "Member 'AppSaveGameHelper_SaveTimeTrialMedalAcquisition::bInAcquisition' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SaveTimeTrialRaceData
// 0x0058 (0x0058 - 0x0000)
struct AppSaveGameHelper_SaveTimeTrialRaceData final
{
public:
	struct FUserTimeTrialRaceData                 UserTimeTrialRaceData;                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0050(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0051(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppSaveGameHelper_SaveTimeTrialRaceData) == 0x000008, "Wrong alignment on AppSaveGameHelper_SaveTimeTrialRaceData");
static_assert(sizeof(AppSaveGameHelper_SaveTimeTrialRaceData) == 0x000058, "Wrong size on AppSaveGameHelper_SaveTimeTrialRaceData");
static_assert(offsetof(AppSaveGameHelper_SaveTimeTrialRaceData, UserTimeTrialRaceData) == 0x000000, "Member 'AppSaveGameHelper_SaveTimeTrialRaceData::UserTimeTrialRaceData' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SaveTimeTrialRaceData, InStageId) == 0x000050, "Member 'AppSaveGameHelper_SaveTimeTrialRaceData::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SaveTimeTrialRaceData, InSpeedClassId) == 0x000051, "Member 'AppSaveGameHelper_SaveTimeTrialRaceData::InSpeedClassId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetAlbumAvailable
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetAlbumAvailable final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetAlbumAvailable) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetAlbumAvailable");
static_assert(sizeof(AppSaveGameHelper_SetAlbumAvailable) == 0x000004, "Wrong size on AppSaveGameHelper_SetAlbumAvailable");
static_assert(offsetof(AppSaveGameHelper_SetAlbumAvailable, ID) == 0x000000, "Member 'AppSaveGameHelper_SetAlbumAvailable::ID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetChallengeLastShowProgress
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetChallengeLastShowProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetChallengeLastShowProgress) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetChallengeLastShowProgress");
static_assert(sizeof(AppSaveGameHelper_SetChallengeLastShowProgress) == 0x000004, "Wrong size on AppSaveGameHelper_SetChallengeLastShowProgress");
static_assert(offsetof(AppSaveGameHelper_SetChallengeLastShowProgress, Progress) == 0x000000, "Member 'AppSaveGameHelper_SetChallengeLastShowProgress::Progress' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetChallengeShowProgress
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetChallengeShowProgress final
{
public:
	int32                                         InProgress;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetChallengeShowProgress) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetChallengeShowProgress");
static_assert(sizeof(AppSaveGameHelper_SetChallengeShowProgress) == 0x000004, "Wrong size on AppSaveGameHelper_SetChallengeShowProgress");
static_assert(offsetof(AppSaveGameHelper_SetChallengeShowProgress, InProgress) == 0x000000, "Member 'AppSaveGameHelper_SetChallengeShowProgress::InProgress' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetCompleteMainChallenge
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetCompleteMainChallenge final
{
public:
	bool                                          InComplete;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetCompleteMainChallenge) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetCompleteMainChallenge");
static_assert(sizeof(AppSaveGameHelper_SetCompleteMainChallenge) == 0x000001, "Wrong size on AppSaveGameHelper_SetCompleteMainChallenge");
static_assert(offsetof(AppSaveGameHelper_SetCompleteMainChallenge, InComplete) == 0x000000, "Member 'AppSaveGameHelper_SetCompleteMainChallenge::InComplete' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetCompleteSpecialChallenge
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetCompleteSpecialChallenge final
{
public:
	bool                                          InComplete;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetCompleteSpecialChallenge) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetCompleteSpecialChallenge");
static_assert(sizeof(AppSaveGameHelper_SetCompleteSpecialChallenge) == 0x000001, "Wrong size on AppSaveGameHelper_SetCompleteSpecialChallenge");
static_assert(offsetof(AppSaveGameHelper_SetCompleteSpecialChallenge, InComplete) == 0x000000, "Member 'AppSaveGameHelper_SetCompleteSpecialChallenge::InComplete' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetCourseSwitchSetting
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_SetCourseSwitchSetting final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EStageId>                              InStageIds;                                        // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetCourseSwitchSetting) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetCourseSwitchSetting");
static_assert(sizeof(AppSaveGameHelper_SetCourseSwitchSetting) == 0x000018, "Wrong size on AppSaveGameHelper_SetCourseSwitchSetting");
static_assert(offsetof(AppSaveGameHelper_SetCourseSwitchSetting, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_SetCourseSwitchSetting::InGameModeId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetCourseSwitchSetting, InStageIds) == 0x000008, "Member 'AppSaveGameHelper_SetCourseSwitchSetting::InStageIds' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetCustomLapBGM
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_SetCustomLapBGM final
{
public:
	int32                                         Lap;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserAlbumTrackID                      AlbumTrack;                                        // 0x0004(0x000C)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetCustomLapBGM) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetCustomLapBGM");
static_assert(sizeof(AppSaveGameHelper_SetCustomLapBGM) == 0x000010, "Wrong size on AppSaveGameHelper_SetCustomLapBGM");
static_assert(offsetof(AppSaveGameHelper_SetCustomLapBGM, Lap) == 0x000000, "Member 'AppSaveGameHelper_SetCustomLapBGM::Lap' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetCustomLapBGM, AlbumTrack) == 0x000004, "Member 'AppSaveGameHelper_SetCustomLapBGM::AlbumTrack' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetDodonpaEventCompleteFlag
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_SetDodonpaEventCompleteFlag final
{
public:
	EGrandPrixEventFlag                           SaveDataFlagId;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsComplete;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetDodonpaEventCompleteFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetDodonpaEventCompleteFlag");
static_assert(sizeof(AppSaveGameHelper_SetDodonpaEventCompleteFlag) == 0x000002, "Wrong size on AppSaveGameHelper_SetDodonpaEventCompleteFlag");
static_assert(offsetof(AppSaveGameHelper_SetDodonpaEventCompleteFlag, SaveDataFlagId) == 0x000000, "Member 'AppSaveGameHelper_SetDodonpaEventCompleteFlag::SaveDataFlagId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetDodonpaEventCompleteFlag, IsComplete) == 0x000001, "Member 'AppSaveGameHelper_SetDodonpaEventCompleteFlag::IsComplete' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetDriverSelectable
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetDriverSelectable final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetDriverSelectable) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetDriverSelectable");
static_assert(sizeof(AppSaveGameHelper_SetDriverSelectable) == 0x000001, "Wrong size on AppSaveGameHelper_SetDriverSelectable");
static_assert(offsetof(AppSaveGameHelper_SetDriverSelectable, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_SetDriverSelectable::InDriverId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetDriverUnselectable
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetDriverUnselectable final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetDriverUnselectable) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetDriverUnselectable");
static_assert(sizeof(AppSaveGameHelper_SetDriverUnselectable) == 0x000001, "Wrong size on AppSaveGameHelper_SetDriverUnselectable");
static_assert(offsetof(AppSaveGameHelper_SetDriverUnselectable, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_SetDriverUnselectable::InDriverId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGadgetCustomizeDataSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex");
static_assert(sizeof(AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex) == 0x000004, "Wrong size on AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex");
static_assert(offsetof(AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex, SelectedIndex) == 0x000000, "Member 'AppSaveGameHelper_SetGadgetCustomizeDataSelectedIndex::SelectedIndex' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGrandPrixALLKnockDownRivalLevel
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel final
{
public:
	uint8                                         SetValue;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel");
static_assert(sizeof(AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel) == 0x000001, "Wrong size on AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel, SetValue) == 0x000000, "Member 'AppSaveGameHelper_SetGrandPrixALLKnockDownRivalLevel::SetValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGrandPrixALLRivalLevel
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetGrandPrixALLRivalLevel final
{
public:
	uint8                                         SetValue;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGrandPrixALLRivalLevel) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetGrandPrixALLRivalLevel");
static_assert(sizeof(AppSaveGameHelper_SetGrandPrixALLRivalLevel) == 0x000001, "Wrong size on AppSaveGameHelper_SetGrandPrixALLRivalLevel");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixALLRivalLevel, SetValue) == 0x000000, "Member 'AppSaveGameHelper_SetGrandPrixALLRivalLevel::SetValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGrandPrixFirstIrregularAppeared
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared final
{
public:
	bool                                          bAppeared;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared");
static_assert(sizeof(AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared) == 0x000001, "Wrong size on AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared, bAppeared) == 0x000000, "Member 'AppSaveGameHelper_SetGrandPrixFirstIrregularAppeared::bAppeared' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGrandPrixLeast1Play
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetGrandPrixLeast1Play final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGrandPrixLeast1Play) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetGrandPrixLeast1Play");
static_assert(sizeof(AppSaveGameHelper_SetGrandPrixLeast1Play) == 0x000001, "Wrong size on AppSaveGameHelper_SetGrandPrixLeast1Play");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixLeast1Play, bEnable) == 0x000000, "Member 'AppSaveGameHelper_SetGrandPrixLeast1Play::bEnable' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGrandPrixLeast1PlayEachGrandPrix
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix final
{
public:
	EGrandPrixId                                  GrandPrixId;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InLeast1Play;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix");
static_assert(sizeof(AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix) == 0x000002, "Wrong size on AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix, GrandPrixId) == 0x000000, "Member 'AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix::GrandPrixId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix, InLeast1Play) == 0x000001, "Member 'AppSaveGameHelper_SetGrandPrixLeast1PlayEachGrandPrix::InLeast1Play' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetGrandPrixSelectTimeTrialLinkFirst
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst final
{
public:
	bool                                          First;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst");
static_assert(sizeof(AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst) == 0x000001, "Wrong size on AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst");
static_assert(offsetof(AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst, First) == 0x000000, "Member 'AppSaveGameHelper_SetGrandPrixSelectTimeTrialLinkFirst::First' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetHasEnteredMachineCustomizeSequence
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence final
{
public:
	bool                                          bInHasEntered;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence");
static_assert(sizeof(AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence) == 0x000001, "Wrong size on AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence");
static_assert(offsetof(AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence, bInHasEntered) == 0x000000, "Member 'AppSaveGameHelper_SetHasEnteredMachineCustomizeSequence::bInHasEntered' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetHintNew
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_SetHintNew final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInIsNew;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetHintNew) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetHintNew");
static_assert(sizeof(AppSaveGameHelper_SetHintNew) == 0x000002, "Wrong size on AppSaveGameHelper_SetHintNew");
static_assert(offsetof(AppSaveGameHelper_SetHintNew, InHintId) == 0x000000, "Member 'AppSaveGameHelper_SetHintNew::InHintId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetHintNew, bInIsNew) == 0x000001, "Member 'AppSaveGameHelper_SetHintNew::bInIsNew' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetHintRead
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetHintRead final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetHintRead) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetHintRead");
static_assert(sizeof(AppSaveGameHelper_SetHintRead) == 0x000001, "Wrong size on AppSaveGameHelper_SetHintRead");
static_assert(offsetof(AppSaveGameHelper_SetHintRead, InHintId) == 0x000000, "Member 'AppSaveGameHelper_SetHintRead::InHintId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetHonorTitleIndex
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetHonorTitleIndex final
{
public:
	int32                                         HonorTitleIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetHonorTitleIndex) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetHonorTitleIndex");
static_assert(sizeof(AppSaveGameHelper_SetHonorTitleIndex) == 0x000004, "Wrong size on AppSaveGameHelper_SetHonorTitleIndex");
static_assert(offsetof(AppSaveGameHelper_SetHonorTitleIndex, HonorTitleIndex) == 0x000000, "Member 'AppSaveGameHelper_SetHonorTitleIndex::HonorTitleIndex' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetIsGhostUploaded
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_SetIsGhostUploaded final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInIsGhostUploaded;                                // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetIsGhostUploaded) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetIsGhostUploaded");
static_assert(sizeof(AppSaveGameHelper_SetIsGhostUploaded) == 0x000003, "Wrong size on AppSaveGameHelper_SetIsGhostUploaded");
static_assert(offsetof(AppSaveGameHelper_SetIsGhostUploaded, InStageId) == 0x000000, "Member 'AppSaveGameHelper_SetIsGhostUploaded::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetIsGhostUploaded, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_SetIsGhostUploaded::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetIsGhostUploaded, bInIsGhostUploaded) == 0x000002, "Member 'AppSaveGameHelper_SetIsGhostUploaded::bInIsGhostUploaded' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetIsValidGhost
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_SetIsValidGhost final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInIsValidGhost;                                   // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetIsValidGhost) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetIsValidGhost");
static_assert(sizeof(AppSaveGameHelper_SetIsValidGhost) == 0x000003, "Wrong size on AppSaveGameHelper_SetIsValidGhost");
static_assert(offsetof(AppSaveGameHelper_SetIsValidGhost, InStageId) == 0x000000, "Member 'AppSaveGameHelper_SetIsValidGhost::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetIsValidGhost, InSpeedClassId) == 0x000001, "Member 'AppSaveGameHelper_SetIsValidGhost::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetIsValidGhost, bInIsValidGhost) == 0x000002, "Member 'AppSaveGameHelper_SetIsValidGhost::bInIsValidGhost' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetItemSwitchSetting
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_SetItemSwitchSetting final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSwitchSettingSave                 InItemSwitchSetting;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetItemSwitchSetting) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetItemSwitchSetting");
static_assert(sizeof(AppSaveGameHelper_SetItemSwitchSetting) == 0x000018, "Wrong size on AppSaveGameHelper_SetItemSwitchSetting");
static_assert(offsetof(AppSaveGameHelper_SetItemSwitchSetting, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_SetItemSwitchSetting::InGameModeId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetItemSwitchSetting, InItemSwitchSetting) == 0x000008, "Member 'AppSaveGameHelper_SetItemSwitchSetting::InItemSwitchSetting' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetItemSwitchSettingSave
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_SetItemSwitchSettingSave final
{
public:
	EGameModeId                                   InGameModeId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSwitchSettingSave                 InItemSwitchSetting;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetItemSwitchSettingSave) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetItemSwitchSettingSave");
static_assert(sizeof(AppSaveGameHelper_SetItemSwitchSettingSave) == 0x000018, "Wrong size on AppSaveGameHelper_SetItemSwitchSettingSave");
static_assert(offsetof(AppSaveGameHelper_SetItemSwitchSettingSave, InGameModeId) == 0x000000, "Member 'AppSaveGameHelper_SetItemSwitchSettingSave::InGameModeId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetItemSwitchSettingSave, InItemSwitchSetting) == 0x000008, "Member 'AppSaveGameHelper_SetItemSwitchSettingSave::InItemSwitchSetting' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetNoticeLobbyInvitationOnRace
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetNoticeLobbyInvitationOnRace final
{
public:
	bool                                          bInEnable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetNoticeLobbyInvitationOnRace) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetNoticeLobbyInvitationOnRace");
static_assert(sizeof(AppSaveGameHelper_SetNoticeLobbyInvitationOnRace) == 0x000001, "Wrong size on AppSaveGameHelper_SetNoticeLobbyInvitationOnRace");
static_assert(offsetof(AppSaveGameHelper_SetNoticeLobbyInvitationOnRace, bInEnable) == 0x000000, "Member 'AppSaveGameHelper_SetNoticeLobbyInvitationOnRace::bInEnable' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetOpenMirror
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetOpenMirror final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetOpenMirror) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetOpenMirror");
static_assert(sizeof(AppSaveGameHelper_SetOpenMirror) == 0x000001, "Wrong size on AppSaveGameHelper_SetOpenMirror");
static_assert(offsetof(AppSaveGameHelper_SetOpenMirror, bEnable) == 0x000000, "Member 'AppSaveGameHelper_SetOpenMirror::bEnable' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetOpenSuperSonicSpeed
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetOpenSuperSonicSpeed final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetOpenSuperSonicSpeed) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetOpenSuperSonicSpeed");
static_assert(sizeof(AppSaveGameHelper_SetOpenSuperSonicSpeed) == 0x000001, "Wrong size on AppSaveGameHelper_SetOpenSuperSonicSpeed");
static_assert(offsetof(AppSaveGameHelper_SetOpenSuperSonicSpeed, bEnable) == 0x000000, "Member 'AppSaveGameHelper_SetOpenSuperSonicSpeed::bEnable' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetPlayerIconBgColorId
// 0x0010 (0x0010 - 0x0000)
struct AppSaveGameHelper_SetPlayerIconBgColorId final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetPlayerIconBgColorId) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetPlayerIconBgColorId");
static_assert(sizeof(AppSaveGameHelper_SetPlayerIconBgColorId) == 0x000010, "Wrong size on AppSaveGameHelper_SetPlayerIconBgColorId");
static_assert(offsetof(AppSaveGameHelper_SetPlayerIconBgColorId, ID) == 0x000000, "Member 'AppSaveGameHelper_SetPlayerIconBgColorId::ID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetPlayerIconId
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetPlayerIconId final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetPlayerIconId) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetPlayerIconId");
static_assert(sizeof(AppSaveGameHelper_SetPlayerIconId) == 0x000004, "Wrong size on AppSaveGameHelper_SetPlayerIconId");
static_assert(offsetof(AppSaveGameHelper_SetPlayerIconId, ID) == 0x000000, "Member 'AppSaveGameHelper_SetPlayerIconId::ID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetRaceParkCustomRaceSetting
// 0x00B8 (0x00B8 - 0x0000)
struct AppSaveGameHelper_SetRaceParkCustomRaceSetting final
{
public:
	struct FPartyRacePresetSetting                PartyRacePresetSetting;                            // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetRaceParkCustomRaceSetting) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetRaceParkCustomRaceSetting");
static_assert(sizeof(AppSaveGameHelper_SetRaceParkCustomRaceSetting) == 0x0000B8, "Wrong size on AppSaveGameHelper_SetRaceParkCustomRaceSetting");
static_assert(offsetof(AppSaveGameHelper_SetRaceParkCustomRaceSetting, PartyRacePresetSetting) == 0x000000, "Member 'AppSaveGameHelper_SetRaceParkCustomRaceSetting::PartyRacePresetSetting' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetRedStarRingAcquisitionPerStage
// 0x0018 (0x0018 - 0x0000)
struct AppSaveGameHelper_SetRedStarRingAcquisitionPerStage final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InAcquisition;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetRedStarRingAcquisitionPerStage) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetRedStarRingAcquisitionPerStage");
static_assert(sizeof(AppSaveGameHelper_SetRedStarRingAcquisitionPerStage) == 0x000018, "Wrong size on AppSaveGameHelper_SetRedStarRingAcquisitionPerStage");
static_assert(offsetof(AppSaveGameHelper_SetRedStarRingAcquisitionPerStage, InStageId) == 0x000000, "Member 'AppSaveGameHelper_SetRedStarRingAcquisitionPerStage::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetRedStarRingAcquisitionPerStage, InAcquisition) == 0x000008, "Member 'AppSaveGameHelper_SetRedStarRingAcquisitionPerStage::InAcquisition' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetRivalAppearanceCount
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_SetRivalAppearanceCount final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewCount;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetRivalAppearanceCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetRivalAppearanceCount");
static_assert(sizeof(AppSaveGameHelper_SetRivalAppearanceCount) == 0x000008, "Wrong size on AppSaveGameHelper_SetRivalAppearanceCount");
static_assert(offsetof(AppSaveGameHelper_SetRivalAppearanceCount, DriverId) == 0x000000, "Member 'AppSaveGameHelper_SetRivalAppearanceCount::DriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetRivalAppearanceCount, NewCount) == 0x000004, "Member 'AppSaveGameHelper_SetRivalAppearanceCount::NewCount' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetRivalLevelAdjust
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetRivalLevelAdjust final
{
public:
	int32                                         NewAmount;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetRivalLevelAdjust) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetRivalLevelAdjust");
static_assert(sizeof(AppSaveGameHelper_SetRivalLevelAdjust) == 0x000004, "Wrong size on AppSaveGameHelper_SetRivalLevelAdjust");
static_assert(offsetof(AppSaveGameHelper_SetRivalLevelAdjust, NewAmount) == 0x000000, "Member 'AppSaveGameHelper_SetRivalLevelAdjust::NewAmount' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetRivalWinCount
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_SetRivalWinCount final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewCount;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetRivalWinCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetRivalWinCount");
static_assert(sizeof(AppSaveGameHelper_SetRivalWinCount) == 0x000008, "Wrong size on AppSaveGameHelper_SetRivalWinCount");
static_assert(offsetof(AppSaveGameHelper_SetRivalWinCount, DriverId) == 0x000000, "Member 'AppSaveGameHelper_SetRivalWinCount::DriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetRivalWinCount, NewCount) == 0x000004, "Member 'AppSaveGameHelper_SetRivalWinCount::NewCount' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetSelectedGadgetPresetId
// 0x0008 (0x0008 - 0x0000)
struct AppSaveGameHelper_SetSelectedGadgetPresetId final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPresetId;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetSelectedGadgetPresetId) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetSelectedGadgetPresetId");
static_assert(sizeof(AppSaveGameHelper_SetSelectedGadgetPresetId) == 0x000008, "Wrong size on AppSaveGameHelper_SetSelectedGadgetPresetId");
static_assert(offsetof(AppSaveGameHelper_SetSelectedGadgetPresetId, InPlayerIndex) == 0x000000, "Member 'AppSaveGameHelper_SetSelectedGadgetPresetId::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetSelectedGadgetPresetId, InPresetId) == 0x000004, "Member 'AppSaveGameHelper_SetSelectedGadgetPresetId::InPresetId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetSpawnGrandPrixALLLevelDownUIFlag
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag final
{
public:
	bool                                          SetEnabled;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag");
static_assert(sizeof(AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag) == 0x000001, "Wrong size on AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag");
static_assert(offsetof(AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag, SetEnabled) == 0x000000, "Member 'AppSaveGameHelper_SetSpawnGrandPrixALLLevelDownUIFlag::SetEnabled' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetSpawnGrandPrixLevelDownUIFlag
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag final
{
public:
	EMenuSpeedClassId                             SpeedClassId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SetEnabled;                                        // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag");
static_assert(sizeof(AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag) == 0x000002, "Wrong size on AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag");
static_assert(offsetof(AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag, SpeedClassId) == 0x000000, "Member 'AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag::SpeedClassId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag, SetEnabled) == 0x000001, "Member 'AppSaveGameHelper_SetSpawnGrandPrixLevelDownUIFlag::SetEnabled' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetSpawnPowerRivalFlag
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetSpawnPowerRivalFlag final
{
public:
	bool                                          SetValue;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetSpawnPowerRivalFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetSpawnPowerRivalFlag");
static_assert(sizeof(AppSaveGameHelper_SetSpawnPowerRivalFlag) == 0x000001, "Wrong size on AppSaveGameHelper_SetSpawnPowerRivalFlag");
static_assert(offsetof(AppSaveGameHelper_SetSpawnPowerRivalFlag, SetValue) == 0x000000, "Member 'AppSaveGameHelper_SetSpawnPowerRivalFlag::SetValue' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetTimeTrialLastResultId
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetTimeTrialLastResultId final
{
public:
	ETimeTrialWinLoseDispId                       InResultId;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetTimeTrialLastResultId) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetTimeTrialLastResultId");
static_assert(sizeof(AppSaveGameHelper_SetTimeTrialLastResultId) == 0x000001, "Wrong size on AppSaveGameHelper_SetTimeTrialLastResultId");
static_assert(offsetof(AppSaveGameHelper_SetTimeTrialLastResultId, InResultId) == 0x000000, "Member 'AppSaveGameHelper_SetTimeTrialLastResultId::InResultId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetTipsDisplayIndex
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetTipsDisplayIndex final
{
public:
	uint8                                         InIndex;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetTipsDisplayIndex) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetTipsDisplayIndex");
static_assert(sizeof(AppSaveGameHelper_SetTipsDisplayIndex) == 0x000001, "Wrong size on AppSaveGameHelper_SetTipsDisplayIndex");
static_assert(offsetof(AppSaveGameHelper_SetTipsDisplayIndex, InIndex) == 0x000000, "Member 'AppSaveGameHelper_SetTipsDisplayIndex::InIndex' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetTrackAvailable
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetTrackAvailable final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetTrackAvailable) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetTrackAvailable");
static_assert(sizeof(AppSaveGameHelper_SetTrackAvailable) == 0x000004, "Wrong size on AppSaveGameHelper_SetTrackAvailable");
static_assert(offsetof(AppSaveGameHelper_SetTrackAvailable, ID) == 0x000000, "Member 'AppSaveGameHelper_SetTrackAvailable::ID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetTutorialActionCompletedFlag
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_SetTutorialActionCompletedFlag final
{
public:
	ETutorialAction                               tutorialAction;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompleted;                                        // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetTutorialActionCompletedFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetTutorialActionCompletedFlag");
static_assert(sizeof(AppSaveGameHelper_SetTutorialActionCompletedFlag) == 0x000002, "Wrong size on AppSaveGameHelper_SetTutorialActionCompletedFlag");
static_assert(offsetof(AppSaveGameHelper_SetTutorialActionCompletedFlag, tutorialAction) == 0x000000, "Member 'AppSaveGameHelper_SetTutorialActionCompletedFlag::tutorialAction' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetTutorialActionCompletedFlag, bCompleted) == 0x000001, "Member 'AppSaveGameHelper_SetTutorialActionCompletedFlag::bCompleted' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetTutorialCompletedFlagPerStage
// 0x0002 (0x0002 - 0x0000)
struct AppSaveGameHelper_SetTutorialCompletedFlagPerStage final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompleted;                                        // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetTutorialCompletedFlagPerStage) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetTutorialCompletedFlagPerStage");
static_assert(sizeof(AppSaveGameHelper_SetTutorialCompletedFlagPerStage) == 0x000002, "Wrong size on AppSaveGameHelper_SetTutorialCompletedFlagPerStage");
static_assert(offsetof(AppSaveGameHelper_SetTutorialCompletedFlagPerStage, InStageId) == 0x000000, "Member 'AppSaveGameHelper_SetTutorialCompletedFlagPerStage::InStageId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetTutorialCompletedFlagPerStage, bCompleted) == 0x000001, "Member 'AppSaveGameHelper_SetTutorialCompletedFlagPerStage::bCompleted' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetTutorialPopupDispFlag
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetTutorialPopupDispFlag final
{
public:
	bool                                          bDisped;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetTutorialPopupDispFlag) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetTutorialPopupDispFlag");
static_assert(sizeof(AppSaveGameHelper_SetTutorialPopupDispFlag) == 0x000001, "Wrong size on AppSaveGameHelper_SetTutorialPopupDispFlag");
static_assert(offsetof(AppSaveGameHelper_SetTutorialPopupDispFlag, bDisped) == 0x000000, "Member 'AppSaveGameHelper_SetTutorialPopupDispFlag::bDisped' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetUserDriverProperty
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_SetUserDriverProperty final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserDriverProperty                    InUserDriverProperty;                              // 0x0001(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetUserDriverProperty) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetUserDriverProperty");
static_assert(sizeof(AppSaveGameHelper_SetUserDriverProperty) == 0x000003, "Wrong size on AppSaveGameHelper_SetUserDriverProperty");
static_assert(offsetof(AppSaveGameHelper_SetUserDriverProperty, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_SetUserDriverProperty::InDriverId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetUserDriverProperty, InUserDriverProperty) == 0x000001, "Member 'AppSaveGameHelper_SetUserDriverProperty::InUserDriverProperty' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetUserHintProperty
// 0x0003 (0x0003 - 0x0000)
struct AppSaveGameHelper_SetUserHintProperty final
{
public:
	EHintId                                       InHintId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserHintProperty                      InUserHintProperty;                                // 0x0001(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetUserHintProperty) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetUserHintProperty");
static_assert(sizeof(AppSaveGameHelper_SetUserHintProperty) == 0x000003, "Wrong size on AppSaveGameHelper_SetUserHintProperty");
static_assert(offsetof(AppSaveGameHelper_SetUserHintProperty, InHintId) == 0x000000, "Member 'AppSaveGameHelper_SetUserHintProperty::InHintId' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetUserHintProperty, InUserHintProperty) == 0x000001, "Member 'AppSaveGameHelper_SetUserHintProperty::InUserHintProperty' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetUserMachineCustomizeData
// 0x0080 (0x0080 - 0x0000)
struct AppSaveGameHelper_SetUserMachineCustomizeData final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              InUserMachineCustomizeData;                        // 0x0008(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetUserMachineCustomizeData) == 0x000008, "Wrong alignment on AppSaveGameHelper_SetUserMachineCustomizeData");
static_assert(sizeof(AppSaveGameHelper_SetUserMachineCustomizeData) == 0x000080, "Wrong size on AppSaveGameHelper_SetUserMachineCustomizeData");
static_assert(offsetof(AppSaveGameHelper_SetUserMachineCustomizeData, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_SetUserMachineCustomizeData::InMachineID' has a wrong offset!");
static_assert(offsetof(AppSaveGameHelper_SetUserMachineCustomizeData, InUserMachineCustomizeData) == 0x000008, "Member 'AppSaveGameHelper_SetUserMachineCustomizeData::InUserMachineCustomizeData' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetUserNiceCount
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_SetUserNiceCount final
{
public:
	int32                                         InNiceCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetUserNiceCount) == 0x000004, "Wrong alignment on AppSaveGameHelper_SetUserNiceCount");
static_assert(sizeof(AppSaveGameHelper_SetUserNiceCount) == 0x000004, "Wrong size on AppSaveGameHelper_SetUserNiceCount");
static_assert(offsetof(AppSaveGameHelper_SetUserNiceCount, InNiceCount) == 0x000000, "Member 'AppSaveGameHelper_SetUserNiceCount::InNiceCount' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetUserSelectedDriverId
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetUserSelectedDriverId final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetUserSelectedDriverId) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetUserSelectedDriverId");
static_assert(sizeof(AppSaveGameHelper_SetUserSelectedDriverId) == 0x000001, "Wrong size on AppSaveGameHelper_SetUserSelectedDriverId");
static_assert(offsetof(AppSaveGameHelper_SetUserSelectedDriverId, InDriverId) == 0x000000, "Member 'AppSaveGameHelper_SetUserSelectedDriverId::InDriverId' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.SetUserSelectedMachineId
// 0x0001 (0x0001 - 0x0000)
struct AppSaveGameHelper_SetUserSelectedMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_SetUserSelectedMachineId) == 0x000001, "Wrong alignment on AppSaveGameHelper_SetUserSelectedMachineId");
static_assert(sizeof(AppSaveGameHelper_SetUserSelectedMachineId) == 0x000001, "Wrong size on AppSaveGameHelper_SetUserSelectedMachineId");
static_assert(offsetof(AppSaveGameHelper_SetUserSelectedMachineId, InMachineID) == 0x000000, "Member 'AppSaveGameHelper_SetUserSelectedMachineId::InMachineID' has a wrong offset!");

// Function UnionSystem.AppSaveGameHelper.UnlockHonorTitle
// 0x0004 (0x0004 - 0x0000)
struct AppSaveGameHelper_UnlockHonorTitle final
{
public:
	int32                                         HonorTitleIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppSaveGameHelper_UnlockHonorTitle) == 0x000004, "Wrong alignment on AppSaveGameHelper_UnlockHonorTitle");
static_assert(sizeof(AppSaveGameHelper_UnlockHonorTitle) == 0x000004, "Wrong size on AppSaveGameHelper_UnlockHonorTitle");
static_assert(offsetof(AppSaveGameHelper_UnlockHonorTitle, HonorTitleIndex) == 0x000000, "Member 'AppSaveGameHelper_UnlockHonorTitle::HonorTitleIndex' has a wrong offset!");

// Function UnionSystem.AppTimeSubsystem.AddNamedDateTimeNow
// 0x0008 (0x0008 - 0x0000)
struct AppTimeSubsystem_AddNamedDateTimeNow final
{
public:
	class FName                                   InTimeName;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeSubsystem_AddNamedDateTimeNow) == 0x000004, "Wrong alignment on AppTimeSubsystem_AddNamedDateTimeNow");
static_assert(sizeof(AppTimeSubsystem_AddNamedDateTimeNow) == 0x000008, "Wrong size on AppTimeSubsystem_AddNamedDateTimeNow");
static_assert(offsetof(AppTimeSubsystem_AddNamedDateTimeNow, InTimeName) == 0x000000, "Member 'AppTimeSubsystem_AddNamedDateTimeNow::InTimeName' has a wrong offset!");

// Function UnionSystem.AppTimeSubsystem.GetTimeSpanMillisecondsByNamedDateTimes
// 0x0018 (0x0018 - 0x0000)
struct AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes final
{
public:
	class FName                                   InBeginTimeName;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InEndTimeName;                                     // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTimeSpan;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes) == 0x000004, "Wrong alignment on AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes");
static_assert(sizeof(AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes) == 0x000018, "Wrong size on AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes");
static_assert(offsetof(AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes, InBeginTimeName) == 0x000000, "Member 'AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes::InBeginTimeName' has a wrong offset!");
static_assert(offsetof(AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes, InEndTimeName) == 0x000008, "Member 'AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes::InEndTimeName' has a wrong offset!");
static_assert(offsetof(AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes, OutTimeSpan) == 0x000010, "Member 'AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes::OutTimeSpan' has a wrong offset!");
static_assert(offsetof(AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes, ReturnValue) == 0x000014, "Member 'AppTimeSubsystem_GetTimeSpanMillisecondsByNamedDateTimes::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppTimeSubsystem.LogTimeSpanMillisecondsByNamedDateTimes
// 0x0010 (0x0010 - 0x0000)
struct AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes final
{
public:
	class FName                                   InBeginTimeName;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InEndTimeName;                                     // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes) == 0x000004, "Wrong alignment on AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes");
static_assert(sizeof(AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes) == 0x000010, "Wrong size on AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes");
static_assert(offsetof(AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes, InBeginTimeName) == 0x000000, "Member 'AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes::InBeginTimeName' has a wrong offset!");
static_assert(offsetof(AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes, InEndTimeName) == 0x000008, "Member 'AppTimeSubsystem_LogTimeSpanMillisecondsByNamedDateTimes::InEndTimeName' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.AddNamedDateTimeNow
// 0x0008 (0x0008 - 0x0000)
struct AppTimeUtil_AddNamedDateTimeNow final
{
public:
	class FName                                   InTimeName;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeUtil_AddNamedDateTimeNow) == 0x000004, "Wrong alignment on AppTimeUtil_AddNamedDateTimeNow");
static_assert(sizeof(AppTimeUtil_AddNamedDateTimeNow) == 0x000008, "Wrong size on AppTimeUtil_AddNamedDateTimeNow");
static_assert(offsetof(AppTimeUtil_AddNamedDateTimeNow, InTimeName) == 0x000000, "Member 'AppTimeUtil_AddNamedDateTimeNow::InTimeName' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.LocalizeDateTimePlaceholder
// 0x0030 (0x0030 - 0x0000)
struct AppTimeUtil_LocalizeDateTimePlaceholder final
{
public:
	class FText                                   BaseText;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDateTime                              StartDateUTCTime;                                  // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EndDateUTCTime;                                    // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeUtil_LocalizeDateTimePlaceholder) == 0x000008, "Wrong alignment on AppTimeUtil_LocalizeDateTimePlaceholder");
static_assert(sizeof(AppTimeUtil_LocalizeDateTimePlaceholder) == 0x000030, "Wrong size on AppTimeUtil_LocalizeDateTimePlaceholder");
static_assert(offsetof(AppTimeUtil_LocalizeDateTimePlaceholder, BaseText) == 0x000000, "Member 'AppTimeUtil_LocalizeDateTimePlaceholder::BaseText' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_LocalizeDateTimePlaceholder, StartDateUTCTime) == 0x000010, "Member 'AppTimeUtil_LocalizeDateTimePlaceholder::StartDateUTCTime' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_LocalizeDateTimePlaceholder, EndDateUTCTime) == 0x000018, "Member 'AppTimeUtil_LocalizeDateTimePlaceholder::EndDateUTCTime' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_LocalizeDateTimePlaceholder, ReturnValue) == 0x000020, "Member 'AppTimeUtil_LocalizeDateTimePlaceholder::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.LogTimeSpanMillisecondsByNamedDateTimes
// 0x0010 (0x0010 - 0x0000)
struct AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes final
{
public:
	class FName                                   InBeginTimeName;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InEndTimeName;                                     // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes) == 0x000004, "Wrong alignment on AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes");
static_assert(sizeof(AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes) == 0x000010, "Wrong size on AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes");
static_assert(offsetof(AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes, InBeginTimeName) == 0x000000, "Member 'AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes::InBeginTimeName' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes, InEndTimeName) == 0x000008, "Member 'AppTimeUtil_LogTimeSpanMillisecondsByNamedDateTimes::InEndTimeName' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.MakeDateText
// 0x0018 (0x0018 - 0x0000)
struct AppTimeUtil_MakeDateText final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeUtil_MakeDateText) == 0x000008, "Wrong alignment on AppTimeUtil_MakeDateText");
static_assert(sizeof(AppTimeUtil_MakeDateText) == 0x000018, "Wrong size on AppTimeUtil_MakeDateText");
static_assert(offsetof(AppTimeUtil_MakeDateText, DateTime) == 0x000000, "Member 'AppTimeUtil_MakeDateText::DateTime' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_MakeDateText, ReturnValue) == 0x000008, "Member 'AppTimeUtil_MakeDateText::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.MakeDateTimeText
// 0x0018 (0x0018 - 0x0000)
struct AppTimeUtil_MakeDateTimeText final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeUtil_MakeDateTimeText) == 0x000008, "Wrong alignment on AppTimeUtil_MakeDateTimeText");
static_assert(sizeof(AppTimeUtil_MakeDateTimeText) == 0x000018, "Wrong size on AppTimeUtil_MakeDateTimeText");
static_assert(offsetof(AppTimeUtil_MakeDateTimeText, DateTime) == 0x000000, "Member 'AppTimeUtil_MakeDateTimeText::DateTime' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_MakeDateTimeText, ReturnValue) == 0x000008, "Member 'AppTimeUtil_MakeDateTimeText::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.Sub_DateTimeDateTime
// 0x0018 (0x0018 - 0x0000)
struct AppTimeUtil_Sub_DateTimeDateTime final
{
public:
	struct FDateTime                              A;                                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              B;                                                 // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppTimeUtil_Sub_DateTimeDateTime) == 0x000008, "Wrong alignment on AppTimeUtil_Sub_DateTimeDateTime");
static_assert(sizeof(AppTimeUtil_Sub_DateTimeDateTime) == 0x000018, "Wrong size on AppTimeUtil_Sub_DateTimeDateTime");
static_assert(offsetof(AppTimeUtil_Sub_DateTimeDateTime, A) == 0x000000, "Member 'AppTimeUtil_Sub_DateTimeDateTime::A' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_Sub_DateTimeDateTime, B) == 0x000008, "Member 'AppTimeUtil_Sub_DateTimeDateTime::B' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_Sub_DateTimeDateTime, ReturnValue) == 0x000010, "Member 'AppTimeUtil_Sub_DateTimeDateTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppTimeUtil.UnionDateTimeParse
// 0x0020 (0x0020 - 0x0000)
struct AppTimeUtil_UnionDateTimeParse final
{
public:
	class FString                                 DateTimeString;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              OutDateTime;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppTimeUtil_UnionDateTimeParse) == 0x000008, "Wrong alignment on AppTimeUtil_UnionDateTimeParse");
static_assert(sizeof(AppTimeUtil_UnionDateTimeParse) == 0x000020, "Wrong size on AppTimeUtil_UnionDateTimeParse");
static_assert(offsetof(AppTimeUtil_UnionDateTimeParse, DateTimeString) == 0x000000, "Member 'AppTimeUtil_UnionDateTimeParse::DateTimeString' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_UnionDateTimeParse, OutDateTime) == 0x000010, "Member 'AppTimeUtil_UnionDateTimeParse::OutDateTime' has a wrong offset!");
static_assert(offsetof(AppTimeUtil_UnionDateTimeParse, ReturnValue) == 0x000018, "Member 'AppTimeUtil_UnionDateTimeParse::ReturnValue' has a wrong offset!");

// Function UnionSystem.AppViewUtil.CalcViewSplitId
// 0x000C (0x000C - 0x0000)
struct AppViewUtil_CalcViewSplitId final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedPlayerCount;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EViewSplitId                                  ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AppViewUtil_CalcViewSplitId) == 0x000004, "Wrong alignment on AppViewUtil_CalcViewSplitId");
static_assert(sizeof(AppViewUtil_CalcViewSplitId) == 0x00000C, "Wrong size on AppViewUtil_CalcViewSplitId");
static_assert(offsetof(AppViewUtil_CalcViewSplitId, InPlayerControllerIndex) == 0x000000, "Member 'AppViewUtil_CalcViewSplitId::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(AppViewUtil_CalcViewSplitId, InSelectedPlayerCount) == 0x000004, "Member 'AppViewUtil_CalcViewSplitId::InSelectedPlayerCount' has a wrong offset!");
static_assert(offsetof(AppViewUtil_CalcViewSplitId, ReturnValue) == 0x000008, "Member 'AppViewUtil_CalcViewSplitId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.DebugGetOnlineToken
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_DebugGetOnlineToken final
{
public:
	class FString                                 Endpoint;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocalUserNum;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthSubsystem_DebugGetOnlineToken) == 0x000008, "Wrong alignment on AuthSubsystem_DebugGetOnlineToken");
static_assert(sizeof(AuthSubsystem_DebugGetOnlineToken) == 0x000018, "Wrong size on AuthSubsystem_DebugGetOnlineToken");
static_assert(offsetof(AuthSubsystem_DebugGetOnlineToken, Endpoint) == 0x000000, "Member 'AuthSubsystem_DebugGetOnlineToken::Endpoint' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_DebugGetOnlineToken, LocalUserNum) == 0x000010, "Member 'AuthSubsystem_DebugGetOnlineToken::LocalUserNum' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.DebugPrintLoggedInUserInfo
// 0x0004 (0x0004 - 0x0000)
struct AuthSubsystem_DebugPrintLoggedInUserInfo final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_DebugPrintLoggedInUserInfo) == 0x000004, "Wrong alignment on AuthSubsystem_DebugPrintLoggedInUserInfo");
static_assert(sizeof(AuthSubsystem_DebugPrintLoggedInUserInfo) == 0x000004, "Wrong size on AuthSubsystem_DebugPrintLoggedInUserInfo");
static_assert(offsetof(AuthSubsystem_DebugPrintLoggedInUserInfo, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_DebugPrintLoggedInUserInfo::LocalUserNum' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetOnlineToken
// 0x0020 (0x0020 - 0x0000)
struct AuthSubsystem_GetOnlineToken final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 outToken;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthSubsystem_GetOnlineToken) == 0x000008, "Wrong alignment on AuthSubsystem_GetOnlineToken");
static_assert(sizeof(AuthSubsystem_GetOnlineToken) == 0x000020, "Wrong size on AuthSubsystem_GetOnlineToken");
static_assert(offsetof(AuthSubsystem_GetOnlineToken, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetOnlineToken::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetOnlineToken, outToken) == 0x000008, "Member 'AuthSubsystem_GetOnlineToken::outToken' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetOnlineToken, ReturnValue) == 0x000018, "Member 'AuthSubsystem_GetOnlineToken::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetOnlineTokenFromnUniqueNetId
// 0x0048 (0x0048 - 0x0000)
struct AuthSubsystem_GetOnlineTokenFromnUniqueNetId final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 outToken;                                          // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthSubsystem_GetOnlineTokenFromnUniqueNetId) == 0x000008, "Wrong alignment on AuthSubsystem_GetOnlineTokenFromnUniqueNetId");
static_assert(sizeof(AuthSubsystem_GetOnlineTokenFromnUniqueNetId) == 0x000048, "Wrong size on AuthSubsystem_GetOnlineTokenFromnUniqueNetId");
static_assert(offsetof(AuthSubsystem_GetOnlineTokenFromnUniqueNetId, UserId) == 0x000000, "Member 'AuthSubsystem_GetOnlineTokenFromnUniqueNetId::UserId' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetOnlineTokenFromnUniqueNetId, outToken) == 0x000030, "Member 'AuthSubsystem_GetOnlineTokenFromnUniqueNetId::outToken' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetOnlineTokenFromnUniqueNetId, ReturnValue) == 0x000040, "Member 'AuthSubsystem_GetOnlineTokenFromnUniqueNetId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.OnCompleteUserGetDataRequest
// 0x0038 (0x0038 - 0x0000)
struct AuthSubsystem_OnCompleteUserGetDataRequest final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthSubsystem_OnCompleteUserGetDataRequest) == 0x000008, "Wrong alignment on AuthSubsystem_OnCompleteUserGetDataRequest");
static_assert(sizeof(AuthSubsystem_OnCompleteUserGetDataRequest) == 0x000038, "Wrong size on AuthSubsystem_OnCompleteUserGetDataRequest");
static_assert(offsetof(AuthSubsystem_OnCompleteUserGetDataRequest, ApiName) == 0x000000, "Member 'AuthSubsystem_OnCompleteUserGetDataRequest::ApiName' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_OnCompleteUserGetDataRequest, RequestData) == 0x000010, "Member 'AuthSubsystem_OnCompleteUserGetDataRequest::RequestData' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_OnCompleteUserGetDataRequest, ResponseData) == 0x000020, "Member 'AuthSubsystem_OnCompleteUserGetDataRequest::ResponseData' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_OnCompleteUserGetDataRequest, Error) == 0x000030, "Member 'AuthSubsystem_OnCompleteUserGetDataRequest::Error' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.SetCachedAppUserBaseData
// 0x0100 (0x0100 - 0x0000)
struct AuthSubsystem_SetCachedAppUserBaseData final
{
public:
	struct FUserGetDataResponse                   Response;                                          // 0x0000(0x0100)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_SetCachedAppUserBaseData) == 0x000008, "Wrong alignment on AuthSubsystem_SetCachedAppUserBaseData");
static_assert(sizeof(AuthSubsystem_SetCachedAppUserBaseData) == 0x000100, "Wrong size on AuthSubsystem_SetCachedAppUserBaseData");
static_assert(offsetof(AuthSubsystem_SetCachedAppUserBaseData, Response) == 0x000000, "Member 'AuthSubsystem_SetCachedAppUserBaseData::Response' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.SetCachedAppUserFairPlayPointData
// 0x0020 (0x0020 - 0x0000)
struct AuthSubsystem_SetCachedAppUserFairPlayPointData final
{
public:
	struct FFairPointCheckFairPointResponse       Response;                                          // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_SetCachedAppUserFairPlayPointData) == 0x000008, "Wrong alignment on AuthSubsystem_SetCachedAppUserFairPlayPointData");
static_assert(sizeof(AuthSubsystem_SetCachedAppUserFairPlayPointData) == 0x000020, "Wrong size on AuthSubsystem_SetCachedAppUserFairPlayPointData");
static_assert(offsetof(AuthSubsystem_SetCachedAppUserFairPlayPointData, Response) == 0x000000, "Member 'AuthSubsystem_SetCachedAppUserFairPlayPointData::Response' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.StartLogin
// 0x0014 (0x0014 - 0x0000)
struct AuthSubsystem_StartLogin final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 LocalUserNum, bool bWasSuccessful, const class FString& ErrorMessage)> OnComplete; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_StartLogin) == 0x000004, "Wrong alignment on AuthSubsystem_StartLogin");
static_assert(sizeof(AuthSubsystem_StartLogin) == 0x000014, "Wrong size on AuthSubsystem_StartLogin");
static_assert(offsetof(AuthSubsystem_StartLogin, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_StartLogin::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_StartLogin, OnComplete) == 0x000004, "Member 'AuthSubsystem_StartLogin::OnComplete' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.StartLogout
// 0x0014 (0x0014 - 0x0000)
struct AuthSubsystem_StartLogout final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 LocalUserNum, bool bWasSuccessful)> OnComplete;                             // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_StartLogout) == 0x000004, "Wrong alignment on AuthSubsystem_StartLogout");
static_assert(sizeof(AuthSubsystem_StartLogout) == 0x000014, "Wrong size on AuthSubsystem_StartLogout");
static_assert(offsetof(AuthSubsystem_StartLogout, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_StartLogout::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_StartLogout, OnComplete) == 0x000004, "Member 'AuthSubsystem_StartLogout::OnComplete' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.CreatePlatformUniquePlayerId
// 0x0040 (0x0040 - 0x0000)
struct AuthSubsystem_CreatePlatformUniquePlayerId final
{
public:
	class FString                                 PlayerIdString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_CreatePlatformUniquePlayerId) == 0x000008, "Wrong alignment on AuthSubsystem_CreatePlatformUniquePlayerId");
static_assert(sizeof(AuthSubsystem_CreatePlatformUniquePlayerId) == 0x000040, "Wrong size on AuthSubsystem_CreatePlatformUniquePlayerId");
static_assert(offsetof(AuthSubsystem_CreatePlatformUniquePlayerId, PlayerIdString) == 0x000000, "Member 'AuthSubsystem_CreatePlatformUniquePlayerId::PlayerIdString' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_CreatePlatformUniquePlayerId, ReturnValue) == 0x000010, "Member 'AuthSubsystem_CreatePlatformUniquePlayerId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.CreateUniquePlayerId
// 0x0040 (0x0040 - 0x0000)
struct AuthSubsystem_CreateUniquePlayerId final
{
public:
	class FString                                 PlayerIdString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_CreateUniquePlayerId) == 0x000008, "Wrong alignment on AuthSubsystem_CreateUniquePlayerId");
static_assert(sizeof(AuthSubsystem_CreateUniquePlayerId) == 0x000040, "Wrong size on AuthSubsystem_CreateUniquePlayerId");
static_assert(offsetof(AuthSubsystem_CreateUniquePlayerId, PlayerIdString) == 0x000000, "Member 'AuthSubsystem_CreateUniquePlayerId::PlayerIdString' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_CreateUniquePlayerId, ReturnValue) == 0x000010, "Member 'AuthSubsystem_CreateUniquePlayerId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetAuthenticatedWith
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetAuthenticatedWith final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetAuthenticatedWith) == 0x000008, "Wrong alignment on AuthSubsystem_GetAuthenticatedWith");
static_assert(sizeof(AuthSubsystem_GetAuthenticatedWith) == 0x000018, "Wrong size on AuthSubsystem_GetAuthenticatedWith");
static_assert(offsetof(AuthSubsystem_GetAuthenticatedWith, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetAuthenticatedWith::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetAuthenticatedWith, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetAuthenticatedWith::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetCachedAppUserBaseData
// 0x0078 (0x0078 - 0x0000)
struct AuthSubsystem_GetCachedAppUserBaseData final
{
public:
	struct FAppUserBaseData                       ReturnValue;                                       // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetCachedAppUserBaseData) == 0x000008, "Wrong alignment on AuthSubsystem_GetCachedAppUserBaseData");
static_assert(sizeof(AuthSubsystem_GetCachedAppUserBaseData) == 0x000078, "Wrong size on AuthSubsystem_GetCachedAppUserBaseData");
static_assert(offsetof(AuthSubsystem_GetCachedAppUserBaseData, ReturnValue) == 0x000000, "Member 'AuthSubsystem_GetCachedAppUserBaseData::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetEOSAuthToken
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetEOSAuthToken final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetEOSAuthToken) == 0x000008, "Wrong alignment on AuthSubsystem_GetEOSAuthToken");
static_assert(sizeof(AuthSubsystem_GetEOSAuthToken) == 0x000018, "Wrong size on AuthSubsystem_GetEOSAuthToken");
static_assert(offsetof(AuthSubsystem_GetEOSAuthToken, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetEOSAuthToken::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetEOSAuthToken, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetEOSAuthToken::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetExternalAccountId
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetExternalAccountId final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetExternalAccountId) == 0x000008, "Wrong alignment on AuthSubsystem_GetExternalAccountId");
static_assert(sizeof(AuthSubsystem_GetExternalAccountId) == 0x000018, "Wrong size on AuthSubsystem_GetExternalAccountId");
static_assert(offsetof(AuthSubsystem_GetExternalAccountId, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetExternalAccountId::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetExternalAccountId, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetExternalAccountId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetLoggedInPlayerNickname
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetLoggedInPlayerNickname final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetLoggedInPlayerNickname) == 0x000008, "Wrong alignment on AuthSubsystem_GetLoggedInPlayerNickname");
static_assert(sizeof(AuthSubsystem_GetLoggedInPlayerNickname) == 0x000018, "Wrong size on AuthSubsystem_GetLoggedInPlayerNickname");
static_assert(offsetof(AuthSubsystem_GetLoggedInPlayerNickname, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetLoggedInPlayerNickname::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetLoggedInPlayerNickname, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetLoggedInPlayerNickname::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetLoggedInUserId
// 0x0038 (0x0038 - 0x0000)
struct AuthSubsystem_GetLoggedInUserId final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetLoggedInUserId) == 0x000008, "Wrong alignment on AuthSubsystem_GetLoggedInUserId");
static_assert(sizeof(AuthSubsystem_GetLoggedInUserId) == 0x000038, "Wrong size on AuthSubsystem_GetLoggedInUserId");
static_assert(offsetof(AuthSubsystem_GetLoggedInUserId, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetLoggedInUserId::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetLoggedInUserId, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetLoggedInUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetLoggedInUserIdString
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetLoggedInUserIdString final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetLoggedInUserIdString) == 0x000008, "Wrong alignment on AuthSubsystem_GetLoggedInUserIdString");
static_assert(sizeof(AuthSubsystem_GetLoggedInUserIdString) == 0x000018, "Wrong size on AuthSubsystem_GetLoggedInUserIdString");
static_assert(offsetof(AuthSubsystem_GetLoggedInUserIdString, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetLoggedInUserIdString::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetLoggedInUserIdString, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetLoggedInUserIdString::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetOnlineEnvironment
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetOnlineEnvironment final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetOnlineEnvironment) == 0x000008, "Wrong alignment on AuthSubsystem_GetOnlineEnvironment");
static_assert(sizeof(AuthSubsystem_GetOnlineEnvironment) == 0x000018, "Wrong size on AuthSubsystem_GetOnlineEnvironment");
static_assert(offsetof(AuthSubsystem_GetOnlineEnvironment, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetOnlineEnvironment::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetOnlineEnvironment, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetOnlineEnvironment::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.GetPlatformToken
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_GetPlatformToken final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthSubsystem_GetPlatformToken) == 0x000008, "Wrong alignment on AuthSubsystem_GetPlatformToken");
static_assert(sizeof(AuthSubsystem_GetPlatformToken) == 0x000018, "Wrong size on AuthSubsystem_GetPlatformToken");
static_assert(offsetof(AuthSubsystem_GetPlatformToken, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_GetPlatformToken::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_GetPlatformToken, ReturnValue) == 0x000008, "Member 'AuthSubsystem_GetPlatformToken::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.IsLoggedIn
// 0x0008 (0x0008 - 0x0000)
struct AuthSubsystem_IsLoggedIn final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthSubsystem_IsLoggedIn) == 0x000004, "Wrong alignment on AuthSubsystem_IsLoggedIn");
static_assert(sizeof(AuthSubsystem_IsLoggedIn) == 0x000008, "Wrong size on AuthSubsystem_IsLoggedIn");
static_assert(offsetof(AuthSubsystem_IsLoggedIn, LocalUserNum) == 0x000000, "Member 'AuthSubsystem_IsLoggedIn::LocalUserNum' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_IsLoggedIn, ReturnValue) == 0x000004, "Member 'AuthSubsystem_IsLoggedIn::ReturnValue' has a wrong offset!");

// Function UnionSystem.AuthSubsystem.IsMatchLoggedInUserId
// 0x0018 (0x0018 - 0x0000)
struct AuthSubsystem_IsMatchLoggedInUserId final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthSubsystem_IsMatchLoggedInUserId) == 0x000008, "Wrong alignment on AuthSubsystem_IsMatchLoggedInUserId");
static_assert(sizeof(AuthSubsystem_IsMatchLoggedInUserId) == 0x000018, "Wrong size on AuthSubsystem_IsMatchLoggedInUserId");
static_assert(offsetof(AuthSubsystem_IsMatchLoggedInUserId, ProductUserId) == 0x000000, "Member 'AuthSubsystem_IsMatchLoggedInUserId::ProductUserId' has a wrong offset!");
static_assert(offsetof(AuthSubsystem_IsMatchLoggedInUserId, ReturnValue) == 0x000010, "Member 'AuthSubsystem_IsMatchLoggedInUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.BPFL_AppInputUtil.GetAppPlayerController
// 0x0010 (0x0010 - 0x0000)
struct BPFL_AppInputUtil_GetAppPlayerController final
{
public:
	int32                                         ControllerId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BPFL_AppInputUtil_GetAppPlayerController) == 0x000008, "Wrong alignment on BPFL_AppInputUtil_GetAppPlayerController");
static_assert(sizeof(BPFL_AppInputUtil_GetAppPlayerController) == 0x000010, "Wrong size on BPFL_AppInputUtil_GetAppPlayerController");
static_assert(offsetof(BPFL_AppInputUtil_GetAppPlayerController, ControllerId) == 0x000000, "Member 'BPFL_AppInputUtil_GetAppPlayerController::ControllerId' has a wrong offset!");
static_assert(offsetof(BPFL_AppInputUtil_GetAppPlayerController, ReturnValue) == 0x000008, "Member 'BPFL_AppInputUtil_GetAppPlayerController::ReturnValue' has a wrong offset!");

// Function UnionSystem.BPFL_AppInputUtil.IsRegisteredMenuObject
// 0x0018 (0x0018 - 0x0000)
struct BPFL_AppInputUtil_IsRegisteredMenuObject final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MenuObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BPFL_AppInputUtil_IsRegisteredMenuObject) == 0x000008, "Wrong alignment on BPFL_AppInputUtil_IsRegisteredMenuObject");
static_assert(sizeof(BPFL_AppInputUtil_IsRegisteredMenuObject) == 0x000018, "Wrong size on BPFL_AppInputUtil_IsRegisteredMenuObject");
static_assert(offsetof(BPFL_AppInputUtil_IsRegisteredMenuObject, InPlayerIndex) == 0x000000, "Member 'BPFL_AppInputUtil_IsRegisteredMenuObject::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPFL_AppInputUtil_IsRegisteredMenuObject, MenuObject) == 0x000008, "Member 'BPFL_AppInputUtil_IsRegisteredMenuObject::MenuObject' has a wrong offset!");
static_assert(offsetof(BPFL_AppInputUtil_IsRegisteredMenuObject, ReturnValue) == 0x000010, "Member 'BPFL_AppInputUtil_IsRegisteredMenuObject::ReturnValue' has a wrong offset!");

// Function UnionSystem.BPFL_AppInputUtil.UnRegisterMenuObject
// 0x0018 (0x0018 - 0x0000)
struct BPFL_AppInputUtil_UnRegisterMenuObject final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MenuObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppInputValid                                OutputPin;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BPFL_AppInputUtil_UnRegisterMenuObject) == 0x000008, "Wrong alignment on BPFL_AppInputUtil_UnRegisterMenuObject");
static_assert(sizeof(BPFL_AppInputUtil_UnRegisterMenuObject) == 0x000018, "Wrong size on BPFL_AppInputUtil_UnRegisterMenuObject");
static_assert(offsetof(BPFL_AppInputUtil_UnRegisterMenuObject, InPlayerIndex) == 0x000000, "Member 'BPFL_AppInputUtil_UnRegisterMenuObject::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPFL_AppInputUtil_UnRegisterMenuObject, MenuObject) == 0x000008, "Member 'BPFL_AppInputUtil_UnRegisterMenuObject::MenuObject' has a wrong offset!");
static_assert(offsetof(BPFL_AppInputUtil_UnRegisterMenuObject, OutputPin) == 0x000010, "Member 'BPFL_AppInputUtil_UnRegisterMenuObject::OutputPin' has a wrong offset!");

// Function UnionSystem.BPFL_AutoPlay.DoInputKey
// 0x0038 (0x0038 - 0x0000)
struct BPFL_AutoPlay_DoInputKey final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputEvent                                   EventType;                                         // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Delta;                                             // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGamepad;                                          // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BPFL_AutoPlay_DoInputKey) == 0x000008, "Wrong alignment on BPFL_AutoPlay_DoInputKey");
static_assert(sizeof(BPFL_AutoPlay_DoInputKey) == 0x000038, "Wrong size on BPFL_AutoPlay_DoInputKey");
static_assert(offsetof(BPFL_AutoPlay_DoInputKey, Controller) == 0x000000, "Member 'BPFL_AutoPlay_DoInputKey::Controller' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputKey, Key) == 0x000008, "Member 'BPFL_AutoPlay_DoInputKey::Key' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputKey, EventType) == 0x000020, "Member 'BPFL_AutoPlay_DoInputKey::EventType' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputKey, Delta) == 0x000028, "Member 'BPFL_AutoPlay_DoInputKey::Delta' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputKey, bGamepad) == 0x000030, "Member 'BPFL_AutoPlay_DoInputKey::bGamepad' has a wrong offset!");

// Function UnionSystem.BPFL_AutoPlay.DoInputMenu
// 0x0010 (0x0010 - 0x0000)
struct BPFL_AutoPlay_DoInputMenu final
{
public:
	class AAppPlayerController*                   AppController;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMenuInputKey                                 InKey;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BPFL_AutoPlay_DoInputMenu) == 0x000008, "Wrong alignment on BPFL_AutoPlay_DoInputMenu");
static_assert(sizeof(BPFL_AutoPlay_DoInputMenu) == 0x000010, "Wrong size on BPFL_AutoPlay_DoInputMenu");
static_assert(offsetof(BPFL_AutoPlay_DoInputMenu, AppController) == 0x000000, "Member 'BPFL_AutoPlay_DoInputMenu::AppController' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputMenu, InKey) == 0x000008, "Member 'BPFL_AutoPlay_DoInputMenu::InKey' has a wrong offset!");

// Function UnionSystem.BPFL_AutoPlay.DoInputRacePressed
// 0x0010 (0x0010 - 0x0000)
struct BPFL_AutoPlay_DoInputRacePressed final
{
public:
	class ARacePlayerController*                  RaceController;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERaceInputKey                                 InKey;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Amount;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BPFL_AutoPlay_DoInputRacePressed) == 0x000008, "Wrong alignment on BPFL_AutoPlay_DoInputRacePressed");
static_assert(sizeof(BPFL_AutoPlay_DoInputRacePressed) == 0x000010, "Wrong size on BPFL_AutoPlay_DoInputRacePressed");
static_assert(offsetof(BPFL_AutoPlay_DoInputRacePressed, RaceController) == 0x000000, "Member 'BPFL_AutoPlay_DoInputRacePressed::RaceController' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputRacePressed, InKey) == 0x000008, "Member 'BPFL_AutoPlay_DoInputRacePressed::InKey' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputRacePressed, Amount) == 0x00000C, "Member 'BPFL_AutoPlay_DoInputRacePressed::Amount' has a wrong offset!");

// Function UnionSystem.BPFL_AutoPlay.DoInputRaceReleased
// 0x0010 (0x0010 - 0x0000)
struct BPFL_AutoPlay_DoInputRaceReleased final
{
public:
	class ARacePlayerController*                  RaceController;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERaceInputKey                                 InKey;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BPFL_AutoPlay_DoInputRaceReleased) == 0x000008, "Wrong alignment on BPFL_AutoPlay_DoInputRaceReleased");
static_assert(sizeof(BPFL_AutoPlay_DoInputRaceReleased) == 0x000010, "Wrong size on BPFL_AutoPlay_DoInputRaceReleased");
static_assert(offsetof(BPFL_AutoPlay_DoInputRaceReleased, RaceController) == 0x000000, "Member 'BPFL_AutoPlay_DoInputRaceReleased::RaceController' has a wrong offset!");
static_assert(offsetof(BPFL_AutoPlay_DoInputRaceReleased, InKey) == 0x000008, "Member 'BPFL_AutoPlay_DoInputRaceReleased::InKey' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectBytesData
// 0x0040 (0x0040 - 0x0000)
struct CollectHelper_CollectBytesData final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Suffix;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectBytesData) == 0x000008, "Wrong alignment on CollectHelper_CollectBytesData");
static_assert(sizeof(CollectHelper_CollectBytesData) == 0x000040, "Wrong size on CollectHelper_CollectBytesData");
static_assert(offsetof(CollectHelper_CollectBytesData, Name_0) == 0x000000, "Member 'CollectHelper_CollectBytesData::Name_0' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectBytesData, Suffix) == 0x000010, "Member 'CollectHelper_CollectBytesData::Suffix' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectBytesData, Data) == 0x000020, "Member 'CollectHelper_CollectBytesData::Data' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectBytesData, ReturnValue) == 0x000030, "Member 'CollectHelper_CollectBytesData::ReturnValue' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectCacheDirectory
// 0x0010 (0x0010 - 0x0000)
struct CollectHelper_CollectCacheDirectory final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectCacheDirectory) == 0x000008, "Wrong alignment on CollectHelper_CollectCacheDirectory");
static_assert(sizeof(CollectHelper_CollectCacheDirectory) == 0x000010, "Wrong size on CollectHelper_CollectCacheDirectory");
static_assert(offsetof(CollectHelper_CollectCacheDirectory, ReturnValue) == 0x000000, "Member 'CollectHelper_CollectCacheDirectory::ReturnValue' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectChangeList
// 0x0010 (0x0010 - 0x0000)
struct CollectHelper_CollectChangeList final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectChangeList) == 0x000008, "Wrong alignment on CollectHelper_CollectChangeList");
static_assert(sizeof(CollectHelper_CollectChangeList) == 0x000010, "Wrong size on CollectHelper_CollectChangeList");
static_assert(offsetof(CollectHelper_CollectChangeList, ReturnValue) == 0x000000, "Member 'CollectHelper_CollectChangeList::ReturnValue' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectCheckEnabled
// 0x0001 (0x0001 - 0x0000)
struct CollectHelper_CollectCheckEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectCheckEnabled) == 0x000001, "Wrong alignment on CollectHelper_CollectCheckEnabled");
static_assert(sizeof(CollectHelper_CollectCheckEnabled) == 0x000001, "Wrong size on CollectHelper_CollectCheckEnabled");
static_assert(offsetof(CollectHelper_CollectCheckEnabled, ReturnValue) == 0x000000, "Member 'CollectHelper_CollectCheckEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectLevelName
// 0x0010 (0x0010 - 0x0000)
struct CollectHelper_CollectLevelName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectLevelName) == 0x000008, "Wrong alignment on CollectHelper_CollectLevelName");
static_assert(sizeof(CollectHelper_CollectLevelName) == 0x000010, "Wrong size on CollectHelper_CollectLevelName");
static_assert(offsetof(CollectHelper_CollectLevelName, ReturnValue) == 0x000000, "Member 'CollectHelper_CollectLevelName::ReturnValue' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectScreenShot
// 0x0020 (0x0020 - 0x0000)
struct CollectHelper_CollectScreenShot final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectScreenShot) == 0x000008, "Wrong alignment on CollectHelper_CollectScreenShot");
static_assert(sizeof(CollectHelper_CollectScreenShot) == 0x000020, "Wrong size on CollectHelper_CollectScreenShot");
static_assert(offsetof(CollectHelper_CollectScreenShot, Name_0) == 0x000000, "Member 'CollectHelper_CollectScreenShot::Name_0' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectScreenShot, ReturnValue) == 0x000010, "Member 'CollectHelper_CollectScreenShot::ReturnValue' has a wrong offset!");

// Function UnionSystem.CollectHelper.CollectStringData
// 0x0040 (0x0040 - 0x0000)
struct CollectHelper_CollectStringData final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Suffix;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectHelper_CollectStringData) == 0x000008, "Wrong alignment on CollectHelper_CollectStringData");
static_assert(sizeof(CollectHelper_CollectStringData) == 0x000040, "Wrong size on CollectHelper_CollectStringData");
static_assert(offsetof(CollectHelper_CollectStringData, Name_0) == 0x000000, "Member 'CollectHelper_CollectStringData::Name_0' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectStringData, Suffix) == 0x000010, "Member 'CollectHelper_CollectStringData::Suffix' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectStringData, Data) == 0x000020, "Member 'CollectHelper_CollectStringData::Data' has a wrong offset!");
static_assert(offsetof(CollectHelper_CollectStringData, ReturnValue) == 0x000030, "Member 'CollectHelper_CollectStringData::ReturnValue' has a wrong offset!");

// Function UnionSystem.CryptoHelper.DecryptFromTextString
// 0x0040 (0x0040 - 0x0000)
struct CryptoHelper_DecryptFromTextString final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HexKey;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Vector;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CryptoHelper_DecryptFromTextString) == 0x000008, "Wrong alignment on CryptoHelper_DecryptFromTextString");
static_assert(sizeof(CryptoHelper_DecryptFromTextString) == 0x000040, "Wrong size on CryptoHelper_DecryptFromTextString");
static_assert(offsetof(CryptoHelper_DecryptFromTextString, Data) == 0x000000, "Member 'CryptoHelper_DecryptFromTextString::Data' has a wrong offset!");
static_assert(offsetof(CryptoHelper_DecryptFromTextString, HexKey) == 0x000010, "Member 'CryptoHelper_DecryptFromTextString::HexKey' has a wrong offset!");
static_assert(offsetof(CryptoHelper_DecryptFromTextString, Vector) == 0x000020, "Member 'CryptoHelper_DecryptFromTextString::Vector' has a wrong offset!");
static_assert(offsetof(CryptoHelper_DecryptFromTextString, ReturnValue) == 0x000030, "Member 'CryptoHelper_DecryptFromTextString::ReturnValue' has a wrong offset!");

// Function UnionSystem.CryptoHelper.EncryptFromByteArrayIntoTextString
// 0x0040 (0x0040 - 0x0000)
struct CryptoHelper_EncryptFromByteArrayIntoTextString final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 HexKey;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Vector;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CryptoHelper_EncryptFromByteArrayIntoTextString) == 0x000008, "Wrong alignment on CryptoHelper_EncryptFromByteArrayIntoTextString");
static_assert(sizeof(CryptoHelper_EncryptFromByteArrayIntoTextString) == 0x000040, "Wrong size on CryptoHelper_EncryptFromByteArrayIntoTextString");
static_assert(offsetof(CryptoHelper_EncryptFromByteArrayIntoTextString, Bytes) == 0x000000, "Member 'CryptoHelper_EncryptFromByteArrayIntoTextString::Bytes' has a wrong offset!");
static_assert(offsetof(CryptoHelper_EncryptFromByteArrayIntoTextString, HexKey) == 0x000010, "Member 'CryptoHelper_EncryptFromByteArrayIntoTextString::HexKey' has a wrong offset!");
static_assert(offsetof(CryptoHelper_EncryptFromByteArrayIntoTextString, Vector) == 0x000020, "Member 'CryptoHelper_EncryptFromByteArrayIntoTextString::Vector' has a wrong offset!");
static_assert(offsetof(CryptoHelper_EncryptFromByteArrayIntoTextString, ReturnValue) == 0x000030, "Member 'CryptoHelper_EncryptFromByteArrayIntoTextString::ReturnValue' has a wrong offset!");

// Function UnionSystem.CryptoHelper.EncryptIntoTextString
// 0x0040 (0x0040 - 0x0000)
struct CryptoHelper_EncryptIntoTextString final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HexKey;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Vector;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CryptoHelper_EncryptIntoTextString) == 0x000008, "Wrong alignment on CryptoHelper_EncryptIntoTextString");
static_assert(sizeof(CryptoHelper_EncryptIntoTextString) == 0x000040, "Wrong size on CryptoHelper_EncryptIntoTextString");
static_assert(offsetof(CryptoHelper_EncryptIntoTextString, Data) == 0x000000, "Member 'CryptoHelper_EncryptIntoTextString::Data' has a wrong offset!");
static_assert(offsetof(CryptoHelper_EncryptIntoTextString, HexKey) == 0x000010, "Member 'CryptoHelper_EncryptIntoTextString::HexKey' has a wrong offset!");
static_assert(offsetof(CryptoHelper_EncryptIntoTextString, Vector) == 0x000020, "Member 'CryptoHelper_EncryptIntoTextString::Vector' has a wrong offset!");
static_assert(offsetof(CryptoHelper_EncryptIntoTextString, ReturnValue) == 0x000030, "Member 'CryptoHelper_EncryptIntoTextString::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectBytesData
// 0x0040 (0x0040 - 0x0000)
struct DataCollectSubsystem_CollectBytesData final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Suffix;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectBytesData) == 0x000008, "Wrong alignment on DataCollectSubsystem_CollectBytesData");
static_assert(sizeof(DataCollectSubsystem_CollectBytesData) == 0x000040, "Wrong size on DataCollectSubsystem_CollectBytesData");
static_assert(offsetof(DataCollectSubsystem_CollectBytesData, Name_0) == 0x000000, "Member 'DataCollectSubsystem_CollectBytesData::Name_0' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectBytesData, Suffix) == 0x000010, "Member 'DataCollectSubsystem_CollectBytesData::Suffix' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectBytesData, Data) == 0x000020, "Member 'DataCollectSubsystem_CollectBytesData::Data' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectBytesData, ReturnValue) == 0x000030, "Member 'DataCollectSubsystem_CollectBytesData::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectCacheDirectory
// 0x0010 (0x0010 - 0x0000)
struct DataCollectSubsystem_CollectCacheDirectory final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectCacheDirectory) == 0x000008, "Wrong alignment on DataCollectSubsystem_CollectCacheDirectory");
static_assert(sizeof(DataCollectSubsystem_CollectCacheDirectory) == 0x000010, "Wrong size on DataCollectSubsystem_CollectCacheDirectory");
static_assert(offsetof(DataCollectSubsystem_CollectCacheDirectory, ReturnValue) == 0x000000, "Member 'DataCollectSubsystem_CollectCacheDirectory::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectCheckEnabled
// 0x0001 (0x0001 - 0x0000)
struct DataCollectSubsystem_CollectCheckEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectCheckEnabled) == 0x000001, "Wrong alignment on DataCollectSubsystem_CollectCheckEnabled");
static_assert(sizeof(DataCollectSubsystem_CollectCheckEnabled) == 0x000001, "Wrong size on DataCollectSubsystem_CollectCheckEnabled");
static_assert(offsetof(DataCollectSubsystem_CollectCheckEnabled, ReturnValue) == 0x000000, "Member 'DataCollectSubsystem_CollectCheckEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectLevelName
// 0x0010 (0x0010 - 0x0000)
struct DataCollectSubsystem_CollectLevelName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectLevelName) == 0x000008, "Wrong alignment on DataCollectSubsystem_CollectLevelName");
static_assert(sizeof(DataCollectSubsystem_CollectLevelName) == 0x000010, "Wrong size on DataCollectSubsystem_CollectLevelName");
static_assert(offsetof(DataCollectSubsystem_CollectLevelName, ReturnValue) == 0x000000, "Member 'DataCollectSubsystem_CollectLevelName::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectScreenShot
// 0x0020 (0x0020 - 0x0000)
struct DataCollectSubsystem_CollectScreenShot final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectScreenShot) == 0x000008, "Wrong alignment on DataCollectSubsystem_CollectScreenShot");
static_assert(sizeof(DataCollectSubsystem_CollectScreenShot) == 0x000020, "Wrong size on DataCollectSubsystem_CollectScreenShot");
static_assert(offsetof(DataCollectSubsystem_CollectScreenShot, Name_0) == 0x000000, "Member 'DataCollectSubsystem_CollectScreenShot::Name_0' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectScreenShot, ReturnValue) == 0x000010, "Member 'DataCollectSubsystem_CollectScreenShot::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectStringData
// 0x0040 (0x0040 - 0x0000)
struct DataCollectSubsystem_CollectStringData final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Suffix;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectStringData) == 0x000008, "Wrong alignment on DataCollectSubsystem_CollectStringData");
static_assert(sizeof(DataCollectSubsystem_CollectStringData) == 0x000040, "Wrong size on DataCollectSubsystem_CollectStringData");
static_assert(offsetof(DataCollectSubsystem_CollectStringData, Name_0) == 0x000000, "Member 'DataCollectSubsystem_CollectStringData::Name_0' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectStringData, Suffix) == 0x000010, "Member 'DataCollectSubsystem_CollectStringData::Suffix' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectStringData, Data) == 0x000020, "Member 'DataCollectSubsystem_CollectStringData::Data' has a wrong offset!");
static_assert(offsetof(DataCollectSubsystem_CollectStringData, ReturnValue) == 0x000030, "Member 'DataCollectSubsystem_CollectStringData::ReturnValue' has a wrong offset!");

// Function UnionSystem.DataCollectSubsystem.CollectChangeList
// 0x0010 (0x0010 - 0x0000)
struct DataCollectSubsystem_CollectChangeList final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataCollectSubsystem_CollectChangeList) == 0x000008, "Wrong alignment on DataCollectSubsystem_CollectChangeList");
static_assert(sizeof(DataCollectSubsystem_CollectChangeList) == 0x000010, "Wrong size on DataCollectSubsystem_CollectChangeList");
static_assert(offsetof(DataCollectSubsystem_CollectChangeList, ReturnValue) == 0x000000, "Member 'DataCollectSubsystem_CollectChangeList::ReturnValue' has a wrong offset!");

// Function UnionSystem.DebugImportantLogLine.SetLog
// 0x0030 (0x0030 - 0x0000)
struct DebugImportantLogLine_SetLog final
{
public:
	class FString                                 ClassName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LogString;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DateTimeString;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogLine_SetLog) == 0x000008, "Wrong alignment on DebugImportantLogLine_SetLog");
static_assert(sizeof(DebugImportantLogLine_SetLog) == 0x000030, "Wrong size on DebugImportantLogLine_SetLog");
static_assert(offsetof(DebugImportantLogLine_SetLog, ClassName) == 0x000000, "Member 'DebugImportantLogLine_SetLog::ClassName' has a wrong offset!");
static_assert(offsetof(DebugImportantLogLine_SetLog, LogString) == 0x000010, "Member 'DebugImportantLogLine_SetLog::LogString' has a wrong offset!");
static_assert(offsetof(DebugImportantLogLine_SetLog, DateTimeString) == 0x000020, "Member 'DebugImportantLogLine_SetLog::DateTimeString' has a wrong offset!");

// Function UnionSystem.DebugImportantLogPanel.AddLog
// 0x0030 (0x0030 - 0x0000)
struct DebugImportantLogPanel_AddLog final
{
public:
	class FString                                 ClassName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LogString;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DateTimeString;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogPanel_AddLog) == 0x000008, "Wrong alignment on DebugImportantLogPanel_AddLog");
static_assert(sizeof(DebugImportantLogPanel_AddLog) == 0x000030, "Wrong size on DebugImportantLogPanel_AddLog");
static_assert(offsetof(DebugImportantLogPanel_AddLog, ClassName) == 0x000000, "Member 'DebugImportantLogPanel_AddLog::ClassName' has a wrong offset!");
static_assert(offsetof(DebugImportantLogPanel_AddLog, LogString) == 0x000010, "Member 'DebugImportantLogPanel_AddLog::LogString' has a wrong offset!");
static_assert(offsetof(DebugImportantLogPanel_AddLog, DateTimeString) == 0x000020, "Member 'DebugImportantLogPanel_AddLog::DateTimeString' has a wrong offset!");

// Function UnionSystem.DebugImportantLogSubsystem.AddImportantLog
// 0x0020 (0x0020 - 0x0000)
struct DebugImportantLogSubsystem_AddImportantLog final
{
public:
	class FString                                 LogLocation;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LogString;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogSubsystem_AddImportantLog) == 0x000008, "Wrong alignment on DebugImportantLogSubsystem_AddImportantLog");
static_assert(sizeof(DebugImportantLogSubsystem_AddImportantLog) == 0x000020, "Wrong size on DebugImportantLogSubsystem_AddImportantLog");
static_assert(offsetof(DebugImportantLogSubsystem_AddImportantLog, LogLocation) == 0x000000, "Member 'DebugImportantLogSubsystem_AddImportantLog::LogLocation' has a wrong offset!");
static_assert(offsetof(DebugImportantLogSubsystem_AddImportantLog, LogString) == 0x000010, "Member 'DebugImportantLogSubsystem_AddImportantLog::LogString' has a wrong offset!");

// Function UnionSystem.DebugImportantLogSubsystem.GetImportantLogPanel
// 0x0008 (0x0008 - 0x0000)
struct DebugImportantLogSubsystem_GetImportantLogPanel final
{
public:
	class UDebugImportantLogPanel*                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogSubsystem_GetImportantLogPanel) == 0x000008, "Wrong alignment on DebugImportantLogSubsystem_GetImportantLogPanel");
static_assert(sizeof(DebugImportantLogSubsystem_GetImportantLogPanel) == 0x000008, "Wrong size on DebugImportantLogSubsystem_GetImportantLogPanel");
static_assert(offsetof(DebugImportantLogSubsystem_GetImportantLogPanel, ReturnValue) == 0x000000, "Member 'DebugImportantLogSubsystem_GetImportantLogPanel::ReturnValue' has a wrong offset!");

// Function UnionSystem.DebugImportantLogSubsystem.SetImportantLogCount
// 0x0004 (0x0004 - 0x0000)
struct DebugImportantLogSubsystem_SetImportantLogCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogSubsystem_SetImportantLogCount) == 0x000004, "Wrong alignment on DebugImportantLogSubsystem_SetImportantLogCount");
static_assert(sizeof(DebugImportantLogSubsystem_SetImportantLogCount) == 0x000004, "Wrong size on DebugImportantLogSubsystem_SetImportantLogCount");
static_assert(offsetof(DebugImportantLogSubsystem_SetImportantLogCount, NewCount) == 0x000000, "Member 'DebugImportantLogSubsystem_SetImportantLogCount::NewCount' has a wrong offset!");

// Function UnionSystem.DebugImportantLogSubsystem.SetImportantLogPanelVisible
// 0x0001 (0x0001 - 0x0000)
struct DebugImportantLogSubsystem_SetImportantLogPanelVisible final
{
public:
	bool                                          bNewVisible;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogSubsystem_SetImportantLogPanelVisible) == 0x000001, "Wrong alignment on DebugImportantLogSubsystem_SetImportantLogPanelVisible");
static_assert(sizeof(DebugImportantLogSubsystem_SetImportantLogPanelVisible) == 0x000001, "Wrong size on DebugImportantLogSubsystem_SetImportantLogPanelVisible");
static_assert(offsetof(DebugImportantLogSubsystem_SetImportantLogPanelVisible, bNewVisible) == 0x000000, "Member 'DebugImportantLogSubsystem_SetImportantLogPanelVisible::bNewVisible' has a wrong offset!");

// Function UnionSystem.DebugImportantLogUtil.AddImportantLog
// 0x0020 (0x0020 - 0x0000)
struct DebugImportantLogUtil_AddImportantLog final
{
public:
	class FString                                 LogLocation;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LogString;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogUtil_AddImportantLog) == 0x000008, "Wrong alignment on DebugImportantLogUtil_AddImportantLog");
static_assert(sizeof(DebugImportantLogUtil_AddImportantLog) == 0x000020, "Wrong size on DebugImportantLogUtil_AddImportantLog");
static_assert(offsetof(DebugImportantLogUtil_AddImportantLog, LogLocation) == 0x000000, "Member 'DebugImportantLogUtil_AddImportantLog::LogLocation' has a wrong offset!");
static_assert(offsetof(DebugImportantLogUtil_AddImportantLog, LogString) == 0x000010, "Member 'DebugImportantLogUtil_AddImportantLog::LogString' has a wrong offset!");

// Function UnionSystem.DebugImportantLogUtil.SetImportantLogCount
// 0x0004 (0x0004 - 0x0000)
struct DebugImportantLogUtil_SetImportantLogCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogUtil_SetImportantLogCount) == 0x000004, "Wrong alignment on DebugImportantLogUtil_SetImportantLogCount");
static_assert(sizeof(DebugImportantLogUtil_SetImportantLogCount) == 0x000004, "Wrong size on DebugImportantLogUtil_SetImportantLogCount");
static_assert(offsetof(DebugImportantLogUtil_SetImportantLogCount, NewCount) == 0x000000, "Member 'DebugImportantLogUtil_SetImportantLogCount::NewCount' has a wrong offset!");

// Function UnionSystem.DebugImportantLogUtil.SetImportantLogVisible
// 0x0001 (0x0001 - 0x0000)
struct DebugImportantLogUtil_SetImportantLogVisible final
{
public:
	bool                                          bNewVisible;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugImportantLogUtil_SetImportantLogVisible) == 0x000001, "Wrong alignment on DebugImportantLogUtil_SetImportantLogVisible");
static_assert(sizeof(DebugImportantLogUtil_SetImportantLogVisible) == 0x000001, "Wrong size on DebugImportantLogUtil_SetImportantLogVisible");
static_assert(offsetof(DebugImportantLogUtil_SetImportantLogVisible, bNewVisible) == 0x000000, "Member 'DebugImportantLogUtil_SetImportantLogVisible::bNewVisible' has a wrong offset!");

// Function UnionSystem.DebugOnlineAutoPlaySetting.GetDebugAutoPlayMode
// 0x0004 (0x0004 - 0x0000)
struct DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode) == 0x000004, "Wrong alignment on DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode");
static_assert(sizeof(DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode) == 0x000004, "Wrong size on DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode");
static_assert(offsetof(DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode, ReturnValue) == 0x000000, "Member 'DebugOnlineAutoPlaySetting_GetDebugAutoPlayMode::ReturnValue' has a wrong offset!");

// Function UnionSystem.DebugOnlineAutoPlaySetting.IsDebugAutoPlay
// 0x0001 (0x0001 - 0x0000)
struct DebugOnlineAutoPlaySetting_IsDebugAutoPlay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugOnlineAutoPlaySetting_IsDebugAutoPlay) == 0x000001, "Wrong alignment on DebugOnlineAutoPlaySetting_IsDebugAutoPlay");
static_assert(sizeof(DebugOnlineAutoPlaySetting_IsDebugAutoPlay) == 0x000001, "Wrong size on DebugOnlineAutoPlaySetting_IsDebugAutoPlay");
static_assert(offsetof(DebugOnlineAutoPlaySetting_IsDebugAutoPlay, ReturnValue) == 0x000000, "Member 'DebugOnlineAutoPlaySetting_IsDebugAutoPlay::ReturnValue' has a wrong offset!");

// Function UnionSystem.DebugOnlineAutoPlaySetting.IsDebugAutoPlayShortRace
// 0x0001 (0x0001 - 0x0000)
struct DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace) == 0x000001, "Wrong alignment on DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace");
static_assert(sizeof(DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace) == 0x000001, "Wrong size on DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace");
static_assert(offsetof(DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace, ReturnValue) == 0x000000, "Member 'DebugOnlineAutoPlaySetting_IsDebugAutoPlayShortRace::ReturnValue' has a wrong offset!");

// Function UnionSystem.DebugOnlineAutoPlaySetting.SetDebugAutoPlay
// 0x0001 (0x0001 - 0x0000)
struct DebugOnlineAutoPlaySetting_SetDebugAutoPlay final
{
public:
	bool                                          flg;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugOnlineAutoPlaySetting_SetDebugAutoPlay) == 0x000001, "Wrong alignment on DebugOnlineAutoPlaySetting_SetDebugAutoPlay");
static_assert(sizeof(DebugOnlineAutoPlaySetting_SetDebugAutoPlay) == 0x000001, "Wrong size on DebugOnlineAutoPlaySetting_SetDebugAutoPlay");
static_assert(offsetof(DebugOnlineAutoPlaySetting_SetDebugAutoPlay, flg) == 0x000000, "Member 'DebugOnlineAutoPlaySetting_SetDebugAutoPlay::flg' has a wrong offset!");

// Function UnionSystem.DebugOnlineAutoPlaySetting.SetDebugAutoPlayMode
// 0x0004 (0x0004 - 0x0000)
struct DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode) == 0x000004, "Wrong alignment on DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode");
static_assert(sizeof(DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode) == 0x000004, "Wrong size on DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode");
static_assert(offsetof(DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode, Mode) == 0x000000, "Member 'DebugOnlineAutoPlaySetting_SetDebugAutoPlayMode::Mode' has a wrong offset!");

// Function UnionSystem.DebugOnlineAutoPlaySetting.SetDebugAutoPlayShortRace
// 0x0001 (0x0001 - 0x0000)
struct DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace final
{
public:
	bool                                          flg;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace) == 0x000001, "Wrong alignment on DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace");
static_assert(sizeof(DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace) == 0x000001, "Wrong size on DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace");
static_assert(offsetof(DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace, flg) == 0x000000, "Member 'DebugOnlineAutoPlaySetting_SetDebugAutoPlayShortRace::flg' has a wrong offset!");

// Function UnionSystem.DeviceChangeInterface.ChangeInputTypeIF
// 0x0001 (0x0001 - 0x0000)
struct DeviceChangeInterface_ChangeInputTypeIF final
{
public:
	EAppControllerInputType                       InNewControllerInputType;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DeviceChangeInterface_ChangeInputTypeIF) == 0x000001, "Wrong alignment on DeviceChangeInterface_ChangeInputTypeIF");
static_assert(sizeof(DeviceChangeInterface_ChangeInputTypeIF) == 0x000001, "Wrong size on DeviceChangeInterface_ChangeInputTypeIF");
static_assert(offsetof(DeviceChangeInterface_ChangeInputTypeIF, InNewControllerInputType) == 0x000000, "Member 'DeviceChangeInterface_ChangeInputTypeIF::InNewControllerInputType' has a wrong offset!");

// Function UnionSystem.DeviceChangeInterface.ChangeKeyboardLayoutIF
// 0x0002 (0x0002 - 0x0000)
struct DeviceChangeInterface_ChangeKeyboardLayoutIF final
{
public:
	uint8                                         InNewKeyboardLayout;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InNewKeytopPattern;                                // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DeviceChangeInterface_ChangeKeyboardLayoutIF) == 0x000001, "Wrong alignment on DeviceChangeInterface_ChangeKeyboardLayoutIF");
static_assert(sizeof(DeviceChangeInterface_ChangeKeyboardLayoutIF) == 0x000002, "Wrong size on DeviceChangeInterface_ChangeKeyboardLayoutIF");
static_assert(offsetof(DeviceChangeInterface_ChangeKeyboardLayoutIF, InNewKeyboardLayout) == 0x000000, "Member 'DeviceChangeInterface_ChangeKeyboardLayoutIF::InNewKeyboardLayout' has a wrong offset!");
static_assert(offsetof(DeviceChangeInterface_ChangeKeyboardLayoutIF, InNewKeytopPattern) == 0x000001, "Member 'DeviceChangeInterface_ChangeKeyboardLayoutIF::InNewKeytopPattern' has a wrong offset!");

// Function UnionSystem.DriverIdUtilityLibrary.GetRaceRivalDriverId
// 0x0003 (0x0003 - 0x0000)
struct DriverIdUtilityLibrary_GetRaceRivalDriverId final
{
public:
	EGameModeId                                   GameModeID;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     InDriverId;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DriverIdUtilityLibrary_GetRaceRivalDriverId) == 0x000001, "Wrong alignment on DriverIdUtilityLibrary_GetRaceRivalDriverId");
static_assert(sizeof(DriverIdUtilityLibrary_GetRaceRivalDriverId) == 0x000003, "Wrong size on DriverIdUtilityLibrary_GetRaceRivalDriverId");
static_assert(offsetof(DriverIdUtilityLibrary_GetRaceRivalDriverId, GameModeID) == 0x000000, "Member 'DriverIdUtilityLibrary_GetRaceRivalDriverId::GameModeID' has a wrong offset!");
static_assert(offsetof(DriverIdUtilityLibrary_GetRaceRivalDriverId, InDriverId) == 0x000001, "Member 'DriverIdUtilityLibrary_GetRaceRivalDriverId::InDriverId' has a wrong offset!");
static_assert(offsetof(DriverIdUtilityLibrary_GetRaceRivalDriverId, ReturnValue) == 0x000002, "Member 'DriverIdUtilityLibrary_GetRaceRivalDriverId::ReturnValue' has a wrong offset!");

// Function UnionSystem.DriverIdUtilityLibrary.GetRivalDriverId
// 0x0002 (0x0002 - 0x0000)
struct DriverIdUtilityLibrary_GetRivalDriverId final
{
public:
	EDriverId                                     InDriverId;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DriverIdUtilityLibrary_GetRivalDriverId) == 0x000001, "Wrong alignment on DriverIdUtilityLibrary_GetRivalDriverId");
static_assert(sizeof(DriverIdUtilityLibrary_GetRivalDriverId) == 0x000002, "Wrong size on DriverIdUtilityLibrary_GetRivalDriverId");
static_assert(offsetof(DriverIdUtilityLibrary_GetRivalDriverId, InDriverId) == 0x000000, "Member 'DriverIdUtilityLibrary_GetRivalDriverId::InDriverId' has a wrong offset!");
static_assert(offsetof(DriverIdUtilityLibrary_GetRivalDriverId, ReturnValue) == 0x000001, "Member 'DriverIdUtilityLibrary_GetRivalDriverId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.BeginTransaction
// 0x0001 (0x0001 - 0x0000)
struct LobbyMemberContextBase_BeginTransaction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_BeginTransaction) == 0x000001, "Wrong alignment on LobbyMemberContextBase_BeginTransaction");
static_assert(sizeof(LobbyMemberContextBase_BeginTransaction) == 0x000001, "Wrong size on LobbyMemberContextBase_BeginTransaction");
static_assert(offsetof(LobbyMemberContextBase_BeginTransaction, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_BeginTransaction::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.EndTransaction
// 0x0014 (0x0014 - 0x0000)
struct LobbyMemberContextBase_EndTransaction final
{
public:
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyMemberContextBase_EndTransaction) == 0x000004, "Wrong alignment on LobbyMemberContextBase_EndTransaction");
static_assert(sizeof(LobbyMemberContextBase_EndTransaction) == 0x000014, "Wrong size on LobbyMemberContextBase_EndTransaction");
static_assert(offsetof(LobbyMemberContextBase_EndTransaction, OnComplete) == 0x000000, "Member 'LobbyMemberContextBase_EndTransaction::OnComplete' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_EndTransaction, ReturnValue) == 0x000010, "Member 'LobbyMemberContextBase_EndTransaction::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.EndTransaction_NoCallback
// 0x0001 (0x0001 - 0x0000)
struct LobbyMemberContextBase_EndTransaction_NoCallback final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_EndTransaction_NoCallback) == 0x000001, "Wrong alignment on LobbyMemberContextBase_EndTransaction_NoCallback");
static_assert(sizeof(LobbyMemberContextBase_EndTransaction_NoCallback) == 0x000001, "Wrong size on LobbyMemberContextBase_EndTransaction_NoCallback");
static_assert(offsetof(LobbyMemberContextBase_EndTransaction_NoCallback, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_EndTransaction_NoCallback::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.OnUpdateMemberSelfComplete
// 0x0080 (0x0080 - 0x0000)
struct LobbyMemberContextBase_OnUpdateMemberSelfComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  Result;                                            // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_OnUpdateMemberSelfComplete) == 0x000008, "Wrong alignment on LobbyMemberContextBase_OnUpdateMemberSelfComplete");
static_assert(sizeof(LobbyMemberContextBase_OnUpdateMemberSelfComplete) == 0x000080, "Wrong size on LobbyMemberContextBase_OnUpdateMemberSelfComplete");
static_assert(offsetof(LobbyMemberContextBase_OnUpdateMemberSelfComplete, bSuccessful) == 0x000000, "Member 'LobbyMemberContextBase_OnUpdateMemberSelfComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_OnUpdateMemberSelfComplete, Result) == 0x000008, "Member 'LobbyMemberContextBase_OnUpdateMemberSelfComplete::Result' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_OnUpdateMemberSelfComplete, OnComplete) == 0x000070, "Member 'LobbyMemberContextBase_OnUpdateMemberSelfComplete::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.Compare
// 0x0010 (0x0010 - 0x0000)
struct LobbyMemberContextBase_Compare final
{
public:
	class ULobbyMemberContextBase*                Other;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyMemberContextBase_Compare) == 0x000008, "Wrong alignment on LobbyMemberContextBase_Compare");
static_assert(sizeof(LobbyMemberContextBase_Compare) == 0x000010, "Wrong size on LobbyMemberContextBase_Compare");
static_assert(offsetof(LobbyMemberContextBase_Compare, Other) == 0x000000, "Member 'LobbyMemberContextBase_Compare::Other' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_Compare, ReturnValue) == 0x000008, "Member 'LobbyMemberContextBase_Compare::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.GetAppUserBaseData
// 0x0080 (0x0080 - 0x0000)
struct LobbyMemberContextBase_GetAppUserBaseData final
{
public:
	struct FAppUserBaseData                       OutAppUserBaseData;                                // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyMemberContextBase_GetAppUserBaseData) == 0x000008, "Wrong alignment on LobbyMemberContextBase_GetAppUserBaseData");
static_assert(sizeof(LobbyMemberContextBase_GetAppUserBaseData) == 0x000080, "Wrong size on LobbyMemberContextBase_GetAppUserBaseData");
static_assert(offsetof(LobbyMemberContextBase_GetAppUserBaseData, OutAppUserBaseData) == 0x000000, "Member 'LobbyMemberContextBase_GetAppUserBaseData::OutAppUserBaseData' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_GetAppUserBaseData, ReturnValue) == 0x000078, "Member 'LobbyMemberContextBase_GetAppUserBaseData::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.GetInternalUserId
// 0x0010 (0x0010 - 0x0000)
struct LobbyMemberContextBase_GetInternalUserId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_GetInternalUserId) == 0x000008, "Wrong alignment on LobbyMemberContextBase_GetInternalUserId");
static_assert(sizeof(LobbyMemberContextBase_GetInternalUserId) == 0x000010, "Wrong size on LobbyMemberContextBase_GetInternalUserId");
static_assert(offsetof(LobbyMemberContextBase_GetInternalUserId, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_GetInternalUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.GetLobbyMemberIndex
// 0x0004 (0x0004 - 0x0000)
struct LobbyMemberContextBase_GetLobbyMemberIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_GetLobbyMemberIndex) == 0x000004, "Wrong alignment on LobbyMemberContextBase_GetLobbyMemberIndex");
static_assert(sizeof(LobbyMemberContextBase_GetLobbyMemberIndex) == 0x000004, "Wrong size on LobbyMemberContextBase_GetLobbyMemberIndex");
static_assert(offsetof(LobbyMemberContextBase_GetLobbyMemberIndex, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_GetLobbyMemberIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.GetSystemMiscVersions
// 0x0010 (0x0010 - 0x0000)
struct LobbyMemberContextBase_GetSystemMiscVersions final
{
public:
	int32                                         romType;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RomVersion;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MasterDataVersion;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyMemberContextBase_GetSystemMiscVersions) == 0x000004, "Wrong alignment on LobbyMemberContextBase_GetSystemMiscVersions");
static_assert(sizeof(LobbyMemberContextBase_GetSystemMiscVersions) == 0x000010, "Wrong size on LobbyMemberContextBase_GetSystemMiscVersions");
static_assert(offsetof(LobbyMemberContextBase_GetSystemMiscVersions, romType) == 0x000000, "Member 'LobbyMemberContextBase_GetSystemMiscVersions::romType' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_GetSystemMiscVersions, RomVersion) == 0x000004, "Member 'LobbyMemberContextBase_GetSystemMiscVersions::RomVersion' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_GetSystemMiscVersions, MasterDataVersion) == 0x000008, "Member 'LobbyMemberContextBase_GetSystemMiscVersions::MasterDataVersion' has a wrong offset!");
static_assert(offsetof(LobbyMemberContextBase_GetSystemMiscVersions, ReturnValue) == 0x00000C, "Member 'LobbyMemberContextBase_GetSystemMiscVersions::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.GetUserIdRepl
// 0x0030 (0x0030 - 0x0000)
struct LobbyMemberContextBase_GetUserIdRepl final
{
public:
	struct FUniqueNetIdRepl                       OutResult;                                         // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_GetUserIdRepl) == 0x000008, "Wrong alignment on LobbyMemberContextBase_GetUserIdRepl");
static_assert(sizeof(LobbyMemberContextBase_GetUserIdRepl) == 0x000030, "Wrong size on LobbyMemberContextBase_GetUserIdRepl");
static_assert(offsetof(LobbyMemberContextBase_GetUserIdRepl, OutResult) == 0x000000, "Member 'LobbyMemberContextBase_GetUserIdRepl::OutResult' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.GetUserIdString
// 0x0010 (0x0010 - 0x0000)
struct LobbyMemberContextBase_GetUserIdString final
{
public:
	class FString                                 OutResult;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_GetUserIdString) == 0x000008, "Wrong alignment on LobbyMemberContextBase_GetUserIdString");
static_assert(sizeof(LobbyMemberContextBase_GetUserIdString) == 0x000010, "Wrong size on LobbyMemberContextBase_GetUserIdString");
static_assert(offsetof(LobbyMemberContextBase_GetUserIdString, OutResult) == 0x000000, "Member 'LobbyMemberContextBase_GetUserIdString::OutResult' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.IsCom
// 0x0001 (0x0001 - 0x0000)
struct LobbyMemberContextBase_IsCom final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_IsCom) == 0x000001, "Wrong alignment on LobbyMemberContextBase_IsCom");
static_assert(sizeof(LobbyMemberContextBase_IsCom) == 0x000001, "Wrong size on LobbyMemberContextBase_IsCom");
static_assert(offsetof(LobbyMemberContextBase_IsCom, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_IsCom::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.IsLobbyHost
// 0x0001 (0x0001 - 0x0000)
struct LobbyMemberContextBase_IsLobbyHost final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_IsLobbyHost) == 0x000001, "Wrong alignment on LobbyMemberContextBase_IsLobbyHost");
static_assert(sizeof(LobbyMemberContextBase_IsLobbyHost) == 0x000001, "Wrong size on LobbyMemberContextBase_IsLobbyHost");
static_assert(offsetof(LobbyMemberContextBase_IsLobbyHost, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_IsLobbyHost::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.IsLocalUser
// 0x0001 (0x0001 - 0x0000)
struct LobbyMemberContextBase_IsLocalUser final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_IsLocalUser) == 0x000001, "Wrong alignment on LobbyMemberContextBase_IsLocalUser");
static_assert(sizeof(LobbyMemberContextBase_IsLocalUser) == 0x000001, "Wrong size on LobbyMemberContextBase_IsLocalUser");
static_assert(offsetof(LobbyMemberContextBase_IsLocalUser, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_IsLocalUser::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyMemberContextBase.IsValetCom
// 0x0001 (0x0001 - 0x0000)
struct LobbyMemberContextBase_IsValetCom final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberContextBase_IsValetCom) == 0x000001, "Wrong alignment on LobbyMemberContextBase_IsValetCom");
static_assert(sizeof(LobbyMemberContextBase_IsValetCom) == 0x000001, "Wrong size on LobbyMemberContextBase_IsValetCom");
static_assert(offsetof(LobbyMemberContextBase_IsValetCom, ReturnValue) == 0x000000, "Member 'LobbyMemberContextBase_IsValetCom::ReturnValue' has a wrong offset!");

// Function UnionSystem.EnhancedInputHelper.ExchangeInputKey
// 0x0070 (0x0070 - 0x0000)
struct EnhancedInputHelper_ExchangeInputKey final
{
public:
	class UInputMappingContext*                   InputMappingContext;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnhancedActionKeyMapping              BeforeMapping;                                     // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   AfterKey;                                          // 0x0058(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputHelper_ExchangeInputKey) == 0x000008, "Wrong alignment on EnhancedInputHelper_ExchangeInputKey");
static_assert(sizeof(EnhancedInputHelper_ExchangeInputKey) == 0x000070, "Wrong size on EnhancedInputHelper_ExchangeInputKey");
static_assert(offsetof(EnhancedInputHelper_ExchangeInputKey, InputMappingContext) == 0x000000, "Member 'EnhancedInputHelper_ExchangeInputKey::InputMappingContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputHelper_ExchangeInputKey, BeforeMapping) == 0x000008, "Member 'EnhancedInputHelper_ExchangeInputKey::BeforeMapping' has a wrong offset!");
static_assert(offsetof(EnhancedInputHelper_ExchangeInputKey, AfterKey) == 0x000058, "Member 'EnhancedInputHelper_ExchangeInputKey::AfterKey' has a wrong offset!");

// Function UnionSystem.EnhancedInputHelper.GetEnhancedActionKeyMappingByName
// 0x0020 (0x0020 - 0x0000)
struct EnhancedInputHelper_GetEnhancedActionKeyMappingByName final
{
public:
	class UInputMappingContext*                   InputMappingContext;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InputName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEnhancedActionKeyMapping>      ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnhancedInputHelper_GetEnhancedActionKeyMappingByName) == 0x000008, "Wrong alignment on EnhancedInputHelper_GetEnhancedActionKeyMappingByName");
static_assert(sizeof(EnhancedInputHelper_GetEnhancedActionKeyMappingByName) == 0x000020, "Wrong size on EnhancedInputHelper_GetEnhancedActionKeyMappingByName");
static_assert(offsetof(EnhancedInputHelper_GetEnhancedActionKeyMappingByName, InputMappingContext) == 0x000000, "Member 'EnhancedInputHelper_GetEnhancedActionKeyMappingByName::InputMappingContext' has a wrong offset!");
static_assert(offsetof(EnhancedInputHelper_GetEnhancedActionKeyMappingByName, InputName) == 0x000008, "Member 'EnhancedInputHelper_GetEnhancedActionKeyMappingByName::InputName' has a wrong offset!");
static_assert(offsetof(EnhancedInputHelper_GetEnhancedActionKeyMappingByName, ReturnValue) == 0x000010, "Member 'EnhancedInputHelper_GetEnhancedActionKeyMappingByName::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUIDataAsset.GetFestaUITableDataTeamUIDataArray
// 0x0018 (0x0018 - 0x0000)
struct FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray final
{
public:
	int32                                         InFestaId;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaTeamUIData>               ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray) == 0x000008, "Wrong alignment on FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray");
static_assert(sizeof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray) == 0x000018, "Wrong size on FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray, InFestaId) == 0x000000, "Member 'FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray::InFestaId' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray, ReturnValue) == 0x000008, "Member 'FestaUIDataAsset_GetFestaUITableDataTeamUIDataArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUIDataAsset.GetFestaUITableDataTeamUIDataArrayIndex
// 0x0088 (0x0088 - 0x0000)
struct FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaTeamUIData                       ReturnValue;                                       // 0x0010(0x0078)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex) == 0x000008, "Wrong alignment on FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex");
static_assert(sizeof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex) == 0x000088, "Wrong size on FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex, RowName) == 0x000000, "Member 'FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex::RowName' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex, Index_0) == 0x000008, "Member 'FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex::Index_0' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex, ReturnValue) == 0x000010, "Member 'FestaUIDataAsset_GetFestaUITableDataTeamUIDataArrayIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUIDataAsset.GetFestaUITableSignageTex
// 0x0018 (0x0018 - 0x0000)
struct FestaUIDataAsset_GetFestaUITableSignageTex final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>      ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUIDataAsset_GetFestaUITableSignageTex) == 0x000008, "Wrong alignment on FestaUIDataAsset_GetFestaUITableSignageTex");
static_assert(sizeof(FestaUIDataAsset_GetFestaUITableSignageTex) == 0x000018, "Wrong size on FestaUIDataAsset_GetFestaUITableSignageTex");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableSignageTex, RowName) == 0x000000, "Member 'FestaUIDataAsset_GetFestaUITableSignageTex::RowName' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITableSignageTex, ReturnValue) == 0x000008, "Member 'FestaUIDataAsset_GetFestaUITableSignageTex::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUIDataAsset.GetFestaUITeamUIDataByGroupColorId
// 0x0020 (0x0020 - 0x0000)
struct FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId final
{
public:
	int32                                         TeamId;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGroupColorId                                 GroupColorID;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaTeamUIData>               ArrayData;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IsFound;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId) == 0x000008, "Wrong alignment on FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId");
static_assert(sizeof(FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId) == 0x000020, "Wrong size on FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId, TeamId) == 0x000000, "Member 'FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId::TeamId' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId, GroupColorID) == 0x000004, "Member 'FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId::GroupColorID' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId, ArrayData) == 0x000008, "Member 'FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId::ArrayData' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId, IsFound) == 0x000018, "Member 'FestaUIDataAsset_GetFestaUITeamUIDataByGroupColorId::IsFound' has a wrong offset!");

// Function UnionSystem.FestaUIDataAsset.IsFestaUITableDataTeamUIDataArrayIndexFound
// 0x0010 (0x0010 - 0x0000)
struct FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound) == 0x000004, "Wrong alignment on FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound");
static_assert(sizeof(FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound) == 0x000010, "Wrong size on FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound");
static_assert(offsetof(FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound, RowName) == 0x000000, "Member 'FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound::RowName' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound, Index_0) == 0x000008, "Member 'FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound::Index_0' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound, ReturnValue) == 0x00000C, "Member 'FestaUIDataAsset_IsFestaUITableDataTeamUIDataArrayIndexFound::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUIDataAsset.GetFestaUIData
// 0x0170 (0x0170 - 0x0000)
struct FestaUIDataAsset_GetFestaUIData final
{
public:
	int32                                         festaId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFoundData;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaUIData                           FestaUIData;                                       // 0x0008(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUIDataAsset_GetFestaUIData) == 0x000008, "Wrong alignment on FestaUIDataAsset_GetFestaUIData");
static_assert(sizeof(FestaUIDataAsset_GetFestaUIData) == 0x000170, "Wrong size on FestaUIDataAsset_GetFestaUIData");
static_assert(offsetof(FestaUIDataAsset_GetFestaUIData, festaId) == 0x000000, "Member 'FestaUIDataAsset_GetFestaUIData::festaId' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUIData, bFoundData) == 0x000004, "Member 'FestaUIDataAsset_GetFestaUIData::bFoundData' has a wrong offset!");
static_assert(offsetof(FestaUIDataAsset_GetFestaUIData, FestaUIData) == 0x000008, "Member 'FestaUIDataAsset_GetFestaUIData::FestaUIData' has a wrong offset!");

// Function UnionSystem.FestaUtil.ConvertFestaIdToTypeId
// 0x0008 (0x0008 - 0x0000)
struct FestaUtil_ConvertFestaIdToTypeId final
{
public:
	int32                                         festaId;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_ConvertFestaIdToTypeId) == 0x000004, "Wrong alignment on FestaUtil_ConvertFestaIdToTypeId");
static_assert(sizeof(FestaUtil_ConvertFestaIdToTypeId) == 0x000008, "Wrong size on FestaUtil_ConvertFestaIdToTypeId");
static_assert(offsetof(FestaUtil_ConvertFestaIdToTypeId, festaId) == 0x000000, "Member 'FestaUtil_ConvertFestaIdToTypeId::festaId' has a wrong offset!");
static_assert(offsetof(FestaUtil_ConvertFestaIdToTypeId, ReturnValue) == 0x000004, "Member 'FestaUtil_ConvertFestaIdToTypeId::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaChanceUpRatioText
// 0x0018 (0x0018 - 0x0000)
struct FestaUtil_GetFestaChanceUpRatioText final
{
public:
	int32                                         Ratio;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_GetFestaChanceUpRatioText) == 0x000008, "Wrong alignment on FestaUtil_GetFestaChanceUpRatioText");
static_assert(sizeof(FestaUtil_GetFestaChanceUpRatioText) == 0x000018, "Wrong size on FestaUtil_GetFestaChanceUpRatioText");
static_assert(offsetof(FestaUtil_GetFestaChanceUpRatioText, Ratio) == 0x000000, "Member 'FestaUtil_GetFestaChanceUpRatioText::Ratio' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaChanceUpRatioText, ReturnValue) == 0x000008, "Member 'FestaUtil_GetFestaChanceUpRatioText::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaGroupColorId
// 0x000C (0x000C - 0x0000)
struct FestaUtil_GetFestaGroupColorId final
{
public:
	int32                                         festaId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GroupIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGroupColorId                                 ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FestaUtil_GetFestaGroupColorId) == 0x000004, "Wrong alignment on FestaUtil_GetFestaGroupColorId");
static_assert(sizeof(FestaUtil_GetFestaGroupColorId) == 0x00000C, "Wrong size on FestaUtil_GetFestaGroupColorId");
static_assert(offsetof(FestaUtil_GetFestaGroupColorId, festaId) == 0x000000, "Member 'FestaUtil_GetFestaGroupColorId::festaId' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaGroupColorId, GroupIndex) == 0x000004, "Member 'FestaUtil_GetFestaGroupColorId::GroupIndex' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaGroupColorId, ReturnValue) == 0x000008, "Member 'FestaUtil_GetFestaGroupColorId::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaIdUtil
// 0x0004 (0x0004 - 0x0000)
struct FestaUtil_GetFestaIdUtil final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_GetFestaIdUtil) == 0x000004, "Wrong alignment on FestaUtil_GetFestaIdUtil");
static_assert(sizeof(FestaUtil_GetFestaIdUtil) == 0x000004, "Wrong size on FestaUtil_GetFestaIdUtil");
static_assert(offsetof(FestaUtil_GetFestaIdUtil, ReturnValue) == 0x000000, "Member 'FestaUtil_GetFestaIdUtil::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaMainColor
// 0x0008 (0x0008 - 0x0000)
struct FestaUtil_GetFestaMainColor final
{
public:
	int32                                         GroupIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_GetFestaMainColor) == 0x000004, "Wrong alignment on FestaUtil_GetFestaMainColor");
static_assert(sizeof(FestaUtil_GetFestaMainColor) == 0x000008, "Wrong size on FestaUtil_GetFestaMainColor");
static_assert(offsetof(FestaUtil_GetFestaMainColor, GroupIndex) == 0x000000, "Member 'FestaUtil_GetFestaMainColor::GroupIndex' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaMainColor, ReturnValue) == 0x000004, "Member 'FestaUtil_GetFestaMainColor::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaPointText
// 0x0018 (0x0018 - 0x0000)
struct FestaUtil_GetFestaPointText final
{
public:
	int32                                         Point;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_GetFestaPointText) == 0x000008, "Wrong alignment on FestaUtil_GetFestaPointText");
static_assert(sizeof(FestaUtil_GetFestaPointText) == 0x000018, "Wrong size on FestaUtil_GetFestaPointText");
static_assert(offsetof(FestaUtil_GetFestaPointText, Point) == 0x000000, "Member 'FestaUtil_GetFestaPointText::Point' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaPointText, ReturnValue) == 0x000008, "Member 'FestaUtil_GetFestaPointText::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaRentalPlateText
// 0x0020 (0x0020 - 0x0000)
struct FestaUtil_GetFestaRentalPlateText final
{
public:
	class FText                                   TargetGadgetname;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_GetFestaRentalPlateText) == 0x000008, "Wrong alignment on FestaUtil_GetFestaRentalPlateText");
static_assert(sizeof(FestaUtil_GetFestaRentalPlateText) == 0x000020, "Wrong size on FestaUtil_GetFestaRentalPlateText");
static_assert(offsetof(FestaUtil_GetFestaRentalPlateText, TargetGadgetname) == 0x000000, "Member 'FestaUtil_GetFestaRentalPlateText::TargetGadgetname' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaRentalPlateText, ReturnValue) == 0x000010, "Member 'FestaUtil_GetFestaRentalPlateText::ReturnValue' has a wrong offset!");

// Function UnionSystem.FestaUtil.GetFestaUIColorInfo
// 0x0028 (0x0028 - 0x0000)
struct FestaUtil_GetFestaUIColorInfo final
{
public:
	int32                                         festaId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GroupIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUIColorInfo                           ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FestaUtil_GetFestaUIColorInfo) == 0x000008, "Wrong alignment on FestaUtil_GetFestaUIColorInfo");
static_assert(sizeof(FestaUtil_GetFestaUIColorInfo) == 0x000028, "Wrong size on FestaUtil_GetFestaUIColorInfo");
static_assert(offsetof(FestaUtil_GetFestaUIColorInfo, festaId) == 0x000000, "Member 'FestaUtil_GetFestaUIColorInfo::festaId' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaUIColorInfo, GroupIndex) == 0x000004, "Member 'FestaUtil_GetFestaUIColorInfo::GroupIndex' has a wrong offset!");
static_assert(offsetof(FestaUtil_GetFestaUIColorInfo, ReturnValue) == 0x000008, "Member 'FestaUtil_GetFestaUIColorInfo::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.AddBlockPlayer
// 0x0020 (0x0020 - 0x0000)
struct FriendSubsystem_AddBlockPlayer final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(EBlockPlayerErrorCode ErrorCode, const class FString& ProductUserId)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_AddBlockPlayer) == 0x000008, "Wrong alignment on FriendSubsystem_AddBlockPlayer");
static_assert(sizeof(FriendSubsystem_AddBlockPlayer) == 0x000020, "Wrong size on FriendSubsystem_AddBlockPlayer");
static_assert(offsetof(FriendSubsystem_AddBlockPlayer, ProductUserId) == 0x000000, "Member 'FriendSubsystem_AddBlockPlayer::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_AddBlockPlayer, OnComplete) == 0x000010, "Member 'FriendSubsystem_AddBlockPlayer::OnComplete' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.AddRecentPlayers
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_AddRecentPlayers final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               IdList;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Date;                                              // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_AddRecentPlayers) == 0x000008, "Wrong alignment on FriendSubsystem_AddRecentPlayers");
static_assert(sizeof(FriendSubsystem_AddRecentPlayers) == 0x000028, "Wrong size on FriendSubsystem_AddRecentPlayers");
static_assert(offsetof(FriendSubsystem_AddRecentPlayers, LocalUserNum) == 0x000000, "Member 'FriendSubsystem_AddRecentPlayers::LocalUserNum' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_AddRecentPlayers, IdList) == 0x000008, "Member 'FriendSubsystem_AddRecentPlayers::IdList' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_AddRecentPlayers, Date) == 0x000018, "Member 'FriendSubsystem_AddRecentPlayers::Date' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.CallOnGetFriendInfoComplete
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_CallOnGetFriendInfoComplete final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ExternalIds;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ConvertedIds;                                      // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_CallOnGetFriendInfoComplete) == 0x000008, "Wrong alignment on FriendSubsystem_CallOnGetFriendInfoComplete");
static_assert(sizeof(FriendSubsystem_CallOnGetFriendInfoComplete) == 0x000028, "Wrong size on FriendSubsystem_CallOnGetFriendInfoComplete");
static_assert(offsetof(FriendSubsystem_CallOnGetFriendInfoComplete, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_CallOnGetFriendInfoComplete::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_CallOnGetFriendInfoComplete, ExternalIds) == 0x000008, "Member 'FriendSubsystem_CallOnGetFriendInfoComplete::ExternalIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_CallOnGetFriendInfoComplete, ConvertedIds) == 0x000018, "Member 'FriendSubsystem_CallOnGetFriendInfoComplete::ConvertedIds' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.ContainsBlockPlayer
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_ContainsBlockPlayer final
{
public:
	TArray<class FString>                         ProductUserIds;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         OutBlockPlayerIds;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_ContainsBlockPlayer) == 0x000008, "Wrong alignment on FriendSubsystem_ContainsBlockPlayer");
static_assert(sizeof(FriendSubsystem_ContainsBlockPlayer) == 0x000028, "Wrong size on FriendSubsystem_ContainsBlockPlayer");
static_assert(offsetof(FriendSubsystem_ContainsBlockPlayer, ProductUserIds) == 0x000000, "Member 'FriendSubsystem_ContainsBlockPlayer::ProductUserIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_ContainsBlockPlayer, OutBlockPlayerIds) == 0x000010, "Member 'FriendSubsystem_ContainsBlockPlayer::OutBlockPlayerIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_ContainsBlockPlayer, ReturnValue) == 0x000020, "Member 'FriendSubsystem_ContainsBlockPlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.ConvertPlatformIdToUserIdRequest
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_ConvertPlatformIdToUserIdRequest final
{
public:
	TArray<struct FUniqueNetIdRepl>               IdList;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, const TArray<class FString>& ExternalIds, const TArray<class FString>& ConvertedIds)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForceConvert;                                      // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_ConvertPlatformIdToUserIdRequest) == 0x000008, "Wrong alignment on FriendSubsystem_ConvertPlatformIdToUserIdRequest");
static_assert(sizeof(FriendSubsystem_ConvertPlatformIdToUserIdRequest) == 0x000028, "Wrong size on FriendSubsystem_ConvertPlatformIdToUserIdRequest");
static_assert(offsetof(FriendSubsystem_ConvertPlatformIdToUserIdRequest, IdList) == 0x000000, "Member 'FriendSubsystem_ConvertPlatformIdToUserIdRequest::IdList' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_ConvertPlatformIdToUserIdRequest, OnComplete) == 0x000010, "Member 'FriendSubsystem_ConvertPlatformIdToUserIdRequest::OnComplete' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_ConvertPlatformIdToUserIdRequest, ForceConvert) == 0x000020, "Member 'FriendSubsystem_ConvertPlatformIdToUserIdRequest::ForceConvert' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_ConvertPlatformIdToUserIdRequest, ReturnValue) == 0x000021, "Member 'FriendSubsystem_ConvertPlatformIdToUserIdRequest::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.DebugToggleBlockPlayerState
// 0x0010 (0x0010 - 0x0000)
struct FriendSubsystem_DebugToggleBlockPlayerState final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_DebugToggleBlockPlayerState) == 0x000008, "Wrong alignment on FriendSubsystem_DebugToggleBlockPlayerState");
static_assert(sizeof(FriendSubsystem_DebugToggleBlockPlayerState) == 0x000010, "Wrong size on FriendSubsystem_DebugToggleBlockPlayerState");
static_assert(offsetof(FriendSubsystem_DebugToggleBlockPlayerState, ProductUserId) == 0x000000, "Member 'FriendSubsystem_DebugToggleBlockPlayerState::ProductUserId' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.DeleteBlockPlayer
// 0x0010 (0x0010 - 0x0000)
struct FriendSubsystem_DeleteBlockPlayer final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_DeleteBlockPlayer) == 0x000008, "Wrong alignment on FriendSubsystem_DeleteBlockPlayer");
static_assert(sizeof(FriendSubsystem_DeleteBlockPlayer) == 0x000010, "Wrong size on FriendSubsystem_DeleteBlockPlayer");
static_assert(offsetof(FriendSubsystem_DeleteBlockPlayer, ProductUserId) == 0x000000, "Member 'FriendSubsystem_DeleteBlockPlayer::ProductUserId' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.DeleteRecentPlayer
// 0x0010 (0x0010 - 0x0000)
struct FriendSubsystem_DeleteRecentPlayer final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_DeleteRecentPlayer) == 0x000008, "Wrong alignment on FriendSubsystem_DeleteRecentPlayer");
static_assert(sizeof(FriendSubsystem_DeleteRecentPlayer) == 0x000010, "Wrong size on FriendSubsystem_DeleteRecentPlayer");
static_assert(offsetof(FriendSubsystem_DeleteRecentPlayer, ProductUserId) == 0x000000, "Member 'FriendSubsystem_DeleteRecentPlayer::ProductUserId' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.ForceUpdateFriendList
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_ForceUpdateFriendList final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_ForceUpdateFriendList) == 0x000001, "Wrong alignment on FriendSubsystem_ForceUpdateFriendList");
static_assert(sizeof(FriendSubsystem_ForceUpdateFriendList) == 0x000001, "Wrong size on FriendSubsystem_ForceUpdateFriendList");
static_assert(offsetof(FriendSubsystem_ForceUpdateFriendList, ReturnValue) == 0x000000, "Member 'FriendSubsystem_ForceUpdateFriendList::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetAppSupportedPlatformByStringData
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_GetAppSupportedPlatformByStringData final
{
public:
	class FString                                 InPlatformStr;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppSupportedPlatform                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetAppSupportedPlatformByStringData) == 0x000008, "Wrong alignment on FriendSubsystem_GetAppSupportedPlatformByStringData");
static_assert(sizeof(FriendSubsystem_GetAppSupportedPlatformByStringData) == 0x000018, "Wrong size on FriendSubsystem_GetAppSupportedPlatformByStringData");
static_assert(offsetof(FriendSubsystem_GetAppSupportedPlatformByStringData, InPlatformStr) == 0x000000, "Member 'FriendSubsystem_GetAppSupportedPlatformByStringData::InPlatformStr' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetAppSupportedPlatformByStringData, ReturnValue) == 0x000010, "Member 'FriendSubsystem_GetAppSupportedPlatformByStringData::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetBlockPlayerList
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_GetBlockPlayerList final
{
public:
	TArray<class FString>                         OutBlockPlayers;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	EBlockPlayerFilter                            Filter;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetBlockPlayerList) == 0x000008, "Wrong alignment on FriendSubsystem_GetBlockPlayerList");
static_assert(sizeof(FriendSubsystem_GetBlockPlayerList) == 0x000018, "Wrong size on FriendSubsystem_GetBlockPlayerList");
static_assert(offsetof(FriendSubsystem_GetBlockPlayerList, OutBlockPlayers) == 0x000000, "Member 'FriendSubsystem_GetBlockPlayerList::OutBlockPlayers' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetBlockPlayerList, Filter) == 0x000010, "Member 'FriendSubsystem_GetBlockPlayerList::Filter' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetBlockPlayerState
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_GetBlockPlayerState final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBlockPlayerState                             ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetBlockPlayerState) == 0x000008, "Wrong alignment on FriendSubsystem_GetBlockPlayerState");
static_assert(sizeof(FriendSubsystem_GetBlockPlayerState) == 0x000018, "Wrong size on FriendSubsystem_GetBlockPlayerState");
static_assert(offsetof(FriendSubsystem_GetBlockPlayerState, ProductUserId) == 0x000000, "Member 'FriendSubsystem_GetBlockPlayerState::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetBlockPlayerState, ReturnValue) == 0x000010, "Member 'FriendSubsystem_GetBlockPlayerState::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetFriendInfo
// 0x0020 (0x0020 - 0x0000)
struct FriendSubsystem_GetFriendInfo final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool PlatformFriend, bool TerraFriend, const class FString& userName, const struct FFriendCommonPart_FriendData& FriendData)> OnCompleted; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetFriendInfo) == 0x000008, "Wrong alignment on FriendSubsystem_GetFriendInfo");
static_assert(sizeof(FriendSubsystem_GetFriendInfo) == 0x000020, "Wrong size on FriendSubsystem_GetFriendInfo");
static_assert(offsetof(FriendSubsystem_GetFriendInfo, ProductUserId) == 0x000000, "Member 'FriendSubsystem_GetFriendInfo::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetFriendInfo, OnCompleted) == 0x000010, "Member 'FriendSubsystem_GetFriendInfo::OnCompleted' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetPlatformTypeByStringData
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_GetPlatformTypeByStringData final
{
public:
	class FString                                 InPlatformStr;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECrossplayPlatform                            ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetPlatformTypeByStringData) == 0x000008, "Wrong alignment on FriendSubsystem_GetPlatformTypeByStringData");
static_assert(sizeof(FriendSubsystem_GetPlatformTypeByStringData) == 0x000018, "Wrong size on FriendSubsystem_GetPlatformTypeByStringData");
static_assert(offsetof(FriendSubsystem_GetPlatformTypeByStringData, InPlatformStr) == 0x000000, "Member 'FriendSubsystem_GetPlatformTypeByStringData::InPlatformStr' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetPlatformTypeByStringData, ReturnValue) == 0x000010, "Member 'FriendSubsystem_GetPlatformTypeByStringData::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetRecentPlayerList
// 0x0058 (0x0058 - 0x0000)
struct FriendSubsystem_GetRecentPlayerList final
{
public:
	TMap<class FString, class FString>            OutRecentPlayers;                                  // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetRecentPlayerList) == 0x000008, "Wrong alignment on FriendSubsystem_GetRecentPlayerList");
static_assert(sizeof(FriendSubsystem_GetRecentPlayerList) == 0x000058, "Wrong size on FriendSubsystem_GetRecentPlayerList");
static_assert(offsetof(FriendSubsystem_GetRecentPlayerList, OutRecentPlayers) == 0x000000, "Member 'FriendSubsystem_GetRecentPlayerList::OutRecentPlayers' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetRecentPlayerList, ReturnValue) == 0x000050, "Member 'FriendSubsystem_GetRecentPlayerList::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetRecentPlayerStatsSimple
// 0x0010 (0x0010 - 0x0000)
struct FriendSubsystem_GetRecentPlayerStatsSimple final
{
public:
	TDelegate<void(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)> OnCompleteDelegate; // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetRecentPlayerStatsSimple) == 0x000004, "Wrong alignment on FriendSubsystem_GetRecentPlayerStatsSimple");
static_assert(sizeof(FriendSubsystem_GetRecentPlayerStatsSimple) == 0x000010, "Wrong size on FriendSubsystem_GetRecentPlayerStatsSimple");
static_assert(offsetof(FriendSubsystem_GetRecentPlayerStatsSimple, OnCompleteDelegate) == 0x000000, "Member 'FriendSubsystem_GetRecentPlayerStatsSimple::OnCompleteDelegate' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetTerraFriendCallback
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_GetTerraFriendCallback final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendGetFriendListResponse           list;                                              // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetTerraFriendCallback) == 0x000008, "Wrong alignment on FriendSubsystem_GetTerraFriendCallback");
static_assert(sizeof(FriendSubsystem_GetTerraFriendCallback) == 0x000038, "Wrong size on FriendSubsystem_GetTerraFriendCallback");
static_assert(offsetof(FriendSubsystem_GetTerraFriendCallback, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_GetTerraFriendCallback::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetTerraFriendCallback, list) == 0x000008, "Member 'FriendSubsystem_GetTerraFriendCallback::list' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetTerraFriendList
// 0x0014 (0x0014 - 0x0000)
struct FriendSubsystem_GetTerraFriendList final
{
public:
	TDelegate<void(bool bWasSuccessful, const struct FFriendGetFriendListResponse& list)> OnCompleteDelegate; // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetTerraFriendList) == 0x000004, "Wrong alignment on FriendSubsystem_GetTerraFriendList");
static_assert(sizeof(FriendSubsystem_GetTerraFriendList) == 0x000014, "Wrong size on FriendSubsystem_GetTerraFriendList");
static_assert(offsetof(FriendSubsystem_GetTerraFriendList, OnCompleteDelegate) == 0x000000, "Member 'FriendSubsystem_GetTerraFriendList::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetTerraFriendList, ReturnValue) == 0x000010, "Member 'FriendSubsystem_GetTerraFriendList::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetTerraFriendNum
// 0x0004 (0x0004 - 0x0000)
struct FriendSubsystem_GetTerraFriendNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetTerraFriendNum) == 0x000004, "Wrong alignment on FriendSubsystem_GetTerraFriendNum");
static_assert(sizeof(FriendSubsystem_GetTerraFriendNum) == 0x000004, "Wrong size on FriendSubsystem_GetTerraFriendNum");
static_assert(offsetof(FriendSubsystem_GetTerraFriendNum, ReturnValue) == 0x000000, "Member 'FriendSubsystem_GetTerraFriendNum::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetUserProfileGDK
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_GetUserProfileGDK final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         XuidStrings;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, EGetUserProfileError Error, const TArray<class FString>& GamerTags)> OnComplete; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetUserProfileGDK) == 0x000008, "Wrong alignment on FriendSubsystem_GetUserProfileGDK");
static_assert(sizeof(FriendSubsystem_GetUserProfileGDK) == 0x000028, "Wrong size on FriendSubsystem_GetUserProfileGDK");
static_assert(offsetof(FriendSubsystem_GetUserProfileGDK, LocalUserNum) == 0x000000, "Member 'FriendSubsystem_GetUserProfileGDK::LocalUserNum' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetUserProfileGDK, XuidStrings) == 0x000008, "Member 'FriendSubsystem_GetUserProfileGDK::XuidStrings' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetUserProfileGDK, OnComplete) == 0x000018, "Member 'FriendSubsystem_GetUserProfileGDK::OnComplete' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsAcceptWaitPlayerExist
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_IsAcceptWaitPlayerExist final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_IsAcceptWaitPlayerExist) == 0x000001, "Wrong alignment on FriendSubsystem_IsAcceptWaitPlayerExist");
static_assert(sizeof(FriendSubsystem_IsAcceptWaitPlayerExist) == 0x000001, "Wrong size on FriendSubsystem_IsAcceptWaitPlayerExist");
static_assert(offsetof(FriendSubsystem_IsAcceptWaitPlayerExist, ReturnValue) == 0x000000, "Member 'FriendSubsystem_IsAcceptWaitPlayerExist::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsBlocked
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_IsBlocked final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_IsBlocked) == 0x000008, "Wrong alignment on FriendSubsystem_IsBlocked");
static_assert(sizeof(FriendSubsystem_IsBlocked) == 0x000018, "Wrong size on FriendSubsystem_IsBlocked");
static_assert(offsetof(FriendSubsystem_IsBlocked, ProductUserId) == 0x000000, "Member 'FriendSubsystem_IsBlocked::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_IsBlocked, ReturnValue) == 0x000010, "Member 'FriendSubsystem_IsBlocked::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsEnableGetUserProfileGDK
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_IsEnableGetUserProfileGDK final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_IsEnableGetUserProfileGDK) == 0x000001, "Wrong alignment on FriendSubsystem_IsEnableGetUserProfileGDK");
static_assert(sizeof(FriendSubsystem_IsEnableGetUserProfileGDK) == 0x000001, "Wrong size on FriendSubsystem_IsEnableGetUserProfileGDK");
static_assert(offsetof(FriendSubsystem_IsEnableGetUserProfileGDK, ReturnValue) == 0x000000, "Member 'FriendSubsystem_IsEnableGetUserProfileGDK::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsFinishedForceUpdateFriendList
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_IsFinishedForceUpdateFriendList final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_IsFinishedForceUpdateFriendList) == 0x000001, "Wrong alignment on FriendSubsystem_IsFinishedForceUpdateFriendList");
static_assert(sizeof(FriendSubsystem_IsFinishedForceUpdateFriendList) == 0x000001, "Wrong size on FriendSubsystem_IsFinishedForceUpdateFriendList");
static_assert(offsetof(FriendSubsystem_IsFinishedForceUpdateFriendList, ReturnValue) == 0x000000, "Member 'FriendSubsystem_IsFinishedForceUpdateFriendList::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsFriend
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_IsFriend final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_IsFriend) == 0x000008, "Wrong alignment on FriendSubsystem_IsFriend");
static_assert(sizeof(FriendSubsystem_IsFriend) == 0x000018, "Wrong size on FriendSubsystem_IsFriend");
static_assert(offsetof(FriendSubsystem_IsFriend, ProductUserId) == 0x000000, "Member 'FriendSubsystem_IsFriend::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_IsFriend, ReturnValue) == 0x000010, "Member 'FriendSubsystem_IsFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsFriendRequestBlocked
// 0x0008 (0x0008 - 0x0000)
struct FriendSubsystem_IsFriendRequestBlocked final
{
public:
	int32                                         InFriendRequestErrorCode;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_IsFriendRequestBlocked) == 0x000004, "Wrong alignment on FriendSubsystem_IsFriendRequestBlocked");
static_assert(sizeof(FriendSubsystem_IsFriendRequestBlocked) == 0x000008, "Wrong size on FriendSubsystem_IsFriendRequestBlocked");
static_assert(offsetof(FriendSubsystem_IsFriendRequestBlocked, InFriendRequestErrorCode) == 0x000000, "Member 'FriendSubsystem_IsFriendRequestBlocked::InFriendRequestErrorCode' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_IsFriendRequestBlocked, ReturnValue) == 0x000004, "Member 'FriendSubsystem_IsFriendRequestBlocked::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsPlatformFriend
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_IsPlatformFriend final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_IsPlatformFriend) == 0x000008, "Wrong alignment on FriendSubsystem_IsPlatformFriend");
static_assert(sizeof(FriendSubsystem_IsPlatformFriend) == 0x000018, "Wrong size on FriendSubsystem_IsPlatformFriend");
static_assert(offsetof(FriendSubsystem_IsPlatformFriend, ProductUserId) == 0x000000, "Member 'FriendSubsystem_IsPlatformFriend::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_IsPlatformFriend, ReturnValue) == 0x000010, "Member 'FriendSubsystem_IsPlatformFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsSetPlatformBlockPlayers
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_IsSetPlatformBlockPlayers final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_IsSetPlatformBlockPlayers) == 0x000001, "Wrong alignment on FriendSubsystem_IsSetPlatformBlockPlayers");
static_assert(sizeof(FriendSubsystem_IsSetPlatformBlockPlayers) == 0x000001, "Wrong size on FriendSubsystem_IsSetPlatformBlockPlayers");
static_assert(offsetof(FriendSubsystem_IsSetPlatformBlockPlayers, ReturnValue) == 0x000000, "Member 'FriendSubsystem_IsSetPlatformBlockPlayers::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsTerraFriend
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_IsTerraFriend final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_IsTerraFriend) == 0x000008, "Wrong alignment on FriendSubsystem_IsTerraFriend");
static_assert(sizeof(FriendSubsystem_IsTerraFriend) == 0x000018, "Wrong size on FriendSubsystem_IsTerraFriend");
static_assert(offsetof(FriendSubsystem_IsTerraFriend, ProductUserId) == 0x000000, "Member 'FriendSubsystem_IsTerraFriend::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_IsTerraFriend, ReturnValue) == 0x000010, "Member 'FriendSubsystem_IsTerraFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.IsValidLobbyInvitation
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_IsValidLobbyInvitation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_IsValidLobbyInvitation) == 0x000001, "Wrong alignment on FriendSubsystem_IsValidLobbyInvitation");
static_assert(sizeof(FriendSubsystem_IsValidLobbyInvitation) == 0x000001, "Wrong size on FriendSubsystem_IsValidLobbyInvitation");
static_assert(offsetof(FriendSubsystem_IsValidLobbyInvitation, ReturnValue) == 0x000000, "Member 'FriendSubsystem_IsValidLobbyInvitation::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.LobbyInvitationGetUserSearchData
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_LobbyInvitationGetUserSearchData final
{
public:
	struct FUserGetUserSearchRequest              SearchRequest;                                     // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool SearchError)> Delegate; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_LobbyInvitationGetUserSearchData) == 0x000008, "Wrong alignment on FriendSubsystem_LobbyInvitationGetUserSearchData");
static_assert(sizeof(FriendSubsystem_LobbyInvitationGetUserSearchData) == 0x000028, "Wrong size on FriendSubsystem_LobbyInvitationGetUserSearchData");
static_assert(offsetof(FriendSubsystem_LobbyInvitationGetUserSearchData, SearchRequest) == 0x000000, "Member 'FriendSubsystem_LobbyInvitationGetUserSearchData::SearchRequest' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_LobbyInvitationGetUserSearchData, Delegate) == 0x000018, "Member 'FriendSubsystem_LobbyInvitationGetUserSearchData::Delegate' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnBlockPlayerIdMappingsComplete
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_OnBlockPlayerIdMappingsComplete final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ExternalIds;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ConvertedIds;                                      // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnBlockPlayerIdMappingsComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnBlockPlayerIdMappingsComplete");
static_assert(sizeof(FriendSubsystem_OnBlockPlayerIdMappingsComplete) == 0x000028, "Wrong size on FriendSubsystem_OnBlockPlayerIdMappingsComplete");
static_assert(offsetof(FriendSubsystem_OnBlockPlayerIdMappingsComplete, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_OnBlockPlayerIdMappingsComplete::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnBlockPlayerIdMappingsComplete, ExternalIds) == 0x000008, "Member 'FriendSubsystem_OnBlockPlayerIdMappingsComplete::ExternalIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnBlockPlayerIdMappingsComplete, ConvertedIds) == 0x000018, "Member 'FriendSubsystem_OnBlockPlayerIdMappingsComplete::ConvertedIds' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnCompleteRequestCheckFairPoint
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnCompleteRequestCheckFairPoint final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnCompleteRequestCheckFairPoint) == 0x000008, "Wrong alignment on FriendSubsystem_OnCompleteRequestCheckFairPoint");
static_assert(sizeof(FriendSubsystem_OnCompleteRequestCheckFairPoint) == 0x000038, "Wrong size on FriendSubsystem_OnCompleteRequestCheckFairPoint");
static_assert(offsetof(FriendSubsystem_OnCompleteRequestCheckFairPoint, ApiName) == 0x000000, "Member 'FriendSubsystem_OnCompleteRequestCheckFairPoint::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnCompleteRequestCheckFairPoint, RequestData) == 0x000010, "Member 'FriendSubsystem_OnCompleteRequestCheckFairPoint::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnCompleteRequestCheckFairPoint, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnCompleteRequestCheckFairPoint::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnCompleteRequestCheckFairPoint, Error) == 0x000030, "Member 'FriendSubsystem_OnCompleteRequestCheckFairPoint::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnConvertBlockPlayerPuidToTerraIdComplete
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete");
static_assert(sizeof(FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete) == 0x000038, "Wrong size on FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete");
static_assert(offsetof(FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete, ApiName) == 0x000000, "Member 'FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete, RequestData) == 0x000010, "Member 'FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete, Error) == 0x000030, "Member 'FriendSubsystem_OnConvertBlockPlayerPuidToTerraIdComplete::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnConvertPuidToTerraIdComplete
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnConvertPuidToTerraIdComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnConvertPuidToTerraIdComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnConvertPuidToTerraIdComplete");
static_assert(sizeof(FriendSubsystem_OnConvertPuidToTerraIdComplete) == 0x000038, "Wrong size on FriendSubsystem_OnConvertPuidToTerraIdComplete");
static_assert(offsetof(FriendSubsystem_OnConvertPuidToTerraIdComplete, ApiName) == 0x000000, "Member 'FriendSubsystem_OnConvertPuidToTerraIdComplete::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnConvertPuidToTerraIdComplete, RequestData) == 0x000010, "Member 'FriendSubsystem_OnConvertPuidToTerraIdComplete::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnConvertPuidToTerraIdComplete, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnConvertPuidToTerraIdComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnConvertPuidToTerraIdComplete, Error) == 0x000030, "Member 'FriendSubsystem_OnConvertPuidToTerraIdComplete::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnGetTerraFriendLastDateComplete
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnGetTerraFriendLastDateComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnGetTerraFriendLastDateComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnGetTerraFriendLastDateComplete");
static_assert(sizeof(FriendSubsystem_OnGetTerraFriendLastDateComplete) == 0x000038, "Wrong size on FriendSubsystem_OnGetTerraFriendLastDateComplete");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendLastDateComplete, ApiName) == 0x000000, "Member 'FriendSubsystem_OnGetTerraFriendLastDateComplete::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendLastDateComplete, RequestData) == 0x000010, "Member 'FriendSubsystem_OnGetTerraFriendLastDateComplete::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendLastDateComplete, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnGetTerraFriendLastDateComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendLastDateComplete, Error) == 0x000030, "Member 'FriendSubsystem_OnGetTerraFriendLastDateComplete::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnGetTerraFriendListCheckPlayerNameComplete
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete final
{
public:
	bool                                          bGetTerraFriendListError;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete) == 0x000001, "Wrong alignment on FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete");
static_assert(sizeof(FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete) == 0x000001, "Wrong size on FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete, bGetTerraFriendListError) == 0x000000, "Member 'FriendSubsystem_OnGetTerraFriendListCheckPlayerNameComplete::bGetTerraFriendListError' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnGetTerraFriendListComplete
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnGetTerraFriendListComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnGetTerraFriendListComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnGetTerraFriendListComplete");
static_assert(sizeof(FriendSubsystem_OnGetTerraFriendListComplete) == 0x000038, "Wrong size on FriendSubsystem_OnGetTerraFriendListComplete");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendListComplete, ApiName) == 0x000000, "Member 'FriendSubsystem_OnGetTerraFriendListComplete::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendListComplete, RequestData) == 0x000010, "Member 'FriendSubsystem_OnGetTerraFriendListComplete::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendListComplete, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnGetTerraFriendListComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnGetTerraFriendListComplete, Error) == 0x000030, "Member 'FriendSubsystem_OnGetTerraFriendListComplete::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnLobbyInvitationGetUserSearchComplete
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnLobbyInvitationGetUserSearchComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnLobbyInvitationGetUserSearchComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnLobbyInvitationGetUserSearchComplete");
static_assert(sizeof(FriendSubsystem_OnLobbyInvitationGetUserSearchComplete) == 0x000038, "Wrong size on FriendSubsystem_OnLobbyInvitationGetUserSearchComplete");
static_assert(offsetof(FriendSubsystem_OnLobbyInvitationGetUserSearchComplete, ApiName) == 0x000000, "Member 'FriendSubsystem_OnLobbyInvitationGetUserSearchComplete::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnLobbyInvitationGetUserSearchComplete, RequestData) == 0x000010, "Member 'FriendSubsystem_OnLobbyInvitationGetUserSearchComplete::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnLobbyInvitationGetUserSearchComplete, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnLobbyInvitationGetUserSearchComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnLobbyInvitationGetUserSearchComplete, Error) == 0x000030, "Member 'FriendSubsystem_OnLobbyInvitationGetUserSearchComplete::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnPlatformFriendIdMappingsComplete
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_OnPlatformFriendIdMappingsComplete final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ExternalIds;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ConvertedIds;                                      // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnPlatformFriendIdMappingsComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnPlatformFriendIdMappingsComplete");
static_assert(sizeof(FriendSubsystem_OnPlatformFriendIdMappingsComplete) == 0x000028, "Wrong size on FriendSubsystem_OnPlatformFriendIdMappingsComplete");
static_assert(offsetof(FriendSubsystem_OnPlatformFriendIdMappingsComplete, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_OnPlatformFriendIdMappingsComplete::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnPlatformFriendIdMappingsComplete, ExternalIds) == 0x000008, "Member 'FriendSubsystem_OnPlatformFriendIdMappingsComplete::ExternalIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnPlatformFriendIdMappingsComplete, ConvertedIds) == 0x000018, "Member 'FriendSubsystem_OnPlatformFriendIdMappingsComplete::ConvertedIds' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnProductUserIdFriendRequestConvertComplete
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_OnProductUserIdFriendRequestConvertComplete final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ExternalIds;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ConvertedIds;                                      // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnProductUserIdFriendRequestConvertComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnProductUserIdFriendRequestConvertComplete");
static_assert(sizeof(FriendSubsystem_OnProductUserIdFriendRequestConvertComplete) == 0x000028, "Wrong size on FriendSubsystem_OnProductUserIdFriendRequestConvertComplete");
static_assert(offsetof(FriendSubsystem_OnProductUserIdFriendRequestConvertComplete, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_OnProductUserIdFriendRequestConvertComplete::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnProductUserIdFriendRequestConvertComplete, ExternalIds) == 0x000008, "Member 'FriendSubsystem_OnProductUserIdFriendRequestConvertComplete::ExternalIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnProductUserIdFriendRequestConvertComplete, ConvertedIds) == 0x000018, "Member 'FriendSubsystem_OnProductUserIdFriendRequestConvertComplete::ConvertedIds' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnRequestCancelByBlockingCompleted
// 0x0008 (0x0008 - 0x0000)
struct FriendSubsystem_OnRequestCancelByBlockingCompleted final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnRequestCancelByBlockingCompleted) == 0x000004, "Wrong alignment on FriendSubsystem_OnRequestCancelByBlockingCompleted");
static_assert(sizeof(FriendSubsystem_OnRequestCancelByBlockingCompleted) == 0x000008, "Wrong size on FriendSubsystem_OnRequestCancelByBlockingCompleted");
static_assert(offsetof(FriendSubsystem_OnRequestCancelByBlockingCompleted, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_OnRequestCancelByBlockingCompleted::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnRequestCancelByBlockingCompleted, ErrorCode) == 0x000004, "Member 'FriendSubsystem_OnRequestCancelByBlockingCompleted::ErrorCode' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraFriendCommonComplete
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraFriendCommonComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraFriendCommonComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraFriendCommonComplete");
static_assert(sizeof(FriendSubsystem_OnTerraFriendCommonComplete) == 0x000038, "Wrong size on FriendSubsystem_OnTerraFriendCommonComplete");
static_assert(offsetof(FriendSubsystem_OnTerraFriendCommonComplete, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraFriendCommonComplete::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraFriendCommonComplete, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraFriendCommonComplete::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraFriendCommonComplete, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraFriendCommonComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraFriendCommonComplete, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraFriendCommonComplete::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraFriendListCheckPlayerNameComplete
// 0x0020 (0x0020 - 0x0000)
struct FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PlayerNameList;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bGetTerraFriendListError;                          // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete");
static_assert(sizeof(FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete) == 0x000020, "Wrong size on FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete");
static_assert(offsetof(FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete, bSuccess) == 0x000000, "Member 'FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete::bSuccess' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete, PlayerNameList) == 0x000008, "Member 'FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete::PlayerNameList' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete, bGetTerraFriendListError) == 0x000018, "Member 'FriendSubsystem_OnTerraFriendListCheckPlayerNameComplete::bGetTerraFriendListError' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraFriendRequestComplete
// 0x0008 (0x0008 - 0x0000)
struct FriendSubsystem_OnTerraFriendRequestComplete final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnTerraFriendRequestComplete) == 0x000004, "Wrong alignment on FriendSubsystem_OnTerraFriendRequestComplete");
static_assert(sizeof(FriendSubsystem_OnTerraFriendRequestComplete) == 0x000008, "Wrong size on FriendSubsystem_OnTerraFriendRequestComplete");
static_assert(offsetof(FriendSubsystem_OnTerraFriendRequestComplete, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_OnTerraFriendRequestComplete::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraFriendRequestComplete, ErrorCode) == 0x000004, "Member 'FriendSubsystem_OnTerraFriendRequestComplete::ErrorCode' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCheckPlayerNameComplete
// 0x0020 (0x0020 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete final
{
public:
	bool                                          bCheckPlayerNameSuccess;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PlayerNameList;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EFriendsListUserSearchCacheType               CacheType;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EResponseCodeAbstract                         ResponseCodeAbstract;                              // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSearchPlayerDataSuccess;                          // 0x001A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete) == 0x000020, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete, bCheckPlayerNameSuccess) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete::bCheckPlayerNameSuccess' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete, PlayerNameList) == 0x000008, "Member 'FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete::PlayerNameList' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete, CacheType) == 0x000018, "Member 'FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete::CacheType' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete, ResponseCodeAbstract) == 0x000019, "Member 'FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete::ResponseCodeAbstract' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete, bSearchPlayerDataSuccess) == 0x00001A, "Member 'FriendSubsystem_OnTerraGetUserSearchCheckPlayerNameComplete::bSearchPlayerDataSuccess' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteBlockPlayer
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer) == 0x000038, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteBlockPlayer::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteLobbyInvitation
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation) == 0x000038, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteLobbyInvitation::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompletePFFriend
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCompletePFFriend final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCompletePFFriend) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCompletePFFriend");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCompletePFFriend) == 0x000038, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCompletePFFriend");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompletePFFriend, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCompletePFFriend::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompletePFFriend, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraGetUserSearchCompletePFFriend::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompletePFFriend, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraGetUserSearchCompletePFFriend::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompletePFFriend, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraGetUserSearchCompletePFFriend::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteRecentPlayer
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer) == 0x000038, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteRecentPlayer::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteSearchLobbyID
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID) == 0x000038, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchLobbyID::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnTerraGetUserSearchCompleteSearchPlayerID
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID) == 0x000008, "Wrong alignment on FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID");
static_assert(sizeof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID) == 0x000038, "Wrong size on FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID, ApiName) == 0x000000, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID, RequestData) == 0x000010, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID, Error) == 0x000030, "Member 'FriendSubsystem_OnTerraGetUserSearchCompleteSearchPlayerID::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnUnfriendByBlockingCompleted
// 0x0008 (0x0008 - 0x0000)
struct FriendSubsystem_OnUnfriendByBlockingCompleted final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_OnUnfriendByBlockingCompleted) == 0x000004, "Wrong alignment on FriendSubsystem_OnUnfriendByBlockingCompleted");
static_assert(sizeof(FriendSubsystem_OnUnfriendByBlockingCompleted) == 0x000008, "Wrong size on FriendSubsystem_OnUnfriendByBlockingCompleted");
static_assert(offsetof(FriendSubsystem_OnUnfriendByBlockingCompleted, bWasSuccessful) == 0x000000, "Member 'FriendSubsystem_OnUnfriendByBlockingCompleted::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnUnfriendByBlockingCompleted, ErrorCode) == 0x000004, "Member 'FriendSubsystem_OnUnfriendByBlockingCompleted::ErrorCode' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.OnUnfriendByPFBlockingCompleted
// 0x0038 (0x0038 - 0x0000)
struct FriendSubsystem_OnUnfriendByPFBlockingCompleted final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_OnUnfriendByPFBlockingCompleted) == 0x000008, "Wrong alignment on FriendSubsystem_OnUnfriendByPFBlockingCompleted");
static_assert(sizeof(FriendSubsystem_OnUnfriendByPFBlockingCompleted) == 0x000038, "Wrong size on FriendSubsystem_OnUnfriendByPFBlockingCompleted");
static_assert(offsetof(FriendSubsystem_OnUnfriendByPFBlockingCompleted, ApiName) == 0x000000, "Member 'FriendSubsystem_OnUnfriendByPFBlockingCompleted::ApiName' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnUnfriendByPFBlockingCompleted, RequestData) == 0x000010, "Member 'FriendSubsystem_OnUnfriendByPFBlockingCompleted::RequestData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnUnfriendByPFBlockingCompleted, ResponseData) == 0x000020, "Member 'FriendSubsystem_OnUnfriendByPFBlockingCompleted::ResponseData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_OnUnfriendByPFBlockingCompleted, Error) == 0x000030, "Member 'FriendSubsystem_OnUnfriendByPFBlockingCompleted::Error' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.QueryReadPlatformBlockPlayers
// 0x0010 (0x0010 - 0x0000)
struct FriendSubsystem_QueryReadPlatformBlockPlayers final
{
public:
	TDelegate<void(bool bWasSuccessful)>          OnComplete;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_QueryReadPlatformBlockPlayers) == 0x000004, "Wrong alignment on FriendSubsystem_QueryReadPlatformBlockPlayers");
static_assert(sizeof(FriendSubsystem_QueryReadPlatformBlockPlayers) == 0x000010, "Wrong size on FriendSubsystem_QueryReadPlatformBlockPlayers");
static_assert(offsetof(FriendSubsystem_QueryReadPlatformBlockPlayers, OnComplete) == 0x000000, "Member 'FriendSubsystem_QueryReadPlatformBlockPlayers::OnComplete' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.QueryReadPlatformFriends
// 0x0014 (0x0014 - 0x0000)
struct FriendSubsystem_QueryReadPlatformFriends final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful)>          OnComplete;                                        // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_QueryReadPlatformFriends) == 0x000004, "Wrong alignment on FriendSubsystem_QueryReadPlatformFriends");
static_assert(sizeof(FriendSubsystem_QueryReadPlatformFriends) == 0x000014, "Wrong size on FriendSubsystem_QueryReadPlatformFriends");
static_assert(offsetof(FriendSubsystem_QueryReadPlatformFriends, LocalUserNum) == 0x000000, "Member 'FriendSubsystem_QueryReadPlatformFriends::LocalUserNum' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_QueryReadPlatformFriends, OnComplete) == 0x000004, "Member 'FriendSubsystem_QueryReadPlatformFriends::OnComplete' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.RefreshBlockPlayers
// 0x0010 (0x0010 - 0x0000)
struct FriendSubsystem_RefreshBlockPlayers final
{
public:
	TDelegate<void(bool bWasSuccessful)>          OnComplete;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_RefreshBlockPlayers) == 0x000004, "Wrong alignment on FriendSubsystem_RefreshBlockPlayers");
static_assert(sizeof(FriendSubsystem_RefreshBlockPlayers) == 0x000010, "Wrong size on FriendSubsystem_RefreshBlockPlayers");
static_assert(offsetof(FriendSubsystem_RefreshBlockPlayers, OnComplete) == 0x000000, "Member 'FriendSubsystem_RefreshBlockPlayers::OnComplete' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.SetCacheExpiration
// 0x0004 (0x0004 - 0x0000)
struct FriendSubsystem_SetCacheExpiration final
{
public:
	int32                                         Minutes;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_SetCacheExpiration) == 0x000004, "Wrong alignment on FriendSubsystem_SetCacheExpiration");
static_assert(sizeof(FriendSubsystem_SetCacheExpiration) == 0x000004, "Wrong size on FriendSubsystem_SetCacheExpiration");
static_assert(offsetof(FriendSubsystem_SetCacheExpiration, Minutes) == 0x000000, "Member 'FriendSubsystem_SetCacheExpiration::Minutes' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.SetReceivedLobbyInvitationCount
// 0x0004 (0x0004 - 0x0000)
struct FriendSubsystem_SetReceivedLobbyInvitationCount final
{
public:
	int32                                         LobbyInvitationCount;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_SetReceivedLobbyInvitationCount) == 0x000004, "Wrong alignment on FriendSubsystem_SetReceivedLobbyInvitationCount");
static_assert(sizeof(FriendSubsystem_SetReceivedLobbyInvitationCount) == 0x000004, "Wrong size on FriendSubsystem_SetReceivedLobbyInvitationCount");
static_assert(offsetof(FriendSubsystem_SetReceivedLobbyInvitationCount, LobbyInvitationCount) == 0x000000, "Member 'FriendSubsystem_SetReceivedLobbyInvitationCount::LobbyInvitationCount' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendAccept
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendAccept final
{
public:
	class FString                                 TargetID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendAccept) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendAccept");
static_assert(sizeof(FriendSubsystem_TerraFriendAccept) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendAccept");
static_assert(offsetof(FriendSubsystem_TerraFriendAccept, TargetID) == 0x000000, "Member 'FriendSubsystem_TerraFriendAccept::TargetID' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendAccept, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendAccept::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendAccept, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendAccept::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendReject
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendReject final
{
public:
	class FString                                 TargetID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendReject) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendReject");
static_assert(sizeof(FriendSubsystem_TerraFriendReject) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendReject");
static_assert(offsetof(FriendSubsystem_TerraFriendReject, TargetID) == 0x000000, "Member 'FriendSubsystem_TerraFriendReject::TargetID' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendReject, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendReject::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendReject, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendReject::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendRequest
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendRequest final
{
public:
	class FString                                 TargetID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendRequest) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendRequest");
static_assert(sizeof(FriendSubsystem_TerraFriendRequest) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendRequest");
static_assert(offsetof(FriendSubsystem_TerraFriendRequest, TargetID) == 0x000000, "Member 'FriendSubsystem_TerraFriendRequest::TargetID' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendRequest, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendRequest::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendRequest, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendRequest::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendRequestByUserSearchData
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendRequestByUserSearchData final
{
public:
	TArray<struct FCommon_UserSearchData>         UserSearchData;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendRequestByUserSearchData) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendRequestByUserSearchData");
static_assert(sizeof(FriendSubsystem_TerraFriendRequestByUserSearchData) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendRequestByUserSearchData");
static_assert(offsetof(FriendSubsystem_TerraFriendRequestByUserSearchData, UserSearchData) == 0x000000, "Member 'FriendSubsystem_TerraFriendRequestByUserSearchData::UserSearchData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendRequestByUserSearchData, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendRequestByUserSearchData::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendRequestByUserSearchData, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendRequestByUserSearchData::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendRequestCancel
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendRequestCancel final
{
public:
	class FString                                 TargetID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendRequestCancel) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendRequestCancel");
static_assert(sizeof(FriendSubsystem_TerraFriendRequestCancel) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendRequestCancel");
static_assert(offsetof(FriendSubsystem_TerraFriendRequestCancel, TargetID) == 0x000000, "Member 'FriendSubsystem_TerraFriendRequestCancel::TargetID' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendRequestCancel, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendRequestCancel::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendRequestCancel, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendRequestCancel::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendsRequest
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendsRequest final
{
public:
	TArray<class FString>                         targetIds;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendsRequest) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendsRequest");
static_assert(sizeof(FriendSubsystem_TerraFriendsRequest) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendsRequest");
static_assert(offsetof(FriendSubsystem_TerraFriendsRequest, targetIds) == 0x000000, "Member 'FriendSubsystem_TerraFriendsRequest::targetIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendsRequest, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendsRequest::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendsRequest, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendsRequest::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraFriendUnfriend
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraFriendUnfriend final
{
public:
	class FString                                 TargetID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraFriendUnfriend) == 0x000008, "Wrong alignment on FriendSubsystem_TerraFriendUnfriend");
static_assert(sizeof(FriendSubsystem_TerraFriendUnfriend) == 0x000028, "Wrong size on FriendSubsystem_TerraFriendUnfriend");
static_assert(offsetof(FriendSubsystem_TerraFriendUnfriend, TargetID) == 0x000000, "Member 'FriendSubsystem_TerraFriendUnfriend::TargetID' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendUnfriend, OnCompleteDelegate) == 0x000010, "Member 'FriendSubsystem_TerraFriendUnfriend::OnCompleteDelegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraFriendUnfriend, ReturnValue) == 0x000020, "Member 'FriendSubsystem_TerraFriendUnfriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.TerraGetUserSearchRequest
// 0x0028 (0x0028 - 0x0000)
struct FriendSubsystem_TerraGetUserSearchRequest final
{
public:
	TArray<class FString>                         TargetUserIds;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         selectFlg;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, const TArray<struct FCommon_UserSearchData>& SearchDatas, EResponseCodeAbstract ResCodeAbstract)> Delegate; // 0x0014(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFriendsListUserSearchCacheType               CacheType;                                         // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0025(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_TerraGetUserSearchRequest) == 0x000008, "Wrong alignment on FriendSubsystem_TerraGetUserSearchRequest");
static_assert(sizeof(FriendSubsystem_TerraGetUserSearchRequest) == 0x000028, "Wrong size on FriendSubsystem_TerraGetUserSearchRequest");
static_assert(offsetof(FriendSubsystem_TerraGetUserSearchRequest, TargetUserIds) == 0x000000, "Member 'FriendSubsystem_TerraGetUserSearchRequest::TargetUserIds' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraGetUserSearchRequest, selectFlg) == 0x000010, "Member 'FriendSubsystem_TerraGetUserSearchRequest::selectFlg' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraGetUserSearchRequest, Delegate) == 0x000014, "Member 'FriendSubsystem_TerraGetUserSearchRequest::Delegate' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraGetUserSearchRequest, CacheType) == 0x000024, "Member 'FriendSubsystem_TerraGetUserSearchRequest::CacheType' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_TerraGetUserSearchRequest, ReturnValue) == 0x000025, "Member 'FriendSubsystem_TerraGetUserSearchRequest::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetNotifyFriendInvite
// 0x0001 (0x0001 - 0x0000)
struct FriendSubsystem_GetNotifyFriendInvite final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetNotifyFriendInvite) == 0x000001, "Wrong alignment on FriendSubsystem_GetNotifyFriendInvite");
static_assert(sizeof(FriendSubsystem_GetNotifyFriendInvite) == 0x000001, "Wrong size on FriendSubsystem_GetNotifyFriendInvite");
static_assert(offsetof(FriendSubsystem_GetNotifyFriendInvite, ReturnValue) == 0x000000, "Member 'FriendSubsystem_GetNotifyFriendInvite::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetPlatformFriendDisplayName
// 0x0048 (0x0048 - 0x0000)
struct FriendSubsystem_GetPlatformFriendDisplayName final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutResult;                                         // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetPlatformFriendDisplayName) == 0x000008, "Wrong alignment on FriendSubsystem_GetPlatformFriendDisplayName");
static_assert(sizeof(FriendSubsystem_GetPlatformFriendDisplayName) == 0x000048, "Wrong size on FriendSubsystem_GetPlatformFriendDisplayName");
static_assert(offsetof(FriendSubsystem_GetPlatformFriendDisplayName, UserId) == 0x000000, "Member 'FriendSubsystem_GetPlatformFriendDisplayName::UserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetPlatformFriendDisplayName, OutResult) == 0x000030, "Member 'FriendSubsystem_GetPlatformFriendDisplayName::OutResult' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetPlatformFriendDisplayName, ReturnValue) == 0x000040, "Member 'FriendSubsystem_GetPlatformFriendDisplayName::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetPlatformFriendList
// 0x0018 (0x0018 - 0x0000)
struct FriendSubsystem_GetPlatformFriendList final
{
public:
	TArray<struct FUniqueNetIdRepl>               OutPlatformFriendList;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetPlatformFriendList) == 0x000008, "Wrong alignment on FriendSubsystem_GetPlatformFriendList");
static_assert(sizeof(FriendSubsystem_GetPlatformFriendList) == 0x000018, "Wrong size on FriendSubsystem_GetPlatformFriendList");
static_assert(offsetof(FriendSubsystem_GetPlatformFriendList, OutPlatformFriendList) == 0x000000, "Member 'FriendSubsystem_GetPlatformFriendList::OutPlatformFriendList' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetPlatformFriendList, ReturnValue) == 0x000010, "Member 'FriendSubsystem_GetPlatformFriendList::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetReceivedLobbyInvitationCount
// 0x0004 (0x0004 - 0x0000)
struct FriendSubsystem_GetReceivedLobbyInvitationCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FriendSubsystem_GetReceivedLobbyInvitationCount) == 0x000004, "Wrong alignment on FriendSubsystem_GetReceivedLobbyInvitationCount");
static_assert(sizeof(FriendSubsystem_GetReceivedLobbyInvitationCount) == 0x000004, "Wrong size on FriendSubsystem_GetReceivedLobbyInvitationCount");
static_assert(offsetof(FriendSubsystem_GetReceivedLobbyInvitationCount, ReturnValue) == 0x000000, "Member 'FriendSubsystem_GetReceivedLobbyInvitationCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.FriendSubsystem.GetUserSearchDataByProductUserId
// 0x00F0 (0x00F0 - 0x0000)
struct FriendSubsystem_GetUserSearchDataByProductUserId final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCommon_UserSearchData                 OutUserSearchData;                                 // 0x0010(0x00D8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FriendSubsystem_GetUserSearchDataByProductUserId) == 0x000008, "Wrong alignment on FriendSubsystem_GetUserSearchDataByProductUserId");
static_assert(sizeof(FriendSubsystem_GetUserSearchDataByProductUserId) == 0x0000F0, "Wrong size on FriendSubsystem_GetUserSearchDataByProductUserId");
static_assert(offsetof(FriendSubsystem_GetUserSearchDataByProductUserId, ProductUserId) == 0x000000, "Member 'FriendSubsystem_GetUserSearchDataByProductUserId::ProductUserId' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetUserSearchDataByProductUserId, OutUserSearchData) == 0x000010, "Member 'FriendSubsystem_GetUserSearchDataByProductUserId::OutUserSearchData' has a wrong offset!");
static_assert(offsetof(FriendSubsystem_GetUserSearchDataByProductUserId, ReturnValue) == 0x0000E8, "Member 'FriendSubsystem_GetUserSearchDataByProductUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.GameActivitySubsystem.ChangeActivityAvailability
// 0x0030 (0x0030 - 0x0000)
struct GameActivitySubsystem_ChangeActivityAvailability final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActivityObjectIdData                  ActivityIdData;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, bool bSuccess)> OnComplete;        // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameActivitySubsystem_ChangeActivityAvailability) == 0x000008, "Wrong alignment on GameActivitySubsystem_ChangeActivityAvailability");
static_assert(sizeof(GameActivitySubsystem_ChangeActivityAvailability) == 0x000030, "Wrong size on GameActivitySubsystem_ChangeActivityAvailability");
static_assert(offsetof(GameActivitySubsystem_ChangeActivityAvailability, LocalUserNum) == 0x000000, "Member 'GameActivitySubsystem_ChangeActivityAvailability::LocalUserNum' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_ChangeActivityAvailability, ActivityIdData) == 0x000008, "Member 'GameActivitySubsystem_ChangeActivityAvailability::ActivityIdData' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_ChangeActivityAvailability, OnComplete) == 0x000020, "Member 'GameActivitySubsystem_ChangeActivityAvailability::OnComplete' has a wrong offset!");

// Function UnionSystem.GameActivitySubsystem.EndActivity
// 0x0038 (0x0038 - 0x0000)
struct GameActivitySubsystem_EndActivity final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActivityObjectIdData                  ActivityIdData;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEndActivityOption                     Option;                                            // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, EGameModeId ActivityId, EGameActivityOutcomeType Outcome, bool bSuccess)> OnComplete; // 0x0024(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameActivitySubsystem_EndActivity) == 0x000008, "Wrong alignment on GameActivitySubsystem_EndActivity");
static_assert(sizeof(GameActivitySubsystem_EndActivity) == 0x000038, "Wrong size on GameActivitySubsystem_EndActivity");
static_assert(offsetof(GameActivitySubsystem_EndActivity, LocalUserNum) == 0x000000, "Member 'GameActivitySubsystem_EndActivity::LocalUserNum' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_EndActivity, ActivityIdData) == 0x000008, "Member 'GameActivitySubsystem_EndActivity::ActivityIdData' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_EndActivity, Option) == 0x000020, "Member 'GameActivitySubsystem_EndActivity::Option' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_EndActivity, OnComplete) == 0x000024, "Member 'GameActivitySubsystem_EndActivity::OnComplete' has a wrong offset!");

// Function UnionSystem.GameActivitySubsystem.StartActivity
// 0x0038 (0x0038 - 0x0000)
struct GameActivitySubsystem_StartActivity final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActivityObjectIdData                  ActivityIdData;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FStartActivityOption                   Option;                                            // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUniqueNetIdRepl& PlatformUserId, EGameModeId ActivityId, bool bSuccess)> OnComplete; // 0x0024(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameActivitySubsystem_StartActivity) == 0x000008, "Wrong alignment on GameActivitySubsystem_StartActivity");
static_assert(sizeof(GameActivitySubsystem_StartActivity) == 0x000038, "Wrong size on GameActivitySubsystem_StartActivity");
static_assert(offsetof(GameActivitySubsystem_StartActivity, LocalUserNum) == 0x000000, "Member 'GameActivitySubsystem_StartActivity::LocalUserNum' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_StartActivity, ActivityIdData) == 0x000008, "Member 'GameActivitySubsystem_StartActivity::ActivityIdData' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_StartActivity, Option) == 0x000020, "Member 'GameActivitySubsystem_StartActivity::Option' has a wrong offset!");
static_assert(offsetof(GameActivitySubsystem_StartActivity, OnComplete) == 0x000024, "Member 'GameActivitySubsystem_StartActivity::OnComplete' has a wrong offset!");

// Function UnionSystem.GameHttpSubsystem.ReceiveFromServerRaw
// 0x0020 (0x0020 - 0x0000)
struct GameHttpSubsystem_ReceiveFromServerRaw final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutData;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameHttpSubsystem_ReceiveFromServerRaw) == 0x000008, "Wrong alignment on GameHttpSubsystem_ReceiveFromServerRaw");
static_assert(sizeof(GameHttpSubsystem_ReceiveFromServerRaw) == 0x000020, "Wrong size on GameHttpSubsystem_ReceiveFromServerRaw");
static_assert(offsetof(GameHttpSubsystem_ReceiveFromServerRaw, Handle) == 0x000000, "Member 'GameHttpSubsystem_ReceiveFromServerRaw::Handle' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_ReceiveFromServerRaw, OutData) == 0x000008, "Member 'GameHttpSubsystem_ReceiveFromServerRaw::OutData' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_ReceiveFromServerRaw, OutError) == 0x000018, "Member 'GameHttpSubsystem_ReceiveFromServerRaw::OutError' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_ReceiveFromServerRaw, ReturnValue) == 0x000019, "Member 'GameHttpSubsystem_ReceiveFromServerRaw::ReturnValue' has a wrong offset!");

// Function UnionSystem.GameHttpSubsystem.SendToServerRaw
// 0x00B0 (0x00B0 - 0x0000)
struct GameHttpSubsystem_SendToServerRaw final
{
public:
	struct FGameHttpRequestOption                 Option;                                            // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ApiName;                                           // 0x0088(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0098(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x00A8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameHttpSubsystem_SendToServerRaw) == 0x000008, "Wrong alignment on GameHttpSubsystem_SendToServerRaw");
static_assert(sizeof(GameHttpSubsystem_SendToServerRaw) == 0x0000B0, "Wrong size on GameHttpSubsystem_SendToServerRaw");
static_assert(offsetof(GameHttpSubsystem_SendToServerRaw, Option) == 0x000000, "Member 'GameHttpSubsystem_SendToServerRaw::Option' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_SendToServerRaw, ApiName) == 0x000088, "Member 'GameHttpSubsystem_SendToServerRaw::ApiName' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_SendToServerRaw, Data) == 0x000098, "Member 'GameHttpSubsystem_SendToServerRaw::Data' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_SendToServerRaw, ReturnValue) == 0x0000A8, "Member 'GameHttpSubsystem_SendToServerRaw::ReturnValue' has a wrong offset!");

// Function UnionSystem.GameHttpSubsystem.SendToServerRawCallbacked
// 0x00B8 (0x00B8 - 0x0000)
struct GameHttpSubsystem_SendToServerRawCallbacked final
{
public:
	struct FGameHttpRequestOption                 Option;                                            // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ApiName;                                           // 0x0088(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0098(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameHttpSubsystem_SendToServerRawCallbacked) == 0x000008, "Wrong alignment on GameHttpSubsystem_SendToServerRawCallbacked");
static_assert(sizeof(GameHttpSubsystem_SendToServerRawCallbacked) == 0x0000B8, "Wrong size on GameHttpSubsystem_SendToServerRawCallbacked");
static_assert(offsetof(GameHttpSubsystem_SendToServerRawCallbacked, Option) == 0x000000, "Member 'GameHttpSubsystem_SendToServerRawCallbacked::Option' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_SendToServerRawCallbacked, ApiName) == 0x000088, "Member 'GameHttpSubsystem_SendToServerRawCallbacked::ApiName' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_SendToServerRawCallbacked, Data) == 0x000098, "Member 'GameHttpSubsystem_SendToServerRawCallbacked::Data' has a wrong offset!");
static_assert(offsetof(GameHttpSubsystem_SendToServerRawCallbacked, Callback) == 0x0000A8, "Member 'GameHttpSubsystem_SendToServerRawCallbacked::Callback' has a wrong offset!");

// Function UnionSystem.GhostDataController.CancelUpload
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_CancelUpload final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_CancelUpload) == 0x000001, "Wrong alignment on GhostDataController_CancelUpload");
static_assert(sizeof(GhostDataController_CancelUpload) == 0x000001, "Wrong size on GhostDataController_CancelUpload");
static_assert(offsetof(GhostDataController_CancelUpload, ReturnValue) == 0x000000, "Member 'GhostDataController_CancelUpload::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.SetCurrentStageVersion
// 0x0004 (0x0004 - 0x0000)
struct GhostDataController_SetCurrentStageVersion final
{
public:
	int32                                         InCurrentStageVersion;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_SetCurrentStageVersion) == 0x000004, "Wrong alignment on GhostDataController_SetCurrentStageVersion");
static_assert(sizeof(GhostDataController_SetCurrentStageVersion) == 0x000004, "Wrong size on GhostDataController_SetCurrentStageVersion");
static_assert(offsetof(GhostDataController_SetCurrentStageVersion, InCurrentStageVersion) == 0x000000, "Member 'GhostDataController_SetCurrentStageVersion::InCurrentStageVersion' has a wrong offset!");

// Function UnionSystem.GhostDataController.SetUploadStageIds
// 0x0018 (0x0018 - 0x0000)
struct GhostDataController_SetUploadStageIds final
{
public:
	ESpeedClassId                                 SpeedClass;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EStageId>                              StageIds;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_SetUploadStageIds) == 0x000008, "Wrong alignment on GhostDataController_SetUploadStageIds");
static_assert(sizeof(GhostDataController_SetUploadStageIds) == 0x000018, "Wrong size on GhostDataController_SetUploadStageIds");
static_assert(offsetof(GhostDataController_SetUploadStageIds, SpeedClass) == 0x000000, "Member 'GhostDataController_SetUploadStageIds::SpeedClass' has a wrong offset!");
static_assert(offsetof(GhostDataController_SetUploadStageIds, StageIds) == 0x000008, "Member 'GhostDataController_SetUploadStageIds::StageIds' has a wrong offset!");

// Function UnionSystem.GhostDataController.StartUpload
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_StartUpload final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_StartUpload) == 0x000001, "Wrong alignment on GhostDataController_StartUpload");
static_assert(sizeof(GhostDataController_StartUpload) == 0x000001, "Wrong size on GhostDataController_StartUpload");
static_assert(offsetof(GhostDataController_StartUpload, ReturnValue) == 0x000000, "Member 'GhostDataController_StartUpload::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetResponseCode
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_GetResponseCode final
{
public:
	EResponseCodeAbstract                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetResponseCode) == 0x000001, "Wrong alignment on GhostDataController_GetResponseCode");
static_assert(sizeof(GhostDataController_GetResponseCode) == 0x000001, "Wrong size on GhostDataController_GetResponseCode");
static_assert(offsetof(GhostDataController_GetResponseCode, ReturnValue) == 0x000000, "Member 'GhostDataController_GetResponseCode::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetUploadCount
// 0x0004 (0x0004 - 0x0000)
struct GhostDataController_GetUploadCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetUploadCount) == 0x000004, "Wrong alignment on GhostDataController_GetUploadCount");
static_assert(sizeof(GhostDataController_GetUploadCount) == 0x000004, "Wrong size on GhostDataController_GetUploadCount");
static_assert(offsetof(GhostDataController_GetUploadCount, ReturnValue) == 0x000000, "Member 'GhostDataController_GetUploadCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetUploadDateTime
// 0x0010 (0x0010 - 0x0000)
struct GhostDataController_GetUploadDateTime final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetUploadDateTime) == 0x000008, "Wrong alignment on GhostDataController_GetUploadDateTime");
static_assert(sizeof(GhostDataController_GetUploadDateTime) == 0x000010, "Wrong size on GhostDataController_GetUploadDateTime");
static_assert(offsetof(GhostDataController_GetUploadDateTime, ReturnValue) == 0x000000, "Member 'GhostDataController_GetUploadDateTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetUploadMaxCount
// 0x0004 (0x0004 - 0x0000)
struct GhostDataController_GetUploadMaxCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetUploadMaxCount) == 0x000004, "Wrong alignment on GhostDataController_GetUploadMaxCount");
static_assert(sizeof(GhostDataController_GetUploadMaxCount) == 0x000004, "Wrong size on GhostDataController_GetUploadMaxCount");
static_assert(offsetof(GhostDataController_GetUploadMaxCount, ReturnValue) == 0x000000, "Member 'GhostDataController_GetUploadMaxCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetUploadRate
// 0x0004 (0x0004 - 0x0000)
struct GhostDataController_GetUploadRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetUploadRate) == 0x000004, "Wrong alignment on GhostDataController_GetUploadRate");
static_assert(sizeof(GhostDataController_GetUploadRate) == 0x000004, "Wrong size on GhostDataController_GetUploadRate");
static_assert(offsetof(GhostDataController_GetUploadRate, ReturnValue) == 0x000000, "Member 'GhostDataController_GetUploadRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetUploadSpeedClassId
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_GetUploadSpeedClassId final
{
public:
	ESpeedClassId                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetUploadSpeedClassId) == 0x000001, "Wrong alignment on GhostDataController_GetUploadSpeedClassId");
static_assert(sizeof(GhostDataController_GetUploadSpeedClassId) == 0x000001, "Wrong size on GhostDataController_GetUploadSpeedClassId");
static_assert(offsetof(GhostDataController_GetUploadSpeedClassId, ReturnValue) == 0x000000, "Member 'GhostDataController_GetUploadSpeedClassId::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.GetUploadStageId
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_GetUploadStageId final
{
public:
	EStageId                                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_GetUploadStageId) == 0x000001, "Wrong alignment on GhostDataController_GetUploadStageId");
static_assert(sizeof(GhostDataController_GetUploadStageId) == 0x000001, "Wrong size on GhostDataController_GetUploadStageId");
static_assert(offsetof(GhostDataController_GetUploadStageId, ReturnValue) == 0x000000, "Member 'GhostDataController_GetUploadStageId::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.IsBusy
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_IsBusy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_IsBusy) == 0x000001, "Wrong alignment on GhostDataController_IsBusy");
static_assert(sizeof(GhostDataController_IsBusy) == 0x000001, "Wrong size on GhostDataController_IsBusy");
static_assert(offsetof(GhostDataController_IsBusy, ReturnValue) == 0x000000, "Member 'GhostDataController_IsBusy::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.IsCancel
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_IsCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_IsCancel) == 0x000001, "Wrong alignment on GhostDataController_IsCancel");
static_assert(sizeof(GhostDataController_IsCancel) == 0x000001, "Wrong size on GhostDataController_IsCancel");
static_assert(offsetof(GhostDataController_IsCancel, ReturnValue) == 0x000000, "Member 'GhostDataController_IsCancel::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.IsGhostDataError
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_IsGhostDataError final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_IsGhostDataError) == 0x000001, "Wrong alignment on GhostDataController_IsGhostDataError");
static_assert(sizeof(GhostDataController_IsGhostDataError) == 0x000001, "Wrong size on GhostDataController_IsGhostDataError");
static_assert(offsetof(GhostDataController_IsGhostDataError, ReturnValue) == 0x000000, "Member 'GhostDataController_IsGhostDataError::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDataController.IsResponceCheat
// 0x0001 (0x0001 - 0x0000)
struct GhostDataController_IsResponceCheat final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDataController_IsResponceCheat) == 0x000001, "Wrong alignment on GhostDataController_IsResponceCheat");
static_assert(sizeof(GhostDataController_IsResponceCheat) == 0x000001, "Wrong size on GhostDataController_IsResponceCheat");
static_assert(offsetof(GhostDataController_IsResponceCheat, ReturnValue) == 0x000000, "Member 'GhostDataController_IsResponceCheat::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.CancelDownload
// 0x0001 (0x0001 - 0x0000)
struct GhostDonwnloadController_CancelDownload final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDonwnloadController_CancelDownload) == 0x000001, "Wrong alignment on GhostDonwnloadController_CancelDownload");
static_assert(sizeof(GhostDonwnloadController_CancelDownload) == 0x000001, "Wrong size on GhostDonwnloadController_CancelDownload");
static_assert(offsetof(GhostDonwnloadController_CancelDownload, ReturnValue) == 0x000000, "Member 'GhostDonwnloadController_CancelDownload::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.ConvertGhostData
// 0x0148 (0x0148 - 0x0000)
struct GhostDonwnloadController_ConvertGhostData final
{
public:
	struct FReplaySaveInfo                        OutGhostData;                                      // 0x0000(0x0140)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0140(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GhostDonwnloadController_ConvertGhostData) == 0x000008, "Wrong alignment on GhostDonwnloadController_ConvertGhostData");
static_assert(sizeof(GhostDonwnloadController_ConvertGhostData) == 0x000148, "Wrong size on GhostDonwnloadController_ConvertGhostData");
static_assert(offsetof(GhostDonwnloadController_ConvertGhostData, OutGhostData) == 0x000000, "Member 'GhostDonwnloadController_ConvertGhostData::OutGhostData' has a wrong offset!");
static_assert(offsetof(GhostDonwnloadController_ConvertGhostData, ReturnValue) == 0x000140, "Member 'GhostDonwnloadController_ConvertGhostData::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.GetDownloadRate
// 0x0004 (0x0004 - 0x0000)
struct GhostDonwnloadController_GetDownloadRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDonwnloadController_GetDownloadRate) == 0x000004, "Wrong alignment on GhostDonwnloadController_GetDownloadRate");
static_assert(sizeof(GhostDonwnloadController_GetDownloadRate) == 0x000004, "Wrong size on GhostDonwnloadController_GetDownloadRate");
static_assert(offsetof(GhostDonwnloadController_GetDownloadRate, ReturnValue) == 0x000000, "Member 'GhostDonwnloadController_GetDownloadRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.StartDownload
// 0x0030 (0x0030 - 0x0000)
struct GhostDonwnloadController_StartDownload final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 SpeedClass;                                        // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      StageId;                                           // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DateTime;                                          // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StageVersion;                                      // 0x0028(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GhostDonwnloadController_StartDownload) == 0x000008, "Wrong alignment on GhostDonwnloadController_StartDownload");
static_assert(sizeof(GhostDonwnloadController_StartDownload) == 0x000030, "Wrong size on GhostDonwnloadController_StartDownload");
static_assert(offsetof(GhostDonwnloadController_StartDownload, UserId) == 0x000000, "Member 'GhostDonwnloadController_StartDownload::UserId' has a wrong offset!");
static_assert(offsetof(GhostDonwnloadController_StartDownload, SpeedClass) == 0x000010, "Member 'GhostDonwnloadController_StartDownload::SpeedClass' has a wrong offset!");
static_assert(offsetof(GhostDonwnloadController_StartDownload, StageId) == 0x000011, "Member 'GhostDonwnloadController_StartDownload::StageId' has a wrong offset!");
static_assert(offsetof(GhostDonwnloadController_StartDownload, DateTime) == 0x000018, "Member 'GhostDonwnloadController_StartDownload::DateTime' has a wrong offset!");
static_assert(offsetof(GhostDonwnloadController_StartDownload, StageVersion) == 0x000028, "Member 'GhostDonwnloadController_StartDownload::StageVersion' has a wrong offset!");
static_assert(offsetof(GhostDonwnloadController_StartDownload, ReturnValue) == 0x00002C, "Member 'GhostDonwnloadController_StartDownload::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.GetResponseCode
// 0x0001 (0x0001 - 0x0000)
struct GhostDonwnloadController_GetResponseCode final
{
public:
	EResponseCodeAbstract                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDonwnloadController_GetResponseCode) == 0x000001, "Wrong alignment on GhostDonwnloadController_GetResponseCode");
static_assert(sizeof(GhostDonwnloadController_GetResponseCode) == 0x000001, "Wrong size on GhostDonwnloadController_GetResponseCode");
static_assert(offsetof(GhostDonwnloadController_GetResponseCode, ReturnValue) == 0x000000, "Member 'GhostDonwnloadController_GetResponseCode::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.IsBusy
// 0x0001 (0x0001 - 0x0000)
struct GhostDonwnloadController_IsBusy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDonwnloadController_IsBusy) == 0x000001, "Wrong alignment on GhostDonwnloadController_IsBusy");
static_assert(sizeof(GhostDonwnloadController_IsBusy) == 0x000001, "Wrong size on GhostDonwnloadController_IsBusy");
static_assert(offsetof(GhostDonwnloadController_IsBusy, ReturnValue) == 0x000000, "Member 'GhostDonwnloadController_IsBusy::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.IsCancel
// 0x0001 (0x0001 - 0x0000)
struct GhostDonwnloadController_IsCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDonwnloadController_IsCancel) == 0x000001, "Wrong alignment on GhostDonwnloadController_IsCancel");
static_assert(sizeof(GhostDonwnloadController_IsCancel) == 0x000001, "Wrong size on GhostDonwnloadController_IsCancel");
static_assert(offsetof(GhostDonwnloadController_IsCancel, ReturnValue) == 0x000000, "Member 'GhostDonwnloadController_IsCancel::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDonwnloadController.IsGhostDownloading
// 0x0001 (0x0001 - 0x0000)
struct GhostDonwnloadController_IsGhostDownloading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDonwnloadController_IsGhostDownloading) == 0x000001, "Wrong alignment on GhostDonwnloadController_IsGhostDownloading");
static_assert(sizeof(GhostDonwnloadController_IsGhostDownloading) == 0x000001, "Wrong size on GhostDonwnloadController_IsGhostDownloading");
static_assert(offsetof(GhostDonwnloadController_IsGhostDownloading, ReturnValue) == 0x000000, "Member 'GhostDonwnloadController_IsGhostDownloading::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostDownloader.OnCompleteDelegate
// 0x0010 (0x0010 - 0x0000)
struct GhostDownloader_OnCompleteDelegate final
{
public:
	int32                                         ResCode;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ContentLength;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsError;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GhostDownloader_OnCompleteDelegate) == 0x000004, "Wrong alignment on GhostDownloader_OnCompleteDelegate");
static_assert(sizeof(GhostDownloader_OnCompleteDelegate) == 0x000010, "Wrong size on GhostDownloader_OnCompleteDelegate");
static_assert(offsetof(GhostDownloader_OnCompleteDelegate, ResCode) == 0x000000, "Member 'GhostDownloader_OnCompleteDelegate::ResCode' has a wrong offset!");
static_assert(offsetof(GhostDownloader_OnCompleteDelegate, ContentLength) == 0x000004, "Member 'GhostDownloader_OnCompleteDelegate::ContentLength' has a wrong offset!");
static_assert(offsetof(GhostDownloader_OnCompleteDelegate, ElapsedTime) == 0x000008, "Member 'GhostDownloader_OnCompleteDelegate::ElapsedTime' has a wrong offset!");
static_assert(offsetof(GhostDownloader_OnCompleteDelegate, bIsError) == 0x00000C, "Member 'GhostDownloader_OnCompleteDelegate::bIsError' has a wrong offset!");

// Function UnionSystem.GhostDownloader.OnProgressDelegate
// 0x0008 (0x0008 - 0x0000)
struct GhostDownloader_OnProgressDelegate final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rate;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostDownloader_OnProgressDelegate) == 0x000004, "Wrong alignment on GhostDownloader_OnProgressDelegate");
static_assert(sizeof(GhostDownloader_OnProgressDelegate) == 0x000008, "Wrong size on GhostDownloader_OnProgressDelegate");
static_assert(offsetof(GhostDownloader_OnProgressDelegate, Length) == 0x000000, "Member 'GhostDownloader_OnProgressDelegate::Length' has a wrong offset!");
static_assert(offsetof(GhostDownloader_OnProgressDelegate, Rate) == 0x000004, "Member 'GhostDownloader_OnProgressDelegate::Rate' has a wrong offset!");

// Function UnionSystem.GhostSubSystem.CheckCachedGhostDataUserMatch
// 0x0030 (0x0030 - 0x0000)
struct GhostSubSystem_CheckCachedGhostDataUserMatch final
{
public:
	class FString                                 InUserId;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClass;                                      // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InDateTime;                                        // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GhostSubSystem_CheckCachedGhostDataUserMatch) == 0x000008, "Wrong alignment on GhostSubSystem_CheckCachedGhostDataUserMatch");
static_assert(sizeof(GhostSubSystem_CheckCachedGhostDataUserMatch) == 0x000030, "Wrong size on GhostSubSystem_CheckCachedGhostDataUserMatch");
static_assert(offsetof(GhostSubSystem_CheckCachedGhostDataUserMatch, InUserId) == 0x000000, "Member 'GhostSubSystem_CheckCachedGhostDataUserMatch::InUserId' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_CheckCachedGhostDataUserMatch, InSpeedClass) == 0x000010, "Member 'GhostSubSystem_CheckCachedGhostDataUserMatch::InSpeedClass' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_CheckCachedGhostDataUserMatch, InStageId) == 0x000011, "Member 'GhostSubSystem_CheckCachedGhostDataUserMatch::InStageId' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_CheckCachedGhostDataUserMatch, InDateTime) == 0x000018, "Member 'GhostSubSystem_CheckCachedGhostDataUserMatch::InDateTime' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_CheckCachedGhostDataUserMatch, ReturnValue) == 0x000028, "Member 'GhostSubSystem_CheckCachedGhostDataUserMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostSubSystem.GetDownloadGhostData
// 0x0148 (0x0148 - 0x0000)
struct GhostSubSystem_GetDownloadGhostData final
{
public:
	struct FReplaySaveInfo                        OutGhostData;                                      // 0x0000(0x0140)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0140(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GhostSubSystem_GetDownloadGhostData) == 0x000008, "Wrong alignment on GhostSubSystem_GetDownloadGhostData");
static_assert(sizeof(GhostSubSystem_GetDownloadGhostData) == 0x000148, "Wrong size on GhostSubSystem_GetDownloadGhostData");
static_assert(offsetof(GhostSubSystem_GetDownloadGhostData, OutGhostData) == 0x000000, "Member 'GhostSubSystem_GetDownloadGhostData::OutGhostData' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_GetDownloadGhostData, ReturnValue) == 0x000140, "Member 'GhostSubSystem_GetDownloadGhostData::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostSubSystem.SetDownloadGhostData
// 0x0178 (0x0178 - 0x0000)
struct GhostSubSystem_SetDownloadGhostData final
{
public:
	class FString                                 InUserId;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClass;                                      // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InDateTime;                                        // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InRankingName;                                     // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReplaySaveInfo                        InGhostData;                                       // 0x0038(0x0140)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostSubSystem_SetDownloadGhostData) == 0x000008, "Wrong alignment on GhostSubSystem_SetDownloadGhostData");
static_assert(sizeof(GhostSubSystem_SetDownloadGhostData) == 0x000178, "Wrong size on GhostSubSystem_SetDownloadGhostData");
static_assert(offsetof(GhostSubSystem_SetDownloadGhostData, InUserId) == 0x000000, "Member 'GhostSubSystem_SetDownloadGhostData::InUserId' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_SetDownloadGhostData, InSpeedClass) == 0x000010, "Member 'GhostSubSystem_SetDownloadGhostData::InSpeedClass' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_SetDownloadGhostData, InStageId) == 0x000011, "Member 'GhostSubSystem_SetDownloadGhostData::InStageId' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_SetDownloadGhostData, InDateTime) == 0x000018, "Member 'GhostSubSystem_SetDownloadGhostData::InDateTime' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_SetDownloadGhostData, InRankingName) == 0x000028, "Member 'GhostSubSystem_SetDownloadGhostData::InRankingName' has a wrong offset!");
static_assert(offsetof(GhostSubSystem_SetDownloadGhostData, InGhostData) == 0x000038, "Member 'GhostSubSystem_SetDownloadGhostData::InGhostData' has a wrong offset!");

// Function UnionSystem.GhostSubSystem.SetGhostRequestFailed
// 0x0001 (0x0001 - 0x0000)
struct GhostSubSystem_SetGhostRequestFailed final
{
public:
	bool                                          InFailed;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostSubSystem_SetGhostRequestFailed) == 0x000001, "Wrong alignment on GhostSubSystem_SetGhostRequestFailed");
static_assert(sizeof(GhostSubSystem_SetGhostRequestFailed) == 0x000001, "Wrong size on GhostSubSystem_SetGhostRequestFailed");
static_assert(offsetof(GhostSubSystem_SetGhostRequestFailed, InFailed) == 0x000000, "Member 'GhostSubSystem_SetGhostRequestFailed::InFailed' has a wrong offset!");

// Function UnionSystem.GhostSubSystem.IsGhostRequestFailed
// 0x0001 (0x0001 - 0x0000)
struct GhostSubSystem_IsGhostRequestFailed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostSubSystem_IsGhostRequestFailed) == 0x000001, "Wrong alignment on GhostSubSystem_IsGhostRequestFailed");
static_assert(sizeof(GhostSubSystem_IsGhostRequestFailed) == 0x000001, "Wrong size on GhostSubSystem_IsGhostRequestFailed");
static_assert(offsetof(GhostSubSystem_IsGhostRequestFailed, ReturnValue) == 0x000000, "Member 'GhostSubSystem_IsGhostRequestFailed::ReturnValue' has a wrong offset!");

// Function UnionSystem.GhostUploader.OnCompleteDelegate
// 0x0010 (0x0010 - 0x0000)
struct GhostUploader_OnCompleteDelegate final
{
public:
	int32                                         ResCode;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ContentLength;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsError;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GhostUploader_OnCompleteDelegate) == 0x000004, "Wrong alignment on GhostUploader_OnCompleteDelegate");
static_assert(sizeof(GhostUploader_OnCompleteDelegate) == 0x000010, "Wrong size on GhostUploader_OnCompleteDelegate");
static_assert(offsetof(GhostUploader_OnCompleteDelegate, ResCode) == 0x000000, "Member 'GhostUploader_OnCompleteDelegate::ResCode' has a wrong offset!");
static_assert(offsetof(GhostUploader_OnCompleteDelegate, ContentLength) == 0x000004, "Member 'GhostUploader_OnCompleteDelegate::ContentLength' has a wrong offset!");
static_assert(offsetof(GhostUploader_OnCompleteDelegate, ElapsedTime) == 0x000008, "Member 'GhostUploader_OnCompleteDelegate::ElapsedTime' has a wrong offset!");
static_assert(offsetof(GhostUploader_OnCompleteDelegate, bIsError) == 0x00000C, "Member 'GhostUploader_OnCompleteDelegate::bIsError' has a wrong offset!");

// Function UnionSystem.GhostUploader.OnProgressDelegate
// 0x0008 (0x0008 - 0x0000)
struct GhostUploader_OnProgressDelegate final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rate;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GhostUploader_OnProgressDelegate) == 0x000004, "Wrong alignment on GhostUploader_OnProgressDelegate");
static_assert(sizeof(GhostUploader_OnProgressDelegate) == 0x000008, "Wrong size on GhostUploader_OnProgressDelegate");
static_assert(offsetof(GhostUploader_OnProgressDelegate, Length) == 0x000000, "Member 'GhostUploader_OnProgressDelegate::Length' has a wrong offset!");
static_assert(offsetof(GhostUploader_OnProgressDelegate, Rate) == 0x000004, "Member 'GhostUploader_OnProgressDelegate::Rate' has a wrong offset!");

// Function UnionSystem.UIColorInfoDataAsset.GetUIColorInfo
// 0x0028 (0x0028 - 0x0000)
struct UIColorInfoDataAsset_GetUIColorInfo final
{
public:
	EGroupColorId                                 colorId;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIColorInfo                           ReturnValue;                                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIColorInfoDataAsset_GetUIColorInfo) == 0x000008, "Wrong alignment on UIColorInfoDataAsset_GetUIColorInfo");
static_assert(sizeof(UIColorInfoDataAsset_GetUIColorInfo) == 0x000028, "Wrong size on UIColorInfoDataAsset_GetUIColorInfo");
static_assert(offsetof(UIColorInfoDataAsset_GetUIColorInfo, colorId) == 0x000000, "Member 'UIColorInfoDataAsset_GetUIColorInfo::colorId' has a wrong offset!");
static_assert(offsetof(UIColorInfoDataAsset_GetUIColorInfo, ReturnValue) == 0x000008, "Member 'UIColorInfoDataAsset_GetUIColorInfo::ReturnValue' has a wrong offset!");

// Function UnionSystem.HashHelper.HashIntoByteArray
// 0x0020 (0x0020 - 0x0000)
struct HashHelper_HashIntoByteArray final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HashHelper_HashIntoByteArray) == 0x000008, "Wrong alignment on HashHelper_HashIntoByteArray");
static_assert(sizeof(HashHelper_HashIntoByteArray) == 0x000020, "Wrong size on HashHelper_HashIntoByteArray");
static_assert(offsetof(HashHelper_HashIntoByteArray, Data) == 0x000000, "Member 'HashHelper_HashIntoByteArray::Data' has a wrong offset!");
static_assert(offsetof(HashHelper_HashIntoByteArray, ReturnValue) == 0x000010, "Member 'HashHelper_HashIntoByteArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.HashHelper.HashIntoByteArrayFromByteArray
// 0x0020 (0x0020 - 0x0000)
struct HashHelper_HashIntoByteArrayFromByteArray final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HashHelper_HashIntoByteArrayFromByteArray) == 0x000008, "Wrong alignment on HashHelper_HashIntoByteArrayFromByteArray");
static_assert(sizeof(HashHelper_HashIntoByteArrayFromByteArray) == 0x000020, "Wrong size on HashHelper_HashIntoByteArrayFromByteArray");
static_assert(offsetof(HashHelper_HashIntoByteArrayFromByteArray, Bytes) == 0x000000, "Member 'HashHelper_HashIntoByteArrayFromByteArray::Bytes' has a wrong offset!");
static_assert(offsetof(HashHelper_HashIntoByteArrayFromByteArray, ReturnValue) == 0x000010, "Member 'HashHelper_HashIntoByteArrayFromByteArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.HashHelper.HashIntoTextString
// 0x0020 (0x0020 - 0x0000)
struct HashHelper_HashIntoTextString final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HashHelper_HashIntoTextString) == 0x000008, "Wrong alignment on HashHelper_HashIntoTextString");
static_assert(sizeof(HashHelper_HashIntoTextString) == 0x000020, "Wrong size on HashHelper_HashIntoTextString");
static_assert(offsetof(HashHelper_HashIntoTextString, Data) == 0x000000, "Member 'HashHelper_HashIntoTextString::Data' has a wrong offset!");
static_assert(offsetof(HashHelper_HashIntoTextString, ReturnValue) == 0x000010, "Member 'HashHelper_HashIntoTextString::ReturnValue' has a wrong offset!");

// Function UnionSystem.HashHelper.HashIntoTextStringFromByteArray
// 0x0020 (0x0020 - 0x0000)
struct HashHelper_HashIntoTextStringFromByteArray final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HashHelper_HashIntoTextStringFromByteArray) == 0x000008, "Wrong alignment on HashHelper_HashIntoTextStringFromByteArray");
static_assert(sizeof(HashHelper_HashIntoTextStringFromByteArray) == 0x000020, "Wrong size on HashHelper_HashIntoTextStringFromByteArray");
static_assert(offsetof(HashHelper_HashIntoTextStringFromByteArray, Bytes) == 0x000000, "Member 'HashHelper_HashIntoTextStringFromByteArray::Bytes' has a wrong offset!");
static_assert(offsetof(HashHelper_HashIntoTextStringFromByteArray, ReturnValue) == 0x000010, "Member 'HashHelper_HashIntoTextStringFromByteArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.GetCurrentUserId
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_GetCurrentUserId final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_GetCurrentUserId) == 0x000008, "Wrong alignment on HttpHelper_GetCurrentUserId");
static_assert(sizeof(HttpHelper_GetCurrentUserId) == 0x000018, "Wrong size on HttpHelper_GetCurrentUserId");
static_assert(offsetof(HttpHelper_GetCurrentUserId, UserId) == 0x000000, "Member 'HttpHelper_GetCurrentUserId::UserId' has a wrong offset!");
static_assert(offsetof(HttpHelper_GetCurrentUserId, ReturnValue) == 0x000010, "Member 'HttpHelper_GetCurrentUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.GetIntplServerDateTime
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_GetIntplServerDateTime final
{
public:
	struct FDateTime                              OutDateTime;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_GetIntplServerDateTime) == 0x000008, "Wrong alignment on HttpHelper_GetIntplServerDateTime");
static_assert(sizeof(HttpHelper_GetIntplServerDateTime) == 0x000010, "Wrong size on HttpHelper_GetIntplServerDateTime");
static_assert(offsetof(HttpHelper_GetIntplServerDateTime, OutDateTime) == 0x000000, "Member 'HttpHelper_GetIntplServerDateTime::OutDateTime' has a wrong offset!");
static_assert(offsetof(HttpHelper_GetIntplServerDateTime, ReturnValue) == 0x000008, "Member 'HttpHelper_GetIntplServerDateTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.GetLastMaintenanceData
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_GetLastMaintenanceData final
{
public:
	class FString                                 StartTime;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 endTime;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         noticeId;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_GetLastMaintenanceData) == 0x000008, "Wrong alignment on HttpHelper_GetLastMaintenanceData");
static_assert(sizeof(HttpHelper_GetLastMaintenanceData) == 0x000028, "Wrong size on HttpHelper_GetLastMaintenanceData");
static_assert(offsetof(HttpHelper_GetLastMaintenanceData, StartTime) == 0x000000, "Member 'HttpHelper_GetLastMaintenanceData::StartTime' has a wrong offset!");
static_assert(offsetof(HttpHelper_GetLastMaintenanceData, endTime) == 0x000010, "Member 'HttpHelper_GetLastMaintenanceData::endTime' has a wrong offset!");
static_assert(offsetof(HttpHelper_GetLastMaintenanceData, noticeId) == 0x000020, "Member 'HttpHelper_GetLastMaintenanceData::noticeId' has a wrong offset!");
static_assert(offsetof(HttpHelper_GetLastMaintenanceData, ReturnValue) == 0x000024, "Member 'HttpHelper_GetLastMaintenanceData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.GetLastServerTime
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_GetLastServerTime final
{
public:
	class FString                                 ServerTime;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_GetLastServerTime) == 0x000008, "Wrong alignment on HttpHelper_GetLastServerTime");
static_assert(sizeof(HttpHelper_GetLastServerTime) == 0x000018, "Wrong size on HttpHelper_GetLastServerTime");
static_assert(offsetof(HttpHelper_GetLastServerTime, ServerTime) == 0x000000, "Member 'HttpHelper_GetLastServerTime::ServerTime' has a wrong offset!");
static_assert(offsetof(HttpHelper_GetLastServerTime, ReturnValue) == 0x000010, "Member 'HttpHelper_GetLastServerTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.LoginContextInitialize
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_LoginContextInitialize final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_LoginContextInitialize) == 0x000008, "Wrong alignment on HttpHelper_LoginContextInitialize");
static_assert(sizeof(HttpHelper_LoginContextInitialize) == 0x000020, "Wrong size on HttpHelper_LoginContextInitialize");
static_assert(offsetof(HttpHelper_LoginContextInitialize, ProductUserId) == 0x000000, "Member 'HttpHelper_LoginContextInitialize::ProductUserId' has a wrong offset!");
static_assert(offsetof(HttpHelper_LoginContextInitialize, UserId) == 0x000010, "Member 'HttpHelper_LoginContextInitialize::UserId' has a wrong offset!");

// Function UnionSystem.HttpHelper.LoginContextInitializeForMaintenance
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_LoginContextInitializeForMaintenance final
{
public:
	class FString                                 ProviderId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_LoginContextInitializeForMaintenance) == 0x000008, "Wrong alignment on HttpHelper_LoginContextInitializeForMaintenance");
static_assert(sizeof(HttpHelper_LoginContextInitializeForMaintenance) == 0x000010, "Wrong size on HttpHelper_LoginContextInitializeForMaintenance");
static_assert(offsetof(HttpHelper_LoginContextInitializeForMaintenance, ProviderId) == 0x000000, "Member 'HttpHelper_LoginContextInitializeForMaintenance::ProviderId' has a wrong offset!");

// Function UnionSystem.HttpHelper.LoginContextUpdate
// 0x0090 (0x0090 - 0x0000)
struct HttpHelper_LoginContextUpdate final
{
public:
	struct FLoginCheckResponse                    Response;                                          // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_LoginContextUpdate) == 0x000008, "Wrong alignment on HttpHelper_LoginContextUpdate");
static_assert(sizeof(HttpHelper_LoginContextUpdate) == 0x000090, "Wrong size on HttpHelper_LoginContextUpdate");
static_assert(offsetof(HttpHelper_LoginContextUpdate, Response) == 0x000000, "Member 'HttpHelper_LoginContextUpdate::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_CntReplayGetSignedUrl
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_CntReplayGetSignedUrl final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCntReplayGetSignedUrlResponse         Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_CntReplayGetSignedUrl) == 0x000008, "Wrong alignment on HttpHelper_Parse_CntReplayGetSignedUrl");
static_assert(sizeof(HttpHelper_Parse_CntReplayGetSignedUrl) == 0x000028, "Wrong size on HttpHelper_Parse_CntReplayGetSignedUrl");
static_assert(offsetof(HttpHelper_Parse_CntReplayGetSignedUrl, OutData) == 0x000000, "Member 'HttpHelper_Parse_CntReplayGetSignedUrl::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_CntReplayGetSignedUrl, ResCode) == 0x000010, "Member 'HttpHelper_Parse_CntReplayGetSignedUrl::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_CntReplayGetSignedUrl, Response) == 0x000018, "Member 'HttpHelper_Parse_CntReplayGetSignedUrl::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_CompensationGetCompensations
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_CompensationGetCompensations final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCompensationGetCompensationsResponse  Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_CompensationGetCompensations) == 0x000008, "Wrong alignment on HttpHelper_Parse_CompensationGetCompensations");
static_assert(sizeof(HttpHelper_Parse_CompensationGetCompensations) == 0x000028, "Wrong size on HttpHelper_Parse_CompensationGetCompensations");
static_assert(offsetof(HttpHelper_Parse_CompensationGetCompensations, OutData) == 0x000000, "Member 'HttpHelper_Parse_CompensationGetCompensations::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_CompensationGetCompensations, ResCode) == 0x000010, "Member 'HttpHelper_Parse_CompensationGetCompensations::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_CompensationGetCompensations, Response) == 0x000018, "Member 'HttpHelper_Parse_CompensationGetCompensations::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_DebugChangeFairPlayPoint
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_DebugChangeFairPlayPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDebugChangeFairPlayPointResponse      Response;                                          // 0x0014(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_DebugChangeFairPlayPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_DebugChangeFairPlayPoint");
static_assert(sizeof(HttpHelper_Parse_DebugChangeFairPlayPoint) == 0x000018, "Wrong size on HttpHelper_Parse_DebugChangeFairPlayPoint");
static_assert(offsetof(HttpHelper_Parse_DebugChangeFairPlayPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_DebugChangeFairPlayPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugChangeFairPlayPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_DebugChangeFairPlayPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugChangeFairPlayPoint, Response) == 0x000014, "Member 'HttpHelper_Parse_DebugChangeFairPlayPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_DebugChangeRankMatchRate
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_DebugChangeRankMatchRate final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDebugChangeRankMatchRateResponse      Response;                                          // 0x0014(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_DebugChangeRankMatchRate) == 0x000008, "Wrong alignment on HttpHelper_Parse_DebugChangeRankMatchRate");
static_assert(sizeof(HttpHelper_Parse_DebugChangeRankMatchRate) == 0x000018, "Wrong size on HttpHelper_Parse_DebugChangeRankMatchRate");
static_assert(offsetof(HttpHelper_Parse_DebugChangeRankMatchRate, OutData) == 0x000000, "Member 'HttpHelper_Parse_DebugChangeRankMatchRate::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugChangeRankMatchRate, ResCode) == 0x000010, "Member 'HttpHelper_Parse_DebugChangeRankMatchRate::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugChangeRankMatchRate, Response) == 0x000014, "Member 'HttpHelper_Parse_DebugChangeRankMatchRate::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_DebugConnectTest
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Parse_DebugConnectTest final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugConnectTestResponse              Response;                                          // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_DebugConnectTest) == 0x000008, "Wrong alignment on HttpHelper_Parse_DebugConnectTest");
static_assert(sizeof(HttpHelper_Parse_DebugConnectTest) == 0x000030, "Wrong size on HttpHelper_Parse_DebugConnectTest");
static_assert(offsetof(HttpHelper_Parse_DebugConnectTest, OutData) == 0x000000, "Member 'HttpHelper_Parse_DebugConnectTest::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugConnectTest, ResCode) == 0x000010, "Member 'HttpHelper_Parse_DebugConnectTest::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugConnectTest, Response) == 0x000018, "Member 'HttpHelper_Parse_DebugConnectTest::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_DebugMatchmakingSubscribeFesta
// 0x00B8 (0x00B8 - 0x0000)
struct HttpHelper_Parse_DebugMatchmakingSubscribeFesta final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMatchmakingSubscribeFestaResponse Response;                                         // 0x0018(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_DebugMatchmakingSubscribeFesta) == 0x000008, "Wrong alignment on HttpHelper_Parse_DebugMatchmakingSubscribeFesta");
static_assert(sizeof(HttpHelper_Parse_DebugMatchmakingSubscribeFesta) == 0x0000B8, "Wrong size on HttpHelper_Parse_DebugMatchmakingSubscribeFesta");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeFesta, OutData) == 0x000000, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeFesta::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeFesta, ResCode) == 0x000010, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeFesta::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeFesta, Response) == 0x000018, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeFesta::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_DebugMatchmakingSubscribeLegendCompe
// 0x00B8 (0x00B8 - 0x0000)
struct HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMatchmakingSubscribeLegendCompeResponse Response;                                   // 0x0018(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe");
static_assert(sizeof(HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe) == 0x0000B8, "Wrong size on HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe, OutData) == 0x000000, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe, Response) == 0x000018, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeLegendCompe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_DebugMatchmakingSubscribeRankMatch
// 0x00B8 (0x00B8 - 0x0000)
struct HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMatchmakingSubscribeRankMatchResponse Response;                                     // 0x0018(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch");
static_assert(sizeof(HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch) == 0x0000B8, "Wrong size on HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch, OutData) == 0x000000, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch, ResCode) == 0x000010, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch, Response) == 0x000018, "Member 'HttpHelper_Parse_DebugMatchmakingSubscribeRankMatch::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FairPointAddFairPoint
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_FairPointAddFairPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFairPointAddFairPointResponse         Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_FairPointAddFairPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_FairPointAddFairPoint");
static_assert(sizeof(HttpHelper_Parse_FairPointAddFairPoint) == 0x000018, "Wrong size on HttpHelper_Parse_FairPointAddFairPoint");
static_assert(offsetof(HttpHelper_Parse_FairPointAddFairPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_FairPointAddFairPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FairPointAddFairPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FairPointAddFairPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FairPointAddFairPoint, Response) == 0x000014, "Member 'HttpHelper_Parse_FairPointAddFairPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FairPointCheckFairPoint
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Parse_FairPointCheckFairPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFairPointCheckFairPointResponse       Response;                                          // 0x0018(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FairPointCheckFairPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_FairPointCheckFairPoint");
static_assert(sizeof(HttpHelper_Parse_FairPointCheckFairPoint) == 0x000038, "Wrong size on HttpHelper_Parse_FairPointCheckFairPoint");
static_assert(offsetof(HttpHelper_Parse_FairPointCheckFairPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_FairPointCheckFairPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FairPointCheckFairPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FairPointCheckFairPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FairPointCheckFairPoint, Response) == 0x000018, "Member 'HttpHelper_Parse_FairPointCheckFairPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FairPointSubFairPoint
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_FairPointSubFairPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFairPointSubFairPointResponse         Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_FairPointSubFairPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_FairPointSubFairPoint");
static_assert(sizeof(HttpHelper_Parse_FairPointSubFairPoint) == 0x000018, "Wrong size on HttpHelper_Parse_FairPointSubFairPoint");
static_assert(offsetof(HttpHelper_Parse_FairPointSubFairPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_FairPointSubFairPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FairPointSubFairPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FairPointSubFairPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FairPointSubFairPoint, Response) == 0x000014, "Member 'HttpHelper_Parse_FairPointSubFairPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FestaCheckFestaReward
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Parse_FestaCheckFestaReward final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaCheckFestaRewardResponse         Response;                                          // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FestaCheckFestaReward) == 0x000008, "Wrong alignment on HttpHelper_Parse_FestaCheckFestaReward");
static_assert(sizeof(HttpHelper_Parse_FestaCheckFestaReward) == 0x000030, "Wrong size on HttpHelper_Parse_FestaCheckFestaReward");
static_assert(offsetof(HttpHelper_Parse_FestaCheckFestaReward, OutData) == 0x000000, "Member 'HttpHelper_Parse_FestaCheckFestaReward::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FestaCheckFestaReward, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FestaCheckFestaReward::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FestaCheckFestaReward, Response) == 0x000018, "Member 'HttpHelper_Parse_FestaCheckFestaReward::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FestaFestaTop
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Parse_FestaFestaTop final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaFestaTopResponse                 Response;                                          // 0x0018(0x0048)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FestaFestaTop) == 0x000008, "Wrong alignment on HttpHelper_Parse_FestaFestaTop");
static_assert(sizeof(HttpHelper_Parse_FestaFestaTop) == 0x000060, "Wrong size on HttpHelper_Parse_FestaFestaTop");
static_assert(offsetof(HttpHelper_Parse_FestaFestaTop, OutData) == 0x000000, "Member 'HttpHelper_Parse_FestaFestaTop::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FestaFestaTop, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FestaFestaTop::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FestaFestaTop, Response) == 0x000018, "Member 'HttpHelper_Parse_FestaFestaTop::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendAcceptFriend
// 0x0480 (0x0480 - 0x0000)
struct HttpHelper_Parse_FriendAcceptFriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendAcceptFriendResponse            Response;                                          // 0x0018(0x0468)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FriendAcceptFriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendAcceptFriend");
static_assert(sizeof(HttpHelper_Parse_FriendAcceptFriend) == 0x000480, "Wrong size on HttpHelper_Parse_FriendAcceptFriend");
static_assert(offsetof(HttpHelper_Parse_FriendAcceptFriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendAcceptFriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendAcceptFriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendAcceptFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendAcceptFriend, Response) == 0x000018, "Member 'HttpHelper_Parse_FriendAcceptFriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendApplyFriend
// 0x0078 (0x0078 - 0x0000)
struct HttpHelper_Parse_FriendApplyFriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendApplyFriendResponse             Response;                                          // 0x0018(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FriendApplyFriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendApplyFriend");
static_assert(sizeof(HttpHelper_Parse_FriendApplyFriend) == 0x000078, "Wrong size on HttpHelper_Parse_FriendApplyFriend");
static_assert(offsetof(HttpHelper_Parse_FriendApplyFriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendApplyFriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendApplyFriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendApplyFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendApplyFriend, Response) == 0x000018, "Member 'HttpHelper_Parse_FriendApplyFriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendCancelFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_FriendCancelFriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendCancelFriendResponse            Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_FriendCancelFriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendCancelFriend");
static_assert(sizeof(HttpHelper_Parse_FriendCancelFriend) == 0x000018, "Wrong size on HttpHelper_Parse_FriendCancelFriend");
static_assert(offsetof(HttpHelper_Parse_FriendCancelFriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendCancelFriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendCancelFriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendCancelFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendCancelFriend, Response) == 0x000014, "Member 'HttpHelper_Parse_FriendCancelFriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendGetFriendLastDate
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_FriendGetFriendLastDate final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendGetFriendLastDateResponse       Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FriendGetFriendLastDate) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendGetFriendLastDate");
static_assert(sizeof(HttpHelper_Parse_FriendGetFriendLastDate) == 0x000028, "Wrong size on HttpHelper_Parse_FriendGetFriendLastDate");
static_assert(offsetof(HttpHelper_Parse_FriendGetFriendLastDate, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendGetFriendLastDate::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendGetFriendLastDate, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendGetFriendLastDate::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendGetFriendLastDate, Response) == 0x000018, "Member 'HttpHelper_Parse_FriendGetFriendLastDate::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendGetFriendList
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Parse_FriendGetFriendList final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendGetFriendListResponse           Response;                                          // 0x0018(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FriendGetFriendList) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendGetFriendList");
static_assert(sizeof(HttpHelper_Parse_FriendGetFriendList) == 0x000048, "Wrong size on HttpHelper_Parse_FriendGetFriendList");
static_assert(offsetof(HttpHelper_Parse_FriendGetFriendList, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendGetFriendList::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendGetFriendList, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendGetFriendList::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendGetFriendList, Response) == 0x000018, "Member 'HttpHelper_Parse_FriendGetFriendList::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendNotifyFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_FriendNotifyFriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendNotifyFriendResponse            Response;                                          // 0x0014(0x0001)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_FriendNotifyFriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendNotifyFriend");
static_assert(sizeof(HttpHelper_Parse_FriendNotifyFriend) == 0x000018, "Wrong size on HttpHelper_Parse_FriendNotifyFriend");
static_assert(offsetof(HttpHelper_Parse_FriendNotifyFriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendNotifyFriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendNotifyFriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendNotifyFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendNotifyFriend, Response) == 0x000014, "Member 'HttpHelper_Parse_FriendNotifyFriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendRejectFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_FriendRejectFriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendRejectFriendResponse            Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_FriendRejectFriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendRejectFriend");
static_assert(sizeof(HttpHelper_Parse_FriendRejectFriend) == 0x000018, "Wrong size on HttpHelper_Parse_FriendRejectFriend");
static_assert(offsetof(HttpHelper_Parse_FriendRejectFriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendRejectFriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendRejectFriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendRejectFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendRejectFriend, Response) == 0x000014, "Member 'HttpHelper_Parse_FriendRejectFriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendRequestFriend
// 0x0480 (0x0480 - 0x0000)
struct HttpHelper_Parse_FriendRequestFriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendRequestFriendResponse           Response;                                          // 0x0018(0x0468)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_FriendRequestFriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendRequestFriend");
static_assert(sizeof(HttpHelper_Parse_FriendRequestFriend) == 0x000480, "Wrong size on HttpHelper_Parse_FriendRequestFriend");
static_assert(offsetof(HttpHelper_Parse_FriendRequestFriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendRequestFriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendRequestFriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendRequestFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendRequestFriend, Response) == 0x000018, "Member 'HttpHelper_Parse_FriendRequestFriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_FriendUnfriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_FriendUnfriend final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendUnfriendResponse                Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_FriendUnfriend) == 0x000008, "Wrong alignment on HttpHelper_Parse_FriendUnfriend");
static_assert(sizeof(HttpHelper_Parse_FriendUnfriend) == 0x000018, "Wrong size on HttpHelper_Parse_FriendUnfriend");
static_assert(offsetof(HttpHelper_Parse_FriendUnfriend, OutData) == 0x000000, "Member 'HttpHelper_Parse_FriendUnfriend::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendUnfriend, ResCode) == 0x000010, "Member 'HttpHelper_Parse_FriendUnfriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_FriendUnfriend, Response) == 0x000014, "Member 'HttpHelper_Parse_FriendUnfriend::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_GhostGetFriendGhostData
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_GhostGetFriendGhostData final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGhostGetFriendGhostDataResponse       Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_GhostGetFriendGhostData) == 0x000008, "Wrong alignment on HttpHelper_Parse_GhostGetFriendGhostData");
static_assert(sizeof(HttpHelper_Parse_GhostGetFriendGhostData) == 0x000028, "Wrong size on HttpHelper_Parse_GhostGetFriendGhostData");
static_assert(offsetof(HttpHelper_Parse_GhostGetFriendGhostData, OutData) == 0x000000, "Member 'HttpHelper_Parse_GhostGetFriendGhostData::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_GhostGetFriendGhostData, ResCode) == 0x000010, "Member 'HttpHelper_Parse_GhostGetFriendGhostData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_GhostGetFriendGhostData, Response) == 0x000018, "Member 'HttpHelper_Parse_GhostGetFriendGhostData::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_GhostGetRankingGhostData
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_GhostGetRankingGhostData final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGhostGetRankingGhostDataResponse      Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_GhostGetRankingGhostData) == 0x000008, "Wrong alignment on HttpHelper_Parse_GhostGetRankingGhostData");
static_assert(sizeof(HttpHelper_Parse_GhostGetRankingGhostData) == 0x000028, "Wrong size on HttpHelper_Parse_GhostGetRankingGhostData");
static_assert(offsetof(HttpHelper_Parse_GhostGetRankingGhostData, OutData) == 0x000000, "Member 'HttpHelper_Parse_GhostGetRankingGhostData::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_GhostGetRankingGhostData, ResCode) == 0x000010, "Member 'HttpHelper_Parse_GhostGetRankingGhostData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_GhostGetRankingGhostData, Response) == 0x000018, "Member 'HttpHelper_Parse_GhostGetRankingGhostData::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_HealthCheck
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_HealthCheck final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHealthCheckResponse                   Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_HealthCheck) == 0x000008, "Wrong alignment on HttpHelper_Parse_HealthCheck");
static_assert(sizeof(HttpHelper_Parse_HealthCheck) == 0x000018, "Wrong size on HttpHelper_Parse_HealthCheck");
static_assert(offsetof(HttpHelper_Parse_HealthCheck, OutData) == 0x000000, "Member 'HttpHelper_Parse_HealthCheck::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_HealthCheck, ResCode) == 0x000010, "Member 'HttpHelper_Parse_HealthCheck::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_HealthCheck, Response) == 0x000014, "Member 'HttpHelper_Parse_HealthCheck::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_LegendCompeCheckLegendCompeReward
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_LegendCompeCheckLegendCompeReward final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLegendCompeCheckLegendCompeRewardResponse Response;                                      // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_LegendCompeCheckLegendCompeReward) == 0x000008, "Wrong alignment on HttpHelper_Parse_LegendCompeCheckLegendCompeReward");
static_assert(sizeof(HttpHelper_Parse_LegendCompeCheckLegendCompeReward) == 0x000028, "Wrong size on HttpHelper_Parse_LegendCompeCheckLegendCompeReward");
static_assert(offsetof(HttpHelper_Parse_LegendCompeCheckLegendCompeReward, OutData) == 0x000000, "Member 'HttpHelper_Parse_LegendCompeCheckLegendCompeReward::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LegendCompeCheckLegendCompeReward, ResCode) == 0x000010, "Member 'HttpHelper_Parse_LegendCompeCheckLegendCompeReward::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LegendCompeCheckLegendCompeReward, Response) == 0x000018, "Member 'HttpHelper_Parse_LegendCompeCheckLegendCompeReward::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_LobbyGenerateLobby
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Parse_LobbyGenerateLobby final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyGenerateLobbyResponse            Response;                                          // 0x0018(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_LobbyGenerateLobby) == 0x000008, "Wrong alignment on HttpHelper_Parse_LobbyGenerateLobby");
static_assert(sizeof(HttpHelper_Parse_LobbyGenerateLobby) == 0x000040, "Wrong size on HttpHelper_Parse_LobbyGenerateLobby");
static_assert(offsetof(HttpHelper_Parse_LobbyGenerateLobby, OutData) == 0x000000, "Member 'HttpHelper_Parse_LobbyGenerateLobby::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyGenerateLobby, ResCode) == 0x000010, "Member 'HttpHelper_Parse_LobbyGenerateLobby::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyGenerateLobby, Response) == 0x000018, "Member 'HttpHelper_Parse_LobbyGenerateLobby::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_LobbyGetEosLobbyId
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_LobbyGetEosLobbyId final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyGetEosLobbyIdResponse            Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_LobbyGetEosLobbyId) == 0x000008, "Wrong alignment on HttpHelper_Parse_LobbyGetEosLobbyId");
static_assert(sizeof(HttpHelper_Parse_LobbyGetEosLobbyId) == 0x000028, "Wrong size on HttpHelper_Parse_LobbyGetEosLobbyId");
static_assert(offsetof(HttpHelper_Parse_LobbyGetEosLobbyId, OutData) == 0x000000, "Member 'HttpHelper_Parse_LobbyGetEosLobbyId::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyGetEosLobbyId, ResCode) == 0x000010, "Member 'HttpHelper_Parse_LobbyGetEosLobbyId::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyGetEosLobbyId, Response) == 0x000018, "Member 'HttpHelper_Parse_LobbyGetEosLobbyId::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_LobbyKeepAlive
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Parse_LobbyKeepAlive final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyKeepAliveResponse                Response;                                          // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_LobbyKeepAlive) == 0x000008, "Wrong alignment on HttpHelper_Parse_LobbyKeepAlive");
static_assert(sizeof(HttpHelper_Parse_LobbyKeepAlive) == 0x000030, "Wrong size on HttpHelper_Parse_LobbyKeepAlive");
static_assert(offsetof(HttpHelper_Parse_LobbyKeepAlive, OutData) == 0x000000, "Member 'HttpHelper_Parse_LobbyKeepAlive::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyKeepAlive, ResCode) == 0x000010, "Member 'HttpHelper_Parse_LobbyKeepAlive::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyKeepAlive, Response) == 0x000018, "Member 'HttpHelper_Parse_LobbyKeepAlive::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_LobbyRemoveLobby
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_LobbyRemoveLobby final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyRemoveLobbyResponse              Response;                                          // 0x0014(0x0001)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_LobbyRemoveLobby) == 0x000008, "Wrong alignment on HttpHelper_Parse_LobbyRemoveLobby");
static_assert(sizeof(HttpHelper_Parse_LobbyRemoveLobby) == 0x000018, "Wrong size on HttpHelper_Parse_LobbyRemoveLobby");
static_assert(offsetof(HttpHelper_Parse_LobbyRemoveLobby, OutData) == 0x000000, "Member 'HttpHelper_Parse_LobbyRemoveLobby::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyRemoveLobby, ResCode) == 0x000010, "Member 'HttpHelper_Parse_LobbyRemoveLobby::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LobbyRemoveLobby, Response) == 0x000014, "Member 'HttpHelper_Parse_LobbyRemoveLobby::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_LoginCheck
// 0x00A8 (0x00A8 - 0x0000)
struct HttpHelper_Parse_LoginCheck final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLoginCheckResponse                    Response;                                          // 0x0018(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_LoginCheck) == 0x000008, "Wrong alignment on HttpHelper_Parse_LoginCheck");
static_assert(sizeof(HttpHelper_Parse_LoginCheck) == 0x0000A8, "Wrong size on HttpHelper_Parse_LoginCheck");
static_assert(offsetof(HttpHelper_Parse_LoginCheck, OutData) == 0x000000, "Member 'HttpHelper_Parse_LoginCheck::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LoginCheck, ResCode) == 0x000010, "Member 'HttpHelper_Parse_LoginCheck::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_LoginCheck, Response) == 0x000018, "Member 'HttpHelper_Parse_LoginCheck::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MasterDataGetMaintenanceSchedule
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_MasterDataGetMaintenanceSchedule final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMasterDataGetMaintenanceScheduleResponse Response;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_MasterDataGetMaintenanceSchedule) == 0x000008, "Wrong alignment on HttpHelper_Parse_MasterDataGetMaintenanceSchedule");
static_assert(sizeof(HttpHelper_Parse_MasterDataGetMaintenanceSchedule) == 0x000018, "Wrong size on HttpHelper_Parse_MasterDataGetMaintenanceSchedule");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetMaintenanceSchedule, OutData) == 0x000000, "Member 'HttpHelper_Parse_MasterDataGetMaintenanceSchedule::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetMaintenanceSchedule, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MasterDataGetMaintenanceSchedule::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetMaintenanceSchedule, Response) == 0x000014, "Member 'HttpHelper_Parse_MasterDataGetMaintenanceSchedule::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MasterDataGetMasterData
// 0x02D8 (0x02D8 - 0x0000)
struct HttpHelper_Parse_MasterDataGetMasterData final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMasterDataGetMasterDataResponse       Response;                                          // 0x0018(0x02C0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_MasterDataGetMasterData) == 0x000008, "Wrong alignment on HttpHelper_Parse_MasterDataGetMasterData");
static_assert(sizeof(HttpHelper_Parse_MasterDataGetMasterData) == 0x0002D8, "Wrong size on HttpHelper_Parse_MasterDataGetMasterData");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetMasterData, OutData) == 0x000000, "Member 'HttpHelper_Parse_MasterDataGetMasterData::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetMasterData, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MasterDataGetMasterData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetMasterData, Response) == 0x000018, "Member 'HttpHelper_Parse_MasterDataGetMasterData::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MasterDataGetVersion
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_MasterDataGetVersion final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMasterDataGetVersionResponse          Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_MasterDataGetVersion) == 0x000008, "Wrong alignment on HttpHelper_Parse_MasterDataGetVersion");
static_assert(sizeof(HttpHelper_Parse_MasterDataGetVersion) == 0x000028, "Wrong size on HttpHelper_Parse_MasterDataGetVersion");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetVersion, OutData) == 0x000000, "Member 'HttpHelper_Parse_MasterDataGetVersion::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetVersion, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MasterDataGetVersion::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MasterDataGetVersion, Response) == 0x000018, "Member 'HttpHelper_Parse_MasterDataGetVersion::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MatchmakingDescribe
// 0x0110 (0x0110 - 0x0000)
struct HttpHelper_Parse_MatchmakingDescribe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingDescribeResponse           Response;                                          // 0x0018(0x00F8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_MatchmakingDescribe) == 0x000008, "Wrong alignment on HttpHelper_Parse_MatchmakingDescribe");
static_assert(sizeof(HttpHelper_Parse_MatchmakingDescribe) == 0x000110, "Wrong size on HttpHelper_Parse_MatchmakingDescribe");
static_assert(offsetof(HttpHelper_Parse_MatchmakingDescribe, OutData) == 0x000000, "Member 'HttpHelper_Parse_MatchmakingDescribe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingDescribe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MatchmakingDescribe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingDescribe, Response) == 0x000018, "Member 'HttpHelper_Parse_MatchmakingDescribe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MatchmakingStop
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_MatchmakingStop final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakingStopResponse               Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_MatchmakingStop) == 0x000008, "Wrong alignment on HttpHelper_Parse_MatchmakingStop");
static_assert(sizeof(HttpHelper_Parse_MatchmakingStop) == 0x000018, "Wrong size on HttpHelper_Parse_MatchmakingStop");
static_assert(offsetof(HttpHelper_Parse_MatchmakingStop, OutData) == 0x000000, "Member 'HttpHelper_Parse_MatchmakingStop::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingStop, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MatchmakingStop::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingStop, Response) == 0x000014, "Member 'HttpHelper_Parse_MatchmakingStop::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MatchmakingSubscribeFesta
// 0x00C0 (0x00C0 - 0x0000)
struct HttpHelper_Parse_MatchmakingSubscribeFesta final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingSubscribeFestaResponse     Response;                                          // 0x0018(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_MatchmakingSubscribeFesta) == 0x000008, "Wrong alignment on HttpHelper_Parse_MatchmakingSubscribeFesta");
static_assert(sizeof(HttpHelper_Parse_MatchmakingSubscribeFesta) == 0x0000C0, "Wrong size on HttpHelper_Parse_MatchmakingSubscribeFesta");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeFesta, OutData) == 0x000000, "Member 'HttpHelper_Parse_MatchmakingSubscribeFesta::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeFesta, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MatchmakingSubscribeFesta::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeFesta, Response) == 0x000018, "Member 'HttpHelper_Parse_MatchmakingSubscribeFesta::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MatchmakingSubscribeLegendCompe
// 0x00C0 (0x00C0 - 0x0000)
struct HttpHelper_Parse_MatchmakingSubscribeLegendCompe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingSubscribeLegendCompeResponse Response;                                        // 0x0018(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_MatchmakingSubscribeLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Parse_MatchmakingSubscribeLegendCompe");
static_assert(sizeof(HttpHelper_Parse_MatchmakingSubscribeLegendCompe) == 0x0000C0, "Wrong size on HttpHelper_Parse_MatchmakingSubscribeLegendCompe");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeLegendCompe, OutData) == 0x000000, "Member 'HttpHelper_Parse_MatchmakingSubscribeLegendCompe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeLegendCompe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MatchmakingSubscribeLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeLegendCompe, Response) == 0x000018, "Member 'HttpHelper_Parse_MatchmakingSubscribeLegendCompe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MatchmakingSubscribeRankMatch
// 0x00C0 (0x00C0 - 0x0000)
struct HttpHelper_Parse_MatchmakingSubscribeRankMatch final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingSubscribeRankMatchResponse Response;                                          // 0x0018(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_MatchmakingSubscribeRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Parse_MatchmakingSubscribeRankMatch");
static_assert(sizeof(HttpHelper_Parse_MatchmakingSubscribeRankMatch) == 0x0000C0, "Wrong size on HttpHelper_Parse_MatchmakingSubscribeRankMatch");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeRankMatch, OutData) == 0x000000, "Member 'HttpHelper_Parse_MatchmakingSubscribeRankMatch::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeRankMatch, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MatchmakingSubscribeRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingSubscribeRankMatch, Response) == 0x000018, "Member 'HttpHelper_Parse_MatchmakingSubscribeRankMatch::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_MatchmakingUnsubscribe
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_MatchmakingUnsubscribe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakingUnsubscribeResponse        Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_MatchmakingUnsubscribe) == 0x000008, "Wrong alignment on HttpHelper_Parse_MatchmakingUnsubscribe");
static_assert(sizeof(HttpHelper_Parse_MatchmakingUnsubscribe) == 0x000018, "Wrong size on HttpHelper_Parse_MatchmakingUnsubscribe");
static_assert(offsetof(HttpHelper_Parse_MatchmakingUnsubscribe, OutData) == 0x000000, "Member 'HttpHelper_Parse_MatchmakingUnsubscribe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingUnsubscribe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_MatchmakingUnsubscribe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_MatchmakingUnsubscribe, Response) == 0x000014, "Member 'HttpHelper_Parse_MatchmakingUnsubscribe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_OntSaveOntParticipantUser
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_OntSaveOntParticipantUser final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOntSaveOntParticipantUserResponse     Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_OntSaveOntParticipantUser) == 0x000008, "Wrong alignment on HttpHelper_Parse_OntSaveOntParticipantUser");
static_assert(sizeof(HttpHelper_Parse_OntSaveOntParticipantUser) == 0x000018, "Wrong size on HttpHelper_Parse_OntSaveOntParticipantUser");
static_assert(offsetof(HttpHelper_Parse_OntSaveOntParticipantUser, OutData) == 0x000000, "Member 'HttpHelper_Parse_OntSaveOntParticipantUser::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_OntSaveOntParticipantUser, ResCode) == 0x000010, "Member 'HttpHelper_Parse_OntSaveOntParticipantUser::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_OntSaveOntParticipantUser, Response) == 0x000014, "Member 'HttpHelper_Parse_OntSaveOntParticipantUser::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_OperationSaveAutoReport
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_OperationSaveAutoReport final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOperationSaveAutoReportResponse       Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_OperationSaveAutoReport) == 0x000008, "Wrong alignment on HttpHelper_Parse_OperationSaveAutoReport");
static_assert(sizeof(HttpHelper_Parse_OperationSaveAutoReport) == 0x000028, "Wrong size on HttpHelper_Parse_OperationSaveAutoReport");
static_assert(offsetof(HttpHelper_Parse_OperationSaveAutoReport, OutData) == 0x000000, "Member 'HttpHelper_Parse_OperationSaveAutoReport::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_OperationSaveAutoReport, ResCode) == 0x000010, "Member 'HttpHelper_Parse_OperationSaveAutoReport::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_OperationSaveAutoReport, Response) == 0x000018, "Member 'HttpHelper_Parse_OperationSaveAutoReport::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_OperationSaveOperatorReport
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_OperationSaveOperatorReport final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOperationSaveOperatorReportResponse   Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_OperationSaveOperatorReport) == 0x000008, "Wrong alignment on HttpHelper_Parse_OperationSaveOperatorReport");
static_assert(sizeof(HttpHelper_Parse_OperationSaveOperatorReport) == 0x000028, "Wrong size on HttpHelper_Parse_OperationSaveOperatorReport");
static_assert(offsetof(HttpHelper_Parse_OperationSaveOperatorReport, OutData) == 0x000000, "Member 'HttpHelper_Parse_OperationSaveOperatorReport::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_OperationSaveOperatorReport, ResCode) == 0x000010, "Member 'HttpHelper_Parse_OperationSaveOperatorReport::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_OperationSaveOperatorReport, Response) == 0x000018, "Member 'HttpHelper_Parse_OperationSaveOperatorReport::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetFriendRankingFestaPoint
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_RankingGetFriendRankingFestaPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetFriendRankingFestaPointResponse Response;                                      // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetFriendRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetFriendRankingFestaPoint");
static_assert(sizeof(HttpHelper_Parse_RankingGetFriendRankingFestaPoint) == 0x000028, "Wrong size on HttpHelper_Parse_RankingGetFriendRankingFestaPoint");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingFestaPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetFriendRankingFestaPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingFestaPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetFriendRankingFestaPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingFestaPoint, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetFriendRankingFestaPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetFriendRankingLegendCompe
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_RankingGetFriendRankingLegendCompe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetFriendRankingLegendCompeResponse Response;                                     // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetFriendRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetFriendRankingLegendCompe");
static_assert(sizeof(HttpHelper_Parse_RankingGetFriendRankingLegendCompe) == 0x000028, "Wrong size on HttpHelper_Parse_RankingGetFriendRankingLegendCompe");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingLegendCompe, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetFriendRankingLegendCompe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingLegendCompe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetFriendRankingLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingLegendCompe, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetFriendRankingLegendCompe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetFriendRankingRankMatch
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_RankingGetFriendRankingRankMatch final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetFriendRankingRankMatchResponse Response;                                       // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetFriendRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetFriendRankingRankMatch");
static_assert(sizeof(HttpHelper_Parse_RankingGetFriendRankingRankMatch) == 0x000028, "Wrong size on HttpHelper_Parse_RankingGetFriendRankingRankMatch");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingRankMatch, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetFriendRankingRankMatch::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingRankMatch, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetFriendRankingRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetFriendRankingRankMatch, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetFriendRankingRankMatch::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingFestaPoint
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Parse_RankingGetMyRankingFestaPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingFestaPointResponse Response;                                          // 0x0018(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetMyRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetMyRankingFestaPoint");
static_assert(sizeof(HttpHelper_Parse_RankingGetMyRankingFestaPoint) == 0x0004C8, "Wrong size on HttpHelper_Parse_RankingGetMyRankingFestaPoint");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingFestaPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetMyRankingFestaPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingFestaPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetMyRankingFestaPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingFestaPoint, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetMyRankingFestaPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingLegendCompe
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Parse_RankingGetMyRankingLegendCompe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingLegendCompeResponse Response;                                         // 0x0018(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetMyRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetMyRankingLegendCompe");
static_assert(sizeof(HttpHelper_Parse_RankingGetMyRankingLegendCompe) == 0x0004C8, "Wrong size on HttpHelper_Parse_RankingGetMyRankingLegendCompe");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingLegendCompe, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetMyRankingLegendCompe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingLegendCompe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetMyRankingLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingLegendCompe, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetMyRankingLegendCompe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingRankMatch
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Parse_RankingGetMyRankingRankMatch final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingRankMatchResponse  Response;                                          // 0x0018(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetMyRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetMyRankingRankMatch");
static_assert(sizeof(HttpHelper_Parse_RankingGetMyRankingRankMatch) == 0x0004C8, "Wrong size on HttpHelper_Parse_RankingGetMyRankingRankMatch");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingRankMatch, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetMyRankingRankMatch::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingRankMatch, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetMyRankingRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingRankMatch, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetMyRankingRankMatch::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetMyRankingTimeTrial
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Parse_RankingGetMyRankingTimeTrial final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingTimeTrialResponse  Response;                                          // 0x0018(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetMyRankingTimeTrial) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetMyRankingTimeTrial");
static_assert(sizeof(HttpHelper_Parse_RankingGetMyRankingTimeTrial) == 0x0004C8, "Wrong size on HttpHelper_Parse_RankingGetMyRankingTimeTrial");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingTimeTrial, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetMyRankingTimeTrial::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingTimeTrial, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetMyRankingTimeTrial::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetMyRankingTimeTrial, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetMyRankingTimeTrial::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetRankingFestaPoint
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Parse_RankingGetRankingFestaPoint final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingFestaPointResponse   Response;                                          // 0x0018(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetRankingFestaPoint");
static_assert(sizeof(HttpHelper_Parse_RankingGetRankingFestaPoint) == 0x000038, "Wrong size on HttpHelper_Parse_RankingGetRankingFestaPoint");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingFestaPoint, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetRankingFestaPoint::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingFestaPoint, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetRankingFestaPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingFestaPoint, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetRankingFestaPoint::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetRankingLegendCompe
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Parse_RankingGetRankingLegendCompe final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingLegendCompeResponse  Response;                                          // 0x0018(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetRankingLegendCompe");
static_assert(sizeof(HttpHelper_Parse_RankingGetRankingLegendCompe) == 0x000038, "Wrong size on HttpHelper_Parse_RankingGetRankingLegendCompe");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingLegendCompe, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetRankingLegendCompe::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingLegendCompe, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetRankingLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingLegendCompe, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetRankingLegendCompe::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetRankingRankMatch
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Parse_RankingGetRankingRankMatch final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingRankMatchResponse    Response;                                          // 0x0018(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetRankingRankMatch");
static_assert(sizeof(HttpHelper_Parse_RankingGetRankingRankMatch) == 0x000038, "Wrong size on HttpHelper_Parse_RankingGetRankingRankMatch");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingRankMatch, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetRankingRankMatch::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingRankMatch, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetRankingRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingRankMatch, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetRankingRankMatch::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RankingGetRankingTimeTrial
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Parse_RankingGetRankingTimeTrial final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingTimeTrialResponse    Response;                                          // 0x0018(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_RankingGetRankingTimeTrial) == 0x000008, "Wrong alignment on HttpHelper_Parse_RankingGetRankingTimeTrial");
static_assert(sizeof(HttpHelper_Parse_RankingGetRankingTimeTrial) == 0x000048, "Wrong size on HttpHelper_Parse_RankingGetRankingTimeTrial");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingTimeTrial, OutData) == 0x000000, "Member 'HttpHelper_Parse_RankingGetRankingTimeTrial::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingTimeTrial, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RankingGetRankingTimeTrial::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RankingGetRankingTimeTrial, Response) == 0x000018, "Member 'HttpHelper_Parse_RankingGetRankingTimeTrial::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_ResultSaveFestaResult
// 0x0170 (0x0170 - 0x0000)
struct HttpHelper_Parse_ResultSaveFestaResult final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveFestaResultResponse         Response;                                          // 0x0018(0x0158)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_ResultSaveFestaResult) == 0x000008, "Wrong alignment on HttpHelper_Parse_ResultSaveFestaResult");
static_assert(sizeof(HttpHelper_Parse_ResultSaveFestaResult) == 0x000170, "Wrong size on HttpHelper_Parse_ResultSaveFestaResult");
static_assert(offsetof(HttpHelper_Parse_ResultSaveFestaResult, OutData) == 0x000000, "Member 'HttpHelper_Parse_ResultSaveFestaResult::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveFestaResult, ResCode) == 0x000010, "Member 'HttpHelper_Parse_ResultSaveFestaResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveFestaResult, Response) == 0x000018, "Member 'HttpHelper_Parse_ResultSaveFestaResult::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_ResultSaveLegendCompeResult
// 0x0110 (0x0110 - 0x0000)
struct HttpHelper_Parse_ResultSaveLegendCompeResult final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveLegendCompeResultResponse   Response;                                          // 0x0018(0x00F8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_ResultSaveLegendCompeResult) == 0x000008, "Wrong alignment on HttpHelper_Parse_ResultSaveLegendCompeResult");
static_assert(sizeof(HttpHelper_Parse_ResultSaveLegendCompeResult) == 0x000110, "Wrong size on HttpHelper_Parse_ResultSaveLegendCompeResult");
static_assert(offsetof(HttpHelper_Parse_ResultSaveLegendCompeResult, OutData) == 0x000000, "Member 'HttpHelper_Parse_ResultSaveLegendCompeResult::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveLegendCompeResult, ResCode) == 0x000010, "Member 'HttpHelper_Parse_ResultSaveLegendCompeResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveLegendCompeResult, Response) == 0x000018, "Member 'HttpHelper_Parse_ResultSaveLegendCompeResult::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_ResultSaveRankMatchResult
// 0x0110 (0x0110 - 0x0000)
struct HttpHelper_Parse_ResultSaveRankMatchResult final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveRankMatchResultResponse     Response;                                          // 0x0018(0x00F8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_ResultSaveRankMatchResult) == 0x000008, "Wrong alignment on HttpHelper_Parse_ResultSaveRankMatchResult");
static_assert(sizeof(HttpHelper_Parse_ResultSaveRankMatchResult) == 0x000110, "Wrong size on HttpHelper_Parse_ResultSaveRankMatchResult");
static_assert(offsetof(HttpHelper_Parse_ResultSaveRankMatchResult, OutData) == 0x000000, "Member 'HttpHelper_Parse_ResultSaveRankMatchResult::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveRankMatchResult, ResCode) == 0x000010, "Member 'HttpHelper_Parse_ResultSaveRankMatchResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveRankMatchResult, Response) == 0x000018, "Member 'HttpHelper_Parse_ResultSaveRankMatchResult::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_ResultSaveTimeTrialResult
// 0x0118 (0x0118 - 0x0000)
struct HttpHelper_Parse_ResultSaveTimeTrialResult final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveTimeTrialResultResponse     Response;                                          // 0x0018(0x0100)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_ResultSaveTimeTrialResult) == 0x000008, "Wrong alignment on HttpHelper_Parse_ResultSaveTimeTrialResult");
static_assert(sizeof(HttpHelper_Parse_ResultSaveTimeTrialResult) == 0x000118, "Wrong size on HttpHelper_Parse_ResultSaveTimeTrialResult");
static_assert(offsetof(HttpHelper_Parse_ResultSaveTimeTrialResult, OutData) == 0x000000, "Member 'HttpHelper_Parse_ResultSaveTimeTrialResult::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveTimeTrialResult, ResCode) == 0x000010, "Member 'HttpHelper_Parse_ResultSaveTimeTrialResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_ResultSaveTimeTrialResult, Response) == 0x000018, "Member 'HttpHelper_Parse_ResultSaveTimeTrialResult::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_RomCheckRomVersion
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_RomCheckRomVersion final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRomCheckRomVersionResponse            Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_RomCheckRomVersion) == 0x000008, "Wrong alignment on HttpHelper_Parse_RomCheckRomVersion");
static_assert(sizeof(HttpHelper_Parse_RomCheckRomVersion) == 0x000018, "Wrong size on HttpHelper_Parse_RomCheckRomVersion");
static_assert(offsetof(HttpHelper_Parse_RomCheckRomVersion, OutData) == 0x000000, "Member 'HttpHelper_Parse_RomCheckRomVersion::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RomCheckRomVersion, ResCode) == 0x000010, "Member 'HttpHelper_Parse_RomCheckRomVersion::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_RomCheckRomVersion, Response) == 0x000014, "Member 'HttpHelper_Parse_RomCheckRomVersion::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_SamplePart1
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Parse_SamplePart1 final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSamplePart1Response                   Response;                                          // 0x0018(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_SamplePart1) == 0x000008, "Wrong alignment on HttpHelper_Parse_SamplePart1");
static_assert(sizeof(HttpHelper_Parse_SamplePart1) == 0x000040, "Wrong size on HttpHelper_Parse_SamplePart1");
static_assert(offsetof(HttpHelper_Parse_SamplePart1, OutData) == 0x000000, "Member 'HttpHelper_Parse_SamplePart1::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_SamplePart1, ResCode) == 0x000010, "Member 'HttpHelper_Parse_SamplePart1::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_SamplePart1, Response) == 0x000018, "Member 'HttpHelper_Parse_SamplePart1::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_SessionKeepalive
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Parse_SessionKeepalive final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionKeepaliveResponse              Response;                                          // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_SessionKeepalive) == 0x000008, "Wrong alignment on HttpHelper_Parse_SessionKeepalive");
static_assert(sizeof(HttpHelper_Parse_SessionKeepalive) == 0x000030, "Wrong size on HttpHelper_Parse_SessionKeepalive");
static_assert(offsetof(HttpHelper_Parse_SessionKeepalive, OutData) == 0x000000, "Member 'HttpHelper_Parse_SessionKeepalive::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_SessionKeepalive, ResCode) == 0x000010, "Member 'HttpHelper_Parse_SessionKeepalive::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_SessionKeepalive, Response) == 0x000018, "Member 'HttpHelper_Parse_SessionKeepalive::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_StartSaveFestaStart
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Parse_StartSaveFestaStart final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStartSaveFestaStartResponse           Response;                                          // 0x0018(0x0058)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_StartSaveFestaStart) == 0x000008, "Wrong alignment on HttpHelper_Parse_StartSaveFestaStart");
static_assert(sizeof(HttpHelper_Parse_StartSaveFestaStart) == 0x000070, "Wrong size on HttpHelper_Parse_StartSaveFestaStart");
static_assert(offsetof(HttpHelper_Parse_StartSaveFestaStart, OutData) == 0x000000, "Member 'HttpHelper_Parse_StartSaveFestaStart::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_StartSaveFestaStart, ResCode) == 0x000010, "Member 'HttpHelper_Parse_StartSaveFestaStart::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_StartSaveFestaStart, Response) == 0x000018, "Member 'HttpHelper_Parse_StartSaveFestaStart::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_StartSaveLegendCompeStart
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_StartSaveLegendCompeStart final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStartSaveLegendCompeStartResponse     Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_StartSaveLegendCompeStart) == 0x000008, "Wrong alignment on HttpHelper_Parse_StartSaveLegendCompeStart");
static_assert(sizeof(HttpHelper_Parse_StartSaveLegendCompeStart) == 0x000028, "Wrong size on HttpHelper_Parse_StartSaveLegendCompeStart");
static_assert(offsetof(HttpHelper_Parse_StartSaveLegendCompeStart, OutData) == 0x000000, "Member 'HttpHelper_Parse_StartSaveLegendCompeStart::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_StartSaveLegendCompeStart, ResCode) == 0x000010, "Member 'HttpHelper_Parse_StartSaveLegendCompeStart::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_StartSaveLegendCompeStart, Response) == 0x000018, "Member 'HttpHelper_Parse_StartSaveLegendCompeStart::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_StartSaveRankMatchStart
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_StartSaveRankMatchStart final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStartSaveRankMatchStartResponse       Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_StartSaveRankMatchStart) == 0x000008, "Wrong alignment on HttpHelper_Parse_StartSaveRankMatchStart");
static_assert(sizeof(HttpHelper_Parse_StartSaveRankMatchStart) == 0x000028, "Wrong size on HttpHelper_Parse_StartSaveRankMatchStart");
static_assert(offsetof(HttpHelper_Parse_StartSaveRankMatchStart, OutData) == 0x000000, "Member 'HttpHelper_Parse_StartSaveRankMatchStart::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_StartSaveRankMatchStart, ResCode) == 0x000010, "Member 'HttpHelper_Parse_StartSaveRankMatchStart::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_StartSaveRankMatchStart, Response) == 0x000018, "Member 'HttpHelper_Parse_StartSaveRankMatchStart::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserGetData
// 0x0118 (0x0118 - 0x0000)
struct HttpHelper_Parse_UserGetData final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetDataResponse                   Response;                                          // 0x0018(0x0100)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserGetData) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserGetData");
static_assert(sizeof(HttpHelper_Parse_UserGetData) == 0x000118, "Wrong size on HttpHelper_Parse_UserGetData");
static_assert(offsetof(HttpHelper_Parse_UserGetData, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserGetData::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetData, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserGetData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetData, Response) == 0x000018, "Member 'HttpHelper_Parse_UserGetData::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserGetPartsData
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_UserGetPartsData final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserGetPartsDataResponse              Response;                                          // 0x0014(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserGetPartsData) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserGetPartsData");
static_assert(sizeof(HttpHelper_Parse_UserGetPartsData) == 0x000018, "Wrong size on HttpHelper_Parse_UserGetPartsData");
static_assert(offsetof(HttpHelper_Parse_UserGetPartsData, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserGetPartsData::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetPartsData, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserGetPartsData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetPartsData, Response) == 0x000014, "Member 'HttpHelper_Parse_UserGetPartsData::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserGetUserIdsByPuid
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_UserGetUserIdsByPuid final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserIdsByPuidResponse          Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserGetUserIdsByPuid) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserGetUserIdsByPuid");
static_assert(sizeof(HttpHelper_Parse_UserGetUserIdsByPuid) == 0x000028, "Wrong size on HttpHelper_Parse_UserGetUserIdsByPuid");
static_assert(offsetof(HttpHelper_Parse_UserGetUserIdsByPuid, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserGetUserIdsByPuid::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserIdsByPuid, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserGetUserIdsByPuid::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserIdsByPuid, Response) == 0x000018, "Member 'HttpHelper_Parse_UserGetUserIdsByPuid::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserGetUserIdsByUid
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_UserGetUserIdsByUid final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserIdsByUidResponse           Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserGetUserIdsByUid) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserGetUserIdsByUid");
static_assert(sizeof(HttpHelper_Parse_UserGetUserIdsByUid) == 0x000028, "Wrong size on HttpHelper_Parse_UserGetUserIdsByUid");
static_assert(offsetof(HttpHelper_Parse_UserGetUserIdsByUid, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserGetUserIdsByUid::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserIdsByUid, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserGetUserIdsByUid::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserIdsByUid, Response) == 0x000018, "Member 'HttpHelper_Parse_UserGetUserIdsByUid::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserGetUserNetworkSettings
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_UserGetUserNetworkSettings final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserNetworkSettingsResponse    Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserGetUserNetworkSettings) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserGetUserNetworkSettings");
static_assert(sizeof(HttpHelper_Parse_UserGetUserNetworkSettings) == 0x000028, "Wrong size on HttpHelper_Parse_UserGetUserNetworkSettings");
static_assert(offsetof(HttpHelper_Parse_UserGetUserNetworkSettings, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserGetUserNetworkSettings::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserNetworkSettings, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserGetUserNetworkSettings::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserNetworkSettings, Response) == 0x000018, "Member 'HttpHelper_Parse_UserGetUserNetworkSettings::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserGetUserSearch
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Parse_UserGetUserSearch final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserSearchResponse             Response;                                          // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserGetUserSearch) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserGetUserSearch");
static_assert(sizeof(HttpHelper_Parse_UserGetUserSearch) == 0x000028, "Wrong size on HttpHelper_Parse_UserGetUserSearch");
static_assert(offsetof(HttpHelper_Parse_UserGetUserSearch, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserGetUserSearch::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserSearch, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserGetUserSearch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserGetUserSearch, Response) == 0x000018, "Member 'HttpHelper_Parse_UserGetUserSearch::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserNintendoSwitchOnlineCheck
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_UserNintendoSwitchOnlineCheck final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserNintendoSwitchOnlineCheckResponse Response;                                          // 0x0014(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserNintendoSwitchOnlineCheck) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserNintendoSwitchOnlineCheck");
static_assert(sizeof(HttpHelper_Parse_UserNintendoSwitchOnlineCheck) == 0x000018, "Wrong size on HttpHelper_Parse_UserNintendoSwitchOnlineCheck");
static_assert(offsetof(HttpHelper_Parse_UserNintendoSwitchOnlineCheck, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserNintendoSwitchOnlineCheck::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserNintendoSwitchOnlineCheck, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserNintendoSwitchOnlineCheck::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserNintendoSwitchOnlineCheck, Response) == 0x000014, "Member 'HttpHelper_Parse_UserNintendoSwitchOnlineCheck::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserSavePaidDlcOwnerships
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Parse_UserSavePaidDlcOwnerships final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserSavePaidDlcOwnershipsResponse     Response;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Parse_UserSavePaidDlcOwnerships) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserSavePaidDlcOwnerships");
static_assert(sizeof(HttpHelper_Parse_UserSavePaidDlcOwnerships) == 0x000018, "Wrong size on HttpHelper_Parse_UserSavePaidDlcOwnerships");
static_assert(offsetof(HttpHelper_Parse_UserSavePaidDlcOwnerships, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserSavePaidDlcOwnerships::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserSavePaidDlcOwnerships, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserSavePaidDlcOwnerships::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserSavePaidDlcOwnerships, Response) == 0x000014, "Member 'HttpHelper_Parse_UserSavePaidDlcOwnerships::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.Parse_UserSaveUserNetworkSettings
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Parse_UserSaveUserNetworkSettings final
{
public:
	class FString                                 OutData;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResCode;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserSaveUserNetworkSettingsResponse   Response;                                          // 0x0018(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Parse_UserSaveUserNetworkSettings) == 0x000008, "Wrong alignment on HttpHelper_Parse_UserSaveUserNetworkSettings");
static_assert(sizeof(HttpHelper_Parse_UserSaveUserNetworkSettings) == 0x000048, "Wrong size on HttpHelper_Parse_UserSaveUserNetworkSettings");
static_assert(offsetof(HttpHelper_Parse_UserSaveUserNetworkSettings, OutData) == 0x000000, "Member 'HttpHelper_Parse_UserSaveUserNetworkSettings::OutData' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserSaveUserNetworkSettings, ResCode) == 0x000010, "Member 'HttpHelper_Parse_UserSaveUserNetworkSettings::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Parse_UserSaveUserNetworkSettings, Response) == 0x000018, "Member 'HttpHelper_Parse_UserSaveUserNetworkSettings::Response' has a wrong offset!");

// Function UnionSystem.HttpHelper.QueryServerTime
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_QueryServerTime final
{
public:
	TDelegate<void(const struct FDateTime& Timestamp, bool Error)> OnComplete;                       // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_QueryServerTime) == 0x000004, "Wrong alignment on HttpHelper_QueryServerTime");
static_assert(sizeof(HttpHelper_QueryServerTime) == 0x000010, "Wrong size on HttpHelper_QueryServerTime");
static_assert(offsetof(HttpHelper_QueryServerTime, OnComplete) == 0x000000, "Member 'HttpHelper_QueryServerTime::OnComplete' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_CntReplayGetSignedUrl
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_CntReplayGetSignedUrl final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCntReplayGetSignedUrlResponse         Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_CntReplayGetSignedUrl) == 0x000008, "Wrong alignment on HttpHelper_Receive_CntReplayGetSignedUrl");
static_assert(sizeof(HttpHelper_Receive_CntReplayGetSignedUrl) == 0x000028, "Wrong size on HttpHelper_Receive_CntReplayGetSignedUrl");
static_assert(offsetof(HttpHelper_Receive_CntReplayGetSignedUrl, Handle) == 0x000000, "Member 'HttpHelper_Receive_CntReplayGetSignedUrl::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CntReplayGetSignedUrl, OutError) == 0x000004, "Member 'HttpHelper_Receive_CntReplayGetSignedUrl::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CntReplayGetSignedUrl, ResCode) == 0x000008, "Member 'HttpHelper_Receive_CntReplayGetSignedUrl::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CntReplayGetSignedUrl, Response) == 0x000010, "Member 'HttpHelper_Receive_CntReplayGetSignedUrl::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CntReplayGetSignedUrl, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_CntReplayGetSignedUrl::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_CompensationGetCompensations
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_CompensationGetCompensations final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCompensationGetCompensationsResponse  Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_CompensationGetCompensations) == 0x000008, "Wrong alignment on HttpHelper_Receive_CompensationGetCompensations");
static_assert(sizeof(HttpHelper_Receive_CompensationGetCompensations) == 0x000028, "Wrong size on HttpHelper_Receive_CompensationGetCompensations");
static_assert(offsetof(HttpHelper_Receive_CompensationGetCompensations, Handle) == 0x000000, "Member 'HttpHelper_Receive_CompensationGetCompensations::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CompensationGetCompensations, OutError) == 0x000004, "Member 'HttpHelper_Receive_CompensationGetCompensations::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CompensationGetCompensations, ResCode) == 0x000008, "Member 'HttpHelper_Receive_CompensationGetCompensations::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CompensationGetCompensations, Response) == 0x000010, "Member 'HttpHelper_Receive_CompensationGetCompensations::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_CompensationGetCompensations, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_CompensationGetCompensations::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_DebugChangeFairPlayPoint
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Receive_DebugChangeFairPlayPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDebugChangeFairPlayPointResponse      Response;                                          // 0x000C(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_DebugChangeFairPlayPoint) == 0x000004, "Wrong alignment on HttpHelper_Receive_DebugChangeFairPlayPoint");
static_assert(sizeof(HttpHelper_Receive_DebugChangeFairPlayPoint) == 0x000014, "Wrong size on HttpHelper_Receive_DebugChangeFairPlayPoint");
static_assert(offsetof(HttpHelper_Receive_DebugChangeFairPlayPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_DebugChangeFairPlayPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeFairPlayPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_DebugChangeFairPlayPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeFairPlayPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_DebugChangeFairPlayPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeFairPlayPoint, Response) == 0x00000C, "Member 'HttpHelper_Receive_DebugChangeFairPlayPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeFairPlayPoint, ReturnValue) == 0x000010, "Member 'HttpHelper_Receive_DebugChangeFairPlayPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_DebugChangeRankMatchRate
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Receive_DebugChangeRankMatchRate final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDebugChangeRankMatchRateResponse      Response;                                          // 0x000C(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_DebugChangeRankMatchRate) == 0x000004, "Wrong alignment on HttpHelper_Receive_DebugChangeRankMatchRate");
static_assert(sizeof(HttpHelper_Receive_DebugChangeRankMatchRate) == 0x000014, "Wrong size on HttpHelper_Receive_DebugChangeRankMatchRate");
static_assert(offsetof(HttpHelper_Receive_DebugChangeRankMatchRate, Handle) == 0x000000, "Member 'HttpHelper_Receive_DebugChangeRankMatchRate::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeRankMatchRate, OutError) == 0x000004, "Member 'HttpHelper_Receive_DebugChangeRankMatchRate::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeRankMatchRate, ResCode) == 0x000008, "Member 'HttpHelper_Receive_DebugChangeRankMatchRate::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeRankMatchRate, Response) == 0x00000C, "Member 'HttpHelper_Receive_DebugChangeRankMatchRate::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugChangeRankMatchRate, ReturnValue) == 0x000010, "Member 'HttpHelper_Receive_DebugChangeRankMatchRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_DebugConnectTest
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Receive_DebugConnectTest final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugConnectTestResponse              Response;                                          // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_DebugConnectTest) == 0x000008, "Wrong alignment on HttpHelper_Receive_DebugConnectTest");
static_assert(sizeof(HttpHelper_Receive_DebugConnectTest) == 0x000030, "Wrong size on HttpHelper_Receive_DebugConnectTest");
static_assert(offsetof(HttpHelper_Receive_DebugConnectTest, Handle) == 0x000000, "Member 'HttpHelper_Receive_DebugConnectTest::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugConnectTest, OutError) == 0x000004, "Member 'HttpHelper_Receive_DebugConnectTest::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugConnectTest, ResCode) == 0x000008, "Member 'HttpHelper_Receive_DebugConnectTest::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugConnectTest, Response) == 0x000010, "Member 'HttpHelper_Receive_DebugConnectTest::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugConnectTest, ReturnValue) == 0x000028, "Member 'HttpHelper_Receive_DebugConnectTest::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_DebugMatchmakingSubscribeFesta
// 0x00B8 (0x00B8 - 0x0000)
struct HttpHelper_Receive_DebugMatchmakingSubscribeFesta final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMatchmakingSubscribeFestaResponse Response;                                         // 0x0010(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta) == 0x000008, "Wrong alignment on HttpHelper_Receive_DebugMatchmakingSubscribeFesta");
static_assert(sizeof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta) == 0x0000B8, "Wrong size on HttpHelper_Receive_DebugMatchmakingSubscribeFesta");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta, Handle) == 0x000000, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeFesta::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta, OutError) == 0x000004, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeFesta::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta, ResCode) == 0x000008, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeFesta::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta, Response) == 0x000010, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeFesta::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeFesta, ReturnValue) == 0x0000B0, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeFesta::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_DebugMatchmakingSubscribeLegendCompe
// 0x00B8 (0x00B8 - 0x0000)
struct HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMatchmakingSubscribeLegendCompeResponse Response;                                   // 0x0010(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe");
static_assert(sizeof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe) == 0x0000B8, "Wrong size on HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe, Handle) == 0x000000, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe, OutError) == 0x000004, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe, Response) == 0x000010, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe, ReturnValue) == 0x0000B0, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_DebugMatchmakingSubscribeRankMatch
// 0x00B8 (0x00B8 - 0x0000)
struct HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMatchmakingSubscribeRankMatchResponse Response;                                     // 0x0010(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch");
static_assert(sizeof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch) == 0x0000B8, "Wrong size on HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch, Handle) == 0x000000, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch, OutError) == 0x000004, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch, ResCode) == 0x000008, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch, Response) == 0x000010, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch, ReturnValue) == 0x0000B0, "Member 'HttpHelper_Receive_DebugMatchmakingSubscribeRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FairPointAddFairPoint
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_FairPointAddFairPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFairPointAddFairPointResponse         Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FairPointAddFairPoint) == 0x000004, "Wrong alignment on HttpHelper_Receive_FairPointAddFairPoint");
static_assert(sizeof(HttpHelper_Receive_FairPointAddFairPoint) == 0x000010, "Wrong size on HttpHelper_Receive_FairPointAddFairPoint");
static_assert(offsetof(HttpHelper_Receive_FairPointAddFairPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_FairPointAddFairPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointAddFairPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_FairPointAddFairPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointAddFairPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FairPointAddFairPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointAddFairPoint, Response) == 0x00000C, "Member 'HttpHelper_Receive_FairPointAddFairPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointAddFairPoint, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_FairPointAddFairPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FairPointCheckFairPoint
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Receive_FairPointCheckFairPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFairPointCheckFairPointResponse       Response;                                          // 0x0010(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FairPointCheckFairPoint) == 0x000008, "Wrong alignment on HttpHelper_Receive_FairPointCheckFairPoint");
static_assert(sizeof(HttpHelper_Receive_FairPointCheckFairPoint) == 0x000038, "Wrong size on HttpHelper_Receive_FairPointCheckFairPoint");
static_assert(offsetof(HttpHelper_Receive_FairPointCheckFairPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_FairPointCheckFairPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointCheckFairPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_FairPointCheckFairPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointCheckFairPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FairPointCheckFairPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointCheckFairPoint, Response) == 0x000010, "Member 'HttpHelper_Receive_FairPointCheckFairPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointCheckFairPoint, ReturnValue) == 0x000030, "Member 'HttpHelper_Receive_FairPointCheckFairPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FairPointSubFairPoint
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_FairPointSubFairPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFairPointSubFairPointResponse         Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FairPointSubFairPoint) == 0x000004, "Wrong alignment on HttpHelper_Receive_FairPointSubFairPoint");
static_assert(sizeof(HttpHelper_Receive_FairPointSubFairPoint) == 0x000010, "Wrong size on HttpHelper_Receive_FairPointSubFairPoint");
static_assert(offsetof(HttpHelper_Receive_FairPointSubFairPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_FairPointSubFairPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointSubFairPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_FairPointSubFairPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointSubFairPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FairPointSubFairPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointSubFairPoint, Response) == 0x00000C, "Member 'HttpHelper_Receive_FairPointSubFairPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FairPointSubFairPoint, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_FairPointSubFairPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FestaCheckFestaReward
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Receive_FestaCheckFestaReward final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaCheckFestaRewardResponse         Response;                                          // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FestaCheckFestaReward) == 0x000008, "Wrong alignment on HttpHelper_Receive_FestaCheckFestaReward");
static_assert(sizeof(HttpHelper_Receive_FestaCheckFestaReward) == 0x000030, "Wrong size on HttpHelper_Receive_FestaCheckFestaReward");
static_assert(offsetof(HttpHelper_Receive_FestaCheckFestaReward, Handle) == 0x000000, "Member 'HttpHelper_Receive_FestaCheckFestaReward::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaCheckFestaReward, OutError) == 0x000004, "Member 'HttpHelper_Receive_FestaCheckFestaReward::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaCheckFestaReward, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FestaCheckFestaReward::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaCheckFestaReward, Response) == 0x000010, "Member 'HttpHelper_Receive_FestaCheckFestaReward::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaCheckFestaReward, ReturnValue) == 0x000028, "Member 'HttpHelper_Receive_FestaCheckFestaReward::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FestaFestaTop
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Receive_FestaFestaTop final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaFestaTopResponse                 Response;                                          // 0x0010(0x0048)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FestaFestaTop) == 0x000008, "Wrong alignment on HttpHelper_Receive_FestaFestaTop");
static_assert(sizeof(HttpHelper_Receive_FestaFestaTop) == 0x000060, "Wrong size on HttpHelper_Receive_FestaFestaTop");
static_assert(offsetof(HttpHelper_Receive_FestaFestaTop, Handle) == 0x000000, "Member 'HttpHelper_Receive_FestaFestaTop::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaFestaTop, OutError) == 0x000004, "Member 'HttpHelper_Receive_FestaFestaTop::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaFestaTop, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FestaFestaTop::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaFestaTop, Response) == 0x000010, "Member 'HttpHelper_Receive_FestaFestaTop::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FestaFestaTop, ReturnValue) == 0x000058, "Member 'HttpHelper_Receive_FestaFestaTop::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendAcceptFriend
// 0x0480 (0x0480 - 0x0000)
struct HttpHelper_Receive_FriendAcceptFriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendAcceptFriendResponse            Response;                                          // 0x0010(0x0468)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0478(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendAcceptFriend) == 0x000008, "Wrong alignment on HttpHelper_Receive_FriendAcceptFriend");
static_assert(sizeof(HttpHelper_Receive_FriendAcceptFriend) == 0x000480, "Wrong size on HttpHelper_Receive_FriendAcceptFriend");
static_assert(offsetof(HttpHelper_Receive_FriendAcceptFriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendAcceptFriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendAcceptFriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendAcceptFriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendAcceptFriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendAcceptFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendAcceptFriend, Response) == 0x000010, "Member 'HttpHelper_Receive_FriendAcceptFriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendAcceptFriend, ReturnValue) == 0x000478, "Member 'HttpHelper_Receive_FriendAcceptFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendApplyFriend
// 0x0078 (0x0078 - 0x0000)
struct HttpHelper_Receive_FriendApplyFriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendApplyFriendResponse             Response;                                          // 0x0010(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendApplyFriend) == 0x000008, "Wrong alignment on HttpHelper_Receive_FriendApplyFriend");
static_assert(sizeof(HttpHelper_Receive_FriendApplyFriend) == 0x000078, "Wrong size on HttpHelper_Receive_FriendApplyFriend");
static_assert(offsetof(HttpHelper_Receive_FriendApplyFriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendApplyFriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendApplyFriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendApplyFriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendApplyFriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendApplyFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendApplyFriend, Response) == 0x000010, "Member 'HttpHelper_Receive_FriendApplyFriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendApplyFriend, ReturnValue) == 0x000070, "Member 'HttpHelper_Receive_FriendApplyFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendCancelFriend
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_FriendCancelFriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendCancelFriendResponse            Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendCancelFriend) == 0x000004, "Wrong alignment on HttpHelper_Receive_FriendCancelFriend");
static_assert(sizeof(HttpHelper_Receive_FriendCancelFriend) == 0x000010, "Wrong size on HttpHelper_Receive_FriendCancelFriend");
static_assert(offsetof(HttpHelper_Receive_FriendCancelFriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendCancelFriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendCancelFriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendCancelFriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendCancelFriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendCancelFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendCancelFriend, Response) == 0x00000C, "Member 'HttpHelper_Receive_FriendCancelFriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendCancelFriend, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_FriendCancelFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendGetFriendLastDate
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_FriendGetFriendLastDate final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendGetFriendLastDateResponse       Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendGetFriendLastDate) == 0x000008, "Wrong alignment on HttpHelper_Receive_FriendGetFriendLastDate");
static_assert(sizeof(HttpHelper_Receive_FriendGetFriendLastDate) == 0x000028, "Wrong size on HttpHelper_Receive_FriendGetFriendLastDate");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendLastDate, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendGetFriendLastDate::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendLastDate, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendGetFriendLastDate::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendLastDate, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendGetFriendLastDate::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendLastDate, Response) == 0x000010, "Member 'HttpHelper_Receive_FriendGetFriendLastDate::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendLastDate, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_FriendGetFriendLastDate::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendGetFriendList
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Receive_FriendGetFriendList final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendGetFriendListResponse           Response;                                          // 0x0010(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendGetFriendList) == 0x000008, "Wrong alignment on HttpHelper_Receive_FriendGetFriendList");
static_assert(sizeof(HttpHelper_Receive_FriendGetFriendList) == 0x000048, "Wrong size on HttpHelper_Receive_FriendGetFriendList");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendList, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendGetFriendList::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendList, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendGetFriendList::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendList, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendGetFriendList::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendList, Response) == 0x000010, "Member 'HttpHelper_Receive_FriendGetFriendList::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendGetFriendList, ReturnValue) == 0x000040, "Member 'HttpHelper_Receive_FriendGetFriendList::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendNotifyFriend
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_FriendNotifyFriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendNotifyFriendResponse            Response;                                          // 0x000C(0x0001)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendNotifyFriend) == 0x000004, "Wrong alignment on HttpHelper_Receive_FriendNotifyFriend");
static_assert(sizeof(HttpHelper_Receive_FriendNotifyFriend) == 0x000010, "Wrong size on HttpHelper_Receive_FriendNotifyFriend");
static_assert(offsetof(HttpHelper_Receive_FriendNotifyFriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendNotifyFriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendNotifyFriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendNotifyFriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendNotifyFriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendNotifyFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendNotifyFriend, Response) == 0x00000C, "Member 'HttpHelper_Receive_FriendNotifyFriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendNotifyFriend, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_FriendNotifyFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendRejectFriend
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_FriendRejectFriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendRejectFriendResponse            Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendRejectFriend) == 0x000004, "Wrong alignment on HttpHelper_Receive_FriendRejectFriend");
static_assert(sizeof(HttpHelper_Receive_FriendRejectFriend) == 0x000010, "Wrong size on HttpHelper_Receive_FriendRejectFriend");
static_assert(offsetof(HttpHelper_Receive_FriendRejectFriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendRejectFriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRejectFriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendRejectFriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRejectFriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendRejectFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRejectFriend, Response) == 0x00000C, "Member 'HttpHelper_Receive_FriendRejectFriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRejectFriend, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_FriendRejectFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendRequestFriend
// 0x0480 (0x0480 - 0x0000)
struct HttpHelper_Receive_FriendRequestFriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendRequestFriendResponse           Response;                                          // 0x0010(0x0468)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0478(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendRequestFriend) == 0x000008, "Wrong alignment on HttpHelper_Receive_FriendRequestFriend");
static_assert(sizeof(HttpHelper_Receive_FriendRequestFriend) == 0x000480, "Wrong size on HttpHelper_Receive_FriendRequestFriend");
static_assert(offsetof(HttpHelper_Receive_FriendRequestFriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendRequestFriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRequestFriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendRequestFriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRequestFriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendRequestFriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRequestFriend, Response) == 0x000010, "Member 'HttpHelper_Receive_FriendRequestFriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendRequestFriend, ReturnValue) == 0x000478, "Member 'HttpHelper_Receive_FriendRequestFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_FriendUnfriend
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_FriendUnfriend final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFriendUnfriendResponse                Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_FriendUnfriend) == 0x000004, "Wrong alignment on HttpHelper_Receive_FriendUnfriend");
static_assert(sizeof(HttpHelper_Receive_FriendUnfriend) == 0x000010, "Wrong size on HttpHelper_Receive_FriendUnfriend");
static_assert(offsetof(HttpHelper_Receive_FriendUnfriend, Handle) == 0x000000, "Member 'HttpHelper_Receive_FriendUnfriend::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendUnfriend, OutError) == 0x000004, "Member 'HttpHelper_Receive_FriendUnfriend::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendUnfriend, ResCode) == 0x000008, "Member 'HttpHelper_Receive_FriendUnfriend::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendUnfriend, Response) == 0x00000C, "Member 'HttpHelper_Receive_FriendUnfriend::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_FriendUnfriend, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_FriendUnfriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_GhostGetFriendGhostData
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_GhostGetFriendGhostData final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGhostGetFriendGhostDataResponse       Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_GhostGetFriendGhostData) == 0x000008, "Wrong alignment on HttpHelper_Receive_GhostGetFriendGhostData");
static_assert(sizeof(HttpHelper_Receive_GhostGetFriendGhostData) == 0x000028, "Wrong size on HttpHelper_Receive_GhostGetFriendGhostData");
static_assert(offsetof(HttpHelper_Receive_GhostGetFriendGhostData, Handle) == 0x000000, "Member 'HttpHelper_Receive_GhostGetFriendGhostData::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetFriendGhostData, OutError) == 0x000004, "Member 'HttpHelper_Receive_GhostGetFriendGhostData::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetFriendGhostData, ResCode) == 0x000008, "Member 'HttpHelper_Receive_GhostGetFriendGhostData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetFriendGhostData, Response) == 0x000010, "Member 'HttpHelper_Receive_GhostGetFriendGhostData::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetFriendGhostData, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_GhostGetFriendGhostData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_GhostGetRankingGhostData
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_GhostGetRankingGhostData final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGhostGetRankingGhostDataResponse      Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_GhostGetRankingGhostData) == 0x000008, "Wrong alignment on HttpHelper_Receive_GhostGetRankingGhostData");
static_assert(sizeof(HttpHelper_Receive_GhostGetRankingGhostData) == 0x000028, "Wrong size on HttpHelper_Receive_GhostGetRankingGhostData");
static_assert(offsetof(HttpHelper_Receive_GhostGetRankingGhostData, Handle) == 0x000000, "Member 'HttpHelper_Receive_GhostGetRankingGhostData::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetRankingGhostData, OutError) == 0x000004, "Member 'HttpHelper_Receive_GhostGetRankingGhostData::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetRankingGhostData, ResCode) == 0x000008, "Member 'HttpHelper_Receive_GhostGetRankingGhostData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetRankingGhostData, Response) == 0x000010, "Member 'HttpHelper_Receive_GhostGetRankingGhostData::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_GhostGetRankingGhostData, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_GhostGetRankingGhostData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_HealthCheck
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_HealthCheck final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHealthCheckResponse                   Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_HealthCheck) == 0x000004, "Wrong alignment on HttpHelper_Receive_HealthCheck");
static_assert(sizeof(HttpHelper_Receive_HealthCheck) == 0x000010, "Wrong size on HttpHelper_Receive_HealthCheck");
static_assert(offsetof(HttpHelper_Receive_HealthCheck, Handle) == 0x000000, "Member 'HttpHelper_Receive_HealthCheck::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_HealthCheck, OutError) == 0x000004, "Member 'HttpHelper_Receive_HealthCheck::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_HealthCheck, ResCode) == 0x000008, "Member 'HttpHelper_Receive_HealthCheck::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_HealthCheck, Response) == 0x00000C, "Member 'HttpHelper_Receive_HealthCheck::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_HealthCheck, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_HealthCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_LegendCompeCheckLegendCompeReward
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_LegendCompeCheckLegendCompeReward final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLegendCompeCheckLegendCompeRewardResponse Response;                                      // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward) == 0x000008, "Wrong alignment on HttpHelper_Receive_LegendCompeCheckLegendCompeReward");
static_assert(sizeof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward) == 0x000028, "Wrong size on HttpHelper_Receive_LegendCompeCheckLegendCompeReward");
static_assert(offsetof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward, Handle) == 0x000000, "Member 'HttpHelper_Receive_LegendCompeCheckLegendCompeReward::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward, OutError) == 0x000004, "Member 'HttpHelper_Receive_LegendCompeCheckLegendCompeReward::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward, ResCode) == 0x000008, "Member 'HttpHelper_Receive_LegendCompeCheckLegendCompeReward::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward, Response) == 0x000010, "Member 'HttpHelper_Receive_LegendCompeCheckLegendCompeReward::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LegendCompeCheckLegendCompeReward, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_LegendCompeCheckLegendCompeReward::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_LobbyGenerateLobby
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Receive_LobbyGenerateLobby final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyGenerateLobbyResponse            Response;                                          // 0x0010(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_LobbyGenerateLobby) == 0x000008, "Wrong alignment on HttpHelper_Receive_LobbyGenerateLobby");
static_assert(sizeof(HttpHelper_Receive_LobbyGenerateLobby) == 0x000040, "Wrong size on HttpHelper_Receive_LobbyGenerateLobby");
static_assert(offsetof(HttpHelper_Receive_LobbyGenerateLobby, Handle) == 0x000000, "Member 'HttpHelper_Receive_LobbyGenerateLobby::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGenerateLobby, OutError) == 0x000004, "Member 'HttpHelper_Receive_LobbyGenerateLobby::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGenerateLobby, ResCode) == 0x000008, "Member 'HttpHelper_Receive_LobbyGenerateLobby::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGenerateLobby, Response) == 0x000010, "Member 'HttpHelper_Receive_LobbyGenerateLobby::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGenerateLobby, ReturnValue) == 0x000038, "Member 'HttpHelper_Receive_LobbyGenerateLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_LobbyGetEosLobbyId
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_LobbyGetEosLobbyId final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyGetEosLobbyIdResponse            Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_LobbyGetEosLobbyId) == 0x000008, "Wrong alignment on HttpHelper_Receive_LobbyGetEosLobbyId");
static_assert(sizeof(HttpHelper_Receive_LobbyGetEosLobbyId) == 0x000028, "Wrong size on HttpHelper_Receive_LobbyGetEosLobbyId");
static_assert(offsetof(HttpHelper_Receive_LobbyGetEosLobbyId, Handle) == 0x000000, "Member 'HttpHelper_Receive_LobbyGetEosLobbyId::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGetEosLobbyId, OutError) == 0x000004, "Member 'HttpHelper_Receive_LobbyGetEosLobbyId::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGetEosLobbyId, ResCode) == 0x000008, "Member 'HttpHelper_Receive_LobbyGetEosLobbyId::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGetEosLobbyId, Response) == 0x000010, "Member 'HttpHelper_Receive_LobbyGetEosLobbyId::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyGetEosLobbyId, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_LobbyGetEosLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_LobbyKeepAlive
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Receive_LobbyKeepAlive final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyKeepAliveResponse                Response;                                          // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_LobbyKeepAlive) == 0x000008, "Wrong alignment on HttpHelper_Receive_LobbyKeepAlive");
static_assert(sizeof(HttpHelper_Receive_LobbyKeepAlive) == 0x000030, "Wrong size on HttpHelper_Receive_LobbyKeepAlive");
static_assert(offsetof(HttpHelper_Receive_LobbyKeepAlive, Handle) == 0x000000, "Member 'HttpHelper_Receive_LobbyKeepAlive::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyKeepAlive, OutError) == 0x000004, "Member 'HttpHelper_Receive_LobbyKeepAlive::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyKeepAlive, ResCode) == 0x000008, "Member 'HttpHelper_Receive_LobbyKeepAlive::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyKeepAlive, Response) == 0x000010, "Member 'HttpHelper_Receive_LobbyKeepAlive::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyKeepAlive, ReturnValue) == 0x000028, "Member 'HttpHelper_Receive_LobbyKeepAlive::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_LobbyRemoveLobby
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_LobbyRemoveLobby final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyRemoveLobbyResponse              Response;                                          // 0x000C(0x0001)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_LobbyRemoveLobby) == 0x000004, "Wrong alignment on HttpHelper_Receive_LobbyRemoveLobby");
static_assert(sizeof(HttpHelper_Receive_LobbyRemoveLobby) == 0x000010, "Wrong size on HttpHelper_Receive_LobbyRemoveLobby");
static_assert(offsetof(HttpHelper_Receive_LobbyRemoveLobby, Handle) == 0x000000, "Member 'HttpHelper_Receive_LobbyRemoveLobby::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyRemoveLobby, OutError) == 0x000004, "Member 'HttpHelper_Receive_LobbyRemoveLobby::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyRemoveLobby, ResCode) == 0x000008, "Member 'HttpHelper_Receive_LobbyRemoveLobby::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyRemoveLobby, Response) == 0x00000C, "Member 'HttpHelper_Receive_LobbyRemoveLobby::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LobbyRemoveLobby, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_LobbyRemoveLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_LoginCheck
// 0x00A8 (0x00A8 - 0x0000)
struct HttpHelper_Receive_LoginCheck final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLoginCheckResponse                    Response;                                          // 0x0010(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_LoginCheck) == 0x000008, "Wrong alignment on HttpHelper_Receive_LoginCheck");
static_assert(sizeof(HttpHelper_Receive_LoginCheck) == 0x0000A8, "Wrong size on HttpHelper_Receive_LoginCheck");
static_assert(offsetof(HttpHelper_Receive_LoginCheck, Handle) == 0x000000, "Member 'HttpHelper_Receive_LoginCheck::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LoginCheck, OutError) == 0x000004, "Member 'HttpHelper_Receive_LoginCheck::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LoginCheck, ResCode) == 0x000008, "Member 'HttpHelper_Receive_LoginCheck::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LoginCheck, Response) == 0x000010, "Member 'HttpHelper_Receive_LoginCheck::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_LoginCheck, ReturnValue) == 0x0000A0, "Member 'HttpHelper_Receive_LoginCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MasterDataGetMaintenanceSchedule
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_MasterDataGetMaintenanceSchedule final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMasterDataGetMaintenanceScheduleResponse Response;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule) == 0x000004, "Wrong alignment on HttpHelper_Receive_MasterDataGetMaintenanceSchedule");
static_assert(sizeof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule) == 0x000010, "Wrong size on HttpHelper_Receive_MasterDataGetMaintenanceSchedule");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule, Handle) == 0x000000, "Member 'HttpHelper_Receive_MasterDataGetMaintenanceSchedule::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule, OutError) == 0x000004, "Member 'HttpHelper_Receive_MasterDataGetMaintenanceSchedule::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MasterDataGetMaintenanceSchedule::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule, Response) == 0x00000C, "Member 'HttpHelper_Receive_MasterDataGetMaintenanceSchedule::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMaintenanceSchedule, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_MasterDataGetMaintenanceSchedule::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MasterDataGetMasterData
// 0x02D8 (0x02D8 - 0x0000)
struct HttpHelper_Receive_MasterDataGetMasterData final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMasterDataGetMasterDataResponse       Response;                                          // 0x0010(0x02C0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MasterDataGetMasterData) == 0x000008, "Wrong alignment on HttpHelper_Receive_MasterDataGetMasterData");
static_assert(sizeof(HttpHelper_Receive_MasterDataGetMasterData) == 0x0002D8, "Wrong size on HttpHelper_Receive_MasterDataGetMasterData");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMasterData, Handle) == 0x000000, "Member 'HttpHelper_Receive_MasterDataGetMasterData::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMasterData, OutError) == 0x000004, "Member 'HttpHelper_Receive_MasterDataGetMasterData::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMasterData, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MasterDataGetMasterData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMasterData, Response) == 0x000010, "Member 'HttpHelper_Receive_MasterDataGetMasterData::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetMasterData, ReturnValue) == 0x0002D0, "Member 'HttpHelper_Receive_MasterDataGetMasterData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MasterDataGetVersion
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_MasterDataGetVersion final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMasterDataGetVersionResponse          Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MasterDataGetVersion) == 0x000008, "Wrong alignment on HttpHelper_Receive_MasterDataGetVersion");
static_assert(sizeof(HttpHelper_Receive_MasterDataGetVersion) == 0x000028, "Wrong size on HttpHelper_Receive_MasterDataGetVersion");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetVersion, Handle) == 0x000000, "Member 'HttpHelper_Receive_MasterDataGetVersion::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetVersion, OutError) == 0x000004, "Member 'HttpHelper_Receive_MasterDataGetVersion::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetVersion, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MasterDataGetVersion::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetVersion, Response) == 0x000010, "Member 'HttpHelper_Receive_MasterDataGetVersion::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MasterDataGetVersion, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_MasterDataGetVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MatchmakingDescribe
// 0x0110 (0x0110 - 0x0000)
struct HttpHelper_Receive_MatchmakingDescribe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingDescribeResponse           Response;                                          // 0x0010(0x00F8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MatchmakingDescribe) == 0x000008, "Wrong alignment on HttpHelper_Receive_MatchmakingDescribe");
static_assert(sizeof(HttpHelper_Receive_MatchmakingDescribe) == 0x000110, "Wrong size on HttpHelper_Receive_MatchmakingDescribe");
static_assert(offsetof(HttpHelper_Receive_MatchmakingDescribe, Handle) == 0x000000, "Member 'HttpHelper_Receive_MatchmakingDescribe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingDescribe, OutError) == 0x000004, "Member 'HttpHelper_Receive_MatchmakingDescribe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingDescribe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MatchmakingDescribe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingDescribe, Response) == 0x000010, "Member 'HttpHelper_Receive_MatchmakingDescribe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingDescribe, ReturnValue) == 0x000108, "Member 'HttpHelper_Receive_MatchmakingDescribe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MatchmakingStop
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_MatchmakingStop final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakingStopResponse               Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MatchmakingStop) == 0x000004, "Wrong alignment on HttpHelper_Receive_MatchmakingStop");
static_assert(sizeof(HttpHelper_Receive_MatchmakingStop) == 0x000010, "Wrong size on HttpHelper_Receive_MatchmakingStop");
static_assert(offsetof(HttpHelper_Receive_MatchmakingStop, Handle) == 0x000000, "Member 'HttpHelper_Receive_MatchmakingStop::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingStop, OutError) == 0x000004, "Member 'HttpHelper_Receive_MatchmakingStop::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingStop, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MatchmakingStop::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingStop, Response) == 0x00000C, "Member 'HttpHelper_Receive_MatchmakingStop::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingStop, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_MatchmakingStop::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MatchmakingSubscribeFesta
// 0x00C0 (0x00C0 - 0x0000)
struct HttpHelper_Receive_MatchmakingSubscribeFesta final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingSubscribeFestaResponse     Response;                                          // 0x0010(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MatchmakingSubscribeFesta) == 0x000008, "Wrong alignment on HttpHelper_Receive_MatchmakingSubscribeFesta");
static_assert(sizeof(HttpHelper_Receive_MatchmakingSubscribeFesta) == 0x0000C0, "Wrong size on HttpHelper_Receive_MatchmakingSubscribeFesta");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeFesta, Handle) == 0x000000, "Member 'HttpHelper_Receive_MatchmakingSubscribeFesta::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeFesta, OutError) == 0x000004, "Member 'HttpHelper_Receive_MatchmakingSubscribeFesta::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeFesta, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MatchmakingSubscribeFesta::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeFesta, Response) == 0x000010, "Member 'HttpHelper_Receive_MatchmakingSubscribeFesta::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeFesta, ReturnValue) == 0x0000B8, "Member 'HttpHelper_Receive_MatchmakingSubscribeFesta::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MatchmakingSubscribeLegendCompe
// 0x00C0 (0x00C0 - 0x0000)
struct HttpHelper_Receive_MatchmakingSubscribeLegendCompe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingSubscribeLegendCompeResponse Response;                                        // 0x0010(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Receive_MatchmakingSubscribeLegendCompe");
static_assert(sizeof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe) == 0x0000C0, "Wrong size on HttpHelper_Receive_MatchmakingSubscribeLegendCompe");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe, Handle) == 0x000000, "Member 'HttpHelper_Receive_MatchmakingSubscribeLegendCompe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe, OutError) == 0x000004, "Member 'HttpHelper_Receive_MatchmakingSubscribeLegendCompe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MatchmakingSubscribeLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe, Response) == 0x000010, "Member 'HttpHelper_Receive_MatchmakingSubscribeLegendCompe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeLegendCompe, ReturnValue) == 0x0000B8, "Member 'HttpHelper_Receive_MatchmakingSubscribeLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MatchmakingSubscribeRankMatch
// 0x00C0 (0x00C0 - 0x0000)
struct HttpHelper_Receive_MatchmakingSubscribeRankMatch final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchmakingSubscribeRankMatchResponse Response;                                          // 0x0010(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MatchmakingSubscribeRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Receive_MatchmakingSubscribeRankMatch");
static_assert(sizeof(HttpHelper_Receive_MatchmakingSubscribeRankMatch) == 0x0000C0, "Wrong size on HttpHelper_Receive_MatchmakingSubscribeRankMatch");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeRankMatch, Handle) == 0x000000, "Member 'HttpHelper_Receive_MatchmakingSubscribeRankMatch::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeRankMatch, OutError) == 0x000004, "Member 'HttpHelper_Receive_MatchmakingSubscribeRankMatch::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeRankMatch, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MatchmakingSubscribeRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeRankMatch, Response) == 0x000010, "Member 'HttpHelper_Receive_MatchmakingSubscribeRankMatch::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingSubscribeRankMatch, ReturnValue) == 0x0000B8, "Member 'HttpHelper_Receive_MatchmakingSubscribeRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_MatchmakingUnsubscribe
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_MatchmakingUnsubscribe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakingUnsubscribeResponse        Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_MatchmakingUnsubscribe) == 0x000004, "Wrong alignment on HttpHelper_Receive_MatchmakingUnsubscribe");
static_assert(sizeof(HttpHelper_Receive_MatchmakingUnsubscribe) == 0x000010, "Wrong size on HttpHelper_Receive_MatchmakingUnsubscribe");
static_assert(offsetof(HttpHelper_Receive_MatchmakingUnsubscribe, Handle) == 0x000000, "Member 'HttpHelper_Receive_MatchmakingUnsubscribe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingUnsubscribe, OutError) == 0x000004, "Member 'HttpHelper_Receive_MatchmakingUnsubscribe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingUnsubscribe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_MatchmakingUnsubscribe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingUnsubscribe, Response) == 0x00000C, "Member 'HttpHelper_Receive_MatchmakingUnsubscribe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_MatchmakingUnsubscribe, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_MatchmakingUnsubscribe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_OntSaveOntParticipantUser
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_OntSaveOntParticipantUser final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOntSaveOntParticipantUserResponse     Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_OntSaveOntParticipantUser) == 0x000004, "Wrong alignment on HttpHelper_Receive_OntSaveOntParticipantUser");
static_assert(sizeof(HttpHelper_Receive_OntSaveOntParticipantUser) == 0x000010, "Wrong size on HttpHelper_Receive_OntSaveOntParticipantUser");
static_assert(offsetof(HttpHelper_Receive_OntSaveOntParticipantUser, Handle) == 0x000000, "Member 'HttpHelper_Receive_OntSaveOntParticipantUser::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OntSaveOntParticipantUser, OutError) == 0x000004, "Member 'HttpHelper_Receive_OntSaveOntParticipantUser::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OntSaveOntParticipantUser, ResCode) == 0x000008, "Member 'HttpHelper_Receive_OntSaveOntParticipantUser::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OntSaveOntParticipantUser, Response) == 0x00000C, "Member 'HttpHelper_Receive_OntSaveOntParticipantUser::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OntSaveOntParticipantUser, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_OntSaveOntParticipantUser::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_OperationSaveAutoReport
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_OperationSaveAutoReport final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOperationSaveAutoReportResponse       Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_OperationSaveAutoReport) == 0x000008, "Wrong alignment on HttpHelper_Receive_OperationSaveAutoReport");
static_assert(sizeof(HttpHelper_Receive_OperationSaveAutoReport) == 0x000028, "Wrong size on HttpHelper_Receive_OperationSaveAutoReport");
static_assert(offsetof(HttpHelper_Receive_OperationSaveAutoReport, Handle) == 0x000000, "Member 'HttpHelper_Receive_OperationSaveAutoReport::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveAutoReport, OutError) == 0x000004, "Member 'HttpHelper_Receive_OperationSaveAutoReport::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveAutoReport, ResCode) == 0x000008, "Member 'HttpHelper_Receive_OperationSaveAutoReport::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveAutoReport, Response) == 0x000010, "Member 'HttpHelper_Receive_OperationSaveAutoReport::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveAutoReport, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_OperationSaveAutoReport::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_OperationSaveOperatorReport
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_OperationSaveOperatorReport final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOperationSaveOperatorReportResponse   Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_OperationSaveOperatorReport) == 0x000008, "Wrong alignment on HttpHelper_Receive_OperationSaveOperatorReport");
static_assert(sizeof(HttpHelper_Receive_OperationSaveOperatorReport) == 0x000028, "Wrong size on HttpHelper_Receive_OperationSaveOperatorReport");
static_assert(offsetof(HttpHelper_Receive_OperationSaveOperatorReport, Handle) == 0x000000, "Member 'HttpHelper_Receive_OperationSaveOperatorReport::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveOperatorReport, OutError) == 0x000004, "Member 'HttpHelper_Receive_OperationSaveOperatorReport::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveOperatorReport, ResCode) == 0x000008, "Member 'HttpHelper_Receive_OperationSaveOperatorReport::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveOperatorReport, Response) == 0x000010, "Member 'HttpHelper_Receive_OperationSaveOperatorReport::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_OperationSaveOperatorReport, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_OperationSaveOperatorReport::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetFriendRankingFestaPoint
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_RankingGetFriendRankingFestaPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetFriendRankingFestaPointResponse Response;                                      // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetFriendRankingFestaPoint");
static_assert(sizeof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint) == 0x000028, "Wrong size on HttpHelper_Receive_RankingGetFriendRankingFestaPoint");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetFriendRankingFestaPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetFriendRankingFestaPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetFriendRankingFestaPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetFriendRankingFestaPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingFestaPoint, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_RankingGetFriendRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetFriendRankingLegendCompe
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_RankingGetFriendRankingLegendCompe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetFriendRankingLegendCompeResponse Response;                                     // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetFriendRankingLegendCompe");
static_assert(sizeof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe) == 0x000028, "Wrong size on HttpHelper_Receive_RankingGetFriendRankingLegendCompe");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetFriendRankingLegendCompe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetFriendRankingLegendCompe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetFriendRankingLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetFriendRankingLegendCompe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingLegendCompe, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_RankingGetFriendRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetFriendRankingRankMatch
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_RankingGetFriendRankingRankMatch final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetFriendRankingRankMatchResponse Response;                                       // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetFriendRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetFriendRankingRankMatch");
static_assert(sizeof(HttpHelper_Receive_RankingGetFriendRankingRankMatch) == 0x000028, "Wrong size on HttpHelper_Receive_RankingGetFriendRankingRankMatch");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingRankMatch, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetFriendRankingRankMatch::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingRankMatch, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetFriendRankingRankMatch::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingRankMatch, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetFriendRankingRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingRankMatch, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetFriendRankingRankMatch::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetFriendRankingRankMatch, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_RankingGetFriendRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingFestaPoint
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Receive_RankingGetMyRankingFestaPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingFestaPointResponse Response;                                          // 0x0010(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x04C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetMyRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetMyRankingFestaPoint");
static_assert(sizeof(HttpHelper_Receive_RankingGetMyRankingFestaPoint) == 0x0004C8, "Wrong size on HttpHelper_Receive_RankingGetMyRankingFestaPoint");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingFestaPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetMyRankingFestaPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingFestaPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetMyRankingFestaPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingFestaPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetMyRankingFestaPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingFestaPoint, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetMyRankingFestaPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingFestaPoint, ReturnValue) == 0x0004C0, "Member 'HttpHelper_Receive_RankingGetMyRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingLegendCompe
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Receive_RankingGetMyRankingLegendCompe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingLegendCompeResponse Response;                                         // 0x0010(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x04C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetMyRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetMyRankingLegendCompe");
static_assert(sizeof(HttpHelper_Receive_RankingGetMyRankingLegendCompe) == 0x0004C8, "Wrong size on HttpHelper_Receive_RankingGetMyRankingLegendCompe");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingLegendCompe, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetMyRankingLegendCompe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingLegendCompe, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetMyRankingLegendCompe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingLegendCompe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetMyRankingLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingLegendCompe, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetMyRankingLegendCompe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingLegendCompe, ReturnValue) == 0x0004C0, "Member 'HttpHelper_Receive_RankingGetMyRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingRankMatch
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Receive_RankingGetMyRankingRankMatch final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingRankMatchResponse  Response;                                          // 0x0010(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x04C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetMyRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetMyRankingRankMatch");
static_assert(sizeof(HttpHelper_Receive_RankingGetMyRankingRankMatch) == 0x0004C8, "Wrong size on HttpHelper_Receive_RankingGetMyRankingRankMatch");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingRankMatch, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetMyRankingRankMatch::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingRankMatch, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetMyRankingRankMatch::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingRankMatch, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetMyRankingRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingRankMatch, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetMyRankingRankMatch::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingRankMatch, ReturnValue) == 0x0004C0, "Member 'HttpHelper_Receive_RankingGetMyRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetMyRankingTimeTrial
// 0x04C8 (0x04C8 - 0x0000)
struct HttpHelper_Receive_RankingGetMyRankingTimeTrial final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetMyRankingTimeTrialResponse  Response;                                          // 0x0010(0x04B0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x04C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetMyRankingTimeTrial) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetMyRankingTimeTrial");
static_assert(sizeof(HttpHelper_Receive_RankingGetMyRankingTimeTrial) == 0x0004C8, "Wrong size on HttpHelper_Receive_RankingGetMyRankingTimeTrial");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingTimeTrial, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetMyRankingTimeTrial::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingTimeTrial, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetMyRankingTimeTrial::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingTimeTrial, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetMyRankingTimeTrial::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingTimeTrial, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetMyRankingTimeTrial::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetMyRankingTimeTrial, ReturnValue) == 0x0004C0, "Member 'HttpHelper_Receive_RankingGetMyRankingTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetRankingFestaPoint
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Receive_RankingGetRankingFestaPoint final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingFestaPointResponse   Response;                                          // 0x0010(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetRankingFestaPoint");
static_assert(sizeof(HttpHelper_Receive_RankingGetRankingFestaPoint) == 0x000038, "Wrong size on HttpHelper_Receive_RankingGetRankingFestaPoint");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingFestaPoint, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetRankingFestaPoint::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingFestaPoint, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetRankingFestaPoint::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingFestaPoint, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetRankingFestaPoint::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingFestaPoint, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetRankingFestaPoint::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingFestaPoint, ReturnValue) == 0x000030, "Member 'HttpHelper_Receive_RankingGetRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetRankingLegendCompe
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Receive_RankingGetRankingLegendCompe final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingLegendCompeResponse  Response;                                          // 0x0010(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetRankingLegendCompe");
static_assert(sizeof(HttpHelper_Receive_RankingGetRankingLegendCompe) == 0x000038, "Wrong size on HttpHelper_Receive_RankingGetRankingLegendCompe");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingLegendCompe, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetRankingLegendCompe::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingLegendCompe, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetRankingLegendCompe::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingLegendCompe, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetRankingLegendCompe::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingLegendCompe, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetRankingLegendCompe::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingLegendCompe, ReturnValue) == 0x000030, "Member 'HttpHelper_Receive_RankingGetRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetRankingRankMatch
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Receive_RankingGetRankingRankMatch final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingRankMatchResponse    Response;                                          // 0x0010(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetRankingRankMatch");
static_assert(sizeof(HttpHelper_Receive_RankingGetRankingRankMatch) == 0x000038, "Wrong size on HttpHelper_Receive_RankingGetRankingRankMatch");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingRankMatch, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetRankingRankMatch::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingRankMatch, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetRankingRankMatch::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingRankMatch, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetRankingRankMatch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingRankMatch, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetRankingRankMatch::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingRankMatch, ReturnValue) == 0x000030, "Member 'HttpHelper_Receive_RankingGetRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RankingGetRankingTimeTrial
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Receive_RankingGetRankingTimeTrial final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankingGetRankingTimeTrialResponse    Response;                                          // 0x0010(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RankingGetRankingTimeTrial) == 0x000008, "Wrong alignment on HttpHelper_Receive_RankingGetRankingTimeTrial");
static_assert(sizeof(HttpHelper_Receive_RankingGetRankingTimeTrial) == 0x000048, "Wrong size on HttpHelper_Receive_RankingGetRankingTimeTrial");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingTimeTrial, Handle) == 0x000000, "Member 'HttpHelper_Receive_RankingGetRankingTimeTrial::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingTimeTrial, OutError) == 0x000004, "Member 'HttpHelper_Receive_RankingGetRankingTimeTrial::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingTimeTrial, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RankingGetRankingTimeTrial::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingTimeTrial, Response) == 0x000010, "Member 'HttpHelper_Receive_RankingGetRankingTimeTrial::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RankingGetRankingTimeTrial, ReturnValue) == 0x000040, "Member 'HttpHelper_Receive_RankingGetRankingTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_ResultSaveFestaResult
// 0x0170 (0x0170 - 0x0000)
struct HttpHelper_Receive_ResultSaveFestaResult final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveFestaResultResponse         Response;                                          // 0x0010(0x0158)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_ResultSaveFestaResult) == 0x000008, "Wrong alignment on HttpHelper_Receive_ResultSaveFestaResult");
static_assert(sizeof(HttpHelper_Receive_ResultSaveFestaResult) == 0x000170, "Wrong size on HttpHelper_Receive_ResultSaveFestaResult");
static_assert(offsetof(HttpHelper_Receive_ResultSaveFestaResult, Handle) == 0x000000, "Member 'HttpHelper_Receive_ResultSaveFestaResult::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveFestaResult, OutError) == 0x000004, "Member 'HttpHelper_Receive_ResultSaveFestaResult::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveFestaResult, ResCode) == 0x000008, "Member 'HttpHelper_Receive_ResultSaveFestaResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveFestaResult, Response) == 0x000010, "Member 'HttpHelper_Receive_ResultSaveFestaResult::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveFestaResult, ReturnValue) == 0x000168, "Member 'HttpHelper_Receive_ResultSaveFestaResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_ResultSaveLegendCompeResult
// 0x0110 (0x0110 - 0x0000)
struct HttpHelper_Receive_ResultSaveLegendCompeResult final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveLegendCompeResultResponse   Response;                                          // 0x0010(0x00F8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_ResultSaveLegendCompeResult) == 0x000008, "Wrong alignment on HttpHelper_Receive_ResultSaveLegendCompeResult");
static_assert(sizeof(HttpHelper_Receive_ResultSaveLegendCompeResult) == 0x000110, "Wrong size on HttpHelper_Receive_ResultSaveLegendCompeResult");
static_assert(offsetof(HttpHelper_Receive_ResultSaveLegendCompeResult, Handle) == 0x000000, "Member 'HttpHelper_Receive_ResultSaveLegendCompeResult::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveLegendCompeResult, OutError) == 0x000004, "Member 'HttpHelper_Receive_ResultSaveLegendCompeResult::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveLegendCompeResult, ResCode) == 0x000008, "Member 'HttpHelper_Receive_ResultSaveLegendCompeResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveLegendCompeResult, Response) == 0x000010, "Member 'HttpHelper_Receive_ResultSaveLegendCompeResult::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveLegendCompeResult, ReturnValue) == 0x000108, "Member 'HttpHelper_Receive_ResultSaveLegendCompeResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_ResultSaveRankMatchResult
// 0x0110 (0x0110 - 0x0000)
struct HttpHelper_Receive_ResultSaveRankMatchResult final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveRankMatchResultResponse     Response;                                          // 0x0010(0x00F8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_ResultSaveRankMatchResult) == 0x000008, "Wrong alignment on HttpHelper_Receive_ResultSaveRankMatchResult");
static_assert(sizeof(HttpHelper_Receive_ResultSaveRankMatchResult) == 0x000110, "Wrong size on HttpHelper_Receive_ResultSaveRankMatchResult");
static_assert(offsetof(HttpHelper_Receive_ResultSaveRankMatchResult, Handle) == 0x000000, "Member 'HttpHelper_Receive_ResultSaveRankMatchResult::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveRankMatchResult, OutError) == 0x000004, "Member 'HttpHelper_Receive_ResultSaveRankMatchResult::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveRankMatchResult, ResCode) == 0x000008, "Member 'HttpHelper_Receive_ResultSaveRankMatchResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveRankMatchResult, Response) == 0x000010, "Member 'HttpHelper_Receive_ResultSaveRankMatchResult::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveRankMatchResult, ReturnValue) == 0x000108, "Member 'HttpHelper_Receive_ResultSaveRankMatchResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_ResultSaveTimeTrialResult
// 0x0118 (0x0118 - 0x0000)
struct HttpHelper_Receive_ResultSaveTimeTrialResult final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResultSaveTimeTrialResultResponse     Response;                                          // 0x0010(0x0100)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_ResultSaveTimeTrialResult) == 0x000008, "Wrong alignment on HttpHelper_Receive_ResultSaveTimeTrialResult");
static_assert(sizeof(HttpHelper_Receive_ResultSaveTimeTrialResult) == 0x000118, "Wrong size on HttpHelper_Receive_ResultSaveTimeTrialResult");
static_assert(offsetof(HttpHelper_Receive_ResultSaveTimeTrialResult, Handle) == 0x000000, "Member 'HttpHelper_Receive_ResultSaveTimeTrialResult::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveTimeTrialResult, OutError) == 0x000004, "Member 'HttpHelper_Receive_ResultSaveTimeTrialResult::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveTimeTrialResult, ResCode) == 0x000008, "Member 'HttpHelper_Receive_ResultSaveTimeTrialResult::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveTimeTrialResult, Response) == 0x000010, "Member 'HttpHelper_Receive_ResultSaveTimeTrialResult::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_ResultSaveTimeTrialResult, ReturnValue) == 0x000110, "Member 'HttpHelper_Receive_ResultSaveTimeTrialResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_RomCheckRomVersion
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_RomCheckRomVersion final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRomCheckRomVersionResponse            Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_RomCheckRomVersion) == 0x000004, "Wrong alignment on HttpHelper_Receive_RomCheckRomVersion");
static_assert(sizeof(HttpHelper_Receive_RomCheckRomVersion) == 0x000010, "Wrong size on HttpHelper_Receive_RomCheckRomVersion");
static_assert(offsetof(HttpHelper_Receive_RomCheckRomVersion, Handle) == 0x000000, "Member 'HttpHelper_Receive_RomCheckRomVersion::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RomCheckRomVersion, OutError) == 0x000004, "Member 'HttpHelper_Receive_RomCheckRomVersion::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RomCheckRomVersion, ResCode) == 0x000008, "Member 'HttpHelper_Receive_RomCheckRomVersion::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RomCheckRomVersion, Response) == 0x00000C, "Member 'HttpHelper_Receive_RomCheckRomVersion::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_RomCheckRomVersion, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_RomCheckRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_SamplePart1
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Receive_SamplePart1 final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSamplePart1Response                   Response;                                          // 0x0010(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_SamplePart1) == 0x000008, "Wrong alignment on HttpHelper_Receive_SamplePart1");
static_assert(sizeof(HttpHelper_Receive_SamplePart1) == 0x000040, "Wrong size on HttpHelper_Receive_SamplePart1");
static_assert(offsetof(HttpHelper_Receive_SamplePart1, Handle) == 0x000000, "Member 'HttpHelper_Receive_SamplePart1::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SamplePart1, OutError) == 0x000004, "Member 'HttpHelper_Receive_SamplePart1::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SamplePart1, ResCode) == 0x000008, "Member 'HttpHelper_Receive_SamplePart1::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SamplePart1, Response) == 0x000010, "Member 'HttpHelper_Receive_SamplePart1::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SamplePart1, ReturnValue) == 0x000038, "Member 'HttpHelper_Receive_SamplePart1::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_SessionKeepalive
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Receive_SessionKeepalive final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionKeepaliveResponse              Response;                                          // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_SessionKeepalive) == 0x000008, "Wrong alignment on HttpHelper_Receive_SessionKeepalive");
static_assert(sizeof(HttpHelper_Receive_SessionKeepalive) == 0x000030, "Wrong size on HttpHelper_Receive_SessionKeepalive");
static_assert(offsetof(HttpHelper_Receive_SessionKeepalive, Handle) == 0x000000, "Member 'HttpHelper_Receive_SessionKeepalive::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SessionKeepalive, OutError) == 0x000004, "Member 'HttpHelper_Receive_SessionKeepalive::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SessionKeepalive, ResCode) == 0x000008, "Member 'HttpHelper_Receive_SessionKeepalive::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SessionKeepalive, Response) == 0x000010, "Member 'HttpHelper_Receive_SessionKeepalive::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_SessionKeepalive, ReturnValue) == 0x000028, "Member 'HttpHelper_Receive_SessionKeepalive::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_StartSaveFestaStart
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Receive_StartSaveFestaStart final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStartSaveFestaStartResponse           Response;                                          // 0x0010(0x0058)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_StartSaveFestaStart) == 0x000008, "Wrong alignment on HttpHelper_Receive_StartSaveFestaStart");
static_assert(sizeof(HttpHelper_Receive_StartSaveFestaStart) == 0x000070, "Wrong size on HttpHelper_Receive_StartSaveFestaStart");
static_assert(offsetof(HttpHelper_Receive_StartSaveFestaStart, Handle) == 0x000000, "Member 'HttpHelper_Receive_StartSaveFestaStart::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveFestaStart, OutError) == 0x000004, "Member 'HttpHelper_Receive_StartSaveFestaStart::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveFestaStart, ResCode) == 0x000008, "Member 'HttpHelper_Receive_StartSaveFestaStart::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveFestaStart, Response) == 0x000010, "Member 'HttpHelper_Receive_StartSaveFestaStart::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveFestaStart, ReturnValue) == 0x000068, "Member 'HttpHelper_Receive_StartSaveFestaStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_StartSaveLegendCompeStart
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_StartSaveLegendCompeStart final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStartSaveLegendCompeStartResponse     Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_StartSaveLegendCompeStart) == 0x000008, "Wrong alignment on HttpHelper_Receive_StartSaveLegendCompeStart");
static_assert(sizeof(HttpHelper_Receive_StartSaveLegendCompeStart) == 0x000028, "Wrong size on HttpHelper_Receive_StartSaveLegendCompeStart");
static_assert(offsetof(HttpHelper_Receive_StartSaveLegendCompeStart, Handle) == 0x000000, "Member 'HttpHelper_Receive_StartSaveLegendCompeStart::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveLegendCompeStart, OutError) == 0x000004, "Member 'HttpHelper_Receive_StartSaveLegendCompeStart::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveLegendCompeStart, ResCode) == 0x000008, "Member 'HttpHelper_Receive_StartSaveLegendCompeStart::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveLegendCompeStart, Response) == 0x000010, "Member 'HttpHelper_Receive_StartSaveLegendCompeStart::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveLegendCompeStart, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_StartSaveLegendCompeStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_StartSaveRankMatchStart
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_StartSaveRankMatchStart final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStartSaveRankMatchStartResponse       Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_StartSaveRankMatchStart) == 0x000008, "Wrong alignment on HttpHelper_Receive_StartSaveRankMatchStart");
static_assert(sizeof(HttpHelper_Receive_StartSaveRankMatchStart) == 0x000028, "Wrong size on HttpHelper_Receive_StartSaveRankMatchStart");
static_assert(offsetof(HttpHelper_Receive_StartSaveRankMatchStart, Handle) == 0x000000, "Member 'HttpHelper_Receive_StartSaveRankMatchStart::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveRankMatchStart, OutError) == 0x000004, "Member 'HttpHelper_Receive_StartSaveRankMatchStart::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveRankMatchStart, ResCode) == 0x000008, "Member 'HttpHelper_Receive_StartSaveRankMatchStart::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveRankMatchStart, Response) == 0x000010, "Member 'HttpHelper_Receive_StartSaveRankMatchStart::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_StartSaveRankMatchStart, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_StartSaveRankMatchStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserGetData
// 0x0118 (0x0118 - 0x0000)
struct HttpHelper_Receive_UserGetData final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetDataResponse                   Response;                                          // 0x0010(0x0100)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserGetData) == 0x000008, "Wrong alignment on HttpHelper_Receive_UserGetData");
static_assert(sizeof(HttpHelper_Receive_UserGetData) == 0x000118, "Wrong size on HttpHelper_Receive_UserGetData");
static_assert(offsetof(HttpHelper_Receive_UserGetData, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserGetData::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetData, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserGetData::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetData, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserGetData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetData, Response) == 0x000010, "Member 'HttpHelper_Receive_UserGetData::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetData, ReturnValue) == 0x000110, "Member 'HttpHelper_Receive_UserGetData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserGetPartsData
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Receive_UserGetPartsData final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserGetPartsDataResponse              Response;                                          // 0x000C(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserGetPartsData) == 0x000004, "Wrong alignment on HttpHelper_Receive_UserGetPartsData");
static_assert(sizeof(HttpHelper_Receive_UserGetPartsData) == 0x000014, "Wrong size on HttpHelper_Receive_UserGetPartsData");
static_assert(offsetof(HttpHelper_Receive_UserGetPartsData, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserGetPartsData::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetPartsData, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserGetPartsData::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetPartsData, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserGetPartsData::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetPartsData, Response) == 0x00000C, "Member 'HttpHelper_Receive_UserGetPartsData::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetPartsData, ReturnValue) == 0x000010, "Member 'HttpHelper_Receive_UserGetPartsData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserGetUserIdsByPuid
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_UserGetUserIdsByPuid final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserIdsByPuidResponse          Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserGetUserIdsByPuid) == 0x000008, "Wrong alignment on HttpHelper_Receive_UserGetUserIdsByPuid");
static_assert(sizeof(HttpHelper_Receive_UserGetUserIdsByPuid) == 0x000028, "Wrong size on HttpHelper_Receive_UserGetUserIdsByPuid");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByPuid, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserGetUserIdsByPuid::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByPuid, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserGetUserIdsByPuid::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByPuid, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserGetUserIdsByPuid::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByPuid, Response) == 0x000010, "Member 'HttpHelper_Receive_UserGetUserIdsByPuid::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByPuid, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_UserGetUserIdsByPuid::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserGetUserIdsByUid
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_UserGetUserIdsByUid final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserIdsByUidResponse           Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserGetUserIdsByUid) == 0x000008, "Wrong alignment on HttpHelper_Receive_UserGetUserIdsByUid");
static_assert(sizeof(HttpHelper_Receive_UserGetUserIdsByUid) == 0x000028, "Wrong size on HttpHelper_Receive_UserGetUserIdsByUid");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByUid, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserGetUserIdsByUid::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByUid, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserGetUserIdsByUid::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByUid, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserGetUserIdsByUid::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByUid, Response) == 0x000010, "Member 'HttpHelper_Receive_UserGetUserIdsByUid::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserIdsByUid, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_UserGetUserIdsByUid::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserGetUserNetworkSettings
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_UserGetUserNetworkSettings final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserNetworkSettingsResponse    Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserGetUserNetworkSettings) == 0x000008, "Wrong alignment on HttpHelper_Receive_UserGetUserNetworkSettings");
static_assert(sizeof(HttpHelper_Receive_UserGetUserNetworkSettings) == 0x000028, "Wrong size on HttpHelper_Receive_UserGetUserNetworkSettings");
static_assert(offsetof(HttpHelper_Receive_UserGetUserNetworkSettings, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserGetUserNetworkSettings::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserNetworkSettings, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserGetUserNetworkSettings::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserNetworkSettings, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserGetUserNetworkSettings::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserNetworkSettings, Response) == 0x000010, "Member 'HttpHelper_Receive_UserGetUserNetworkSettings::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserNetworkSettings, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_UserGetUserNetworkSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserGetUserSearch
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Receive_UserGetUserSearch final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserGetUserSearchResponse             Response;                                          // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserGetUserSearch) == 0x000008, "Wrong alignment on HttpHelper_Receive_UserGetUserSearch");
static_assert(sizeof(HttpHelper_Receive_UserGetUserSearch) == 0x000028, "Wrong size on HttpHelper_Receive_UserGetUserSearch");
static_assert(offsetof(HttpHelper_Receive_UserGetUserSearch, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserGetUserSearch::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserSearch, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserGetUserSearch::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserSearch, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserGetUserSearch::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserSearch, Response) == 0x000010, "Member 'HttpHelper_Receive_UserGetUserSearch::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserGetUserSearch, ReturnValue) == 0x000020, "Member 'HttpHelper_Receive_UserGetUserSearch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserNintendoSwitchOnlineCheck
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Receive_UserNintendoSwitchOnlineCheck final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserNintendoSwitchOnlineCheckResponse Response;                                          // 0x000C(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck) == 0x000004, "Wrong alignment on HttpHelper_Receive_UserNintendoSwitchOnlineCheck");
static_assert(sizeof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck) == 0x000014, "Wrong size on HttpHelper_Receive_UserNintendoSwitchOnlineCheck");
static_assert(offsetof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserNintendoSwitchOnlineCheck::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserNintendoSwitchOnlineCheck::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserNintendoSwitchOnlineCheck::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck, Response) == 0x00000C, "Member 'HttpHelper_Receive_UserNintendoSwitchOnlineCheck::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserNintendoSwitchOnlineCheck, ReturnValue) == 0x000010, "Member 'HttpHelper_Receive_UserNintendoSwitchOnlineCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserSavePaidDlcOwnerships
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_Receive_UserSavePaidDlcOwnerships final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserSavePaidDlcOwnershipsResponse     Response;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserSavePaidDlcOwnerships) == 0x000004, "Wrong alignment on HttpHelper_Receive_UserSavePaidDlcOwnerships");
static_assert(sizeof(HttpHelper_Receive_UserSavePaidDlcOwnerships) == 0x000010, "Wrong size on HttpHelper_Receive_UserSavePaidDlcOwnerships");
static_assert(offsetof(HttpHelper_Receive_UserSavePaidDlcOwnerships, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserSavePaidDlcOwnerships::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSavePaidDlcOwnerships, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserSavePaidDlcOwnerships::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSavePaidDlcOwnerships, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserSavePaidDlcOwnerships::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSavePaidDlcOwnerships, Response) == 0x00000C, "Member 'HttpHelper_Receive_UserSavePaidDlcOwnerships::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSavePaidDlcOwnerships, ReturnValue) == 0x00000D, "Member 'HttpHelper_Receive_UserSavePaidDlcOwnerships::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Receive_UserSaveUserNetworkSettings
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Receive_UserSaveUserNetworkSettings final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutError;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserSaveUserNetworkSettingsResponse   Response;                                          // 0x0010(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Receive_UserSaveUserNetworkSettings) == 0x000008, "Wrong alignment on HttpHelper_Receive_UserSaveUserNetworkSettings");
static_assert(sizeof(HttpHelper_Receive_UserSaveUserNetworkSettings) == 0x000048, "Wrong size on HttpHelper_Receive_UserSaveUserNetworkSettings");
static_assert(offsetof(HttpHelper_Receive_UserSaveUserNetworkSettings, Handle) == 0x000000, "Member 'HttpHelper_Receive_UserSaveUserNetworkSettings::Handle' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSaveUserNetworkSettings, OutError) == 0x000004, "Member 'HttpHelper_Receive_UserSaveUserNetworkSettings::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSaveUserNetworkSettings, ResCode) == 0x000008, "Member 'HttpHelper_Receive_UserSaveUserNetworkSettings::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSaveUserNetworkSettings, Response) == 0x000010, "Member 'HttpHelper_Receive_UserSaveUserNetworkSettings::Response' has a wrong offset!");
static_assert(offsetof(HttpHelper_Receive_UserSaveUserNetworkSettings, ReturnValue) == 0x000040, "Member 'HttpHelper_Receive_UserSaveUserNetworkSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_CntReplayGetSignedUrl final
{
public:
	struct FCntReplayGetSignedUrlRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_CntReplayGetSignedUrl) == 0x000004, "Wrong alignment on HttpHelper_Send_CntReplayGetSignedUrl");
static_assert(sizeof(HttpHelper_Send_CntReplayGetSignedUrl) == 0x000008, "Wrong size on HttpHelper_Send_CntReplayGetSignedUrl");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl, Request) == 0x000000, "Member 'HttpHelper_Send_CntReplayGetSignedUrl::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_CntReplayGetSignedUrl::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_CntReplayGetSignedUrl_Callbacked final
{
public:
	struct FCntReplayGetSignedUrlRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_CntReplayGetSignedUrl_Callbacked");
static_assert(sizeof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_CntReplayGetSignedUrl_Callbacked");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_CntReplayGetSignedUrl_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_CntReplayGetSignedUrl_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend final
{
public:
	struct FCntReplayGetSignedUrlRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_CntReplayGetSignedUrl_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CntReplayGetSignedUrl_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_CntReplayGetSignedUrl_NoResend final
{
public:
	struct FCntReplayGetSignedUrlRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_CntReplayGetSignedUrl_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_CntReplayGetSignedUrl_NoResend");
static_assert(sizeof(HttpHelper_Send_CntReplayGetSignedUrl_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_CntReplayGetSignedUrl_NoResend");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_CntReplayGetSignedUrl_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CntReplayGetSignedUrl_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_CntReplayGetSignedUrl_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_CompensationGetCompensations final
{
public:
	struct FCompensationGetCompensationsRequest   Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_CompensationGetCompensations) == 0x000008, "Wrong alignment on HttpHelper_Send_CompensationGetCompensations");
static_assert(sizeof(HttpHelper_Send_CompensationGetCompensations) == 0x000018, "Wrong size on HttpHelper_Send_CompensationGetCompensations");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations, Request) == 0x000000, "Member 'HttpHelper_Send_CompensationGetCompensations::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_CompensationGetCompensations::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_CompensationGetCompensations_Callbacked final
{
public:
	struct FCompensationGetCompensationsRequest   Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_CompensationGetCompensations_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_CompensationGetCompensations_Callbacked");
static_assert(sizeof(HttpHelper_Send_CompensationGetCompensations_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_CompensationGetCompensations_Callbacked");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_CompensationGetCompensations_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_CompensationGetCompensations_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend final
{
public:
	struct FCompensationGetCompensationsRequest   Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_CompensationGetCompensations_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_CompensationGetCompensations_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_CompensationGetCompensations_NoResend final
{
public:
	struct FCompensationGetCompensationsRequest   Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_CompensationGetCompensations_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_CompensationGetCompensations_NoResend");
static_assert(sizeof(HttpHelper_Send_CompensationGetCompensations_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_CompensationGetCompensations_NoResend");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_CompensationGetCompensations_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_CompensationGetCompensations_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_CompensationGetCompensations_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_DebugChangeFairPlayPoint final
{
public:
	struct FDebugChangeFairPlayPointRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeFairPlayPoint) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeFairPlayPoint");
static_assert(sizeof(HttpHelper_Send_DebugChangeFairPlayPoint) == 0x000008, "Wrong size on HttpHelper_Send_DebugChangeFairPlayPoint");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked final
{
public:
	struct FDebugChangeFairPlayPointRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend final
{
public:
	struct FDebugChangeFairPlayPointRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeFairPlayPoint_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_DebugChangeFairPlayPoint_NoResend final
{
public:
	struct FDebugChangeFairPlayPointRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeFairPlayPoint_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeFairPlayPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugChangeFairPlayPoint_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_DebugChangeFairPlayPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeFairPlayPoint_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_DebugChangeFairPlayPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_DebugChangeRankMatchRate final
{
public:
	struct FDebugChangeRankMatchRateRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeRankMatchRate) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeRankMatchRate");
static_assert(sizeof(HttpHelper_Send_DebugChangeRankMatchRate) == 0x000008, "Wrong size on HttpHelper_Send_DebugChangeRankMatchRate");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeRankMatchRate::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_DebugChangeRankMatchRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_DebugChangeRankMatchRate_Callbacked final
{
public:
	struct FDebugChangeRankMatchRateRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeRankMatchRate_Callbacked");
static_assert(sizeof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_DebugChangeRankMatchRate_Callbacked");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeRankMatchRate_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_DebugChangeRankMatchRate_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend final
{
public:
	struct FDebugChangeRankMatchRateRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_DebugChangeRankMatchRate_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugChangeRankMatchRate_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_DebugChangeRankMatchRate_NoResend final
{
public:
	struct FDebugChangeRankMatchRateRequest       Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugChangeRankMatchRate_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_DebugChangeRankMatchRate_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugChangeRankMatchRate_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_DebugChangeRankMatchRate_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugChangeRankMatchRate_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugChangeRankMatchRate_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_DebugChangeRankMatchRate_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugConnectTest
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_DebugConnectTest final
{
public:
	struct FDebugConnectTestRequest               Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugConnectTest) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugConnectTest");
static_assert(sizeof(HttpHelper_Send_DebugConnectTest) == 0x000020, "Wrong size on HttpHelper_Send_DebugConnectTest");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest, Request) == 0x000000, "Member 'HttpHelper_Send_DebugConnectTest::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_DebugConnectTest::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugConnectTest_Callbacked
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_DebugConnectTest_Callbacked final
{
public:
	struct FDebugConnectTestRequest               Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugConnectTest_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugConnectTest_Callbacked");
static_assert(sizeof(HttpHelper_Send_DebugConnectTest_Callbacked) == 0x000028, "Wrong size on HttpHelper_Send_DebugConnectTest_Callbacked");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_DebugConnectTest_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest_Callbacked, Callback) == 0x000018, "Member 'HttpHelper_Send_DebugConnectTest_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugConnectTest_Callbacked_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_DebugConnectTest_Callbacked_NoResend final
{
public:
	struct FDebugConnectTestRequest               Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugConnectTest_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugConnectTest_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugConnectTest_Callbacked_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_DebugConnectTest_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugConnectTest_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest_Callbacked_NoResend, Callback) == 0x000018, "Member 'HttpHelper_Send_DebugConnectTest_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugConnectTest_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_DebugConnectTest_NoResend final
{
public:
	struct FDebugConnectTestRequest               Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugConnectTest_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugConnectTest_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugConnectTest_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_DebugConnectTest_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugConnectTest_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugConnectTest_NoResend, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_DebugConnectTest_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeFesta final
{
public:
	struct FDebugMatchmakingSubscribeFestaRequest Request;                                           // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeFesta) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeFesta");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeFesta) == 0x000068, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeFesta");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta, ReturnValue) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta_Callbacked
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked final
{
public:
	struct FDebugMatchmakingSubscribeFestaRequest Request;                                           // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked) == 0x000070, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked, Callback) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend final
{
public:
	struct FDebugMatchmakingSubscribeFestaRequest Request;                                           // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend) == 0x000070, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend, Callback) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeFesta_NoResend
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend final
{
public:
	struct FDebugMatchmakingSubscribeFestaRequest Request;                                           // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend) == 0x000068, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend, ReturnValue) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeFesta_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe final
{
public:
	struct FDebugMatchmakingSubscribeLegendCompeRequest Request;                                     // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe) == 0x000068, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe, ReturnValue) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe_Callbacked
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked final
{
public:
	struct FDebugMatchmakingSubscribeLegendCompeRequest Request;                                     // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked) == 0x000070, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked, Callback) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend final
{
public:
	struct FDebugMatchmakingSubscribeLegendCompeRequest Request;                                     // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend) == 0x000070, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend, Callback) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeLegendCompe_NoResend
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend final
{
public:
	struct FDebugMatchmakingSubscribeLegendCompeRequest Request;                                     // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend) == 0x000068, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend, ReturnValue) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeLegendCompe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeRankMatch final
{
public:
	struct FDebugMatchmakingSubscribeRankMatchRequest Request;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch) == 0x000068, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch, ReturnValue) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch_Callbacked
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked final
{
public:
	struct FDebugMatchmakingSubscribeRankMatchRequest Request;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked) == 0x000070, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked, Callback) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend
// 0x0070 (0x0070 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend final
{
public:
	struct FDebugMatchmakingSubscribeRankMatchRequest Request;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend) == 0x000070, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend, Callback) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_DebugMatchmakingSubscribeRankMatch_NoResend
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend final
{
public:
	struct FDebugMatchmakingSubscribeRankMatchRequest Request;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend");
static_assert(sizeof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend) == 0x000068, "Wrong size on HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend, ReturnValue) == 0x000060, "Member 'HttpHelper_Send_DebugMatchmakingSubscribeRankMatch_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FairPointAddFairPoint final
{
public:
	struct FFairPointAddFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointAddFairPoint) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointAddFairPoint");
static_assert(sizeof(HttpHelper_Send_FairPointAddFairPoint) == 0x000008, "Wrong size on HttpHelper_Send_FairPointAddFairPoint");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointAddFairPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FairPointAddFairPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FairPointAddFairPoint_Callbacked final
{
public:
	struct FFairPointAddFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointAddFairPoint_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointAddFairPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_FairPointAddFairPoint_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FairPointAddFairPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointAddFairPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FairPointAddFairPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend final
{
public:
	struct FFairPointAddFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FairPointAddFairPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointAddFairPoint_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FairPointAddFairPoint_NoResend final
{
public:
	struct FFairPointAddFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointAddFairPoint_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointAddFairPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_FairPointAddFairPoint_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FairPointAddFairPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointAddFairPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointAddFairPoint_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FairPointAddFairPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FairPointCheckFairPoint final
{
public:
	struct FFairPointCheckFairPointRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointCheckFairPoint) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointCheckFairPoint");
static_assert(sizeof(HttpHelper_Send_FairPointCheckFairPoint) == 0x000008, "Wrong size on HttpHelper_Send_FairPointCheckFairPoint");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointCheckFairPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FairPointCheckFairPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FairPointCheckFairPoint_Callbacked final
{
public:
	struct FFairPointCheckFairPointRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointCheckFairPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FairPointCheckFairPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointCheckFairPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FairPointCheckFairPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend final
{
public:
	struct FFairPointCheckFairPointRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FairPointCheckFairPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointCheckFairPoint_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FairPointCheckFairPoint_NoResend final
{
public:
	struct FFairPointCheckFairPointRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointCheckFairPoint_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointCheckFairPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_FairPointCheckFairPoint_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FairPointCheckFairPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointCheckFairPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointCheckFairPoint_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FairPointCheckFairPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FairPointSubFairPoint final
{
public:
	struct FFairPointSubFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointSubFairPoint) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointSubFairPoint");
static_assert(sizeof(HttpHelper_Send_FairPointSubFairPoint) == 0x000008, "Wrong size on HttpHelper_Send_FairPointSubFairPoint");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointSubFairPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FairPointSubFairPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FairPointSubFairPoint_Callbacked final
{
public:
	struct FFairPointSubFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointSubFairPoint_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointSubFairPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_FairPointSubFairPoint_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FairPointSubFairPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointSubFairPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FairPointSubFairPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend final
{
public:
	struct FFairPointSubFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FairPointSubFairPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FairPointSubFairPoint_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FairPointSubFairPoint_NoResend final
{
public:
	struct FFairPointSubFairPointRequest          Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FairPointSubFairPoint_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FairPointSubFairPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_FairPointSubFairPoint_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FairPointSubFairPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FairPointSubFairPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FairPointSubFairPoint_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FairPointSubFairPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FestaCheckFestaReward final
{
public:
	struct FFestaCheckFestaRewardRequest          Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaCheckFestaReward) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaCheckFestaReward");
static_assert(sizeof(HttpHelper_Send_FestaCheckFestaReward) == 0x000008, "Wrong size on HttpHelper_Send_FestaCheckFestaReward");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward, Request) == 0x000000, "Member 'HttpHelper_Send_FestaCheckFestaReward::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FestaCheckFestaReward::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FestaCheckFestaReward_Callbacked final
{
public:
	struct FFestaCheckFestaRewardRequest          Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaCheckFestaReward_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaCheckFestaReward_Callbacked");
static_assert(sizeof(HttpHelper_Send_FestaCheckFestaReward_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FestaCheckFestaReward_Callbacked");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FestaCheckFestaReward_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FestaCheckFestaReward_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend final
{
public:
	struct FFestaCheckFestaRewardRequest          Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FestaCheckFestaReward_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaCheckFestaReward_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FestaCheckFestaReward_NoResend final
{
public:
	struct FFestaCheckFestaRewardRequest          Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaCheckFestaReward_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaCheckFestaReward_NoResend");
static_assert(sizeof(HttpHelper_Send_FestaCheckFestaReward_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FestaCheckFestaReward_NoResend");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FestaCheckFestaReward_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaCheckFestaReward_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FestaCheckFestaReward_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaFestaTop
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FestaFestaTop final
{
public:
	struct FFestaFestaTopRequest                  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaFestaTop) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaFestaTop");
static_assert(sizeof(HttpHelper_Send_FestaFestaTop) == 0x000008, "Wrong size on HttpHelper_Send_FestaFestaTop");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop, Request) == 0x000000, "Member 'HttpHelper_Send_FestaFestaTop::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FestaFestaTop::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaFestaTop_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FestaFestaTop_Callbacked final
{
public:
	struct FFestaFestaTopRequest                  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaFestaTop_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaFestaTop_Callbacked");
static_assert(sizeof(HttpHelper_Send_FestaFestaTop_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FestaFestaTop_Callbacked");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FestaFestaTop_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FestaFestaTop_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaFestaTop_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FestaFestaTop_Callbacked_NoResend final
{
public:
	struct FFestaFestaTopRequest                  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaFestaTop_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaFestaTop_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FestaFestaTop_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FestaFestaTop_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FestaFestaTop_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FestaFestaTop_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FestaFestaTop_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FestaFestaTop_NoResend final
{
public:
	struct FFestaFestaTopRequest                  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FestaFestaTop_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FestaFestaTop_NoResend");
static_assert(sizeof(HttpHelper_Send_FestaFestaTop_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FestaFestaTop_NoResend");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FestaFestaTop_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FestaFestaTop_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FestaFestaTop_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendAcceptFriend final
{
public:
	struct FFriendAcceptFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendAcceptFriend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendAcceptFriend");
static_assert(sizeof(HttpHelper_Send_FriendAcceptFriend) == 0x000018, "Wrong size on HttpHelper_Send_FriendAcceptFriend");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendAcceptFriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendAcceptFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendAcceptFriend_Callbacked final
{
public:
	struct FFriendAcceptFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendAcceptFriend_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendAcceptFriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendAcceptFriend_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_FriendAcceptFriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendAcceptFriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendAcceptFriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend final
{
public:
	struct FFriendAcceptFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendAcceptFriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendAcceptFriend_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendAcceptFriend_NoResend final
{
public:
	struct FFriendAcceptFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendAcceptFriend_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendAcceptFriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendAcceptFriend_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_FriendAcceptFriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendAcceptFriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendAcceptFriend_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendAcceptFriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendApplyFriend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendApplyFriend final
{
public:
	struct FFriendApplyFriendRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendApplyFriend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendApplyFriend");
static_assert(sizeof(HttpHelper_Send_FriendApplyFriend) == 0x000020, "Wrong size on HttpHelper_Send_FriendApplyFriend");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendApplyFriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_FriendApplyFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendApplyFriend_Callbacked
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_FriendApplyFriend_Callbacked final
{
public:
	struct FFriendApplyFriendRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendApplyFriend_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendApplyFriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendApplyFriend_Callbacked) == 0x000028, "Wrong size on HttpHelper_Send_FriendApplyFriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendApplyFriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend_Callbacked, Callback) == 0x000018, "Member 'HttpHelper_Send_FriendApplyFriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendApplyFriend_Callbacked_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend final
{
public:
	struct FFriendApplyFriendRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend, Callback) == 0x000018, "Member 'HttpHelper_Send_FriendApplyFriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendApplyFriend_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendApplyFriend_NoResend final
{
public:
	struct FFriendApplyFriendRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendApplyFriend_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendApplyFriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendApplyFriend_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_FriendApplyFriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendApplyFriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendApplyFriend_NoResend, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_FriendApplyFriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendCancelFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendCancelFriend final
{
public:
	struct FFriendCancelFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendCancelFriend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendCancelFriend");
static_assert(sizeof(HttpHelper_Send_FriendCancelFriend) == 0x000018, "Wrong size on HttpHelper_Send_FriendCancelFriend");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendCancelFriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendCancelFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendCancelFriend_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendCancelFriend_Callbacked final
{
public:
	struct FFriendCancelFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendCancelFriend_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendCancelFriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendCancelFriend_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_FriendCancelFriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendCancelFriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendCancelFriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendCancelFriend_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend final
{
public:
	struct FFriendCancelFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendCancelFriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendCancelFriend_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendCancelFriend_NoResend final
{
public:
	struct FFriendCancelFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendCancelFriend_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendCancelFriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendCancelFriend_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_FriendCancelFriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendCancelFriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendCancelFriend_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendCancelFriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FriendGetFriendLastDate final
{
public:
	struct FFriendGetFriendLastDateRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendLastDate) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendLastDate");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendLastDate) == 0x000008, "Wrong size on HttpHelper_Send_FriendGetFriendLastDate");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendLastDate::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendLastDate::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FriendGetFriendLastDate_Callbacked final
{
public:
	struct FFriendGetFriendLastDateRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendLastDate_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FriendGetFriendLastDate_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendLastDate_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendLastDate_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend final
{
public:
	struct FFriendGetFriendLastDateRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendLastDate_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendLastDate_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FriendGetFriendLastDate_NoResend final
{
public:
	struct FFriendGetFriendLastDateRequest        Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendLastDate_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendLastDate_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendLastDate_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FriendGetFriendLastDate_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendLastDate_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendLastDate_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendLastDate_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendList
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FriendGetFriendList final
{
public:
	struct FFriendGetFriendListRequest            Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendList) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendList");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendList) == 0x000008, "Wrong size on HttpHelper_Send_FriendGetFriendList");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendList::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendList::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendList_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FriendGetFriendList_Callbacked final
{
public:
	struct FFriendGetFriendListRequest            Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendList_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendList_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendList_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FriendGetFriendList_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendList_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendList_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendList_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend final
{
public:
	struct FFriendGetFriendListRequest            Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendList_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendGetFriendList_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FriendGetFriendList_NoResend final
{
public:
	struct FFriendGetFriendListRequest            Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendGetFriendList_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendGetFriendList_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendGetFriendList_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FriendGetFriendList_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendGetFriendList_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendGetFriendList_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FriendGetFriendList_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FriendNotifyFriend final
{
public:
	struct FFriendNotifyFriendRequest             Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendNotifyFriend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendNotifyFriend");
static_assert(sizeof(HttpHelper_Send_FriendNotifyFriend) == 0x000008, "Wrong size on HttpHelper_Send_FriendNotifyFriend");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendNotifyFriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FriendNotifyFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FriendNotifyFriend_Callbacked final
{
public:
	struct FFriendNotifyFriendRequest             Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendNotifyFriend_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendNotifyFriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendNotifyFriend_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_FriendNotifyFriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendNotifyFriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_FriendNotifyFriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend final
{
public:
	struct FFriendNotifyFriendRequest             Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_FriendNotifyFriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendNotifyFriend_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_FriendNotifyFriend_NoResend final
{
public:
	struct FFriendNotifyFriendRequest             Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendNotifyFriend_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_FriendNotifyFriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendNotifyFriend_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_FriendNotifyFriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendNotifyFriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendNotifyFriend_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_FriendNotifyFriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRejectFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendRejectFriend final
{
public:
	struct FFriendRejectFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendRejectFriend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRejectFriend");
static_assert(sizeof(HttpHelper_Send_FriendRejectFriend) == 0x000018, "Wrong size on HttpHelper_Send_FriendRejectFriend");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRejectFriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendRejectFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRejectFriend_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendRejectFriend_Callbacked final
{
public:
	struct FFriendRejectFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendRejectFriend_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRejectFriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendRejectFriend_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_FriendRejectFriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRejectFriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendRejectFriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRejectFriend_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend final
{
public:
	struct FFriendRejectFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendRejectFriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRejectFriend_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendRejectFriend_NoResend final
{
public:
	struct FFriendRejectFriendRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendRejectFriend_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRejectFriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendRejectFriend_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_FriendRejectFriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRejectFriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRejectFriend_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendRejectFriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRequestFriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendRequestFriend final
{
public:
	struct FFriendRequestFriendRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendRequestFriend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRequestFriend");
static_assert(sizeof(HttpHelper_Send_FriendRequestFriend) == 0x000018, "Wrong size on HttpHelper_Send_FriendRequestFriend");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRequestFriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendRequestFriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRequestFriend_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendRequestFriend_Callbacked final
{
public:
	struct FFriendRequestFriendRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendRequestFriend_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRequestFriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendRequestFriend_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_FriendRequestFriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRequestFriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendRequestFriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRequestFriend_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend final
{
public:
	struct FFriendRequestFriendRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendRequestFriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendRequestFriend_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendRequestFriend_NoResend final
{
public:
	struct FFriendRequestFriendRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendRequestFriend_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendRequestFriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendRequestFriend_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_FriendRequestFriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendRequestFriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendRequestFriend_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendRequestFriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendUnfriend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendUnfriend final
{
public:
	struct FFriendUnfriendRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendUnfriend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendUnfriend");
static_assert(sizeof(HttpHelper_Send_FriendUnfriend) == 0x000018, "Wrong size on HttpHelper_Send_FriendUnfriend");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendUnfriend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendUnfriend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendUnfriend_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendUnfriend_Callbacked final
{
public:
	struct FFriendUnfriendRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendUnfriend_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendUnfriend_Callbacked");
static_assert(sizeof(HttpHelper_Send_FriendUnfriend_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_FriendUnfriend_Callbacked");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_FriendUnfriend_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendUnfriend_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendUnfriend_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_FriendUnfriend_Callbacked_NoResend final
{
public:
	struct FFriendUnfriendRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_FriendUnfriend_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendUnfriend_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendUnfriend_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_FriendUnfriend_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendUnfriend_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_FriendUnfriend_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_FriendUnfriend_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_FriendUnfriend_NoResend final
{
public:
	struct FFriendUnfriendRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_FriendUnfriend_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_FriendUnfriend_NoResend");
static_assert(sizeof(HttpHelper_Send_FriendUnfriend_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_FriendUnfriend_NoResend");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_FriendUnfriend_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_FriendUnfriend_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_FriendUnfriend_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_GhostGetFriendGhostData final
{
public:
	struct FGhostGetFriendGhostDataRequest        Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_GhostGetFriendGhostData) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetFriendGhostData");
static_assert(sizeof(HttpHelper_Send_GhostGetFriendGhostData) == 0x000030, "Wrong size on HttpHelper_Send_GhostGetFriendGhostData");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetFriendGhostData::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_GhostGetFriendGhostData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData_Callbacked
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_GhostGetFriendGhostData_Callbacked final
{
public:
	struct FGhostGetFriendGhostDataRequest        Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetFriendGhostData_Callbacked");
static_assert(sizeof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked) == 0x000038, "Wrong size on HttpHelper_Send_GhostGetFriendGhostData_Callbacked");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetFriendGhostData_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked, Callback) == 0x000028, "Member 'HttpHelper_Send_GhostGetFriendGhostData_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData_Callbacked_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend final
{
public:
	struct FGhostGetFriendGhostDataRequest        Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend, Callback) == 0x000028, "Member 'HttpHelper_Send_GhostGetFriendGhostData_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetFriendGhostData_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_GhostGetFriendGhostData_NoResend final
{
public:
	struct FGhostGetFriendGhostDataRequest        Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_GhostGetFriendGhostData_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetFriendGhostData_NoResend");
static_assert(sizeof(HttpHelper_Send_GhostGetFriendGhostData_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_GhostGetFriendGhostData_NoResend");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetFriendGhostData_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetFriendGhostData_NoResend, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_GhostGetFriendGhostData_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_GhostGetRankingGhostData final
{
public:
	struct FGhostGetRankingGhostDataRequest       Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_GhostGetRankingGhostData) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetRankingGhostData");
static_assert(sizeof(HttpHelper_Send_GhostGetRankingGhostData) == 0x000030, "Wrong size on HttpHelper_Send_GhostGetRankingGhostData");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetRankingGhostData::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_GhostGetRankingGhostData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData_Callbacked
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_GhostGetRankingGhostData_Callbacked final
{
public:
	struct FGhostGetRankingGhostDataRequest       Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetRankingGhostData_Callbacked");
static_assert(sizeof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked) == 0x000038, "Wrong size on HttpHelper_Send_GhostGetRankingGhostData_Callbacked");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetRankingGhostData_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked, Callback) == 0x000028, "Member 'HttpHelper_Send_GhostGetRankingGhostData_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData_Callbacked_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend final
{
public:
	struct FGhostGetRankingGhostDataRequest       Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend, Callback) == 0x000028, "Member 'HttpHelper_Send_GhostGetRankingGhostData_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_GhostGetRankingGhostData_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_GhostGetRankingGhostData_NoResend final
{
public:
	struct FGhostGetRankingGhostDataRequest       Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_GhostGetRankingGhostData_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_GhostGetRankingGhostData_NoResend");
static_assert(sizeof(HttpHelper_Send_GhostGetRankingGhostData_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_GhostGetRankingGhostData_NoResend");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_GhostGetRankingGhostData_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_GhostGetRankingGhostData_NoResend, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_GhostGetRankingGhostData_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_HealthCheck
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_HealthCheck final
{
public:
	struct FHealthCheckRequest                    Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_HealthCheck) == 0x000004, "Wrong alignment on HttpHelper_Send_HealthCheck");
static_assert(sizeof(HttpHelper_Send_HealthCheck) == 0x000008, "Wrong size on HttpHelper_Send_HealthCheck");
static_assert(offsetof(HttpHelper_Send_HealthCheck, Request) == 0x000000, "Member 'HttpHelper_Send_HealthCheck::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_HealthCheck, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_HealthCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_HealthCheck_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_HealthCheck_Callbacked final
{
public:
	struct FHealthCheckRequest                    Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_HealthCheck_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_HealthCheck_Callbacked");
static_assert(sizeof(HttpHelper_Send_HealthCheck_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_HealthCheck_Callbacked");
static_assert(offsetof(HttpHelper_Send_HealthCheck_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_HealthCheck_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_HealthCheck_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_HealthCheck_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_HealthCheck_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_HealthCheck_Callbacked_NoResend final
{
public:
	struct FHealthCheckRequest                    Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_HealthCheck_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_HealthCheck_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_HealthCheck_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_HealthCheck_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_HealthCheck_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_HealthCheck_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_HealthCheck_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_HealthCheck_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_HealthCheck_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_HealthCheck_NoResend final
{
public:
	struct FHealthCheckRequest                    Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_HealthCheck_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_HealthCheck_NoResend");
static_assert(sizeof(HttpHelper_Send_HealthCheck_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_HealthCheck_NoResend");
static_assert(offsetof(HttpHelper_Send_HealthCheck_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_HealthCheck_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_HealthCheck_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_HealthCheck_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_LegendCompeCheckLegendCompeReward final
{
public:
	struct FLegendCompeCheckLegendCompeRewardRequest Request;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LegendCompeCheckLegendCompeReward) == 0x000004, "Wrong alignment on HttpHelper_Send_LegendCompeCheckLegendCompeReward");
static_assert(sizeof(HttpHelper_Send_LegendCompeCheckLegendCompeReward) == 0x000008, "Wrong size on HttpHelper_Send_LegendCompeCheckLegendCompeReward");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward, Request) == 0x000000, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked final
{
public:
	struct FLegendCompeCheckLegendCompeRewardRequest Request;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked");
static_assert(sizeof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend final
{
public:
	struct FLegendCompeCheckLegendCompeRewardRequest Request;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LegendCompeCheckLegendCompeReward_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend final
{
public:
	struct FLegendCompeCheckLegendCompeRewardRequest Request;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend");
static_assert(sizeof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_LegendCompeCheckLegendCompeReward_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyGenerateLobby final
{
public:
	struct FLobbyGenerateLobbyRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyGenerateLobby) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGenerateLobby");
static_assert(sizeof(HttpHelper_Send_LobbyGenerateLobby) == 0x000018, "Wrong size on HttpHelper_Send_LobbyGenerateLobby");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGenerateLobby::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyGenerateLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyGenerateLobby_Callbacked final
{
public:
	struct FLobbyGenerateLobbyRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyGenerateLobby_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGenerateLobby_Callbacked");
static_assert(sizeof(HttpHelper_Send_LobbyGenerateLobby_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_LobbyGenerateLobby_Callbacked");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGenerateLobby_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyGenerateLobby_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend final
{
public:
	struct FLobbyGenerateLobbyRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyGenerateLobby_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGenerateLobby_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyGenerateLobby_NoResend final
{
public:
	struct FLobbyGenerateLobbyRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyGenerateLobby_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGenerateLobby_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyGenerateLobby_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_LobbyGenerateLobby_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGenerateLobby_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGenerateLobby_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyGenerateLobby_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyGetEosLobbyId final
{
public:
	struct FLobbyGetEosLobbyIdRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyGetEosLobbyId) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGetEosLobbyId");
static_assert(sizeof(HttpHelper_Send_LobbyGetEosLobbyId) == 0x000018, "Wrong size on HttpHelper_Send_LobbyGetEosLobbyId");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGetEosLobbyId::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyGetEosLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyGetEosLobbyId_Callbacked final
{
public:
	struct FLobbyGetEosLobbyIdRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGetEosLobbyId_Callbacked");
static_assert(sizeof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_LobbyGetEosLobbyId_Callbacked");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGetEosLobbyId_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyGetEosLobbyId_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend final
{
public:
	struct FLobbyGetEosLobbyIdRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyGetEosLobbyId_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyGetEosLobbyId_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyGetEosLobbyId_NoResend final
{
public:
	struct FLobbyGetEosLobbyIdRequest             Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyGetEosLobbyId_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyGetEosLobbyId_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyGetEosLobbyId_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_LobbyGetEosLobbyId_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyGetEosLobbyId_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyGetEosLobbyId_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyGetEosLobbyId_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyKeepAlive final
{
public:
	struct FLobbyKeepAliveRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyKeepAlive) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyKeepAlive");
static_assert(sizeof(HttpHelper_Send_LobbyKeepAlive) == 0x000018, "Wrong size on HttpHelper_Send_LobbyKeepAlive");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyKeepAlive::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyKeepAlive::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyKeepAlive_Callbacked final
{
public:
	struct FLobbyKeepAliveRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyKeepAlive_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyKeepAlive_Callbacked");
static_assert(sizeof(HttpHelper_Send_LobbyKeepAlive_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_LobbyKeepAlive_Callbacked");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyKeepAlive_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyKeepAlive_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend final
{
public:
	struct FLobbyKeepAliveRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyKeepAlive_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyKeepAlive_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyKeepAlive_NoResend final
{
public:
	struct FLobbyKeepAliveRequest                 Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyKeepAlive_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyKeepAlive_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyKeepAlive_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_LobbyKeepAlive_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyKeepAlive_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyKeepAlive_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyKeepAlive_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyRemoveLobby final
{
public:
	struct FLobbyRemoveLobbyRequest               Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyRemoveLobby) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyRemoveLobby");
static_assert(sizeof(HttpHelper_Send_LobbyRemoveLobby) == 0x000018, "Wrong size on HttpHelper_Send_LobbyRemoveLobby");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyRemoveLobby::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyRemoveLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyRemoveLobby_Callbacked final
{
public:
	struct FLobbyRemoveLobbyRequest               Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyRemoveLobby_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyRemoveLobby_Callbacked");
static_assert(sizeof(HttpHelper_Send_LobbyRemoveLobby_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_LobbyRemoveLobby_Callbacked");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyRemoveLobby_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyRemoveLobby_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend final
{
public:
	struct FLobbyRemoveLobbyRequest               Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_LobbyRemoveLobby_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LobbyRemoveLobby_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_LobbyRemoveLobby_NoResend final
{
public:
	struct FLobbyRemoveLobbyRequest               Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LobbyRemoveLobby_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LobbyRemoveLobby_NoResend");
static_assert(sizeof(HttpHelper_Send_LobbyRemoveLobby_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_LobbyRemoveLobby_NoResend");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LobbyRemoveLobby_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LobbyRemoveLobby_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_LobbyRemoveLobby_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LoginCheck
// 0x0090 (0x0090 - 0x0000)
struct HttpHelper_Send_LoginCheck final
{
public:
	struct FLoginCheckRequest                     Request;                                           // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LoginCheck) == 0x000008, "Wrong alignment on HttpHelper_Send_LoginCheck");
static_assert(sizeof(HttpHelper_Send_LoginCheck) == 0x000090, "Wrong size on HttpHelper_Send_LoginCheck");
static_assert(offsetof(HttpHelper_Send_LoginCheck, Request) == 0x000000, "Member 'HttpHelper_Send_LoginCheck::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LoginCheck, ReturnValue) == 0x000088, "Member 'HttpHelper_Send_LoginCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LoginCheck_Callbacked
// 0x0098 (0x0098 - 0x0000)
struct HttpHelper_Send_LoginCheck_Callbacked final
{
public:
	struct FLoginCheckRequest                     Request;                                           // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0088(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LoginCheck_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_LoginCheck_Callbacked");
static_assert(sizeof(HttpHelper_Send_LoginCheck_Callbacked) == 0x000098, "Wrong size on HttpHelper_Send_LoginCheck_Callbacked");
static_assert(offsetof(HttpHelper_Send_LoginCheck_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_LoginCheck_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LoginCheck_Callbacked, Callback) == 0x000088, "Member 'HttpHelper_Send_LoginCheck_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LoginCheck_Callbacked_NoResend
// 0x0098 (0x0098 - 0x0000)
struct HttpHelper_Send_LoginCheck_Callbacked_NoResend final
{
public:
	struct FLoginCheckRequest                     Request;                                           // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0088(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_LoginCheck_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LoginCheck_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_LoginCheck_Callbacked_NoResend) == 0x000098, "Wrong size on HttpHelper_Send_LoginCheck_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_LoginCheck_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LoginCheck_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LoginCheck_Callbacked_NoResend, Callback) == 0x000088, "Member 'HttpHelper_Send_LoginCheck_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_LoginCheck_NoResend
// 0x0090 (0x0090 - 0x0000)
struct HttpHelper_Send_LoginCheck_NoResend final
{
public:
	struct FLoginCheckRequest                     Request;                                           // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_LoginCheck_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_LoginCheck_NoResend");
static_assert(sizeof(HttpHelper_Send_LoginCheck_NoResend) == 0x000090, "Wrong size on HttpHelper_Send_LoginCheck_NoResend");
static_assert(offsetof(HttpHelper_Send_LoginCheck_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_LoginCheck_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_LoginCheck_NoResend, ReturnValue) == 0x000088, "Member 'HttpHelper_Send_LoginCheck_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_MasterDataGetMaintenanceSchedule final
{
public:
	struct FMasterDataGetMaintenanceScheduleRequest Request;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMaintenanceSchedule) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetMaintenanceSchedule");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMaintenanceSchedule) == 0x000008, "Wrong size on HttpHelper_Send_MasterDataGetMaintenanceSchedule");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked final
{
public:
	struct FMasterDataGetMaintenanceScheduleRequest Request;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend final
{
public:
	struct FMasterDataGetMaintenanceScheduleRequest Request;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMaintenanceSchedule_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend final
{
public:
	struct FMasterDataGetMaintenanceScheduleRequest Request;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetMaintenanceSchedule_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MasterDataGetMasterData final
{
public:
	struct FMasterDataGetMasterDataRequest        Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMasterData) == 0x000008, "Wrong alignment on HttpHelper_Send_MasterDataGetMasterData");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMasterData) == 0x000018, "Wrong size on HttpHelper_Send_MasterDataGetMasterData");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMasterData::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MasterDataGetMasterData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MasterDataGetMasterData_Callbacked final
{
public:
	struct FMasterDataGetMasterDataRequest        Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMasterData_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MasterDataGetMasterData_Callbacked");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMasterData_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_MasterDataGetMasterData_Callbacked");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMasterData_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_MasterDataGetMasterData_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend final
{
public:
	struct FMasterDataGetMasterDataRequest        Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_MasterDataGetMasterData_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetMasterData_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MasterDataGetMasterData_NoResend final
{
public:
	struct FMasterDataGetMasterDataRequest        Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MasterDataGetMasterData_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MasterDataGetMasterData_NoResend");
static_assert(sizeof(HttpHelper_Send_MasterDataGetMasterData_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_MasterDataGetMasterData_NoResend");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetMasterData_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetMasterData_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MasterDataGetMasterData_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_MasterDataGetVersion final
{
public:
	struct FMasterDataGetVersionRequest           Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetVersion) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetVersion");
static_assert(sizeof(HttpHelper_Send_MasterDataGetVersion) == 0x000008, "Wrong size on HttpHelper_Send_MasterDataGetVersion");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetVersion::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_MasterDataGetVersion_Callbacked final
{
public:
	struct FMasterDataGetVersionRequest           Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetVersion_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetVersion_Callbacked");
static_assert(sizeof(HttpHelper_Send_MasterDataGetVersion_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_MasterDataGetVersion_Callbacked");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetVersion_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetVersion_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend final
{
public:
	struct FMasterDataGetVersionRequest           Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetVersion_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MasterDataGetVersion_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_MasterDataGetVersion_NoResend final
{
public:
	struct FMasterDataGetVersionRequest           Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MasterDataGetVersion_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_MasterDataGetVersion_NoResend");
static_assert(sizeof(HttpHelper_Send_MasterDataGetVersion_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_MasterDataGetVersion_NoResend");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MasterDataGetVersion_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MasterDataGetVersion_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_MasterDataGetVersion_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MatchmakingDescribe final
{
public:
	struct FMatchmakingDescribeRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingDescribe) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingDescribe");
static_assert(sizeof(HttpHelper_Send_MatchmakingDescribe) == 0x000018, "Wrong size on HttpHelper_Send_MatchmakingDescribe");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingDescribe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MatchmakingDescribe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MatchmakingDescribe_Callbacked final
{
public:
	struct FMatchmakingDescribeRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingDescribe_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingDescribe_Callbacked");
static_assert(sizeof(HttpHelper_Send_MatchmakingDescribe_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_MatchmakingDescribe_Callbacked");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingDescribe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_MatchmakingDescribe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend final
{
public:
	struct FMatchmakingDescribeRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_MatchmakingDescribe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingDescribe_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MatchmakingDescribe_NoResend final
{
public:
	struct FMatchmakingDescribeRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingDescribe_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingDescribe_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingDescribe_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_MatchmakingDescribe_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingDescribe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingDescribe_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MatchmakingDescribe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingStop
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MatchmakingStop final
{
public:
	struct FMatchmakingStopRequest                Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingStop) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingStop");
static_assert(sizeof(HttpHelper_Send_MatchmakingStop) == 0x000018, "Wrong size on HttpHelper_Send_MatchmakingStop");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingStop::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MatchmakingStop::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingStop_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MatchmakingStop_Callbacked final
{
public:
	struct FMatchmakingStopRequest                Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingStop_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingStop_Callbacked");
static_assert(sizeof(HttpHelper_Send_MatchmakingStop_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_MatchmakingStop_Callbacked");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingStop_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_MatchmakingStop_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingStop_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MatchmakingStop_Callbacked_NoResend final
{
public:
	struct FMatchmakingStopRequest                Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingStop_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingStop_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingStop_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_MatchmakingStop_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingStop_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_MatchmakingStop_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingStop_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MatchmakingStop_NoResend final
{
public:
	struct FMatchmakingStopRequest                Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingStop_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingStop_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingStop_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_MatchmakingStop_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingStop_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingStop_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MatchmakingStop_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeFesta final
{
public:
	struct FMatchmakingSubscribeFestaRequest      Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeFesta) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeFesta");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeFesta) == 0x000060, "Wrong size on HttpHelper_Send_MatchmakingSubscribeFesta");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta, ReturnValue) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta_Callbacked
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked final
{
public:
	struct FMatchmakingSubscribeFestaRequest      Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked) == 0x000068, "Wrong size on HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked, Callback) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta_Callbacked_NoResend
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend final
{
public:
	struct FMatchmakingSubscribeFestaRequest      Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend) == 0x000068, "Wrong size on HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend, Callback) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeFesta_NoResend
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeFesta_NoResend final
{
public:
	struct FMatchmakingSubscribeFestaRequest      Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeFesta_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeFesta_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeFesta_NoResend) == 0x000060, "Wrong size on HttpHelper_Send_MatchmakingSubscribeFesta_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeFesta_NoResend, ReturnValue) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeFesta_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeLegendCompe final
{
public:
	struct FMatchmakingSubscribeLegendCompeRequest Request;                                          // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeLegendCompe");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeLegendCompe) == 0x000060, "Wrong size on HttpHelper_Send_MatchmakingSubscribeLegendCompe");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe, ReturnValue) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe_Callbacked
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked final
{
public:
	struct FMatchmakingSubscribeLegendCompeRequest Request;                                          // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked) == 0x000068, "Wrong size on HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked, Callback) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend final
{
public:
	struct FMatchmakingSubscribeLegendCompeRequest Request;                                          // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend) == 0x000068, "Wrong size on HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend, Callback) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeLegendCompe_NoResend
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend final
{
public:
	struct FMatchmakingSubscribeLegendCompeRequest Request;                                          // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend) == 0x000060, "Wrong size on HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend, ReturnValue) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeLegendCompe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeRankMatch final
{
public:
	struct FMatchmakingSubscribeRankMatchRequest  Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeRankMatch");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeRankMatch) == 0x000060, "Wrong size on HttpHelper_Send_MatchmakingSubscribeRankMatch");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch, ReturnValue) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch_Callbacked
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked final
{
public:
	struct FMatchmakingSubscribeRankMatchRequest  Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked) == 0x000068, "Wrong size on HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked, Callback) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend
// 0x0068 (0x0068 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend final
{
public:
	struct FMatchmakingSubscribeRankMatchRequest  Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend) == 0x000068, "Wrong size on HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend, Callback) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingSubscribeRankMatch_NoResend
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend final
{
public:
	struct FMatchmakingSubscribeRankMatchRequest  Request;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend) == 0x000060, "Wrong size on HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend, ReturnValue) == 0x000058, "Member 'HttpHelper_Send_MatchmakingSubscribeRankMatch_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MatchmakingUnsubscribe final
{
public:
	struct FMatchmakingUnsubscribeRequest         Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingUnsubscribe) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingUnsubscribe");
static_assert(sizeof(HttpHelper_Send_MatchmakingUnsubscribe) == 0x000018, "Wrong size on HttpHelper_Send_MatchmakingUnsubscribe");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingUnsubscribe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MatchmakingUnsubscribe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MatchmakingUnsubscribe_Callbacked final
{
public:
	struct FMatchmakingUnsubscribeRequest         Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingUnsubscribe_Callbacked");
static_assert(sizeof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_MatchmakingUnsubscribe_Callbacked");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingUnsubscribe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_MatchmakingUnsubscribe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend final
{
public:
	struct FMatchmakingUnsubscribeRequest         Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_MatchmakingUnsubscribe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_MatchmakingUnsubscribe_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_MatchmakingUnsubscribe_NoResend final
{
public:
	struct FMatchmakingUnsubscribeRequest         Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_MatchmakingUnsubscribe_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_MatchmakingUnsubscribe_NoResend");
static_assert(sizeof(HttpHelper_Send_MatchmakingUnsubscribe_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_MatchmakingUnsubscribe_NoResend");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_MatchmakingUnsubscribe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_MatchmakingUnsubscribe_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_MatchmakingUnsubscribe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_OntSaveOntParticipantUser final
{
public:
	struct FOntSaveOntParticipantUserRequest      Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OntSaveOntParticipantUser) == 0x000004, "Wrong alignment on HttpHelper_Send_OntSaveOntParticipantUser");
static_assert(sizeof(HttpHelper_Send_OntSaveOntParticipantUser) == 0x000008, "Wrong size on HttpHelper_Send_OntSaveOntParticipantUser");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser, Request) == 0x000000, "Member 'HttpHelper_Send_OntSaveOntParticipantUser::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_OntSaveOntParticipantUser::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_OntSaveOntParticipantUser_Callbacked final
{
public:
	struct FOntSaveOntParticipantUserRequest      Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_OntSaveOntParticipantUser_Callbacked");
static_assert(sizeof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_OntSaveOntParticipantUser_Callbacked");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_OntSaveOntParticipantUser_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_OntSaveOntParticipantUser_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend final
{
public:
	struct FOntSaveOntParticipantUserRequest      Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_OntSaveOntParticipantUser_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OntSaveOntParticipantUser_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_OntSaveOntParticipantUser_NoResend final
{
public:
	struct FOntSaveOntParticipantUserRequest      Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OntSaveOntParticipantUser_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_OntSaveOntParticipantUser_NoResend");
static_assert(sizeof(HttpHelper_Send_OntSaveOntParticipantUser_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_OntSaveOntParticipantUser_NoResend");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_OntSaveOntParticipantUser_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OntSaveOntParticipantUser_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_OntSaveOntParticipantUser_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Send_OperationSaveAutoReport final
{
public:
	struct FOperationSaveAutoReportRequest        Request;                                           // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_OperationSaveAutoReport) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveAutoReport");
static_assert(sizeof(HttpHelper_Send_OperationSaveAutoReport) == 0x000048, "Wrong size on HttpHelper_Send_OperationSaveAutoReport");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveAutoReport::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport, ReturnValue) == 0x000040, "Member 'HttpHelper_Send_OperationSaveAutoReport::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport_Callbacked
// 0x0050 (0x0050 - 0x0000)
struct HttpHelper_Send_OperationSaveAutoReport_Callbacked final
{
public:
	struct FOperationSaveAutoReportRequest        Request;                                           // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OperationSaveAutoReport_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveAutoReport_Callbacked");
static_assert(sizeof(HttpHelper_Send_OperationSaveAutoReport_Callbacked) == 0x000050, "Wrong size on HttpHelper_Send_OperationSaveAutoReport_Callbacked");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveAutoReport_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport_Callbacked, Callback) == 0x000040, "Member 'HttpHelper_Send_OperationSaveAutoReport_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport_Callbacked_NoResend
// 0x0050 (0x0050 - 0x0000)
struct HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend final
{
public:
	struct FOperationSaveAutoReportRequest        Request;                                           // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend) == 0x000050, "Wrong size on HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend, Callback) == 0x000040, "Member 'HttpHelper_Send_OperationSaveAutoReport_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveAutoReport_NoResend
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_Send_OperationSaveAutoReport_NoResend final
{
public:
	struct FOperationSaveAutoReportRequest        Request;                                           // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_OperationSaveAutoReport_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveAutoReport_NoResend");
static_assert(sizeof(HttpHelper_Send_OperationSaveAutoReport_NoResend) == 0x000048, "Wrong size on HttpHelper_Send_OperationSaveAutoReport_NoResend");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveAutoReport_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveAutoReport_NoResend, ReturnValue) == 0x000040, "Member 'HttpHelper_Send_OperationSaveAutoReport_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_OperationSaveOperatorReport final
{
public:
	struct FOperationSaveOperatorReportRequest    Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_OperationSaveOperatorReport) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveOperatorReport");
static_assert(sizeof(HttpHelper_Send_OperationSaveOperatorReport) == 0x000038, "Wrong size on HttpHelper_Send_OperationSaveOperatorReport");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveOperatorReport::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_OperationSaveOperatorReport::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport_Callbacked
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_OperationSaveOperatorReport_Callbacked final
{
public:
	struct FOperationSaveOperatorReportRequest    Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveOperatorReport_Callbacked");
static_assert(sizeof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked) == 0x000040, "Wrong size on HttpHelper_Send_OperationSaveOperatorReport_Callbacked");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveOperatorReport_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked, Callback) == 0x000030, "Member 'HttpHelper_Send_OperationSaveOperatorReport_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport_Callbacked_NoResend
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend final
{
public:
	struct FOperationSaveOperatorReportRequest    Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend) == 0x000040, "Wrong size on HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend, Callback) == 0x000030, "Member 'HttpHelper_Send_OperationSaveOperatorReport_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_OperationSaveOperatorReport_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_OperationSaveOperatorReport_NoResend final
{
public:
	struct FOperationSaveOperatorReportRequest    Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_OperationSaveOperatorReport_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_OperationSaveOperatorReport_NoResend");
static_assert(sizeof(HttpHelper_Send_OperationSaveOperatorReport_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_OperationSaveOperatorReport_NoResend");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_OperationSaveOperatorReport_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_OperationSaveOperatorReport_NoResend, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_OperationSaveOperatorReport_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingFestaPoint final
{
public:
	struct FRankingGetFriendRankingFestaPointRequest Request;                                        // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingFestaPoint");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingFestaPoint) == 0x000038, "Wrong size on HttpHelper_Send_RankingGetFriendRankingFestaPoint");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint_Callbacked
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked final
{
public:
	struct FRankingGetFriendRankingFestaPointRequest Request;                                        // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked) == 0x000040, "Wrong size on HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked, Callback) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend final
{
public:
	struct FRankingGetFriendRankingFestaPointRequest Request;                                        // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend) == 0x000040, "Wrong size on HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend, Callback) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingFestaPoint_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend final
{
public:
	struct FRankingGetFriendRankingFestaPointRequest Request;                                        // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingFestaPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingLegendCompe final
{
public:
	struct FRankingGetFriendRankingLegendCompeRequest Request;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingLegendCompe");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingLegendCompe) == 0x000038, "Wrong size on HttpHelper_Send_RankingGetFriendRankingLegendCompe");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe_Callbacked
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked final
{
public:
	struct FRankingGetFriendRankingLegendCompeRequest Request;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked) == 0x000040, "Wrong size on HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked, Callback) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend final
{
public:
	struct FRankingGetFriendRankingLegendCompeRequest Request;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend) == 0x000040, "Wrong size on HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend, Callback) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingLegendCompe_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend final
{
public:
	struct FRankingGetFriendRankingLegendCompeRequest Request;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_RankingGetFriendRankingLegendCompe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingRankMatch final
{
public:
	struct FRankingGetFriendRankingRankMatchRequest Request;                                         // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingRankMatch");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingRankMatch) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetFriendRankingRankMatch");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch_Callbacked
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked final
{
public:
	struct FRankingGetFriendRankingRankMatchRequest Request;                                         // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked) == 0x000038, "Wrong size on HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked, Callback) == 0x000028, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend final
{
public:
	struct FRankingGetFriendRankingRankMatchRequest Request;                                         // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend, Callback) == 0x000028, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetFriendRankingRankMatch_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend final
{
public:
	struct FRankingGetFriendRankingRankMatchRequest Request;                                         // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_RankingGetFriendRankingRankMatch_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingFestaPoint final
{
public:
	struct FRankingGetMyRankingFestaPointRequest  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingFestaPoint) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingFestaPoint");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingFestaPoint) == 0x000008, "Wrong size on HttpHelper_Send_RankingGetMyRankingFestaPoint");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked final
{
public:
	struct FRankingGetMyRankingFestaPointRequest  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend final
{
public:
	struct FRankingGetMyRankingFestaPointRequest  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingFestaPoint_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend final
{
public:
	struct FRankingGetMyRankingFestaPointRequest  Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingFestaPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingLegendCompe final
{
public:
	struct FRankingGetMyRankingLegendCompeRequest Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingLegendCompe) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingLegendCompe");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingLegendCompe) == 0x000008, "Wrong size on HttpHelper_Send_RankingGetMyRankingLegendCompe");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked final
{
public:
	struct FRankingGetMyRankingLegendCompeRequest Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend final
{
public:
	struct FRankingGetMyRankingLegendCompeRequest Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingLegendCompe_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend final
{
public:
	struct FRankingGetMyRankingLegendCompeRequest Request;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingLegendCompe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingRankMatch final
{
public:
	struct FRankingGetMyRankingRankMatchRequest   Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingRankMatch) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingRankMatch");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingRankMatch) == 0x000008, "Wrong size on HttpHelper_Send_RankingGetMyRankingRankMatch");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked final
{
public:
	struct FRankingGetMyRankingRankMatchRequest   Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend final
{
public:
	struct FRankingGetMyRankingRankMatchRequest   Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingRankMatch_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend final
{
public:
	struct FRankingGetMyRankingRankMatchRequest   Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_RankingGetMyRankingRankMatch_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial
// 0x000C (0x000C - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingTimeTrial final
{
public:
	struct FRankingGetMyRankingTimeTrialRequest   Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingTimeTrial) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingTimeTrial");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingTimeTrial) == 0x00000C, "Wrong size on HttpHelper_Send_RankingGetMyRankingTimeTrial");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial, ReturnValue) == 0x000008, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial_Callbacked
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked final
{
public:
	struct FRankingGetMyRankingTimeTrialRequest   Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked) == 0x000018, "Wrong size on HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked, Callback) == 0x000008, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend final
{
public:
	struct FRankingGetMyRankingTimeTrialRequest   Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend, Callback) == 0x000008, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetMyRankingTimeTrial_NoResend
// 0x000C (0x000C - 0x0000)
struct HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend final
{
public:
	struct FRankingGetMyRankingTimeTrialRequest   Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend) == 0x00000C, "Wrong size on HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend, ReturnValue) == 0x000008, "Member 'HttpHelper_Send_RankingGetMyRankingTimeTrial_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingFestaPoint final
{
public:
	struct FRankingGetRankingFestaPointRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingFestaPoint) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingFestaPoint");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingFestaPoint) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingFestaPoint");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint_Callbacked
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked final
{
public:
	struct FRankingGetRankingFestaPointRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked, Callback) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint_Callbacked_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend final
{
public:
	struct FRankingGetRankingFestaPointRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend, Callback) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingFestaPoint_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingFestaPoint_NoResend final
{
public:
	struct FRankingGetRankingFestaPointRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingFestaPoint_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingFestaPoint_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingFestaPoint_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingFestaPoint_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingFestaPoint_NoResend, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingFestaPoint_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingLegendCompe final
{
public:
	struct FRankingGetRankingLegendCompeRequest   Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingLegendCompe) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingLegendCompe");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingLegendCompe) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingLegendCompe");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe_Callbacked
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked final
{
public:
	struct FRankingGetRankingLegendCompeRequest   Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked, Callback) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe_Callbacked_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend final
{
public:
	struct FRankingGetRankingLegendCompeRequest   Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend, Callback) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingLegendCompe_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingLegendCompe_NoResend final
{
public:
	struct FRankingGetRankingLegendCompeRequest   Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingLegendCompe_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingLegendCompe_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingLegendCompe_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingLegendCompe_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingLegendCompe_NoResend, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingLegendCompe_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_RankingGetRankingRankMatch final
{
public:
	struct FRankingGetRankingRankMatchRequest     Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingRankMatch) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingRankMatch");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingRankMatch) == 0x000020, "Wrong size on HttpHelper_Send_RankingGetRankingRankMatch");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingRankMatch::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_RankingGetRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch_Callbacked
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingRankMatch_Callbacked final
{
public:
	struct FRankingGetRankingRankMatchRequest     Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingRankMatch_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingRankMatch_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingRankMatch_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked, Callback) == 0x000018, "Member 'HttpHelper_Send_RankingGetRankingRankMatch_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch_Callbacked_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend final
{
public:
	struct FRankingGetRankingRankMatchRequest     Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend, Callback) == 0x000018, "Member 'HttpHelper_Send_RankingGetRankingRankMatch_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingRankMatch_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_RankingGetRankingRankMatch_NoResend final
{
public:
	struct FRankingGetRankingRankMatchRequest     Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingRankMatch_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingRankMatch_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingRankMatch_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_RankingGetRankingRankMatch_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingRankMatch_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingRankMatch_NoResend, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_RankingGetRankingRankMatch_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingTimeTrial final
{
public:
	struct FRankingGetRankingTimeTrialRequest     Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingTimeTrial) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingTimeTrial");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingTimeTrial) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingTimeTrial");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial_Callbacked
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked final
{
public:
	struct FRankingGetRankingTimeTrialRequest     Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked, Callback) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial_Callbacked_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend final
{
public:
	struct FRankingGetRankingTimeTrialRequest     Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend, Callback) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RankingGetRankingTimeTrial_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_RankingGetRankingTimeTrial_NoResend final
{
public:
	struct FRankingGetRankingTimeTrialRequest     Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_RankingGetRankingTimeTrial_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_RankingGetRankingTimeTrial_NoResend");
static_assert(sizeof(HttpHelper_Send_RankingGetRankingTimeTrial_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_RankingGetRankingTimeTrial_NoResend");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RankingGetRankingTimeTrial_NoResend, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_RankingGetRankingTimeTrial_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult
// 0x0420 (0x0420 - 0x0000)
struct HttpHelper_Send_ResultSaveFestaResult final
{
public:
	struct FResultSaveFestaResultRequest          Request;                                           // 0x0000(0x0418)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0418(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveFestaResult) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveFestaResult");
static_assert(sizeof(HttpHelper_Send_ResultSaveFestaResult) == 0x000420, "Wrong size on HttpHelper_Send_ResultSaveFestaResult");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveFestaResult::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult, ReturnValue) == 0x000418, "Member 'HttpHelper_Send_ResultSaveFestaResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult_Callbacked
// 0x0428 (0x0428 - 0x0000)
struct HttpHelper_Send_ResultSaveFestaResult_Callbacked final
{
public:
	struct FResultSaveFestaResultRequest          Request;                                           // 0x0000(0x0418)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0418(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveFestaResult_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveFestaResult_Callbacked");
static_assert(sizeof(HttpHelper_Send_ResultSaveFestaResult_Callbacked) == 0x000428, "Wrong size on HttpHelper_Send_ResultSaveFestaResult_Callbacked");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveFestaResult_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult_Callbacked, Callback) == 0x000418, "Member 'HttpHelper_Send_ResultSaveFestaResult_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult_Callbacked_NoResend
// 0x0428 (0x0428 - 0x0000)
struct HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend final
{
public:
	struct FResultSaveFestaResultRequest          Request;                                           // 0x0000(0x0418)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0418(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend) == 0x000428, "Wrong size on HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend, Callback) == 0x000418, "Member 'HttpHelper_Send_ResultSaveFestaResult_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveFestaResult_NoResend
// 0x0420 (0x0420 - 0x0000)
struct HttpHelper_Send_ResultSaveFestaResult_NoResend final
{
public:
	struct FResultSaveFestaResultRequest          Request;                                           // 0x0000(0x0418)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0418(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveFestaResult_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveFestaResult_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveFestaResult_NoResend) == 0x000420, "Wrong size on HttpHelper_Send_ResultSaveFestaResult_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveFestaResult_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveFestaResult_NoResend, ReturnValue) == 0x000418, "Member 'HttpHelper_Send_ResultSaveFestaResult_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult
// 0x0408 (0x0408 - 0x0000)
struct HttpHelper_Send_ResultSaveLegendCompeResult final
{
public:
	struct FResultSaveLegendCompeResultRequest    Request;                                           // 0x0000(0x0400)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0400(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveLegendCompeResult) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveLegendCompeResult");
static_assert(sizeof(HttpHelper_Send_ResultSaveLegendCompeResult) == 0x000408, "Wrong size on HttpHelper_Send_ResultSaveLegendCompeResult");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult, ReturnValue) == 0x000400, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult_Callbacked
// 0x0410 (0x0410 - 0x0000)
struct HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked final
{
public:
	struct FResultSaveLegendCompeResultRequest    Request;                                           // 0x0000(0x0400)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0400(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked");
static_assert(sizeof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked) == 0x000410, "Wrong size on HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked, Callback) == 0x000400, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult_Callbacked_NoResend
// 0x0410 (0x0410 - 0x0000)
struct HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend final
{
public:
	struct FResultSaveLegendCompeResultRequest    Request;                                           // 0x0000(0x0400)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0400(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend) == 0x000410, "Wrong size on HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend, Callback) == 0x000400, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveLegendCompeResult_NoResend
// 0x0408 (0x0408 - 0x0000)
struct HttpHelper_Send_ResultSaveLegendCompeResult_NoResend final
{
public:
	struct FResultSaveLegendCompeResultRequest    Request;                                           // 0x0000(0x0400)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0400(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveLegendCompeResult_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveLegendCompeResult_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveLegendCompeResult_NoResend) == 0x000408, "Wrong size on HttpHelper_Send_ResultSaveLegendCompeResult_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveLegendCompeResult_NoResend, ReturnValue) == 0x000400, "Member 'HttpHelper_Send_ResultSaveLegendCompeResult_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult
// 0x0400 (0x0400 - 0x0000)
struct HttpHelper_Send_ResultSaveRankMatchResult final
{
public:
	struct FResultSaveRankMatchResultRequest      Request;                                           // 0x0000(0x03F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03F8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveRankMatchResult) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveRankMatchResult");
static_assert(sizeof(HttpHelper_Send_ResultSaveRankMatchResult) == 0x000400, "Wrong size on HttpHelper_Send_ResultSaveRankMatchResult");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveRankMatchResult::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult, ReturnValue) == 0x0003F8, "Member 'HttpHelper_Send_ResultSaveRankMatchResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult_Callbacked
// 0x0408 (0x0408 - 0x0000)
struct HttpHelper_Send_ResultSaveRankMatchResult_Callbacked final
{
public:
	struct FResultSaveRankMatchResultRequest      Request;                                           // 0x0000(0x03F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03F8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveRankMatchResult_Callbacked");
static_assert(sizeof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked) == 0x000408, "Wrong size on HttpHelper_Send_ResultSaveRankMatchResult_Callbacked");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveRankMatchResult_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked, Callback) == 0x0003F8, "Member 'HttpHelper_Send_ResultSaveRankMatchResult_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult_Callbacked_NoResend
// 0x0408 (0x0408 - 0x0000)
struct HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend final
{
public:
	struct FResultSaveRankMatchResultRequest      Request;                                           // 0x0000(0x03F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03F8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend) == 0x000408, "Wrong size on HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend, Callback) == 0x0003F8, "Member 'HttpHelper_Send_ResultSaveRankMatchResult_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveRankMatchResult_NoResend
// 0x0400 (0x0400 - 0x0000)
struct HttpHelper_Send_ResultSaveRankMatchResult_NoResend final
{
public:
	struct FResultSaveRankMatchResultRequest      Request;                                           // 0x0000(0x03F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03F8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveRankMatchResult_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveRankMatchResult_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveRankMatchResult_NoResend) == 0x000400, "Wrong size on HttpHelper_Send_ResultSaveRankMatchResult_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveRankMatchResult_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveRankMatchResult_NoResend, ReturnValue) == 0x0003F8, "Member 'HttpHelper_Send_ResultSaveRankMatchResult_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_ResultSaveTimeTrialResult final
{
public:
	struct FResultSaveTimeTrialResultRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveTimeTrialResult) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveTimeTrialResult");
static_assert(sizeof(HttpHelper_Send_ResultSaveTimeTrialResult) == 0x000018, "Wrong size on HttpHelper_Send_ResultSaveTimeTrialResult");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked final
{
public:
	struct FResultSaveTimeTrialResultRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked");
static_assert(sizeof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend final
{
public:
	struct FResultSaveTimeTrialResultRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_ResultSaveTimeTrialResult_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_ResultSaveTimeTrialResult_NoResend final
{
public:
	struct FResultSaveTimeTrialResultRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_ResultSaveTimeTrialResult_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_ResultSaveTimeTrialResult_NoResend");
static_assert(sizeof(HttpHelper_Send_ResultSaveTimeTrialResult_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_ResultSaveTimeTrialResult_NoResend");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_ResultSaveTimeTrialResult_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_ResultSaveTimeTrialResult_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion
// 0x000C (0x000C - 0x0000)
struct HttpHelper_Send_RomCheckRomVersion final
{
public:
	struct FRomCheckRomVersionRequest             Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RomCheckRomVersion) == 0x000004, "Wrong alignment on HttpHelper_Send_RomCheckRomVersion");
static_assert(sizeof(HttpHelper_Send_RomCheckRomVersion) == 0x00000C, "Wrong size on HttpHelper_Send_RomCheckRomVersion");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion, Request) == 0x000000, "Member 'HttpHelper_Send_RomCheckRomVersion::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion, ReturnValue) == 0x000008, "Member 'HttpHelper_Send_RomCheckRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion_Callbacked
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_RomCheckRomVersion_Callbacked final
{
public:
	struct FRomCheckRomVersionRequest             Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RomCheckRomVersion_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_RomCheckRomVersion_Callbacked");
static_assert(sizeof(HttpHelper_Send_RomCheckRomVersion_Callbacked) == 0x000018, "Wrong size on HttpHelper_Send_RomCheckRomVersion_Callbacked");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_RomCheckRomVersion_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion_Callbacked, Callback) == 0x000008, "Member 'HttpHelper_Send_RomCheckRomVersion_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion_Callbacked_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend final
{
public:
	struct FRomCheckRomVersionRequest             Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend, Callback) == 0x000008, "Member 'HttpHelper_Send_RomCheckRomVersion_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_RomCheckRomVersion_NoResend
// 0x000C (0x000C - 0x0000)
struct HttpHelper_Send_RomCheckRomVersion_NoResend final
{
public:
	struct FRomCheckRomVersionRequest             Request;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_RomCheckRomVersion_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_RomCheckRomVersion_NoResend");
static_assert(sizeof(HttpHelper_Send_RomCheckRomVersion_NoResend) == 0x00000C, "Wrong size on HttpHelper_Send_RomCheckRomVersion_NoResend");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_RomCheckRomVersion_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_RomCheckRomVersion_NoResend, ReturnValue) == 0x000008, "Member 'HttpHelper_Send_RomCheckRomVersion_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SamplePart1
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_SamplePart1 final
{
public:
	struct FSamplePart1Request                    Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_SamplePart1) == 0x000008, "Wrong alignment on HttpHelper_Send_SamplePart1");
static_assert(sizeof(HttpHelper_Send_SamplePart1) == 0x000020, "Wrong size on HttpHelper_Send_SamplePart1");
static_assert(offsetof(HttpHelper_Send_SamplePart1, Request) == 0x000000, "Member 'HttpHelper_Send_SamplePart1::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SamplePart1, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_SamplePart1::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SamplePart1_Callbacked
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_SamplePart1_Callbacked final
{
public:
	struct FSamplePart1Request                    Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_SamplePart1_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_SamplePart1_Callbacked");
static_assert(sizeof(HttpHelper_Send_SamplePart1_Callbacked) == 0x000028, "Wrong size on HttpHelper_Send_SamplePart1_Callbacked");
static_assert(offsetof(HttpHelper_Send_SamplePart1_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_SamplePart1_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SamplePart1_Callbacked, Callback) == 0x000018, "Member 'HttpHelper_Send_SamplePart1_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SamplePart1_Callbacked_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_SamplePart1_Callbacked_NoResend final
{
public:
	struct FSamplePart1Request                    Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_SamplePart1_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_SamplePart1_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_SamplePart1_Callbacked_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_SamplePart1_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_SamplePart1_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_SamplePart1_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SamplePart1_Callbacked_NoResend, Callback) == 0x000018, "Member 'HttpHelper_Send_SamplePart1_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SamplePart1_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_SamplePart1_NoResend final
{
public:
	struct FSamplePart1Request                    Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_SamplePart1_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_SamplePart1_NoResend");
static_assert(sizeof(HttpHelper_Send_SamplePart1_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_SamplePart1_NoResend");
static_assert(offsetof(HttpHelper_Send_SamplePart1_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_SamplePart1_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SamplePart1_NoResend, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_SamplePart1_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SessionKeepalive
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_SessionKeepalive final
{
public:
	struct FSessionKeepaliveRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_SessionKeepalive) == 0x000004, "Wrong alignment on HttpHelper_Send_SessionKeepalive");
static_assert(sizeof(HttpHelper_Send_SessionKeepalive) == 0x000008, "Wrong size on HttpHelper_Send_SessionKeepalive");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive, Request) == 0x000000, "Member 'HttpHelper_Send_SessionKeepalive::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_SessionKeepalive::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SessionKeepalive_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_SessionKeepalive_Callbacked final
{
public:
	struct FSessionKeepaliveRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_SessionKeepalive_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_SessionKeepalive_Callbacked");
static_assert(sizeof(HttpHelper_Send_SessionKeepalive_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_SessionKeepalive_Callbacked");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_SessionKeepalive_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_SessionKeepalive_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SessionKeepalive_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_SessionKeepalive_Callbacked_NoResend final
{
public:
	struct FSessionKeepaliveRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_SessionKeepalive_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_SessionKeepalive_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_SessionKeepalive_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_SessionKeepalive_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_SessionKeepalive_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_SessionKeepalive_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_SessionKeepalive_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_SessionKeepalive_NoResend final
{
public:
	struct FSessionKeepaliveRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_SessionKeepalive_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_SessionKeepalive_NoResend");
static_assert(sizeof(HttpHelper_Send_SessionKeepalive_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_SessionKeepalive_NoResend");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_SessionKeepalive_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_SessionKeepalive_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_SessionKeepalive_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart
// 0x03B0 (0x03B0 - 0x0000)
struct HttpHelper_Send_StartSaveFestaStart final
{
public:
	struct FStartSaveFestaStartRequest            Request;                                           // 0x0000(0x03A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03A8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_StartSaveFestaStart) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveFestaStart");
static_assert(sizeof(HttpHelper_Send_StartSaveFestaStart) == 0x0003B0, "Wrong size on HttpHelper_Send_StartSaveFestaStart");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveFestaStart::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart, ReturnValue) == 0x0003A8, "Member 'HttpHelper_Send_StartSaveFestaStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart_Callbacked
// 0x03B8 (0x03B8 - 0x0000)
struct HttpHelper_Send_StartSaveFestaStart_Callbacked final
{
public:
	struct FStartSaveFestaStartRequest            Request;                                           // 0x0000(0x03A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03A8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_StartSaveFestaStart_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveFestaStart_Callbacked");
static_assert(sizeof(HttpHelper_Send_StartSaveFestaStart_Callbacked) == 0x0003B8, "Wrong size on HttpHelper_Send_StartSaveFestaStart_Callbacked");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveFestaStart_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart_Callbacked, Callback) == 0x0003A8, "Member 'HttpHelper_Send_StartSaveFestaStart_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart_Callbacked_NoResend
// 0x03B8 (0x03B8 - 0x0000)
struct HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend final
{
public:
	struct FStartSaveFestaStartRequest            Request;                                           // 0x0000(0x03A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03A8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend) == 0x0003B8, "Wrong size on HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend, Callback) == 0x0003A8, "Member 'HttpHelper_Send_StartSaveFestaStart_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveFestaStart_NoResend
// 0x03B0 (0x03B0 - 0x0000)
struct HttpHelper_Send_StartSaveFestaStart_NoResend final
{
public:
	struct FStartSaveFestaStartRequest            Request;                                           // 0x0000(0x03A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03A8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_StartSaveFestaStart_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveFestaStart_NoResend");
static_assert(sizeof(HttpHelper_Send_StartSaveFestaStart_NoResend) == 0x0003B0, "Wrong size on HttpHelper_Send_StartSaveFestaStart_NoResend");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveFestaStart_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveFestaStart_NoResend, ReturnValue) == 0x0003A8, "Member 'HttpHelper_Send_StartSaveFestaStart_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart
// 0x03D8 (0x03D8 - 0x0000)
struct HttpHelper_Send_StartSaveLegendCompeStart final
{
public:
	struct FStartSaveLegendCompeStartRequest      Request;                                           // 0x0000(0x03D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03D0(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_StartSaveLegendCompeStart) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveLegendCompeStart");
static_assert(sizeof(HttpHelper_Send_StartSaveLegendCompeStart) == 0x0003D8, "Wrong size on HttpHelper_Send_StartSaveLegendCompeStart");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveLegendCompeStart::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart, ReturnValue) == 0x0003D0, "Member 'HttpHelper_Send_StartSaveLegendCompeStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart_Callbacked
// 0x03E0 (0x03E0 - 0x0000)
struct HttpHelper_Send_StartSaveLegendCompeStart_Callbacked final
{
public:
	struct FStartSaveLegendCompeStartRequest      Request;                                           // 0x0000(0x03D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03D0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveLegendCompeStart_Callbacked");
static_assert(sizeof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked) == 0x0003E0, "Wrong size on HttpHelper_Send_StartSaveLegendCompeStart_Callbacked");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveLegendCompeStart_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked, Callback) == 0x0003D0, "Member 'HttpHelper_Send_StartSaveLegendCompeStart_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart_Callbacked_NoResend
// 0x03E0 (0x03E0 - 0x0000)
struct HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend final
{
public:
	struct FStartSaveLegendCompeStartRequest      Request;                                           // 0x0000(0x03D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03D0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend) == 0x0003E0, "Wrong size on HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend, Callback) == 0x0003D0, "Member 'HttpHelper_Send_StartSaveLegendCompeStart_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveLegendCompeStart_NoResend
// 0x03D8 (0x03D8 - 0x0000)
struct HttpHelper_Send_StartSaveLegendCompeStart_NoResend final
{
public:
	struct FStartSaveLegendCompeStartRequest      Request;                                           // 0x0000(0x03D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03D0(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_StartSaveLegendCompeStart_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveLegendCompeStart_NoResend");
static_assert(sizeof(HttpHelper_Send_StartSaveLegendCompeStart_NoResend) == 0x0003D8, "Wrong size on HttpHelper_Send_StartSaveLegendCompeStart_NoResend");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveLegendCompeStart_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveLegendCompeStart_NoResend, ReturnValue) == 0x0003D0, "Member 'HttpHelper_Send_StartSaveLegendCompeStart_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart
// 0x03D0 (0x03D0 - 0x0000)
struct HttpHelper_Send_StartSaveRankMatchStart final
{
public:
	struct FStartSaveRankMatchStartRequest        Request;                                           // 0x0000(0x03C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03C8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_StartSaveRankMatchStart) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveRankMatchStart");
static_assert(sizeof(HttpHelper_Send_StartSaveRankMatchStart) == 0x0003D0, "Wrong size on HttpHelper_Send_StartSaveRankMatchStart");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveRankMatchStart::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart, ReturnValue) == 0x0003C8, "Member 'HttpHelper_Send_StartSaveRankMatchStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart_Callbacked
// 0x03D8 (0x03D8 - 0x0000)
struct HttpHelper_Send_StartSaveRankMatchStart_Callbacked final
{
public:
	struct FStartSaveRankMatchStartRequest        Request;                                           // 0x0000(0x03C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03C8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveRankMatchStart_Callbacked");
static_assert(sizeof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked) == 0x0003D8, "Wrong size on HttpHelper_Send_StartSaveRankMatchStart_Callbacked");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveRankMatchStart_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked, Callback) == 0x0003C8, "Member 'HttpHelper_Send_StartSaveRankMatchStart_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart_Callbacked_NoResend
// 0x03D8 (0x03D8 - 0x0000)
struct HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend final
{
public:
	struct FStartSaveRankMatchStartRequest        Request;                                           // 0x0000(0x03C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x03C8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend) == 0x0003D8, "Wrong size on HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend, Callback) == 0x0003C8, "Member 'HttpHelper_Send_StartSaveRankMatchStart_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_StartSaveRankMatchStart_NoResend
// 0x03D0 (0x03D0 - 0x0000)
struct HttpHelper_Send_StartSaveRankMatchStart_NoResend final
{
public:
	struct FStartSaveRankMatchStartRequest        Request;                                           // 0x0000(0x03C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x03C8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_StartSaveRankMatchStart_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_StartSaveRankMatchStart_NoResend");
static_assert(sizeof(HttpHelper_Send_StartSaveRankMatchStart_NoResend) == 0x0003D0, "Wrong size on HttpHelper_Send_StartSaveRankMatchStart_NoResend");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_StartSaveRankMatchStart_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_StartSaveRankMatchStart_NoResend, ReturnValue) == 0x0003C8, "Member 'HttpHelper_Send_StartSaveRankMatchStart_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetData
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_UserGetData final
{
public:
	struct FUserGetDataRequest                    Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetData) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetData");
static_assert(sizeof(HttpHelper_Send_UserGetData) == 0x000030, "Wrong size on HttpHelper_Send_UserGetData");
static_assert(offsetof(HttpHelper_Send_UserGetData, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetData::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetData, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_UserGetData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetData_Callbacked
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_UserGetData_Callbacked final
{
public:
	struct FUserGetDataRequest                    Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetData_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetData_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserGetData_Callbacked) == 0x000038, "Wrong size on HttpHelper_Send_UserGetData_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserGetData_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetData_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetData_Callbacked, Callback) == 0x000028, "Member 'HttpHelper_Send_UserGetData_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetData_Callbacked_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_UserGetData_Callbacked_NoResend final
{
public:
	struct FUserGetDataRequest                    Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetData_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetData_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetData_Callbacked_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_UserGetData_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetData_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetData_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetData_Callbacked_NoResend, Callback) == 0x000028, "Member 'HttpHelper_Send_UserGetData_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetData_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_UserGetData_NoResend final
{
public:
	struct FUserGetDataRequest                    Request;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetData_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetData_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetData_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_UserGetData_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetData_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetData_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetData_NoResend, ReturnValue) == 0x000028, "Member 'HttpHelper_Send_UserGetData_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetPartsData
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_UserGetPartsData final
{
public:
	struct FUserGetPartsDataRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetPartsData) == 0x000004, "Wrong alignment on HttpHelper_Send_UserGetPartsData");
static_assert(sizeof(HttpHelper_Send_UserGetPartsData) == 0x000008, "Wrong size on HttpHelper_Send_UserGetPartsData");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetPartsData::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_UserGetPartsData::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetPartsData_Callbacked
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_UserGetPartsData_Callbacked final
{
public:
	struct FUserGetPartsDataRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetPartsData_Callbacked) == 0x000004, "Wrong alignment on HttpHelper_Send_UserGetPartsData_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserGetPartsData_Callbacked) == 0x000014, "Wrong size on HttpHelper_Send_UserGetPartsData_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetPartsData_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData_Callbacked, Callback) == 0x000004, "Member 'HttpHelper_Send_UserGetPartsData_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetPartsData_Callbacked_NoResend
// 0x0014 (0x0014 - 0x0000)
struct HttpHelper_Send_UserGetPartsData_Callbacked_NoResend final
{
public:
	struct FUserGetPartsDataRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetPartsData_Callbacked_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_UserGetPartsData_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetPartsData_Callbacked_NoResend) == 0x000014, "Wrong size on HttpHelper_Send_UserGetPartsData_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetPartsData_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData_Callbacked_NoResend, Callback) == 0x000004, "Member 'HttpHelper_Send_UserGetPartsData_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetPartsData_NoResend
// 0x0008 (0x0008 - 0x0000)
struct HttpHelper_Send_UserGetPartsData_NoResend final
{
public:
	struct FUserGetPartsDataRequest               Request;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetPartsData_NoResend) == 0x000004, "Wrong alignment on HttpHelper_Send_UserGetPartsData_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetPartsData_NoResend) == 0x000008, "Wrong size on HttpHelper_Send_UserGetPartsData_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetPartsData_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetPartsData_NoResend, ReturnValue) == 0x000004, "Member 'HttpHelper_Send_UserGetPartsData_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByPuid final
{
public:
	struct FUserGetUserIdsByPuidRequest           Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByPuid) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByPuid");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByPuid) == 0x000018, "Wrong size on HttpHelper_Send_UserGetUserIdsByPuid");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByPuid::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByPuid::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByPuid_Callbacked final
{
public:
	struct FUserGetUserIdsByPuidRequest           Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByPuid_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserIdsByPuid_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByPuid_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByPuid_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend final
{
public:
	struct FUserGetUserIdsByPuidRequest           Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByPuid_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByPuid_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByPuid_NoResend final
{
public:
	struct FUserGetUserIdsByPuidRequest           Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByPuid_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByPuid_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByPuid_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_UserGetUserIdsByPuid_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByPuid_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByPuid_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByPuid_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByUid final
{
public:
	struct FUserGetUserIdsByUidRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByUid) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByUid");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByUid) == 0x000018, "Wrong size on HttpHelper_Send_UserGetUserIdsByUid");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByUid::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByUid::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByUid_Callbacked final
{
public:
	struct FUserGetUserIdsByUidRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByUid_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserIdsByUid_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByUid_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByUid_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend final
{
public:
	struct FUserGetUserIdsByUidRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByUid_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserIdsByUid_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserGetUserIdsByUid_NoResend final
{
public:
	struct FUserGetUserIdsByUidRequest            Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserIdsByUid_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserIdsByUid_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserIdsByUid_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_UserGetUserIdsByUid_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserIdsByUid_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserIdsByUid_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserGetUserIdsByUid_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserGetUserNetworkSettings final
{
public:
	struct FUserGetUserNetworkSettingsRequest     Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserNetworkSettings) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserNetworkSettings");
static_assert(sizeof(HttpHelper_Send_UserGetUserNetworkSettings) == 0x000018, "Wrong size on HttpHelper_Send_UserGetUserNetworkSettings");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserNetworkSettings::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserGetUserNetworkSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserNetworkSettings_Callbacked final
{
public:
	struct FUserGetUserNetworkSettingsRequest     Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserNetworkSettings_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserNetworkSettings_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserNetworkSettings_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_UserGetUserNetworkSettings_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend final
{
public:
	struct FUserGetUserNetworkSettingsRequest     Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_UserGetUserNetworkSettings_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserNetworkSettings_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserGetUserNetworkSettings_NoResend final
{
public:
	struct FUserGetUserNetworkSettingsRequest     Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserNetworkSettings_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserNetworkSettings_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserNetworkSettings_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_UserGetUserNetworkSettings_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserNetworkSettings_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserNetworkSettings_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserGetUserNetworkSettings_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserSearch
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserSearch final
{
public:
	struct FUserGetUserSearchRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserSearch) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserSearch");
static_assert(sizeof(HttpHelper_Send_UserGetUserSearch) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserSearch");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserSearch::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_UserGetUserSearch::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserSearch_Callbacked
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_UserGetUserSearch_Callbacked final
{
public:
	struct FUserGetUserSearchRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserSearch_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserSearch_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserGetUserSearch_Callbacked) == 0x000028, "Wrong size on HttpHelper_Send_UserGetUserSearch_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserSearch_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch_Callbacked, Callback) == 0x000018, "Member 'HttpHelper_Send_UserGetUserSearch_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserSearch_Callbacked_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend final
{
public:
	struct FUserGetUserSearchRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend, Callback) == 0x000018, "Member 'HttpHelper_Send_UserGetUserSearch_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserGetUserSearch_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserGetUserSearch_NoResend final
{
public:
	struct FUserGetUserSearchRequest              Request;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserGetUserSearch_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserGetUserSearch_NoResend");
static_assert(sizeof(HttpHelper_Send_UserGetUserSearch_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_UserGetUserSearch_NoResend");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserGetUserSearch_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserGetUserSearch_NoResend, ReturnValue) == 0x000018, "Member 'HttpHelper_Send_UserGetUserSearch_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_UserNintendoSwitchOnlineCheck final
{
public:
	struct FUserNintendoSwitchOnlineCheckRequest  Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserNintendoSwitchOnlineCheck) == 0x000008, "Wrong alignment on HttpHelper_Send_UserNintendoSwitchOnlineCheck");
static_assert(sizeof(HttpHelper_Send_UserNintendoSwitchOnlineCheck) == 0x000038, "Wrong size on HttpHelper_Send_UserNintendoSwitchOnlineCheck");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck, Request) == 0x000000, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck_Callbacked
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked final
{
public:
	struct FUserNintendoSwitchOnlineCheckRequest  Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked) == 0x000040, "Wrong size on HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked, Callback) == 0x000030, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend
// 0x0040 (0x0040 - 0x0000)
struct HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend final
{
public:
	struct FUserNintendoSwitchOnlineCheckRequest  Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend) == 0x000040, "Wrong size on HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend, Callback) == 0x000030, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserNintendoSwitchOnlineCheck_NoResend
// 0x0038 (0x0038 - 0x0000)
struct HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend final
{
public:
	struct FUserNintendoSwitchOnlineCheckRequest  Request;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend");
static_assert(sizeof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend) == 0x000038, "Wrong size on HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend, ReturnValue) == 0x000030, "Member 'HttpHelper_Send_UserNintendoSwitchOnlineCheck_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserSavePaidDlcOwnerships final
{
public:
	struct FUserSavePaidDlcOwnershipsRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserSavePaidDlcOwnerships) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSavePaidDlcOwnerships");
static_assert(sizeof(HttpHelper_Send_UserSavePaidDlcOwnerships) == 0x000018, "Wrong size on HttpHelper_Send_UserSavePaidDlcOwnerships");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships, Request) == 0x000000, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships_Callbacked
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked final
{
public:
	struct FUserSavePaidDlcOwnershipsRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked) == 0x000020, "Wrong size on HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked, Callback) == 0x000010, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships_Callbacked_NoResend
// 0x0020 (0x0020 - 0x0000)
struct HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend final
{
public:
	struct FUserSavePaidDlcOwnershipsRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend) == 0x000020, "Wrong size on HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend, Callback) == 0x000010, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSavePaidDlcOwnerships_NoResend
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend final
{
public:
	struct FUserSavePaidDlcOwnershipsRequest      Request;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend");
static_assert(sizeof(HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend) == 0x000018, "Wrong size on HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend, ReturnValue) == 0x000010, "Member 'HttpHelper_Send_UserSavePaidDlcOwnerships_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_UserSaveUserNetworkSettings final
{
public:
	struct FUserSaveUserNetworkSettingsRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserSaveUserNetworkSettings) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSaveUserNetworkSettings");
static_assert(sizeof(HttpHelper_Send_UserSaveUserNetworkSettings) == 0x000028, "Wrong size on HttpHelper_Send_UserSaveUserNetworkSettings");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings, Request) == 0x000000, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings_Callbacked
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked final
{
public:
	struct FUserSaveUserNetworkSettingsRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked");
static_assert(sizeof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked) == 0x000030, "Wrong size on HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked, Request) == 0x000000, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked, Callback) == 0x000020, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings_Callbacked_NoResend
// 0x0030 (0x0030 - 0x0000)
struct HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend final
{
public:
	struct FUserSaveUserNetworkSettingsRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ApiName, const class FString& RequestData, const class FString& ResponseData, bool Error)> Callback; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend");
static_assert(sizeof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend) == 0x000030, "Wrong size on HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend, Callback) == 0x000020, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings_Callbacked_NoResend::Callback' has a wrong offset!");

// Function UnionSystem.HttpHelper.Send_UserSaveUserNetworkSettings_NoResend
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_Send_UserSaveUserNetworkSettings_NoResend final
{
public:
	struct FUserSaveUserNetworkSettingsRequest    Request;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_Send_UserSaveUserNetworkSettings_NoResend) == 0x000008, "Wrong alignment on HttpHelper_Send_UserSaveUserNetworkSettings_NoResend");
static_assert(sizeof(HttpHelper_Send_UserSaveUserNetworkSettings_NoResend) == 0x000028, "Wrong size on HttpHelper_Send_UserSaveUserNetworkSettings_NoResend");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings_NoResend, Request) == 0x000000, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings_NoResend::Request' has a wrong offset!");
static_assert(offsetof(HttpHelper_Send_UserSaveUserNetworkSettings_NoResend, ReturnValue) == 0x000020, "Member 'HttpHelper_Send_UserSaveUserNetworkSettings_NoResend::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferDataForDownload
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_TransferDataForDownload final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 ResCode, bool Error)>    OnComplete;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Length, float Rate)>     OnProgress;                                        // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferDataForDownload) == 0x000008, "Wrong alignment on HttpHelper_TransferDataForDownload");
static_assert(sizeof(HttpHelper_TransferDataForDownload) == 0x000048, "Wrong size on HttpHelper_TransferDataForDownload");
static_assert(offsetof(HttpHelper_TransferDataForDownload, Uri) == 0x000000, "Member 'HttpHelper_TransferDataForDownload::Uri' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownload, Bytes) == 0x000010, "Member 'HttpHelper_TransferDataForDownload::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownload, OnComplete) == 0x000020, "Member 'HttpHelper_TransferDataForDownload::OnComplete' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownload, OnProgress) == 0x000030, "Member 'HttpHelper_TransferDataForDownload::OnProgress' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownload, ReturnValue) == 0x000040, "Member 'HttpHelper_TransferDataForDownload::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferDataForDownloadDetail
// 0x0048 (0x0048 - 0x0000)
struct HttpHelper_TransferDataForDownloadDetail final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)> OnComplete;   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Length, float Rate)>     OnProgress;                                        // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferDataForDownloadDetail) == 0x000008, "Wrong alignment on HttpHelper_TransferDataForDownloadDetail");
static_assert(sizeof(HttpHelper_TransferDataForDownloadDetail) == 0x000048, "Wrong size on HttpHelper_TransferDataForDownloadDetail");
static_assert(offsetof(HttpHelper_TransferDataForDownloadDetail, Uri) == 0x000000, "Member 'HttpHelper_TransferDataForDownloadDetail::Uri' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownloadDetail, Bytes) == 0x000010, "Member 'HttpHelper_TransferDataForDownloadDetail::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownloadDetail, OnComplete) == 0x000020, "Member 'HttpHelper_TransferDataForDownloadDetail::OnComplete' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownloadDetail, OnProgress) == 0x000030, "Member 'HttpHelper_TransferDataForDownloadDetail::OnProgress' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferDataForDownloadDetail, ReturnValue) == 0x000040, "Member 'HttpHelper_TransferDataForDownloadDetail::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferDataGetInvalidHandle
// 0x0004 (0x0004 - 0x0000)
struct HttpHelper_TransferDataGetInvalidHandle final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_TransferDataGetInvalidHandle) == 0x000004, "Wrong alignment on HttpHelper_TransferDataGetInvalidHandle");
static_assert(sizeof(HttpHelper_TransferDataGetInvalidHandle) == 0x000004, "Wrong size on HttpHelper_TransferDataGetInvalidHandle");
static_assert(offsetof(HttpHelper_TransferDataGetInvalidHandle, ReturnValue) == 0x000000, "Member 'HttpHelper_TransferDataGetInvalidHandle::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferDataTryCancel
// 0x0004 (0x0004 - 0x0000)
struct HttpHelper_TransferDataTryCancel final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_TransferDataTryCancel) == 0x000004, "Wrong alignment on HttpHelper_TransferDataTryCancel");
static_assert(sizeof(HttpHelper_TransferDataTryCancel) == 0x000004, "Wrong size on HttpHelper_TransferDataTryCancel");
static_assert(offsetof(HttpHelper_TransferDataTryCancel, Handle) == 0x000000, "Member 'HttpHelper_TransferDataTryCancel::Handle' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferGhostDataForUpload
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_TransferGhostDataForUpload final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 ResCode, bool Error)>    OnComplete;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Length, float Rate)>     OnProgress;                                        // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         courseId;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         speedType;                                         // 0x0044(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Date;                                              // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferGhostDataForUpload) == 0x000008, "Wrong alignment on HttpHelper_TransferGhostDataForUpload");
static_assert(sizeof(HttpHelper_TransferGhostDataForUpload) == 0x000060, "Wrong size on HttpHelper_TransferGhostDataForUpload");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, Uri) == 0x000000, "Member 'HttpHelper_TransferGhostDataForUpload::Uri' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, Bytes) == 0x000010, "Member 'HttpHelper_TransferGhostDataForUpload::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, OnComplete) == 0x000020, "Member 'HttpHelper_TransferGhostDataForUpload::OnComplete' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, OnProgress) == 0x000030, "Member 'HttpHelper_TransferGhostDataForUpload::OnProgress' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, courseId) == 0x000040, "Member 'HttpHelper_TransferGhostDataForUpload::courseId' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, speedType) == 0x000044, "Member 'HttpHelper_TransferGhostDataForUpload::speedType' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, Date) == 0x000048, "Member 'HttpHelper_TransferGhostDataForUpload::Date' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUpload, ReturnValue) == 0x000058, "Member 'HttpHelper_TransferGhostDataForUpload::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferGhostDataForUploadDetail
// 0x0060 (0x0060 - 0x0000)
struct HttpHelper_TransferGhostDataForUploadDetail final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)> OnComplete;   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Length, float Rate)>     OnProgress;                                        // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         courseId;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         speedType;                                         // 0x0044(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Date;                                              // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferGhostDataForUploadDetail) == 0x000008, "Wrong alignment on HttpHelper_TransferGhostDataForUploadDetail");
static_assert(sizeof(HttpHelper_TransferGhostDataForUploadDetail) == 0x000060, "Wrong size on HttpHelper_TransferGhostDataForUploadDetail");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, Uri) == 0x000000, "Member 'HttpHelper_TransferGhostDataForUploadDetail::Uri' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, Bytes) == 0x000010, "Member 'HttpHelper_TransferGhostDataForUploadDetail::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, OnComplete) == 0x000020, "Member 'HttpHelper_TransferGhostDataForUploadDetail::OnComplete' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, OnProgress) == 0x000030, "Member 'HttpHelper_TransferGhostDataForUploadDetail::OnProgress' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, courseId) == 0x000040, "Member 'HttpHelper_TransferGhostDataForUploadDetail::courseId' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, speedType) == 0x000044, "Member 'HttpHelper_TransferGhostDataForUploadDetail::speedType' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, Date) == 0x000048, "Member 'HttpHelper_TransferGhostDataForUploadDetail::Date' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferGhostDataForUploadDetail, ReturnValue) == 0x000058, "Member 'HttpHelper_TransferGhostDataForUploadDetail::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferGhostDataGetUriForUpload
// 0x0010 (0x0010 - 0x0000)
struct HttpHelper_TransferGhostDataGetUriForUpload final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_TransferGhostDataGetUriForUpload) == 0x000008, "Wrong alignment on HttpHelper_TransferGhostDataGetUriForUpload");
static_assert(sizeof(HttpHelper_TransferGhostDataGetUriForUpload) == 0x000010, "Wrong size on HttpHelper_TransferGhostDataGetUriForUpload");
static_assert(offsetof(HttpHelper_TransferGhostDataGetUriForUpload, ReturnValue) == 0x000000, "Member 'HttpHelper_TransferGhostDataGetUriForUpload::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferMakeRandomBytes
// 0x0018 (0x0018 - 0x0000)
struct HttpHelper_TransferMakeRandomBytes final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpHelper_TransferMakeRandomBytes) == 0x000008, "Wrong alignment on HttpHelper_TransferMakeRandomBytes");
static_assert(sizeof(HttpHelper_TransferMakeRandomBytes) == 0x000018, "Wrong size on HttpHelper_TransferMakeRandomBytes");
static_assert(offsetof(HttpHelper_TransferMakeRandomBytes, Size) == 0x000000, "Member 'HttpHelper_TransferMakeRandomBytes::Size' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferMakeRandomBytes, ReturnValue) == 0x000008, "Member 'HttpHelper_TransferMakeRandomBytes::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferReplayDataForUpload
// 0x0058 (0x0058 - 0x0000)
struct HttpHelper_TransferReplayDataForUpload final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 ResCode, bool Error)>    OnComplete;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Length, float Rate)>     OnProgress;                                        // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferReplayDataForUpload) == 0x000008, "Wrong alignment on HttpHelper_TransferReplayDataForUpload");
static_assert(sizeof(HttpHelper_TransferReplayDataForUpload) == 0x000058, "Wrong size on HttpHelper_TransferReplayDataForUpload");
static_assert(offsetof(HttpHelper_TransferReplayDataForUpload, Uri) == 0x000000, "Member 'HttpHelper_TransferReplayDataForUpload::Uri' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUpload, Bytes) == 0x000010, "Member 'HttpHelper_TransferReplayDataForUpload::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUpload, OnComplete) == 0x000020, "Member 'HttpHelper_TransferReplayDataForUpload::OnComplete' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUpload, OnProgress) == 0x000030, "Member 'HttpHelper_TransferReplayDataForUpload::OnProgress' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUpload, Name_0) == 0x000040, "Member 'HttpHelper_TransferReplayDataForUpload::Name_0' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUpload, ReturnValue) == 0x000050, "Member 'HttpHelper_TransferReplayDataForUpload::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferReplayDataForUploadDetail
// 0x0058 (0x0058 - 0x0000)
struct HttpHelper_TransferReplayDataForUploadDetail final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 ResCode, int32 ContentLength, float ElapsedTime, bool Error)> OnComplete;   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Length, float Rate)>     OnProgress;                                        // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferReplayDataForUploadDetail) == 0x000008, "Wrong alignment on HttpHelper_TransferReplayDataForUploadDetail");
static_assert(sizeof(HttpHelper_TransferReplayDataForUploadDetail) == 0x000058, "Wrong size on HttpHelper_TransferReplayDataForUploadDetail");
static_assert(offsetof(HttpHelper_TransferReplayDataForUploadDetail, Uri) == 0x000000, "Member 'HttpHelper_TransferReplayDataForUploadDetail::Uri' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUploadDetail, Bytes) == 0x000010, "Member 'HttpHelper_TransferReplayDataForUploadDetail::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUploadDetail, OnComplete) == 0x000020, "Member 'HttpHelper_TransferReplayDataForUploadDetail::OnComplete' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUploadDetail, OnProgress) == 0x000030, "Member 'HttpHelper_TransferReplayDataForUploadDetail::OnProgress' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUploadDetail, Name_0) == 0x000040, "Member 'HttpHelper_TransferReplayDataForUploadDetail::Name_0' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferReplayDataForUploadDetail, ReturnValue) == 0x000050, "Member 'HttpHelper_TransferReplayDataForUploadDetail::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.TransferSaveBytesToFile
// 0x0028 (0x0028 - 0x0000)
struct HttpHelper_TransferSaveBytesToFile final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Path;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_TransferSaveBytesToFile) == 0x000008, "Wrong alignment on HttpHelper_TransferSaveBytesToFile");
static_assert(sizeof(HttpHelper_TransferSaveBytesToFile) == 0x000028, "Wrong size on HttpHelper_TransferSaveBytesToFile");
static_assert(offsetof(HttpHelper_TransferSaveBytesToFile, Bytes) == 0x000000, "Member 'HttpHelper_TransferSaveBytesToFile::Bytes' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferSaveBytesToFile, Path) == 0x000010, "Member 'HttpHelper_TransferSaveBytesToFile::Path' has a wrong offset!");
static_assert(offsetof(HttpHelper_TransferSaveBytesToFile, ReturnValue) == 0x000020, "Member 'HttpHelper_TransferSaveBytesToFile::ReturnValue' has a wrong offset!");

// Function UnionSystem.HttpHelper.ValidateResCode
// 0x000C (0x000C - 0x0000)
struct HttpHelper_ValidateResCode final
{
public:
	bool                                          OutError;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResCode;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EResponseCodeAbstract                         ResCodeAbstract;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpHelper_ValidateResCode) == 0x000004, "Wrong alignment on HttpHelper_ValidateResCode");
static_assert(sizeof(HttpHelper_ValidateResCode) == 0x00000C, "Wrong size on HttpHelper_ValidateResCode");
static_assert(offsetof(HttpHelper_ValidateResCode, OutError) == 0x000000, "Member 'HttpHelper_ValidateResCode::OutError' has a wrong offset!");
static_assert(offsetof(HttpHelper_ValidateResCode, ResCode) == 0x000004, "Member 'HttpHelper_ValidateResCode::ResCode' has a wrong offset!");
static_assert(offsetof(HttpHelper_ValidateResCode, ResCodeAbstract) == 0x000008, "Member 'HttpHelper_ValidateResCode::ResCodeAbstract' has a wrong offset!");
static_assert(offsetof(HttpHelper_ValidateResCode, ReturnValue) == 0x000009, "Member 'HttpHelper_ValidateResCode::ReturnValue' has a wrong offset!");

// Function UnionSystem.InformManager.InformAboutAbuse
// 0x0040 (0x0040 - 0x0000)
struct InformManager_InformAboutAbuse final
{
public:
	class FString                                 TargetUserId;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         reasonId;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Location;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 reasonMemo;                                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GameMode;                                          // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 entryRaceId;                                       // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InformManager_InformAboutAbuse) == 0x000008, "Wrong alignment on InformManager_InformAboutAbuse");
static_assert(sizeof(InformManager_InformAboutAbuse) == 0x000040, "Wrong size on InformManager_InformAboutAbuse");
static_assert(offsetof(InformManager_InformAboutAbuse, TargetUserId) == 0x000000, "Member 'InformManager_InformAboutAbuse::TargetUserId' has a wrong offset!");
static_assert(offsetof(InformManager_InformAboutAbuse, reasonId) == 0x000010, "Member 'InformManager_InformAboutAbuse::reasonId' has a wrong offset!");
static_assert(offsetof(InformManager_InformAboutAbuse, Location) == 0x000014, "Member 'InformManager_InformAboutAbuse::Location' has a wrong offset!");
static_assert(offsetof(InformManager_InformAboutAbuse, reasonMemo) == 0x000018, "Member 'InformManager_InformAboutAbuse::reasonMemo' has a wrong offset!");
static_assert(offsetof(InformManager_InformAboutAbuse, GameMode) == 0x000028, "Member 'InformManager_InformAboutAbuse::GameMode' has a wrong offset!");
static_assert(offsetof(InformManager_InformAboutAbuse, entryRaceId) == 0x000030, "Member 'InformManager_InformAboutAbuse::entryRaceId' has a wrong offset!");

// Function UnionSystem.JukeboxDataAsset.GetAlbumData
// 0x0078 (0x0078 - 0x0000)
struct JukeboxDataAsset_GetAlbumData final
{
public:
	int32                                         AlbumID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAlbumData                             ReturnValue;                                       // 0x0008(0x0070)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JukeboxDataAsset_GetAlbumData) == 0x000008, "Wrong alignment on JukeboxDataAsset_GetAlbumData");
static_assert(sizeof(JukeboxDataAsset_GetAlbumData) == 0x000078, "Wrong size on JukeboxDataAsset_GetAlbumData");
static_assert(offsetof(JukeboxDataAsset_GetAlbumData, AlbumID) == 0x000000, "Member 'JukeboxDataAsset_GetAlbumData::AlbumID' has a wrong offset!");
static_assert(offsetof(JukeboxDataAsset_GetAlbumData, ReturnValue) == 0x000008, "Member 'JukeboxDataAsset_GetAlbumData::ReturnValue' has a wrong offset!");

// Function UnionSystem.JukeboxDataAsset.GetTrackData
// 0x00B0 (0x00B0 - 0x0000)
struct JukeboxDataAsset_GetTrackData final
{
public:
	int32                                         TrackID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrackData                             ReturnValue;                                       // 0x0008(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JukeboxDataAsset_GetTrackData) == 0x000008, "Wrong alignment on JukeboxDataAsset_GetTrackData");
static_assert(sizeof(JukeboxDataAsset_GetTrackData) == 0x0000B0, "Wrong size on JukeboxDataAsset_GetTrackData");
static_assert(offsetof(JukeboxDataAsset_GetTrackData, TrackID) == 0x000000, "Member 'JukeboxDataAsset_GetTrackData::TrackID' has a wrong offset!");
static_assert(offsetof(JukeboxDataAsset_GetTrackData, ReturnValue) == 0x000008, "Member 'JukeboxDataAsset_GetTrackData::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.SetPrimaryKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigItem_SetPrimaryKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_SetPrimaryKey) == 0x000008, "Wrong alignment on KeyConfigItem_SetPrimaryKey");
static_assert(sizeof(KeyConfigItem_SetPrimaryKey) == 0x000018, "Wrong size on KeyConfigItem_SetPrimaryKey");
static_assert(offsetof(KeyConfigItem_SetPrimaryKey, Key) == 0x000000, "Member 'KeyConfigItem_SetPrimaryKey::Key' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.SetSecondaryKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigItem_SetSecondaryKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_SetSecondaryKey) == 0x000008, "Wrong alignment on KeyConfigItem_SetSecondaryKey");
static_assert(sizeof(KeyConfigItem_SetSecondaryKey) == 0x000018, "Wrong size on KeyConfigItem_SetSecondaryKey");
static_assert(offsetof(KeyConfigItem_SetSecondaryKey, Key) == 0x000000, "Member 'KeyConfigItem_SetSecondaryKey::Key' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct KeyConfigItem_GetDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetDisplayName) == 0x000008, "Wrong alignment on KeyConfigItem_GetDisplayName");
static_assert(sizeof(KeyConfigItem_GetDisplayName) == 0x000010, "Wrong size on KeyConfigItem_GetDisplayName");
static_assert(offsetof(KeyConfigItem_GetDisplayName, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetDisplayName::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetPrimaryDefaultKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigItem_GetPrimaryDefaultKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetPrimaryDefaultKey) == 0x000008, "Wrong alignment on KeyConfigItem_GetPrimaryDefaultKey");
static_assert(sizeof(KeyConfigItem_GetPrimaryDefaultKey) == 0x000018, "Wrong size on KeyConfigItem_GetPrimaryDefaultKey");
static_assert(offsetof(KeyConfigItem_GetPrimaryDefaultKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetPrimaryDefaultKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetPrimaryKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigItem_GetPrimaryKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetPrimaryKey) == 0x000008, "Wrong alignment on KeyConfigItem_GetPrimaryKey");
static_assert(sizeof(KeyConfigItem_GetPrimaryKey) == 0x000018, "Wrong size on KeyConfigItem_GetPrimaryKey");
static_assert(offsetof(KeyConfigItem_GetPrimaryKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetPrimaryKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetPrimaryMappingName
// 0x0008 (0x0008 - 0x0000)
struct KeyConfigItem_GetPrimaryMappingName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetPrimaryMappingName) == 0x000004, "Wrong alignment on KeyConfigItem_GetPrimaryMappingName");
static_assert(sizeof(KeyConfigItem_GetPrimaryMappingName) == 0x000008, "Wrong size on KeyConfigItem_GetPrimaryMappingName");
static_assert(offsetof(KeyConfigItem_GetPrimaryMappingName, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetPrimaryMappingName::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetSecondaryDefaultKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigItem_GetSecondaryDefaultKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetSecondaryDefaultKey) == 0x000008, "Wrong alignment on KeyConfigItem_GetSecondaryDefaultKey");
static_assert(sizeof(KeyConfigItem_GetSecondaryDefaultKey) == 0x000018, "Wrong size on KeyConfigItem_GetSecondaryDefaultKey");
static_assert(offsetof(KeyConfigItem_GetSecondaryDefaultKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetSecondaryDefaultKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetSecondaryKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigItem_GetSecondaryKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetSecondaryKey) == 0x000008, "Wrong alignment on KeyConfigItem_GetSecondaryKey");
static_assert(sizeof(KeyConfigItem_GetSecondaryKey) == 0x000018, "Wrong size on KeyConfigItem_GetSecondaryKey");
static_assert(offsetof(KeyConfigItem_GetSecondaryKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetSecondaryKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.GetSecondaryMappingName
// 0x0008 (0x0008 - 0x0000)
struct KeyConfigItem_GetSecondaryMappingName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_GetSecondaryMappingName) == 0x000004, "Wrong alignment on KeyConfigItem_GetSecondaryMappingName");
static_assert(sizeof(KeyConfigItem_GetSecondaryMappingName) == 0x000008, "Wrong size on KeyConfigItem_GetSecondaryMappingName");
static_assert(offsetof(KeyConfigItem_GetSecondaryMappingName, ReturnValue) == 0x000000, "Member 'KeyConfigItem_GetSecondaryMappingName::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.IsCustomized
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigItem_IsCustomized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_IsCustomized) == 0x000001, "Wrong alignment on KeyConfigItem_IsCustomized");
static_assert(sizeof(KeyConfigItem_IsCustomized) == 0x000001, "Wrong size on KeyConfigItem_IsCustomized");
static_assert(offsetof(KeyConfigItem_IsCustomized, ReturnValue) == 0x000000, "Member 'KeyConfigItem_IsCustomized::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.IsCustomizedPrimaryKey
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigItem_IsCustomizedPrimaryKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_IsCustomizedPrimaryKey) == 0x000001, "Wrong alignment on KeyConfigItem_IsCustomizedPrimaryKey");
static_assert(sizeof(KeyConfigItem_IsCustomizedPrimaryKey) == 0x000001, "Wrong size on KeyConfigItem_IsCustomizedPrimaryKey");
static_assert(offsetof(KeyConfigItem_IsCustomizedPrimaryKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_IsCustomizedPrimaryKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.IsCustomizedSecondaryKey
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigItem_IsCustomizedSecondaryKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_IsCustomizedSecondaryKey) == 0x000001, "Wrong alignment on KeyConfigItem_IsCustomizedSecondaryKey");
static_assert(sizeof(KeyConfigItem_IsCustomizedSecondaryKey) == 0x000001, "Wrong size on KeyConfigItem_IsCustomizedSecondaryKey");
static_assert(offsetof(KeyConfigItem_IsCustomizedSecondaryKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_IsCustomizedSecondaryKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.IsValidPrimaryKey
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigItem_IsValidPrimaryKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_IsValidPrimaryKey) == 0x000001, "Wrong alignment on KeyConfigItem_IsValidPrimaryKey");
static_assert(sizeof(KeyConfigItem_IsValidPrimaryKey) == 0x000001, "Wrong size on KeyConfigItem_IsValidPrimaryKey");
static_assert(offsetof(KeyConfigItem_IsValidPrimaryKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_IsValidPrimaryKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigItem.IsValidSecondaryKey
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigItem_IsValidSecondaryKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigItem_IsValidSecondaryKey) == 0x000001, "Wrong alignment on KeyConfigItem_IsValidSecondaryKey");
static_assert(sizeof(KeyConfigItem_IsValidSecondaryKey) == 0x000001, "Wrong size on KeyConfigItem_IsValidSecondaryKey");
static_assert(offsetof(KeyConfigItem_IsValidSecondaryKey, ReturnValue) == 0x000000, "Member 'KeyConfigItem_IsValidSecondaryKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.CalcButtonViewTypeByKey
// 0x0020 (0x0020 - 0x0000)
struct KeyConfigHelpers_CalcButtonViewTypeByKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EControllerButtonType                         ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyConfigHelpers_CalcButtonViewTypeByKey) == 0x000008, "Wrong alignment on KeyConfigHelpers_CalcButtonViewTypeByKey");
static_assert(sizeof(KeyConfigHelpers_CalcButtonViewTypeByKey) == 0x000020, "Wrong size on KeyConfigHelpers_CalcButtonViewTypeByKey");
static_assert(offsetof(KeyConfigHelpers_CalcButtonViewTypeByKey, InKey) == 0x000000, "Member 'KeyConfigHelpers_CalcButtonViewTypeByKey::InKey' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_CalcButtonViewTypeByKey, ReturnValue) == 0x000018, "Member 'KeyConfigHelpers_CalcButtonViewTypeByKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.ClearAssignedKey
// 0x000C (0x000C - 0x0000)
struct KeyConfigHelpers_ClearAssignedKey final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MappingName;                                       // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_ClearAssignedKey) == 0x000004, "Wrong alignment on KeyConfigHelpers_ClearAssignedKey");
static_assert(sizeof(KeyConfigHelpers_ClearAssignedKey) == 0x00000C, "Wrong size on KeyConfigHelpers_ClearAssignedKey");
static_assert(offsetof(KeyConfigHelpers_ClearAssignedKey, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_ClearAssignedKey::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_ClearAssignedKey, MappingName) == 0x000004, "Member 'KeyConfigHelpers_ClearAssignedKey::MappingName' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.ClearCustomKeyConfigs
// 0x0004 (0x0004 - 0x0000)
struct KeyConfigHelpers_ClearCustomKeyConfigs final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_ClearCustomKeyConfigs) == 0x000004, "Wrong alignment on KeyConfigHelpers_ClearCustomKeyConfigs");
static_assert(sizeof(KeyConfigHelpers_ClearCustomKeyConfigs) == 0x000004, "Wrong size on KeyConfigHelpers_ClearCustomKeyConfigs");
static_assert(offsetof(KeyConfigHelpers_ClearCustomKeyConfigs, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_ClearCustomKeyConfigs::InPlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.CompareCustomKeyConfigs
// 0x00A8 (0x00A8 - 0x0000)
struct KeyConfigHelpers_CompareCustomKeyConfigs final
{
public:
	TMap<class FName, struct FKey>                CustomKeyConfigs1;                                 // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TMap<class FName, struct FKey>                CustomKeyConfigs2;                                 // 0x0050(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyConfigHelpers_CompareCustomKeyConfigs) == 0x000008, "Wrong alignment on KeyConfigHelpers_CompareCustomKeyConfigs");
static_assert(sizeof(KeyConfigHelpers_CompareCustomKeyConfigs) == 0x0000A8, "Wrong size on KeyConfigHelpers_CompareCustomKeyConfigs");
static_assert(offsetof(KeyConfigHelpers_CompareCustomKeyConfigs, CustomKeyConfigs1) == 0x000000, "Member 'KeyConfigHelpers_CompareCustomKeyConfigs::CustomKeyConfigs1' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_CompareCustomKeyConfigs, CustomKeyConfigs2) == 0x000050, "Member 'KeyConfigHelpers_CompareCustomKeyConfigs::CustomKeyConfigs2' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_CompareCustomKeyConfigs, ReturnValue) == 0x0000A0, "Member 'KeyConfigHelpers_CompareCustomKeyConfigs::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.FindInputConfig
// 0x0028 (0x0028 - 0x0000)
struct KeyConfigHelpers_FindInputConfig final
{
public:
	class UInputDataAsset*                        InputDataAsset;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyConfigOperationType                       OperationType;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputConfig                           OutInputConfig;                                    // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyConfigHelpers_FindInputConfig) == 0x000008, "Wrong alignment on KeyConfigHelpers_FindInputConfig");
static_assert(sizeof(KeyConfigHelpers_FindInputConfig) == 0x000028, "Wrong size on KeyConfigHelpers_FindInputConfig");
static_assert(offsetof(KeyConfigHelpers_FindInputConfig, InputDataAsset) == 0x000000, "Member 'KeyConfigHelpers_FindInputConfig::InputDataAsset' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_FindInputConfig, OperationType) == 0x000008, "Member 'KeyConfigHelpers_FindInputConfig::OperationType' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_FindInputConfig, OutInputConfig) == 0x000010, "Member 'KeyConfigHelpers_FindInputConfig::OutInputConfig' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_FindInputConfig, ReturnValue) == 0x000020, "Member 'KeyConfigHelpers_FindInputConfig::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.GetAssignedKey
// 0x0028 (0x0028 - 0x0000)
struct KeyConfigHelpers_GetAssignedKey final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MappingName;                                       // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFound;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_GetAssignedKey) == 0x000008, "Wrong alignment on KeyConfigHelpers_GetAssignedKey");
static_assert(sizeof(KeyConfigHelpers_GetAssignedKey) == 0x000028, "Wrong size on KeyConfigHelpers_GetAssignedKey");
static_assert(offsetof(KeyConfigHelpers_GetAssignedKey, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_GetAssignedKey::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetAssignedKey, MappingName) == 0x000004, "Member 'KeyConfigHelpers_GetAssignedKey::MappingName' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetAssignedKey, IsFound) == 0x00000C, "Member 'KeyConfigHelpers_GetAssignedKey::IsFound' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetAssignedKey, ReturnValue) == 0x000010, "Member 'KeyConfigHelpers_GetAssignedKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.GetCustomKeyConfigs
// 0x0060 (0x0060 - 0x0000)
struct KeyConfigHelpers_GetCustomKeyConfigs final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FKey>                OutCustomKeyConfigs;                               // 0x0008(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KeyConfigHelpers_GetCustomKeyConfigs) == 0x000008, "Wrong alignment on KeyConfigHelpers_GetCustomKeyConfigs");
static_assert(sizeof(KeyConfigHelpers_GetCustomKeyConfigs) == 0x000060, "Wrong size on KeyConfigHelpers_GetCustomKeyConfigs");
static_assert(offsetof(KeyConfigHelpers_GetCustomKeyConfigs, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_GetCustomKeyConfigs::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetCustomKeyConfigs, OutCustomKeyConfigs) == 0x000008, "Member 'KeyConfigHelpers_GetCustomKeyConfigs::OutCustomKeyConfigs' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetCustomKeyConfigs, ReturnValue) == 0x000058, "Member 'KeyConfigHelpers_GetCustomKeyConfigs::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.GetInputConfigNameFromOperationType
// 0x000C (0x000C - 0x0000)
struct KeyConfigHelpers_GetInputConfigNameFromOperationType final
{
public:
	EKeyConfigOperationType                       OperationType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_GetInputConfigNameFromOperationType) == 0x000004, "Wrong alignment on KeyConfigHelpers_GetInputConfigNameFromOperationType");
static_assert(sizeof(KeyConfigHelpers_GetInputConfigNameFromOperationType) == 0x00000C, "Wrong size on KeyConfigHelpers_GetInputConfigNameFromOperationType");
static_assert(offsetof(KeyConfigHelpers_GetInputConfigNameFromOperationType, OperationType) == 0x000000, "Member 'KeyConfigHelpers_GetInputConfigNameFromOperationType::OperationType' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetInputConfigNameFromOperationType, ReturnValue) == 0x000004, "Member 'KeyConfigHelpers_GetInputConfigNameFromOperationType::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.GetKeyConfigItems
// 0x0070 (0x0070 - 0x0000)
struct KeyConfigHelpers_GetKeyConfigItems final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputConfig                           InputConfig;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EKeyConfigDeviceType                          Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UKeyConfigItem*>      OutKeyConfigItems;                                 // 0x0020(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_GetKeyConfigItems) == 0x000008, "Wrong alignment on KeyConfigHelpers_GetKeyConfigItems");
static_assert(sizeof(KeyConfigHelpers_GetKeyConfigItems) == 0x000070, "Wrong size on KeyConfigHelpers_GetKeyConfigItems");
static_assert(offsetof(KeyConfigHelpers_GetKeyConfigItems, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_GetKeyConfigItems::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetKeyConfigItems, InputConfig) == 0x000008, "Member 'KeyConfigHelpers_GetKeyConfigItems::InputConfig' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetKeyConfigItems, Type) == 0x000018, "Member 'KeyConfigHelpers_GetKeyConfigItems::Type' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_GetKeyConfigItems, OutKeyConfigItems) == 0x000020, "Member 'KeyConfigHelpers_GetKeyConfigItems::OutKeyConfigItems' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.SetAssignedKey
// 0x0028 (0x0028 - 0x0000)
struct KeyConfigHelpers_SetAssignedKey final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MappingName;                                       // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NewKey;                                            // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_SetAssignedKey) == 0x000008, "Wrong alignment on KeyConfigHelpers_SetAssignedKey");
static_assert(sizeof(KeyConfigHelpers_SetAssignedKey) == 0x000028, "Wrong size on KeyConfigHelpers_SetAssignedKey");
static_assert(offsetof(KeyConfigHelpers_SetAssignedKey, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_SetAssignedKey::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_SetAssignedKey, MappingName) == 0x000004, "Member 'KeyConfigHelpers_SetAssignedKey::MappingName' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_SetAssignedKey, NewKey) == 0x000010, "Member 'KeyConfigHelpers_SetAssignedKey::NewKey' has a wrong offset!");

// Function UnionSystem.KeyConfigHelpers.SetCustomKeyConfigs
// 0x0058 (0x0058 - 0x0000)
struct KeyConfigHelpers_SetCustomKeyConfigs final
{
public:
	int32                                         InPlayerControllerIndex;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FKey>                InCustomKeyConfigs;                                // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigHelpers_SetCustomKeyConfigs) == 0x000008, "Wrong alignment on KeyConfigHelpers_SetCustomKeyConfigs");
static_assert(sizeof(KeyConfigHelpers_SetCustomKeyConfigs) == 0x000058, "Wrong size on KeyConfigHelpers_SetCustomKeyConfigs");
static_assert(offsetof(KeyConfigHelpers_SetCustomKeyConfigs, InPlayerControllerIndex) == 0x000000, "Member 'KeyConfigHelpers_SetCustomKeyConfigs::InPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(KeyConfigHelpers_SetCustomKeyConfigs, InCustomKeyConfigs) == 0x000008, "Member 'KeyConfigHelpers_SetCustomKeyConfigs::InCustomKeyConfigs' has a wrong offset!");

// Function UnionSystem.KeyConfigPressAnyKey.AssignKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigPressAnyKey_AssignKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigPressAnyKey_AssignKey) == 0x000008, "Wrong alignment on KeyConfigPressAnyKey_AssignKey");
static_assert(sizeof(KeyConfigPressAnyKey_AssignKey) == 0x000018, "Wrong size on KeyConfigPressAnyKey_AssignKey");
static_assert(offsetof(KeyConfigPressAnyKey_AssignKey, NewKey) == 0x000000, "Member 'KeyConfigPressAnyKey_AssignKey::NewKey' has a wrong offset!");

// Function UnionSystem.KeyConfigPressAnyKey.SetCurrentKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigPressAnyKey_SetCurrentKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigPressAnyKey_SetCurrentKey) == 0x000008, "Wrong alignment on KeyConfigPressAnyKey_SetCurrentKey");
static_assert(sizeof(KeyConfigPressAnyKey_SetCurrentKey) == 0x000018, "Wrong size on KeyConfigPressAnyKey_SetCurrentKey");
static_assert(offsetof(KeyConfigPressAnyKey_SetCurrentKey, Key) == 0x000000, "Member 'KeyConfigPressAnyKey_SetCurrentKey::Key' has a wrong offset!");

// Function UnionSystem.KeyConfigPressAnyKey.SetIsGamepadKey
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigPressAnyKey_SetIsGamepadKey final
{
public:
	bool                                          bInIsGamepadKey;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigPressAnyKey_SetIsGamepadKey) == 0x000001, "Wrong alignment on KeyConfigPressAnyKey_SetIsGamepadKey");
static_assert(sizeof(KeyConfigPressAnyKey_SetIsGamepadKey) == 0x000001, "Wrong size on KeyConfigPressAnyKey_SetIsGamepadKey");
static_assert(offsetof(KeyConfigPressAnyKey_SetIsGamepadKey, bInIsGamepadKey) == 0x000000, "Member 'KeyConfigPressAnyKey_SetIsGamepadKey::bInIsGamepadKey' has a wrong offset!");

// Function UnionSystem.KeyConfigPressAnyKey.GetCurrentKey
// 0x0018 (0x0018 - 0x0000)
struct KeyConfigPressAnyKey_GetCurrentKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigPressAnyKey_GetCurrentKey) == 0x000008, "Wrong alignment on KeyConfigPressAnyKey_GetCurrentKey");
static_assert(sizeof(KeyConfigPressAnyKey_GetCurrentKey) == 0x000018, "Wrong size on KeyConfigPressAnyKey_GetCurrentKey");
static_assert(offsetof(KeyConfigPressAnyKey_GetCurrentKey, ReturnValue) == 0x000000, "Member 'KeyConfigPressAnyKey_GetCurrentKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.KeyConfigPressAnyKey.IsGamepadKey
// 0x0001 (0x0001 - 0x0000)
struct KeyConfigPressAnyKey_IsGamepadKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KeyConfigPressAnyKey_IsGamepadKey) == 0x000001, "Wrong alignment on KeyConfigPressAnyKey_IsGamepadKey");
static_assert(sizeof(KeyConfigPressAnyKey_IsGamepadKey) == 0x000001, "Wrong size on KeyConfigPressAnyKey_IsGamepadKey");
static_assert(offsetof(KeyConfigPressAnyKey_IsGamepadKey, ReturnValue) == 0x000000, "Member 'KeyConfigPressAnyKey_IsGamepadKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.BeginTransaction
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_BeginTransaction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_BeginTransaction) == 0x000001, "Wrong alignment on LobbyContextBase_BeginTransaction");
static_assert(sizeof(LobbyContextBase_BeginTransaction) == 0x000001, "Wrong size on LobbyContextBase_BeginTransaction");
static_assert(offsetof(LobbyContextBase_BeginTransaction, ReturnValue) == 0x000000, "Member 'LobbyContextBase_BeginTransaction::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.Create
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_Create final
{
public:
	class ULobbyTransactionParam*                 Param;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_Create) == 0x000008, "Wrong alignment on LobbyContextBase_Create");
static_assert(sizeof(LobbyContextBase_Create) == 0x000008, "Wrong size on LobbyContextBase_Create");
static_assert(offsetof(LobbyContextBase_Create, Param) == 0x000000, "Member 'LobbyContextBase_Create::Param' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.CreateSession
// 0x0014 (0x0014 - 0x0000)
struct LobbyContextBase_CreateSession final
{
public:
	TDelegate<void(bool bSuccess)>                OnComplete;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_CreateSession) == 0x000004, "Wrong alignment on LobbyContextBase_CreateSession");
static_assert(sizeof(LobbyContextBase_CreateSession) == 0x000014, "Wrong size on LobbyContextBase_CreateSession");
static_assert(offsetof(LobbyContextBase_CreateSession, OnComplete) == 0x000000, "Member 'LobbyContextBase_CreateSession::OnComplete' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_CreateSession, ReturnValue) == 0x000010, "Member 'LobbyContextBase_CreateSession::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.CreateShortLobbyId
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_CreateShortLobbyId final
{
public:
	TDelegate<void(const class FString& ShortLobbyId)> OnComplete;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_CreateShortLobbyId) == 0x000004, "Wrong alignment on LobbyContextBase_CreateShortLobbyId");
static_assert(sizeof(LobbyContextBase_CreateShortLobbyId) == 0x000010, "Wrong size on LobbyContextBase_CreateShortLobbyId");
static_assert(offsetof(LobbyContextBase_CreateShortLobbyId, OnComplete) == 0x000000, "Member 'LobbyContextBase_CreateShortLobbyId::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.CreateSimple
// 0x0018 (0x0018 - 0x0000)
struct LobbyContextBase_CreateSimple final
{
public:
	bool                                          bLocked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPublic;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHostMigration;                                    // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Password;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_CreateSimple) == 0x000008, "Wrong alignment on LobbyContextBase_CreateSimple");
static_assert(sizeof(LobbyContextBase_CreateSimple) == 0x000018, "Wrong size on LobbyContextBase_CreateSimple");
static_assert(offsetof(LobbyContextBase_CreateSimple, bLocked) == 0x000000, "Member 'LobbyContextBase_CreateSimple::bLocked' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_CreateSimple, bPublic) == 0x000001, "Member 'LobbyContextBase_CreateSimple::bPublic' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_CreateSimple, bHostMigration) == 0x000002, "Member 'LobbyContextBase_CreateSimple::bHostMigration' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_CreateSimple, Password) == 0x000008, "Member 'LobbyContextBase_CreateSimple::Password' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.DestroySession
// 0x0014 (0x0014 - 0x0000)
struct LobbyContextBase_DestroySession final
{
public:
	TDelegate<void(bool bSuccess)>                OnComplete;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_DestroySession) == 0x000004, "Wrong alignment on LobbyContextBase_DestroySession");
static_assert(sizeof(LobbyContextBase_DestroySession) == 0x000014, "Wrong size on LobbyContextBase_DestroySession");
static_assert(offsetof(LobbyContextBase_DestroySession, OnComplete) == 0x000000, "Member 'LobbyContextBase_DestroySession::OnComplete' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_DestroySession, ReturnValue) == 0x000010, "Member 'LobbyContextBase_DestroySession::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.EndTransaction
// 0x0014 (0x0014 - 0x0000)
struct LobbyContextBase_EndTransaction final
{
public:
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_EndTransaction) == 0x000004, "Wrong alignment on LobbyContextBase_EndTransaction");
static_assert(sizeof(LobbyContextBase_EndTransaction) == 0x000014, "Wrong size on LobbyContextBase_EndTransaction");
static_assert(offsetof(LobbyContextBase_EndTransaction, OnComplete) == 0x000000, "Member 'LobbyContextBase_EndTransaction::OnComplete' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_EndTransaction, ReturnValue) == 0x000010, "Member 'LobbyContextBase_EndTransaction::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.EndTransaction_NoCallback
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_EndTransaction_NoCallback final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_EndTransaction_NoCallback) == 0x000001, "Wrong alignment on LobbyContextBase_EndTransaction_NoCallback");
static_assert(sizeof(LobbyContextBase_EndTransaction_NoCallback) == 0x000001, "Wrong size on LobbyContextBase_EndTransaction_NoCallback");
static_assert(offsetof(LobbyContextBase_EndTransaction_NoCallback, ReturnValue) == 0x000000, "Member 'LobbyContextBase_EndTransaction_NoCallback::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetHostUserIdStringByLobbyId
// 0x0030 (0x0030 - 0x0000)
struct LobbyContextBase_GetHostUserIdStringByLobbyId final
{
public:
	int32                                         InLocalUserNum;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               InLobbyId;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutHostUserId;                                     // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_GetHostUserIdStringByLobbyId) == 0x000008, "Wrong alignment on LobbyContextBase_GetHostUserIdStringByLobbyId");
static_assert(sizeof(LobbyContextBase_GetHostUserIdStringByLobbyId) == 0x000030, "Wrong size on LobbyContextBase_GetHostUserIdStringByLobbyId");
static_assert(offsetof(LobbyContextBase_GetHostUserIdStringByLobbyId, InLocalUserNum) == 0x000000, "Member 'LobbyContextBase_GetHostUserIdStringByLobbyId::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetHostUserIdStringByLobbyId, InLobbyId) == 0x000008, "Member 'LobbyContextBase_GetHostUserIdStringByLobbyId::InLobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetHostUserIdStringByLobbyId, OutHostUserId) == 0x000018, "Member 'LobbyContextBase_GetHostUserIdStringByLobbyId::OutHostUserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetHostUserIdStringByLobbyId, ReturnValue) == 0x000028, "Member 'LobbyContextBase_GetHostUserIdStringByLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetLocalMemberDefaultDummy
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_GetLocalMemberDefaultDummy final
{
public:
	class ULobbyMemberContextBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetLocalMemberDefaultDummy) == 0x000008, "Wrong alignment on LobbyContextBase_GetLocalMemberDefaultDummy");
static_assert(sizeof(LobbyContextBase_GetLocalMemberDefaultDummy) == 0x000008, "Wrong size on LobbyContextBase_GetLocalMemberDefaultDummy");
static_assert(offsetof(LobbyContextBase_GetLocalMemberDefaultDummy, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetLocalMemberDefaultDummy::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.Initialize
// 0x0078 (0x0078 - 0x0000)
struct LobbyContextBase_Initialize final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       OwnerUserId;                                       // 0x0038(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0068(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_Initialize) == 0x000008, "Wrong alignment on LobbyContextBase_Initialize");
static_assert(sizeof(LobbyContextBase_Initialize) == 0x000078, "Wrong size on LobbyContextBase_Initialize");
static_assert(offsetof(LobbyContextBase_Initialize, LocalUserNum) == 0x000000, "Member 'LobbyContextBase_Initialize::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_Initialize, UserId) == 0x000008, "Member 'LobbyContextBase_Initialize::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_Initialize, OwnerUserId) == 0x000038, "Member 'LobbyContextBase_Initialize::OwnerUserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_Initialize, LobbyId) == 0x000068, "Member 'LobbyContextBase_Initialize::LobbyId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.InitializeNoLobbyInfo
// 0x0004 (0x0004 - 0x0000)
struct LobbyContextBase_InitializeNoLobbyInfo final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_InitializeNoLobbyInfo) == 0x000004, "Wrong alignment on LobbyContextBase_InitializeNoLobbyInfo");
static_assert(sizeof(LobbyContextBase_InitializeNoLobbyInfo) == 0x000004, "Wrong size on LobbyContextBase_InitializeNoLobbyInfo");
static_assert(offsetof(LobbyContextBase_InitializeNoLobbyInfo, LocalUserNum) == 0x000000, "Member 'LobbyContextBase_InitializeNoLobbyInfo::LocalUserNum' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.Join
// 0x0020 (0x0020 - 0x0000)
struct LobbyContextBase_Join final
{
public:
	struct FLobbyId                               LobbyId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_Join) == 0x000008, "Wrong alignment on LobbyContextBase_Join");
static_assert(sizeof(LobbyContextBase_Join) == 0x000020, "Wrong size on LobbyContextBase_Join");
static_assert(offsetof(LobbyContextBase_Join, LobbyId) == 0x000000, "Member 'LobbyContextBase_Join::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_Join, Password) == 0x000010, "Member 'LobbyContextBase_Join::Password' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.KickMember
// 0x0018 (0x0018 - 0x0000)
struct LobbyContextBase_KickMember final
{
public:
	class ULobbyMemberContextBase*                MemberContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_KickMember) == 0x000008, "Wrong alignment on LobbyContextBase_KickMember");
static_assert(sizeof(LobbyContextBase_KickMember) == 0x000018, "Wrong size on LobbyContextBase_KickMember");
static_assert(offsetof(LobbyContextBase_KickMember, MemberContext) == 0x000000, "Member 'LobbyContextBase_KickMember::MemberContext' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_KickMember, OnComplete) == 0x000008, "Member 'LobbyContextBase_KickMember::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnConnectLobbyCompletedInternal
// 0x0040 (0x0040 - 0x0000)
struct LobbyContextBase_OnConnectLobbyCompletedInternal final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineErrorBP                         Error;                                             // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnConnectLobbyCompletedInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnConnectLobbyCompletedInternal");
static_assert(sizeof(LobbyContextBase_OnConnectLobbyCompletedInternal) == 0x000040, "Wrong size on LobbyContextBase_OnConnectLobbyCompletedInternal");
static_assert(offsetof(LobbyContextBase_OnConnectLobbyCompletedInternal, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnConnectLobbyCompletedInternal::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnConnectLobbyCompletedInternal, Error) == 0x000008, "Member 'LobbyContextBase_OnConnectLobbyCompletedInternal::Error' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnCreateLobbyCompletedInternal
// 0x0040 (0x0040 - 0x0000)
struct LobbyContextBase_OnCreateLobbyCompletedInternal final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineErrorBP                         Error;                                             // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnCreateLobbyCompletedInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnCreateLobbyCompletedInternal");
static_assert(sizeof(LobbyContextBase_OnCreateLobbyCompletedInternal) == 0x000040, "Wrong size on LobbyContextBase_OnCreateLobbyCompletedInternal");
static_assert(offsetof(LobbyContextBase_OnCreateLobbyCompletedInternal, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnCreateLobbyCompletedInternal::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnCreateLobbyCompletedInternal, Error) == 0x000008, "Member 'LobbyContextBase_OnCreateLobbyCompletedInternal::Error' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnCreateShortLobbyIdComplete
// 0x0038 (0x0038 - 0x0000)
struct LobbyContextBase_OnCreateShortLobbyIdComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_OnCreateShortLobbyIdComplete) == 0x000008, "Wrong alignment on LobbyContextBase_OnCreateShortLobbyIdComplete");
static_assert(sizeof(LobbyContextBase_OnCreateShortLobbyIdComplete) == 0x000038, "Wrong size on LobbyContextBase_OnCreateShortLobbyIdComplete");
static_assert(offsetof(LobbyContextBase_OnCreateShortLobbyIdComplete, ApiName) == 0x000000, "Member 'LobbyContextBase_OnCreateShortLobbyIdComplete::ApiName' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnCreateShortLobbyIdComplete, RequestData) == 0x000010, "Member 'LobbyContextBase_OnCreateShortLobbyIdComplete::RequestData' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnCreateShortLobbyIdComplete, ResponseData) == 0x000020, "Member 'LobbyContextBase_OnCreateShortLobbyIdComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnCreateShortLobbyIdComplete, Error) == 0x000030, "Member 'LobbyContextBase_OnCreateShortLobbyIdComplete::Error' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnDeleteLobbyComplete
// 0x0070 (0x0070 - 0x0000)
struct LobbyContextBase_OnDeleteLobbyComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  Result;                                            // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnDeleteLobbyComplete) == 0x000008, "Wrong alignment on LobbyContextBase_OnDeleteLobbyComplete");
static_assert(sizeof(LobbyContextBase_OnDeleteLobbyComplete) == 0x000070, "Wrong size on LobbyContextBase_OnDeleteLobbyComplete");
static_assert(offsetof(LobbyContextBase_OnDeleteLobbyComplete, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnDeleteLobbyComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnDeleteLobbyComplete, Result) == 0x000008, "Member 'LobbyContextBase_OnDeleteLobbyComplete::Result' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnDeleteLobbyCompletedInternal
// 0x0040 (0x0040 - 0x0000)
struct LobbyContextBase_OnDeleteLobbyCompletedInternal final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineErrorBP                         Error;                                             // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnDeleteLobbyCompletedInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnDeleteLobbyCompletedInternal");
static_assert(sizeof(LobbyContextBase_OnDeleteLobbyCompletedInternal) == 0x000040, "Wrong size on LobbyContextBase_OnDeleteLobbyCompletedInternal");
static_assert(offsetof(LobbyContextBase_OnDeleteLobbyCompletedInternal, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnDeleteLobbyCompletedInternal::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnDeleteLobbyCompletedInternal, Error) == 0x000008, "Member 'LobbyContextBase_OnDeleteLobbyCompletedInternal::Error' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnDestroiedSession
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_OnDestroiedSession final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnDestroiedSession) == 0x000001, "Wrong alignment on LobbyContextBase_OnDestroiedSession");
static_assert(sizeof(LobbyContextBase_OnDestroiedSession) == 0x000001, "Wrong size on LobbyContextBase_OnDestroiedSession");
static_assert(offsetof(LobbyContextBase_OnDestroiedSession, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnDestroiedSession::bSuccessful' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnDisconnectLobbyCompletedInternal
// 0x0040 (0x0040 - 0x0000)
struct LobbyContextBase_OnDisconnectLobbyCompletedInternal final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineErrorBP                         Error;                                             // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnDisconnectLobbyCompletedInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnDisconnectLobbyCompletedInternal");
static_assert(sizeof(LobbyContextBase_OnDisconnectLobbyCompletedInternal) == 0x000040, "Wrong size on LobbyContextBase_OnDisconnectLobbyCompletedInternal");
static_assert(offsetof(LobbyContextBase_OnDisconnectLobbyCompletedInternal, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnDisconnectLobbyCompletedInternal::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnDisconnectLobbyCompletedInternal, Error) == 0x000008, "Member 'LobbyContextBase_OnDisconnectLobbyCompletedInternal::Error' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnGetLobbyHostCallbackInternal
// 0x0020 (0x0020 - 0x0000)
struct LobbyContextBase_OnGetLobbyHostCallbackInternal final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCommon_UserSearchData>         SearchDatas;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EResponseCodeAbstract                         ResCodeAbstract;                                   // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_OnGetLobbyHostCallbackInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnGetLobbyHostCallbackInternal");
static_assert(sizeof(LobbyContextBase_OnGetLobbyHostCallbackInternal) == 0x000020, "Wrong size on LobbyContextBase_OnGetLobbyHostCallbackInternal");
static_assert(offsetof(LobbyContextBase_OnGetLobbyHostCallbackInternal, bWasSuccessful) == 0x000000, "Member 'LobbyContextBase_OnGetLobbyHostCallbackInternal::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnGetLobbyHostCallbackInternal, SearchDatas) == 0x000008, "Member 'LobbyContextBase_OnGetLobbyHostCallbackInternal::SearchDatas' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnGetLobbyHostCallbackInternal, ResCodeAbstract) == 0x000018, "Member 'LobbyContextBase_OnGetLobbyHostCallbackInternal::ResCodeAbstract' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnKeepAliveShortLobbyIdComplete
// 0x0038 (0x0038 - 0x0000)
struct LobbyContextBase_OnKeepAliveShortLobbyIdComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_OnKeepAliveShortLobbyIdComplete) == 0x000008, "Wrong alignment on LobbyContextBase_OnKeepAliveShortLobbyIdComplete");
static_assert(sizeof(LobbyContextBase_OnKeepAliveShortLobbyIdComplete) == 0x000038, "Wrong size on LobbyContextBase_OnKeepAliveShortLobbyIdComplete");
static_assert(offsetof(LobbyContextBase_OnKeepAliveShortLobbyIdComplete, ApiName) == 0x000000, "Member 'LobbyContextBase_OnKeepAliveShortLobbyIdComplete::ApiName' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnKeepAliveShortLobbyIdComplete, RequestData) == 0x000010, "Member 'LobbyContextBase_OnKeepAliveShortLobbyIdComplete::RequestData' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnKeepAliveShortLobbyIdComplete, ResponseData) == 0x000020, "Member 'LobbyContextBase_OnKeepAliveShortLobbyIdComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnKeepAliveShortLobbyIdComplete, Error) == 0x000030, "Member 'LobbyContextBase_OnKeepAliveShortLobbyIdComplete::Error' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnKickMemberComplete
// 0x0070 (0x0070 - 0x0000)
struct LobbyContextBase_OnKickMemberComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  Result;                                            // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnKickMemberComplete) == 0x000008, "Wrong alignment on LobbyContextBase_OnKickMemberComplete");
static_assert(sizeof(LobbyContextBase_OnKickMemberComplete) == 0x000070, "Wrong size on LobbyContextBase_OnKickMemberComplete");
static_assert(offsetof(LobbyContextBase_OnKickMemberComplete, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnKickMemberComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnKickMemberComplete, Result) == 0x000008, "Member 'LobbyContextBase_OnKickMemberComplete::Result' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnLobbyDelete
// 0x0040 (0x0040 - 0x0000)
struct LobbyContextBase_OnLobbyDelete final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnLobbyDelete) == 0x000008, "Wrong alignment on LobbyContextBase_OnLobbyDelete");
static_assert(sizeof(LobbyContextBase_OnLobbyDelete) == 0x000040, "Wrong size on LobbyContextBase_OnLobbyDelete");
static_assert(offsetof(LobbyContextBase_OnLobbyDelete, UserId) == 0x000000, "Member 'LobbyContextBase_OnLobbyDelete::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnLobbyDelete, LobbyId) == 0x000030, "Member 'LobbyContextBase_OnLobbyDelete::LobbyId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnLobbyUpdate
// 0x0040 (0x0040 - 0x0000)
struct LobbyContextBase_OnLobbyUpdate final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnLobbyUpdate) == 0x000008, "Wrong alignment on LobbyContextBase_OnLobbyUpdate");
static_assert(sizeof(LobbyContextBase_OnLobbyUpdate) == 0x000040, "Wrong size on LobbyContextBase_OnLobbyUpdate");
static_assert(offsetof(LobbyContextBase_OnLobbyUpdate, UserId) == 0x000000, "Member 'LobbyContextBase_OnLobbyUpdate::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnLobbyUpdate, LobbyId) == 0x000030, "Member 'LobbyContextBase_OnLobbyUpdate::LobbyId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberConnect
// 0x0070 (0x0070 - 0x0000)
struct LobbyContextBase_OnMemberConnect final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0040(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnMemberConnect) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberConnect");
static_assert(sizeof(LobbyContextBase_OnMemberConnect) == 0x000070, "Wrong size on LobbyContextBase_OnMemberConnect");
static_assert(offsetof(LobbyContextBase_OnMemberConnect, UserId) == 0x000000, "Member 'LobbyContextBase_OnMemberConnect::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberConnect, LobbyId) == 0x000030, "Member 'LobbyContextBase_OnMemberConnect::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberConnect, MemberId) == 0x000040, "Member 'LobbyContextBase_OnMemberConnect::MemberId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberConnectInternal
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_OnMemberConnectInternal final
{
public:
	class ULobbyMemberContextBase*                MemberContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnMemberConnectInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberConnectInternal");
static_assert(sizeof(LobbyContextBase_OnMemberConnectInternal) == 0x000008, "Wrong size on LobbyContextBase_OnMemberConnectInternal");
static_assert(offsetof(LobbyContextBase_OnMemberConnectInternal, MemberContext) == 0x000000, "Member 'LobbyContextBase_OnMemberConnectInternal::MemberContext' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberDisconnect
// 0x0078 (0x0078 - 0x0000)
struct LobbyContextBase_OnMemberDisconnect final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0040(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasKicked;                                        // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_OnMemberDisconnect) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberDisconnect");
static_assert(sizeof(LobbyContextBase_OnMemberDisconnect) == 0x000078, "Wrong size on LobbyContextBase_OnMemberDisconnect");
static_assert(offsetof(LobbyContextBase_OnMemberDisconnect, UserId) == 0x000000, "Member 'LobbyContextBase_OnMemberDisconnect::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberDisconnect, LobbyId) == 0x000030, "Member 'LobbyContextBase_OnMemberDisconnect::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberDisconnect, MemberId) == 0x000040, "Member 'LobbyContextBase_OnMemberDisconnect::MemberId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberDisconnect, bWasKicked) == 0x000070, "Member 'LobbyContextBase_OnMemberDisconnect::bWasKicked' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberDisconnectInternal
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_OnMemberDisconnectInternal final
{
public:
	class ULobbyMemberContextBase*                MemberContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasKicked;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_OnMemberDisconnectInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberDisconnectInternal");
static_assert(sizeof(LobbyContextBase_OnMemberDisconnectInternal) == 0x000010, "Wrong size on LobbyContextBase_OnMemberDisconnectInternal");
static_assert(offsetof(LobbyContextBase_OnMemberDisconnectInternal, MemberContext) == 0x000000, "Member 'LobbyContextBase_OnMemberDisconnectInternal::MemberContext' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberDisconnectInternal, bWasKicked) == 0x000008, "Member 'LobbyContextBase_OnMemberDisconnectInternal::bWasKicked' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberPromote
// 0x0070 (0x0070 - 0x0000)
struct LobbyContextBase_OnMemberPromote final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       NewLeaderId;                                       // 0x0040(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnMemberPromote) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberPromote");
static_assert(sizeof(LobbyContextBase_OnMemberPromote) == 0x000070, "Wrong size on LobbyContextBase_OnMemberPromote");
static_assert(offsetof(LobbyContextBase_OnMemberPromote, UserId) == 0x000000, "Member 'LobbyContextBase_OnMemberPromote::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberPromote, LobbyId) == 0x000030, "Member 'LobbyContextBase_OnMemberPromote::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberPromote, NewLeaderId) == 0x000040, "Member 'LobbyContextBase_OnMemberPromote::NewLeaderId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberPromoteInternal
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_OnMemberPromoteInternal final
{
public:
	class ULobbyMemberContextBase*                MemberContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnMemberPromoteInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberPromoteInternal");
static_assert(sizeof(LobbyContextBase_OnMemberPromoteInternal) == 0x000008, "Wrong size on LobbyContextBase_OnMemberPromoteInternal");
static_assert(offsetof(LobbyContextBase_OnMemberPromoteInternal, MemberContext) == 0x000000, "Member 'LobbyContextBase_OnMemberPromoteInternal::MemberContext' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberUpdate
// 0x0070 (0x0070 - 0x0000)
struct LobbyContextBase_OnMemberUpdate final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0040(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnMemberUpdate) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberUpdate");
static_assert(sizeof(LobbyContextBase_OnMemberUpdate) == 0x000070, "Wrong size on LobbyContextBase_OnMemberUpdate");
static_assert(offsetof(LobbyContextBase_OnMemberUpdate, UserId) == 0x000000, "Member 'LobbyContextBase_OnMemberUpdate::UserId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberUpdate, LobbyId) == 0x000030, "Member 'LobbyContextBase_OnMemberUpdate::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnMemberUpdate, MemberId) == 0x000040, "Member 'LobbyContextBase_OnMemberUpdate::MemberId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnMemberUpdateInternal
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_OnMemberUpdateInternal final
{
public:
	class ULobbyMemberContextBase*                MemberContext;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnMemberUpdateInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnMemberUpdateInternal");
static_assert(sizeof(LobbyContextBase_OnMemberUpdateInternal) == 0x000008, "Wrong size on LobbyContextBase_OnMemberUpdateInternal");
static_assert(offsetof(LobbyContextBase_OnMemberUpdateInternal, MemberContext) == 0x000000, "Member 'LobbyContextBase_OnMemberUpdateInternal::MemberContext' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnPlatformEvent
// 0x0018 (0x0018 - 0x0000)
struct LobbyContextBase_OnPlatformEvent final
{
public:
	struct FUnionPlatformEventInfo                EventInfo;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnPlatformEvent) == 0x000008, "Wrong alignment on LobbyContextBase_OnPlatformEvent");
static_assert(sizeof(LobbyContextBase_OnPlatformEvent) == 0x000018, "Wrong size on LobbyContextBase_OnPlatformEvent");
static_assert(offsetof(LobbyContextBase_OnPlatformEvent, EventInfo) == 0x000000, "Member 'LobbyContextBase_OnPlatformEvent::EventInfo' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnSearchLobbyCompletedInternal
// 0x0080 (0x0080 - 0x0000)
struct LobbyContextBase_OnSearchLobbyCompletedInternal final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSearchLobbyResult                     Result;                                            // 0x0008(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnSearchLobbyCompletedInternal) == 0x000008, "Wrong alignment on LobbyContextBase_OnSearchLobbyCompletedInternal");
static_assert(sizeof(LobbyContextBase_OnSearchLobbyCompletedInternal) == 0x000080, "Wrong size on LobbyContextBase_OnSearchLobbyCompletedInternal");
static_assert(offsetof(LobbyContextBase_OnSearchLobbyCompletedInternal, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnSearchLobbyCompletedInternal::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnSearchLobbyCompletedInternal, Result) == 0x000008, "Member 'LobbyContextBase_OnSearchLobbyCompletedInternal::Result' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.OnUpdateLobbyComplete
// 0x0080 (0x0080 - 0x0000)
struct LobbyContextBase_OnUpdateLobbyComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  Result;                                            // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_OnUpdateLobbyComplete) == 0x000008, "Wrong alignment on LobbyContextBase_OnUpdateLobbyComplete");
static_assert(sizeof(LobbyContextBase_OnUpdateLobbyComplete) == 0x000080, "Wrong size on LobbyContextBase_OnUpdateLobbyComplete");
static_assert(offsetof(LobbyContextBase_OnUpdateLobbyComplete, bSuccessful) == 0x000000, "Member 'LobbyContextBase_OnUpdateLobbyComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnUpdateLobbyComplete, Result) == 0x000008, "Member 'LobbyContextBase_OnUpdateLobbyComplete::Result' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_OnUpdateLobbyComplete, OnComplete) == 0x000070, "Member 'LobbyContextBase_OnUpdateLobbyComplete::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.SearchByShortLobbyId
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_SearchByShortLobbyId final
{
public:
	class FString                                 ShortLobbyId;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_SearchByShortLobbyId) == 0x000008, "Wrong alignment on LobbyContextBase_SearchByShortLobbyId");
static_assert(sizeof(LobbyContextBase_SearchByShortLobbyId) == 0x000010, "Wrong size on LobbyContextBase_SearchByShortLobbyId");
static_assert(offsetof(LobbyContextBase_SearchByShortLobbyId, ShortLobbyId) == 0x000000, "Member 'LobbyContextBase_SearchByShortLobbyId::ShortLobbyId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.SearchByShortLobbyIdNoLobbyType
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_SearchByShortLobbyIdNoLobbyType final
{
public:
	class FString                                 ShortLobbyId;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_SearchByShortLobbyIdNoLobbyType) == 0x000008, "Wrong alignment on LobbyContextBase_SearchByShortLobbyIdNoLobbyType");
static_assert(sizeof(LobbyContextBase_SearchByShortLobbyIdNoLobbyType) == 0x000010, "Wrong size on LobbyContextBase_SearchByShortLobbyIdNoLobbyType");
static_assert(offsetof(LobbyContextBase_SearchByShortLobbyIdNoLobbyType, ShortLobbyId) == 0x000000, "Member 'LobbyContextBase_SearchByShortLobbyIdNoLobbyType::ShortLobbyId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.SendSessionInvite
// 0x0038 (0x0038 - 0x0000)
struct LobbyContextBase_SendSessionInvite final
{
public:
	struct FUniqueNetIdRepl                       FriendId;                                          // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_SendSessionInvite) == 0x000008, "Wrong alignment on LobbyContextBase_SendSessionInvite");
static_assert(sizeof(LobbyContextBase_SendSessionInvite) == 0x000038, "Wrong size on LobbyContextBase_SendSessionInvite");
static_assert(offsetof(LobbyContextBase_SendSessionInvite, FriendId) == 0x000000, "Member 'LobbyContextBase_SendSessionInvite::FriendId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_SendSessionInvite, ReturnValue) == 0x000030, "Member 'LobbyContextBase_SendSessionInvite::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_SetLocked final
{
public:
	bool                                          bInLock;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_SetLocked) == 0x000001, "Wrong alignment on LobbyContextBase_SetLocked");
static_assert(sizeof(LobbyContextBase_SetLocked) == 0x000001, "Wrong size on LobbyContextBase_SetLocked");
static_assert(offsetof(LobbyContextBase_SetLocked, bInLock) == 0x000000, "Member 'LobbyContextBase_SetLocked::bInLock' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.SetPublic
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_SetPublic final
{
public:
	bool                                          bInPublic;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_SetPublic) == 0x000001, "Wrong alignment on LobbyContextBase_SetPublic");
static_assert(sizeof(LobbyContextBase_SetPublic) == 0x000001, "Wrong size on LobbyContextBase_SetPublic");
static_assert(offsetof(LobbyContextBase_SetPublic, bInPublic) == 0x000000, "Member 'LobbyContextBase_SetPublic::bInPublic' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.WaitAddMemberInitComplete
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_WaitAddMemberInitComplete final
{
public:
	TDelegate<void()>                             OnComplete;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_WaitAddMemberInitComplete) == 0x000004, "Wrong alignment on LobbyContextBase_WaitAddMemberInitComplete");
static_assert(sizeof(LobbyContextBase_WaitAddMemberInitComplete) == 0x000010, "Wrong size on LobbyContextBase_WaitAddMemberInitComplete");
static_assert(offsetof(LobbyContextBase_WaitAddMemberInitComplete, OnComplete) == 0x000000, "Member 'LobbyContextBase_WaitAddMemberInitComplete::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetAllMemberInternalUserIds
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetAllMemberInternalUserIds final
{
public:
	TArray<class FString>                         OutResult;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetAllMemberInternalUserIds) == 0x000008, "Wrong alignment on LobbyContextBase_GetAllMemberInternalUserIds");
static_assert(sizeof(LobbyContextBase_GetAllMemberInternalUserIds) == 0x000010, "Wrong size on LobbyContextBase_GetAllMemberInternalUserIds");
static_assert(offsetof(LobbyContextBase_GetAllMemberInternalUserIds, OutResult) == 0x000000, "Member 'LobbyContextBase_GetAllMemberInternalUserIds::OutResult' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetAllMembers
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetAllMembers final
{
public:
	TArray<class ULobbyMemberContextBase*>        OutResult;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetAllMembers) == 0x000008, "Wrong alignment on LobbyContextBase_GetAllMembers");
static_assert(sizeof(LobbyContextBase_GetAllMembers) == 0x000010, "Wrong size on LobbyContextBase_GetAllMembers");
static_assert(offsetof(LobbyContextBase_GetAllMembers, OutResult) == 0x000000, "Member 'LobbyContextBase_GetAllMembers::OutResult' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetAllMemberUserIds
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetAllMemberUserIds final
{
public:
	TArray<class FString>                         OutResult;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetAllMemberUserIds) == 0x000008, "Wrong alignment on LobbyContextBase_GetAllMemberUserIds");
static_assert(sizeof(LobbyContextBase_GetAllMemberUserIds) == 0x000010, "Wrong size on LobbyContextBase_GetAllMemberUserIds");
static_assert(offsetof(LobbyContextBase_GetAllMemberUserIds, OutResult) == 0x000000, "Member 'LobbyContextBase_GetAllMemberUserIds::OutResult' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetHasValidInitDataMemerContextCount
// 0x0004 (0x0004 - 0x0000)
struct LobbyContextBase_GetHasValidInitDataMemerContextCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetHasValidInitDataMemerContextCount) == 0x000004, "Wrong alignment on LobbyContextBase_GetHasValidInitDataMemerContextCount");
static_assert(sizeof(LobbyContextBase_GetHasValidInitDataMemerContextCount) == 0x000004, "Wrong size on LobbyContextBase_GetHasValidInitDataMemerContextCount");
static_assert(offsetof(LobbyContextBase_GetHasValidInitDataMemerContextCount, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetHasValidInitDataMemerContextCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetHostMember
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_GetHostMember final
{
public:
	class ULobbyMemberContextBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetHostMember) == 0x000008, "Wrong alignment on LobbyContextBase_GetHostMember");
static_assert(sizeof(LobbyContextBase_GetHostMember) == 0x000008, "Wrong size on LobbyContextBase_GetHostMember");
static_assert(offsetof(LobbyContextBase_GetHostMember, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetHostMember::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetLobbyId
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetLobbyId final
{
public:
	struct FLobbyId                               ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetLobbyId) == 0x000008, "Wrong alignment on LobbyContextBase_GetLobbyId");
static_assert(sizeof(LobbyContextBase_GetLobbyId) == 0x000010, "Wrong size on LobbyContextBase_GetLobbyId");
static_assert(offsetof(LobbyContextBase_GetLobbyId, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetLobbyTypeByLobbyId
// 0x0028 (0x0028 - 0x0000)
struct LobbyContextBase_GetLobbyTypeByLobbyId final
{
public:
	int32                                         InLocalUserNum;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               InLobbyId;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int64                                         OutLobbyType;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_GetLobbyTypeByLobbyId) == 0x000008, "Wrong alignment on LobbyContextBase_GetLobbyTypeByLobbyId");
static_assert(sizeof(LobbyContextBase_GetLobbyTypeByLobbyId) == 0x000028, "Wrong size on LobbyContextBase_GetLobbyTypeByLobbyId");
static_assert(offsetof(LobbyContextBase_GetLobbyTypeByLobbyId, InLocalUserNum) == 0x000000, "Member 'LobbyContextBase_GetLobbyTypeByLobbyId::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetLobbyTypeByLobbyId, InLobbyId) == 0x000008, "Member 'LobbyContextBase_GetLobbyTypeByLobbyId::InLobbyId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetLobbyTypeByLobbyId, OutLobbyType) == 0x000018, "Member 'LobbyContextBase_GetLobbyTypeByLobbyId::OutLobbyType' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetLobbyTypeByLobbyId, ReturnValue) == 0x000020, "Member 'LobbyContextBase_GetLobbyTypeByLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetLocalMember
// 0x0008 (0x0008 - 0x0000)
struct LobbyContextBase_GetLocalMember final
{
public:
	class ULobbyMemberContextBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetLocalMember) == 0x000008, "Wrong alignment on LobbyContextBase_GetLocalMember");
static_assert(sizeof(LobbyContextBase_GetLocalMember) == 0x000008, "Wrong size on LobbyContextBase_GetLocalMember");
static_assert(offsetof(LobbyContextBase_GetLocalMember, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetLocalMember::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetLocalUserId
// 0x0030 (0x0030 - 0x0000)
struct LobbyContextBase_GetLocalUserId final
{
public:
	struct FUniqueNetIdRepl                       OutUserId;                                         // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetLocalUserId) == 0x000008, "Wrong alignment on LobbyContextBase_GetLocalUserId");
static_assert(sizeof(LobbyContextBase_GetLocalUserId) == 0x000030, "Wrong size on LobbyContextBase_GetLocalUserId");
static_assert(offsetof(LobbyContextBase_GetLocalUserId, OutUserId) == 0x000000, "Member 'LobbyContextBase_GetLocalUserId::OutUserId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetMaxLobbyMember
// 0x0004 (0x0004 - 0x0000)
struct LobbyContextBase_GetMaxLobbyMember final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetMaxLobbyMember) == 0x000004, "Wrong alignment on LobbyContextBase_GetMaxLobbyMember");
static_assert(sizeof(LobbyContextBase_GetMaxLobbyMember) == 0x000004, "Wrong size on LobbyContextBase_GetMaxLobbyMember");
static_assert(offsetof(LobbyContextBase_GetMaxLobbyMember, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetMaxLobbyMember::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetMember
// 0x0038 (0x0038 - 0x0000)
struct LobbyContextBase_GetMember final
{
public:
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyMemberContextBase*                ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetMember) == 0x000008, "Wrong alignment on LobbyContextBase_GetMember");
static_assert(sizeof(LobbyContextBase_GetMember) == 0x000038, "Wrong size on LobbyContextBase_GetMember");
static_assert(offsetof(LobbyContextBase_GetMember, MemberId) == 0x000000, "Member 'LobbyContextBase_GetMember::MemberId' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetMember, ReturnValue) == 0x000030, "Member 'LobbyContextBase_GetMember::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetMemberCount
// 0x0004 (0x0004 - 0x0000)
struct LobbyContextBase_GetMemberCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetMemberCount) == 0x000004, "Wrong alignment on LobbyContextBase_GetMemberCount");
static_assert(sizeof(LobbyContextBase_GetMemberCount) == 0x000004, "Wrong size on LobbyContextBase_GetMemberCount");
static_assert(offsetof(LobbyContextBase_GetMemberCount, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetMemberCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetMemberFromLobbyMemberIndex
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetMemberFromLobbyMemberIndex final
{
public:
	int32                                         LobbyMemberIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULobbyMemberContextBase*                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetMemberFromLobbyMemberIndex) == 0x000008, "Wrong alignment on LobbyContextBase_GetMemberFromLobbyMemberIndex");
static_assert(sizeof(LobbyContextBase_GetMemberFromLobbyMemberIndex) == 0x000010, "Wrong size on LobbyContextBase_GetMemberFromLobbyMemberIndex");
static_assert(offsetof(LobbyContextBase_GetMemberFromLobbyMemberIndex, LobbyMemberIndex) == 0x000000, "Member 'LobbyContextBase_GetMemberFromLobbyMemberIndex::LobbyMemberIndex' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_GetMemberFromLobbyMemberIndex, ReturnValue) == 0x000008, "Member 'LobbyContextBase_GetMemberFromLobbyMemberIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetOwnerUserId
// 0x0030 (0x0030 - 0x0000)
struct LobbyContextBase_GetOwnerUserId final
{
public:
	struct FUniqueNetIdRepl                       OutUserId;                                         // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetOwnerUserId) == 0x000008, "Wrong alignment on LobbyContextBase_GetOwnerUserId");
static_assert(sizeof(LobbyContextBase_GetOwnerUserId) == 0x000030, "Wrong size on LobbyContextBase_GetOwnerUserId");
static_assert(offsetof(LobbyContextBase_GetOwnerUserId, OutUserId) == 0x000000, "Member 'LobbyContextBase_GetOwnerUserId::OutUserId' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetShortLobbyId
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetShortLobbyId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetShortLobbyId) == 0x000008, "Wrong alignment on LobbyContextBase_GetShortLobbyId");
static_assert(sizeof(LobbyContextBase_GetShortLobbyId) == 0x000010, "Wrong size on LobbyContextBase_GetShortLobbyId");
static_assert(offsetof(LobbyContextBase_GetShortLobbyId, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetShortLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetShortLobbyIdExpirationTimeSec
// 0x0004 (0x0004 - 0x0000)
struct LobbyContextBase_GetShortLobbyIdExpirationTimeSec final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetShortLobbyIdExpirationTimeSec) == 0x000004, "Wrong alignment on LobbyContextBase_GetShortLobbyIdExpirationTimeSec");
static_assert(sizeof(LobbyContextBase_GetShortLobbyIdExpirationTimeSec) == 0x000004, "Wrong size on LobbyContextBase_GetShortLobbyIdExpirationTimeSec");
static_assert(offsetof(LobbyContextBase_GetShortLobbyIdExpirationTimeSec, ReturnValue) == 0x000000, "Member 'LobbyContextBase_GetShortLobbyIdExpirationTimeSec::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.GetSortedAllMembersByLobbyMemberIndex
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex final
{
public:
	TArray<class ULobbyMemberContextBase*>        OutResult;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex) == 0x000008, "Wrong alignment on LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex");
static_assert(sizeof(LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex) == 0x000010, "Wrong size on LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex");
static_assert(offsetof(LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex, OutResult) == 0x000000, "Member 'LobbyContextBase_GetSortedAllMembersByLobbyMemberIndex::OutResult' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.HasSession
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_HasSession final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_HasSession) == 0x000001, "Wrong alignment on LobbyContextBase_HasSession");
static_assert(sizeof(LobbyContextBase_HasSession) == 0x000001, "Wrong size on LobbyContextBase_HasSession");
static_assert(offsetof(LobbyContextBase_HasSession, ReturnValue) == 0x000000, "Member 'LobbyContextBase_HasSession::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.IsJoining
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_IsJoining final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_IsJoining) == 0x000001, "Wrong alignment on LobbyContextBase_IsJoining");
static_assert(sizeof(LobbyContextBase_IsJoining) == 0x000001, "Wrong size on LobbyContextBase_IsJoining");
static_assert(offsetof(LobbyContextBase_IsJoining, ReturnValue) == 0x000000, "Member 'LobbyContextBase_IsJoining::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.IsLobbyHostLocalMember
// 0x0001 (0x0001 - 0x0000)
struct LobbyContextBase_IsLobbyHostLocalMember final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_IsLobbyHostLocalMember) == 0x000001, "Wrong alignment on LobbyContextBase_IsLobbyHostLocalMember");
static_assert(sizeof(LobbyContextBase_IsLobbyHostLocalMember) == 0x000001, "Wrong size on LobbyContextBase_IsLobbyHostLocalMember");
static_assert(offsetof(LobbyContextBase_IsLobbyHostLocalMember, ReturnValue) == 0x000000, "Member 'LobbyContextBase_IsLobbyHostLocalMember::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.IsSameLobby
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_IsSameLobby final
{
public:
	const class ULobbyContextBase*                OtherContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyContextBase_IsSameLobby) == 0x000008, "Wrong alignment on LobbyContextBase_IsSameLobby");
static_assert(sizeof(LobbyContextBase_IsSameLobby) == 0x000010, "Wrong size on LobbyContextBase_IsSameLobby");
static_assert(offsetof(LobbyContextBase_IsSameLobby, OtherContext) == 0x000000, "Member 'LobbyContextBase_IsSameLobby::OtherContext' has a wrong offset!");
static_assert(offsetof(LobbyContextBase_IsSameLobby, ReturnValue) == 0x000008, "Member 'LobbyContextBase_IsSameLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyContextBase.ToString
// 0x0010 (0x0010 - 0x0000)
struct LobbyContextBase_ToString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyContextBase_ToString) == 0x000008, "Wrong alignment on LobbyContextBase_ToString");
static_assert(sizeof(LobbyContextBase_ToString) == 0x000010, "Wrong size on LobbyContextBase_ToString");
static_assert(offsetof(LobbyContextBase_ToString, ReturnValue) == 0x000000, "Member 'LobbyContextBase_ToString::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.CallInvitationReceivedDelegates
// 0x0018 (0x0018 - 0x0000)
struct LobbySubsystem_CallInvitationReceivedDelegates final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_CallInvitationReceivedDelegates) == 0x000008, "Wrong alignment on LobbySubsystem_CallInvitationReceivedDelegates");
static_assert(sizeof(LobbySubsystem_CallInvitationReceivedDelegates) == 0x000018, "Wrong size on LobbySubsystem_CallInvitationReceivedDelegates");
static_assert(offsetof(LobbySubsystem_CallInvitationReceivedDelegates, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_CallInvitationReceivedDelegates::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_CallInvitationReceivedDelegates, LobbyId) == 0x000008, "Member 'LobbySubsystem_CallInvitationReceivedDelegates::LobbyId' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.ConfirmMatchingUsers
// 0x0018 (0x0018 - 0x0000)
struct LobbySubsystem_ConfirmMatchingUsers final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_ConfirmMatchingUsers) == 0x000008, "Wrong alignment on LobbySubsystem_ConfirmMatchingUsers");
static_assert(sizeof(LobbySubsystem_ConfirmMatchingUsers) == 0x000018, "Wrong size on LobbySubsystem_ConfirmMatchingUsers");
static_assert(offsetof(LobbySubsystem_ConfirmMatchingUsers, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_ConfirmMatchingUsers::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConfirmMatchingUsers, LobbyId) == 0x000008, "Member 'LobbySubsystem_ConfirmMatchingUsers::LobbyId' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.ConnectLobby
// 0x0038 (0x0038 - 0x0000)
struct LobbySubsystem_ConnectLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)> OnComplete;  // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_ConnectLobby) == 0x000008, "Wrong alignment on LobbySubsystem_ConnectLobby");
static_assert(sizeof(LobbySubsystem_ConnectLobby) == 0x000038, "Wrong size on LobbySubsystem_ConnectLobby");
static_assert(offsetof(LobbySubsystem_ConnectLobby, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_ConnectLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectLobby, LobbyId) == 0x000008, "Member 'LobbySubsystem_ConnectLobby::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectLobby, Password) == 0x000018, "Member 'LobbySubsystem_ConnectLobby::Password' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectLobby, OnComplete) == 0x000028, "Member 'LobbySubsystem_ConnectLobby::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.ConnectP2PAsync
// 0x0018 (0x0018 - 0x0000)
struct LobbySubsystem_ConnectP2PAsync final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_ConnectP2PAsync) == 0x000008, "Wrong alignment on LobbySubsystem_ConnectP2PAsync");
static_assert(sizeof(LobbySubsystem_ConnectP2PAsync) == 0x000018, "Wrong size on LobbySubsystem_ConnectP2PAsync");
static_assert(offsetof(LobbySubsystem_ConnectP2PAsync, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_ConnectP2PAsync::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectP2PAsync, LobbyId) == 0x000008, "Member 'LobbySubsystem_ConnectP2PAsync::LobbyId' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.ConnectP2PLobbyUsers
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_ConnectP2PLobbyUsers final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          IsHost;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableAllClientConnect;                            // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_ConnectP2PLobbyUsers) == 0x000008, "Wrong alignment on LobbySubsystem_ConnectP2PLobbyUsers");
static_assert(sizeof(LobbySubsystem_ConnectP2PLobbyUsers) == 0x000020, "Wrong size on LobbySubsystem_ConnectP2PLobbyUsers");
static_assert(offsetof(LobbySubsystem_ConnectP2PLobbyUsers, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_ConnectP2PLobbyUsers::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectP2PLobbyUsers, LobbyId) == 0x000008, "Member 'LobbySubsystem_ConnectP2PLobbyUsers::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectP2PLobbyUsers, IsHost) == 0x000018, "Member 'LobbySubsystem_ConnectP2PLobbyUsers::IsHost' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectP2PLobbyUsers, EnableAllClientConnect) == 0x000019, "Member 'LobbySubsystem_ConnectP2PLobbyUsers::EnableAllClientConnect' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_ConnectP2PLobbyUsers, ReturnValue) == 0x00001C, "Member 'LobbySubsystem_ConnectP2PLobbyUsers::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.CreateLobby
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_CreateLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ULobbyTransactionParam*           TransactionParam;                                  // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)> OnComplete;  // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_CreateLobby) == 0x000008, "Wrong alignment on LobbySubsystem_CreateLobby");
static_assert(sizeof(LobbySubsystem_CreateLobby) == 0x000020, "Wrong size on LobbySubsystem_CreateLobby");
static_assert(offsetof(LobbySubsystem_CreateLobby, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_CreateLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_CreateLobby, TransactionParam) == 0x000008, "Member 'LobbySubsystem_CreateLobby::TransactionParam' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_CreateLobby, OnComplete) == 0x000010, "Member 'LobbySubsystem_CreateLobby::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.DeleteLobby
// 0x0028 (0x0028 - 0x0000)
struct LobbySubsystem_DeleteLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_DeleteLobby) == 0x000008, "Wrong alignment on LobbySubsystem_DeleteLobby");
static_assert(sizeof(LobbySubsystem_DeleteLobby) == 0x000028, "Wrong size on LobbySubsystem_DeleteLobby");
static_assert(offsetof(LobbySubsystem_DeleteLobby, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_DeleteLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_DeleteLobby, LobbyId) == 0x000008, "Member 'LobbySubsystem_DeleteLobby::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_DeleteLobby, OnComplete) == 0x000018, "Member 'LobbySubsystem_DeleteLobby::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueBool
// 0x0030 (0x0030 - 0x0000)
struct LobbySubsystem_GetLobbyAttributeValueBool final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutAttrValue;                                      // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetLobbyAttributeValueBool) == 0x000008, "Wrong alignment on LobbySubsystem_GetLobbyAttributeValueBool");
static_assert(sizeof(LobbySubsystem_GetLobbyAttributeValueBool) == 0x000030, "Wrong size on LobbySubsystem_GetLobbyAttributeValueBool");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueBool, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetLobbyAttributeValueBool::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueBool, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetLobbyAttributeValueBool::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueBool, AttrKey) == 0x000018, "Member 'LobbySubsystem_GetLobbyAttributeValueBool::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueBool, OutAttrValue) == 0x000028, "Member 'LobbySubsystem_GetLobbyAttributeValueBool::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueBool, bUseLobbyAttribute) == 0x000029, "Member 'LobbySubsystem_GetLobbyAttributeValueBool::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueBool, ReturnValue) == 0x00002A, "Member 'LobbySubsystem_GetLobbyAttributeValueBool::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueFloat
// 0x0030 (0x0030 - 0x0000)
struct LobbySubsystem_GetLobbyAttributeValueFloat final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutAttrValue;                                      // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x002C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x002D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetLobbyAttributeValueFloat) == 0x000008, "Wrong alignment on LobbySubsystem_GetLobbyAttributeValueFloat");
static_assert(sizeof(LobbySubsystem_GetLobbyAttributeValueFloat) == 0x000030, "Wrong size on LobbySubsystem_GetLobbyAttributeValueFloat");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueFloat, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetLobbyAttributeValueFloat::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueFloat, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetLobbyAttributeValueFloat::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueFloat, AttrKey) == 0x000018, "Member 'LobbySubsystem_GetLobbyAttributeValueFloat::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueFloat, OutAttrValue) == 0x000028, "Member 'LobbySubsystem_GetLobbyAttributeValueFloat::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueFloat, bUseLobbyAttribute) == 0x00002C, "Member 'LobbySubsystem_GetLobbyAttributeValueFloat::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueFloat, ReturnValue) == 0x00002D, "Member 'LobbySubsystem_GetLobbyAttributeValueFloat::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueInt64
// 0x0038 (0x0038 - 0x0000)
struct LobbySubsystem_GetLobbyAttributeValueInt64 final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         OutAttrValue;                                      // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetLobbyAttributeValueInt64) == 0x000008, "Wrong alignment on LobbySubsystem_GetLobbyAttributeValueInt64");
static_assert(sizeof(LobbySubsystem_GetLobbyAttributeValueInt64) == 0x000038, "Wrong size on LobbySubsystem_GetLobbyAttributeValueInt64");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueInt64, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetLobbyAttributeValueInt64::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueInt64, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetLobbyAttributeValueInt64::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueInt64, AttrKey) == 0x000018, "Member 'LobbySubsystem_GetLobbyAttributeValueInt64::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueInt64, OutAttrValue) == 0x000028, "Member 'LobbySubsystem_GetLobbyAttributeValueInt64::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueInt64, bUseLobbyAttribute) == 0x000030, "Member 'LobbySubsystem_GetLobbyAttributeValueInt64::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueInt64, ReturnValue) == 0x000031, "Member 'LobbySubsystem_GetLobbyAttributeValueInt64::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetLobbyAttributeValueString
// 0x0040 (0x0040 - 0x0000)
struct LobbySubsystem_GetLobbyAttributeValueString final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutAttrValue;                                      // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetLobbyAttributeValueString) == 0x000008, "Wrong alignment on LobbySubsystem_GetLobbyAttributeValueString");
static_assert(sizeof(LobbySubsystem_GetLobbyAttributeValueString) == 0x000040, "Wrong size on LobbySubsystem_GetLobbyAttributeValueString");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueString, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetLobbyAttributeValueString::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueString, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetLobbyAttributeValueString::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueString, AttrKey) == 0x000018, "Member 'LobbySubsystem_GetLobbyAttributeValueString::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueString, OutAttrValue) == 0x000028, "Member 'LobbySubsystem_GetLobbyAttributeValueString::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueString, bUseLobbyAttribute) == 0x000038, "Member 'LobbySubsystem_GetLobbyAttributeValueString::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetLobbyAttributeValueString, ReturnValue) == 0x000039, "Member 'LobbySubsystem_GetLobbyAttributeValueString::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueBool
// 0x0060 (0x0060 - 0x0000)
struct LobbySubsystem_GetMemberAttributeValueBool final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutAttrValue;                                      // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x0059(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x005A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetMemberAttributeValueBool) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberAttributeValueBool");
static_assert(sizeof(LobbySubsystem_GetMemberAttributeValueBool) == 0x000060, "Wrong size on LobbySubsystem_GetMemberAttributeValueBool");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberAttributeValueBool::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberAttributeValueBool::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, MemberId) == 0x000018, "Member 'LobbySubsystem_GetMemberAttributeValueBool::MemberId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, AttrKey) == 0x000048, "Member 'LobbySubsystem_GetMemberAttributeValueBool::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, OutAttrValue) == 0x000058, "Member 'LobbySubsystem_GetMemberAttributeValueBool::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, bUseLobbyAttribute) == 0x000059, "Member 'LobbySubsystem_GetMemberAttributeValueBool::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueBool, ReturnValue) == 0x00005A, "Member 'LobbySubsystem_GetMemberAttributeValueBool::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueFloat
// 0x0060 (0x0060 - 0x0000)
struct LobbySubsystem_GetMemberAttributeValueFloat final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutAttrValue;                                      // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x005C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x005D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetMemberAttributeValueFloat) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberAttributeValueFloat");
static_assert(sizeof(LobbySubsystem_GetMemberAttributeValueFloat) == 0x000060, "Wrong size on LobbySubsystem_GetMemberAttributeValueFloat");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, MemberId) == 0x000018, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::MemberId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, AttrKey) == 0x000048, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, OutAttrValue) == 0x000058, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, bUseLobbyAttribute) == 0x00005C, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueFloat, ReturnValue) == 0x00005D, "Member 'LobbySubsystem_GetMemberAttributeValueFloat::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueInt64
// 0x0068 (0x0068 - 0x0000)
struct LobbySubsystem_GetMemberAttributeValueInt64 final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         OutAttrValue;                                      // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0061(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetMemberAttributeValueInt64) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberAttributeValueInt64");
static_assert(sizeof(LobbySubsystem_GetMemberAttributeValueInt64) == 0x000068, "Wrong size on LobbySubsystem_GetMemberAttributeValueInt64");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, MemberId) == 0x000018, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::MemberId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, AttrKey) == 0x000048, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, OutAttrValue) == 0x000058, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, bUseLobbyAttribute) == 0x000060, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueInt64, ReturnValue) == 0x000061, "Member 'LobbySubsystem_GetMemberAttributeValueInt64::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberAttributeValueString
// 0x0070 (0x0070 - 0x0000)
struct LobbySubsystem_GetMemberAttributeValueString final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AttrKey;                                           // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutAttrValue;                                      // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbyAttribute;                                // 0x0068(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0069(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetMemberAttributeValueString) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberAttributeValueString");
static_assert(sizeof(LobbySubsystem_GetMemberAttributeValueString) == 0x000070, "Wrong size on LobbySubsystem_GetMemberAttributeValueString");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberAttributeValueString::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberAttributeValueString::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, MemberId) == 0x000018, "Member 'LobbySubsystem_GetMemberAttributeValueString::MemberId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, AttrKey) == 0x000048, "Member 'LobbySubsystem_GetMemberAttributeValueString::AttrKey' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, OutAttrValue) == 0x000058, "Member 'LobbySubsystem_GetMemberAttributeValueString::OutAttrValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, bUseLobbyAttribute) == 0x000068, "Member 'LobbySubsystem_GetMemberAttributeValueString::bUseLobbyAttribute' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberAttributeValueString, ReturnValue) == 0x000069, "Member 'LobbySubsystem_GetMemberAttributeValueString::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetPendingInviteInfo
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_GetPendingInviteInfo final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULobbyJoinInfo*>                 OutPendingInvites;                                 // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetPendingInviteInfo) == 0x000008, "Wrong alignment on LobbySubsystem_GetPendingInviteInfo");
static_assert(sizeof(LobbySubsystem_GetPendingInviteInfo) == 0x000020, "Wrong size on LobbySubsystem_GetPendingInviteInfo");
static_assert(offsetof(LobbySubsystem_GetPendingInviteInfo, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetPendingInviteInfo::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetPendingInviteInfo, OutPendingInvites) == 0x000008, "Member 'LobbySubsystem_GetPendingInviteInfo::OutPendingInvites' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetPendingInviteInfo, ReturnValue) == 0x000018, "Member 'LobbySubsystem_GetPendingInviteInfo::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetSessionInviteInfo
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_GetSessionInviteInfo final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULobbyJoinInfo*>                 OutPendingInvites;                                 // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetSessionInviteInfo) == 0x000008, "Wrong alignment on LobbySubsystem_GetSessionInviteInfo");
static_assert(sizeof(LobbySubsystem_GetSessionInviteInfo) == 0x000020, "Wrong size on LobbySubsystem_GetSessionInviteInfo");
static_assert(offsetof(LobbySubsystem_GetSessionInviteInfo, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetSessionInviteInfo::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetSessionInviteInfo, OutPendingInvites) == 0x000008, "Member 'LobbySubsystem_GetSessionInviteInfo::OutPendingInvites' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetSessionInviteInfo, ReturnValue) == 0x000018, "Member 'LobbySubsystem_GetSessionInviteInfo::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.IsRequiredPassword
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_IsRequiredPassword final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_IsRequiredPassword) == 0x000008, "Wrong alignment on LobbySubsystem_IsRequiredPassword");
static_assert(sizeof(LobbySubsystem_IsRequiredPassword) == 0x000020, "Wrong size on LobbySubsystem_IsRequiredPassword");
static_assert(offsetof(LobbySubsystem_IsRequiredPassword, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_IsRequiredPassword::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_IsRequiredPassword, LobbyId) == 0x000008, "Member 'LobbySubsystem_IsRequiredPassword::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_IsRequiredPassword, ReturnValue) == 0x000018, "Member 'LobbySubsystem_IsRequiredPassword::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.KickMember
// 0x0058 (0x0058 - 0x0000)
struct LobbySubsystem_KickMember final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_KickMember) == 0x000008, "Wrong alignment on LobbySubsystem_KickMember");
static_assert(sizeof(LobbySubsystem_KickMember) == 0x000058, "Wrong size on LobbySubsystem_KickMember");
static_assert(offsetof(LobbySubsystem_KickMember, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_KickMember::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_KickMember, LobbyId) == 0x000008, "Member 'LobbySubsystem_KickMember::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_KickMember, MemberId) == 0x000018, "Member 'LobbySubsystem_KickMember::MemberId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_KickMember, OnComplete) == 0x000048, "Member 'LobbySubsystem_KickMember::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.PromoteMember
// 0x0058 (0x0058 - 0x0000)
struct LobbySubsystem_PromoteMember final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       MemberId;                                          // 0x0018(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_PromoteMember) == 0x000008, "Wrong alignment on LobbySubsystem_PromoteMember");
static_assert(sizeof(LobbySubsystem_PromoteMember) == 0x000058, "Wrong size on LobbySubsystem_PromoteMember");
static_assert(offsetof(LobbySubsystem_PromoteMember, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_PromoteMember::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_PromoteMember, LobbyId) == 0x000008, "Member 'LobbySubsystem_PromoteMember::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_PromoteMember, MemberId) == 0x000018, "Member 'LobbySubsystem_PromoteMember::MemberId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_PromoteMember, OnComplete) == 0x000048, "Member 'LobbySubsystem_PromoteMember::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.RejectInvitation
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_RejectInvitation final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ULobbyJoinInfo*                   InviteInfo;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_RejectInvitation) == 0x000008, "Wrong alignment on LobbySubsystem_RejectInvitation");
static_assert(sizeof(LobbySubsystem_RejectInvitation) == 0x000020, "Wrong size on LobbySubsystem_RejectInvitation");
static_assert(offsetof(LobbySubsystem_RejectInvitation, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_RejectInvitation::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_RejectInvitation, InviteInfo) == 0x000008, "Member 'LobbySubsystem_RejectInvitation::InviteInfo' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_RejectInvitation, OnComplete) == 0x000010, "Member 'LobbySubsystem_RejectInvitation::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.SearchLobby
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_SearchLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         LobbyType;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)> OnComplete;           // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_SearchLobby) == 0x000008, "Wrong alignment on LobbySubsystem_SearchLobby");
static_assert(sizeof(LobbySubsystem_SearchLobby) == 0x000020, "Wrong size on LobbySubsystem_SearchLobby");
static_assert(offsetof(LobbySubsystem_SearchLobby, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_SearchLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_SearchLobby, LobbyType) == 0x000008, "Member 'LobbySubsystem_SearchLobby::LobbyType' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_SearchLobby, OnComplete) == 0x000010, "Member 'LobbySubsystem_SearchLobby::OnComplete' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.SetPFBusyFlag
// 0x0001 (0x0001 - 0x0000)
struct LobbySubsystem_SetPFBusyFlag final
{
public:
	bool                                          BusyFlag;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_SetPFBusyFlag) == 0x000001, "Wrong alignment on LobbySubsystem_SetPFBusyFlag");
static_assert(sizeof(LobbySubsystem_SetPFBusyFlag) == 0x000001, "Wrong size on LobbySubsystem_SetPFBusyFlag");
static_assert(offsetof(LobbySubsystem_SetPFBusyFlag, BusyFlag) == 0x000000, "Member 'LobbySubsystem_SetPFBusyFlag::BusyFlag' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.SetupConnectP2PLobbyUsers
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_SetupConnectP2PLobbyUsers final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          IsHost;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_SetupConnectP2PLobbyUsers) == 0x000008, "Wrong alignment on LobbySubsystem_SetupConnectP2PLobbyUsers");
static_assert(sizeof(LobbySubsystem_SetupConnectP2PLobbyUsers) == 0x000020, "Wrong size on LobbySubsystem_SetupConnectP2PLobbyUsers");
static_assert(offsetof(LobbySubsystem_SetupConnectP2PLobbyUsers, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_SetupConnectP2PLobbyUsers::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_SetupConnectP2PLobbyUsers, LobbyId) == 0x000008, "Member 'LobbySubsystem_SetupConnectP2PLobbyUsers::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_SetupConnectP2PLobbyUsers, IsHost) == 0x000018, "Member 'LobbySubsystem_SetupConnectP2PLobbyUsers::IsHost' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_SetupConnectP2PLobbyUsers, ReturnValue) == 0x000019, "Member 'LobbySubsystem_SetupConnectP2PLobbyUsers::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetJoinedLobbies
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_GetJoinedLobbies final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLobbyId>                       OutLobbyIds;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetJoinedLobbies) == 0x000008, "Wrong alignment on LobbySubsystem_GetJoinedLobbies");
static_assert(sizeof(LobbySubsystem_GetJoinedLobbies) == 0x000020, "Wrong size on LobbySubsystem_GetJoinedLobbies");
static_assert(offsetof(LobbySubsystem_GetJoinedLobbies, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetJoinedLobbies::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetJoinedLobbies, OutLobbyIds) == 0x000008, "Member 'LobbySubsystem_GetJoinedLobbies::OutLobbyIds' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetJoinedLobbies, ReturnValue) == 0x000018, "Member 'LobbySubsystem_GetJoinedLobbies::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMaxMemberCount
// 0x0004 (0x0004 - 0x0000)
struct LobbySubsystem_GetMaxMemberCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_GetMaxMemberCount) == 0x000004, "Wrong alignment on LobbySubsystem_GetMaxMemberCount");
static_assert(sizeof(LobbySubsystem_GetMaxMemberCount) == 0x000004, "Wrong size on LobbySubsystem_GetMaxMemberCount");
static_assert(offsetof(LobbySubsystem_GetMaxMemberCount, ReturnValue) == 0x000000, "Member 'LobbySubsystem_GetMaxMemberCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberCount
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_GetMemberCount final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_GetMemberCount) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberCount");
static_assert(sizeof(LobbySubsystem_GetMemberCount) == 0x000020, "Wrong size on LobbySubsystem_GetMemberCount");
static_assert(offsetof(LobbySubsystem_GetMemberCount, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberCount::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberCount, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberCount::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberCount, ReturnValue) == 0x000018, "Member 'LobbySubsystem_GetMemberCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberUserId
// 0x0050 (0x0050 - 0x0000)
struct LobbySubsystem_GetMemberUserId final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         MemberIndex;                                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0020(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_GetMemberUserId) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberUserId");
static_assert(sizeof(LobbySubsystem_GetMemberUserId) == 0x000050, "Wrong size on LobbySubsystem_GetMemberUserId");
static_assert(offsetof(LobbySubsystem_GetMemberUserId, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberUserId::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberUserId, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberUserId::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberUserId, MemberIndex) == 0x000018, "Member 'LobbySubsystem_GetMemberUserId::MemberIndex' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberUserId, ReturnValue) == 0x000020, "Member 'LobbySubsystem_GetMemberUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetMemberUserIds
// 0x0028 (0x0028 - 0x0000)
struct LobbySubsystem_GetMemberUserIds final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FUniqueNetIdRepl>               ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_GetMemberUserIds) == 0x000008, "Wrong alignment on LobbySubsystem_GetMemberUserIds");
static_assert(sizeof(LobbySubsystem_GetMemberUserIds) == 0x000028, "Wrong size on LobbySubsystem_GetMemberUserIds");
static_assert(offsetof(LobbySubsystem_GetMemberUserIds, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_GetMemberUserIds::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberUserIds, LobbyId) == 0x000008, "Member 'LobbySubsystem_GetMemberUserIds::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_GetMemberUserIds, ReturnValue) == 0x000018, "Member 'LobbySubsystem_GetMemberUserIds::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.GetOnlineIndex
// 0x0004 (0x0004 - 0x0000)
struct LobbySubsystem_GetOnlineIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_GetOnlineIndex) == 0x000004, "Wrong alignment on LobbySubsystem_GetOnlineIndex");
static_assert(sizeof(LobbySubsystem_GetOnlineIndex) == 0x000004, "Wrong size on LobbySubsystem_GetOnlineIndex");
static_assert(offsetof(LobbySubsystem_GetOnlineIndex, ReturnValue) == 0x000000, "Member 'LobbySubsystem_GetOnlineIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.HasSessionInvite
// 0x0001 (0x0001 - 0x0000)
struct LobbySubsystem_HasSessionInvite final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbySubsystem_HasSessionInvite) == 0x000001, "Wrong alignment on LobbySubsystem_HasSessionInvite");
static_assert(sizeof(LobbySubsystem_HasSessionInvite) == 0x000001, "Wrong size on LobbySubsystem_HasSessionInvite");
static_assert(offsetof(LobbySubsystem_HasSessionInvite, ReturnValue) == 0x000000, "Member 'LobbySubsystem_HasSessionInvite::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbySubsystem.IsLockedLobby
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystem_IsLockedLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystem_IsLockedLobby) == 0x000008, "Wrong alignment on LobbySubsystem_IsLockedLobby");
static_assert(sizeof(LobbySubsystem_IsLockedLobby) == 0x000020, "Wrong size on LobbySubsystem_IsLockedLobby");
static_assert(offsetof(LobbySubsystem_IsLockedLobby, LocalUserNum) == 0x000000, "Member 'LobbySubsystem_IsLockedLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_IsLockedLobby, LobbyId) == 0x000008, "Member 'LobbySubsystem_IsLockedLobby::LobbyId' has a wrong offset!");
static_assert(offsetof(LobbySubsystem_IsLockedLobby, ReturnValue) == 0x000018, "Member 'LobbySubsystem_IsLockedLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.AddAttributeBool
// 0x0018 (0x0018 - 0x0000)
struct LobbyTransactionParam_AddAttributeBool final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyTransactionParam_AddAttributeBool) == 0x000008, "Wrong alignment on LobbyTransactionParam_AddAttributeBool");
static_assert(sizeof(LobbyTransactionParam_AddAttributeBool) == 0x000018, "Wrong size on LobbyTransactionParam_AddAttributeBool");
static_assert(offsetof(LobbyTransactionParam_AddAttributeBool, Key) == 0x000000, "Member 'LobbyTransactionParam_AddAttributeBool::Key' has a wrong offset!");
static_assert(offsetof(LobbyTransactionParam_AddAttributeBool, Value) == 0x000010, "Member 'LobbyTransactionParam_AddAttributeBool::Value' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.AddAttributeFloat
// 0x0018 (0x0018 - 0x0000)
struct LobbyTransactionParam_AddAttributeFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyTransactionParam_AddAttributeFloat) == 0x000008, "Wrong alignment on LobbyTransactionParam_AddAttributeFloat");
static_assert(sizeof(LobbyTransactionParam_AddAttributeFloat) == 0x000018, "Wrong size on LobbyTransactionParam_AddAttributeFloat");
static_assert(offsetof(LobbyTransactionParam_AddAttributeFloat, Key) == 0x000000, "Member 'LobbyTransactionParam_AddAttributeFloat::Key' has a wrong offset!");
static_assert(offsetof(LobbyTransactionParam_AddAttributeFloat, Value) == 0x000010, "Member 'LobbyTransactionParam_AddAttributeFloat::Value' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.AddAttributeInt64
// 0x0018 (0x0018 - 0x0000)
struct LobbyTransactionParam_AddAttributeInt64 final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_AddAttributeInt64) == 0x000008, "Wrong alignment on LobbyTransactionParam_AddAttributeInt64");
static_assert(sizeof(LobbyTransactionParam_AddAttributeInt64) == 0x000018, "Wrong size on LobbyTransactionParam_AddAttributeInt64");
static_assert(offsetof(LobbyTransactionParam_AddAttributeInt64, Key) == 0x000000, "Member 'LobbyTransactionParam_AddAttributeInt64::Key' has a wrong offset!");
static_assert(offsetof(LobbyTransactionParam_AddAttributeInt64, Value) == 0x000010, "Member 'LobbyTransactionParam_AddAttributeInt64::Value' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.AddAttributeString
// 0x0020 (0x0020 - 0x0000)
struct LobbyTransactionParam_AddAttributeString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_AddAttributeString) == 0x000008, "Wrong alignment on LobbyTransactionParam_AddAttributeString");
static_assert(sizeof(LobbyTransactionParam_AddAttributeString) == 0x000020, "Wrong size on LobbyTransactionParam_AddAttributeString");
static_assert(offsetof(LobbyTransactionParam_AddAttributeString, Key) == 0x000000, "Member 'LobbyTransactionParam_AddAttributeString::Key' has a wrong offset!");
static_assert(offsetof(LobbyTransactionParam_AddAttributeString, Value) == 0x000010, "Member 'LobbyTransactionParam_AddAttributeString::Value' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.AddDeleteAttribute
// 0x0010 (0x0010 - 0x0000)
struct LobbyTransactionParam_AddDeleteAttribute final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_AddDeleteAttribute) == 0x000008, "Wrong alignment on LobbyTransactionParam_AddDeleteAttribute");
static_assert(sizeof(LobbyTransactionParam_AddDeleteAttribute) == 0x000010, "Wrong size on LobbyTransactionParam_AddDeleteAttribute");
static_assert(offsetof(LobbyTransactionParam_AddDeleteAttribute, Key) == 0x000000, "Member 'LobbyTransactionParam_AddDeleteAttribute::Key' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.SetCapacity
// 0x0008 (0x0008 - 0x0000)
struct LobbyTransactionParam_SetCapacity final
{
public:
	int64                                         InCapacity;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_SetCapacity) == 0x000008, "Wrong alignment on LobbyTransactionParam_SetCapacity");
static_assert(sizeof(LobbyTransactionParam_SetCapacity) == 0x000008, "Wrong size on LobbyTransactionParam_SetCapacity");
static_assert(offsetof(LobbyTransactionParam_SetCapacity, InCapacity) == 0x000000, "Member 'LobbyTransactionParam_SetCapacity::InCapacity' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.SetEnableHostMigration
// 0x0001 (0x0001 - 0x0000)
struct LobbyTransactionParam_SetEnableHostMigration final
{
public:
	bool                                          bInEnableHostMigration;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_SetEnableHostMigration) == 0x000001, "Wrong alignment on LobbyTransactionParam_SetEnableHostMigration");
static_assert(sizeof(LobbyTransactionParam_SetEnableHostMigration) == 0x000001, "Wrong size on LobbyTransactionParam_SetEnableHostMigration");
static_assert(offsetof(LobbyTransactionParam_SetEnableHostMigration, bInEnableHostMigration) == 0x000000, "Member 'LobbyTransactionParam_SetEnableHostMigration::bInEnableHostMigration' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct LobbyTransactionParam_SetLocked final
{
public:
	bool                                          bInLocked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_SetLocked) == 0x000001, "Wrong alignment on LobbyTransactionParam_SetLocked");
static_assert(sizeof(LobbyTransactionParam_SetLocked) == 0x000001, "Wrong size on LobbyTransactionParam_SetLocked");
static_assert(offsetof(LobbyTransactionParam_SetLocked, bInLocked) == 0x000000, "Member 'LobbyTransactionParam_SetLocked::bInLocked' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.SetPassword
// 0x0010 (0x0010 - 0x0000)
struct LobbyTransactionParam_SetPassword final
{
public:
	class FString                                 InPassword;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_SetPassword) == 0x000008, "Wrong alignment on LobbyTransactionParam_SetPassword");
static_assert(sizeof(LobbyTransactionParam_SetPassword) == 0x000010, "Wrong size on LobbyTransactionParam_SetPassword");
static_assert(offsetof(LobbyTransactionParam_SetPassword, InPassword) == 0x000000, "Member 'LobbyTransactionParam_SetPassword::InPassword' has a wrong offset!");

// Function UnionSystem.LobbyTransactionParam.SetPublic
// 0x0001 (0x0001 - 0x0000)
struct LobbyTransactionParam_SetPublic final
{
public:
	bool                                          bInPublic;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyTransactionParam_SetPublic) == 0x000001, "Wrong alignment on LobbyTransactionParam_SetPublic");
static_assert(sizeof(LobbyTransactionParam_SetPublic) == 0x000001, "Wrong size on LobbyTransactionParam_SetPublic");
static_assert(offsetof(LobbyTransactionParam_SetPublic, bInPublic) == 0x000000, "Member 'LobbyTransactionParam_SetPublic::bInPublic' has a wrong offset!");

// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeBool
// 0x0018 (0x0018 - 0x0000)
struct LobbyMemberTransactionParam_AddAttributeBool final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyMemberTransactionParam_AddAttributeBool) == 0x000008, "Wrong alignment on LobbyMemberTransactionParam_AddAttributeBool");
static_assert(sizeof(LobbyMemberTransactionParam_AddAttributeBool) == 0x000018, "Wrong size on LobbyMemberTransactionParam_AddAttributeBool");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeBool, Key) == 0x000000, "Member 'LobbyMemberTransactionParam_AddAttributeBool::Key' has a wrong offset!");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeBool, Value) == 0x000010, "Member 'LobbyMemberTransactionParam_AddAttributeBool::Value' has a wrong offset!");

// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeFloat
// 0x0018 (0x0018 - 0x0000)
struct LobbyMemberTransactionParam_AddAttributeFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyMemberTransactionParam_AddAttributeFloat) == 0x000008, "Wrong alignment on LobbyMemberTransactionParam_AddAttributeFloat");
static_assert(sizeof(LobbyMemberTransactionParam_AddAttributeFloat) == 0x000018, "Wrong size on LobbyMemberTransactionParam_AddAttributeFloat");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeFloat, Key) == 0x000000, "Member 'LobbyMemberTransactionParam_AddAttributeFloat::Key' has a wrong offset!");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeFloat, Value) == 0x000010, "Member 'LobbyMemberTransactionParam_AddAttributeFloat::Value' has a wrong offset!");

// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeInt64
// 0x0018 (0x0018 - 0x0000)
struct LobbyMemberTransactionParam_AddAttributeInt64 final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberTransactionParam_AddAttributeInt64) == 0x000008, "Wrong alignment on LobbyMemberTransactionParam_AddAttributeInt64");
static_assert(sizeof(LobbyMemberTransactionParam_AddAttributeInt64) == 0x000018, "Wrong size on LobbyMemberTransactionParam_AddAttributeInt64");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeInt64, Key) == 0x000000, "Member 'LobbyMemberTransactionParam_AddAttributeInt64::Key' has a wrong offset!");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeInt64, Value) == 0x000010, "Member 'LobbyMemberTransactionParam_AddAttributeInt64::Value' has a wrong offset!");

// Function UnionSystem.LobbyMemberTransactionParam.AddAttributeString
// 0x0020 (0x0020 - 0x0000)
struct LobbyMemberTransactionParam_AddAttributeString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberTransactionParam_AddAttributeString) == 0x000008, "Wrong alignment on LobbyMemberTransactionParam_AddAttributeString");
static_assert(sizeof(LobbyMemberTransactionParam_AddAttributeString) == 0x000020, "Wrong size on LobbyMemberTransactionParam_AddAttributeString");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeString, Key) == 0x000000, "Member 'LobbyMemberTransactionParam_AddAttributeString::Key' has a wrong offset!");
static_assert(offsetof(LobbyMemberTransactionParam_AddAttributeString, Value) == 0x000010, "Member 'LobbyMemberTransactionParam_AddAttributeString::Value' has a wrong offset!");

// Function UnionSystem.LobbyMemberTransactionParam.AddDeleteAttribute
// 0x0010 (0x0010 - 0x0000)
struct LobbyMemberTransactionParam_AddDeleteAttribute final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyMemberTransactionParam_AddDeleteAttribute) == 0x000008, "Wrong alignment on LobbyMemberTransactionParam_AddDeleteAttribute");
static_assert(sizeof(LobbyMemberTransactionParam_AddDeleteAttribute) == 0x000010, "Wrong size on LobbyMemberTransactionParam_AddDeleteAttribute");
static_assert(offsetof(LobbyMemberTransactionParam_AddDeleteAttribute, Key) == 0x000000, "Member 'LobbyMemberTransactionParam_AddDeleteAttribute::Key' has a wrong offset!");

// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_Bool
// 0x0030 (0x0030 - 0x0000)
struct LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool final
{
public:
	struct FLobbySubsystemLobbySearchQuery        Query;                                             // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELobbySubsystemLobbySearchQueryFilterComparator Comparator;                                      // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool) == 0x000008, "Wrong alignment on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool");
static_assert(sizeof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool) == 0x000030, "Wrong size on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool, Query) == 0x000000, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool::Query' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool, Key) == 0x000018, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool::Key' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool, bValue) == 0x000028, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool::bValue' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool, Comparator) == 0x000029, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Bool::Comparator' has a wrong offset!");

// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_Float
// 0x0030 (0x0030 - 0x0000)
struct LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float final
{
public:
	struct FLobbySubsystemLobbySearchQuery        Query;                                             // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELobbySubsystemLobbySearchQueryFilterComparator Comparator;                                      // 0x002C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float) == 0x000008, "Wrong alignment on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float");
static_assert(sizeof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float) == 0x000030, "Wrong size on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float, Query) == 0x000000, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float::Query' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float, Key) == 0x000018, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float::Key' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float, Value) == 0x000028, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float::Value' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float, Comparator) == 0x00002C, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Float::Comparator' has a wrong offset!");

// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_Int64
// 0x0038 (0x0038 - 0x0000)
struct LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64 final
{
public:
	struct FLobbySubsystemLobbySearchQuery        Query;                                             // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELobbySubsystemLobbySearchQueryFilterComparator Comparator;                                      // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64) == 0x000008, "Wrong alignment on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64");
static_assert(sizeof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64) == 0x000038, "Wrong size on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64, Query) == 0x000000, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64::Query' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64, Key) == 0x000018, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64::Key' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64, Value) == 0x000028, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64::Value' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64, Comparator) == 0x000030, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_Int64::Comparator' has a wrong offset!");

// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.AddLobbySearchQueryFilter_String
// 0x0040 (0x0040 - 0x0000)
struct LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String final
{
public:
	struct FLobbySubsystemLobbySearchQuery        Query;                                             // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELobbySubsystemLobbySearchQueryFilterComparator Comparator;                                      // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String) == 0x000008, "Wrong alignment on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String");
static_assert(sizeof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String) == 0x000040, "Wrong size on LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String, Query) == 0x000000, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String::Query' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String, Key) == 0x000018, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String::Key' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String, Value) == 0x000028, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String::Value' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String, Comparator) == 0x000038, "Member 'LobbySubsystemLobbySearchQueryUtility_AddLobbySearchQueryFilter_String::Comparator' has a wrong offset!");

// Function UnionSystem.LobbySubsystemLobbySearchQueryUtility.SetLimit
// 0x0020 (0x0020 - 0x0000)
struct LobbySubsystemLobbySearchQueryUtility_SetLimit final
{
public:
	struct FLobbySubsystemLobbySearchQuery        Query;                                             // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         NewLimit;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbySubsystemLobbySearchQueryUtility_SetLimit) == 0x000008, "Wrong alignment on LobbySubsystemLobbySearchQueryUtility_SetLimit");
static_assert(sizeof(LobbySubsystemLobbySearchQueryUtility_SetLimit) == 0x000020, "Wrong size on LobbySubsystemLobbySearchQueryUtility_SetLimit");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_SetLimit, Query) == 0x000000, "Member 'LobbySubsystemLobbySearchQueryUtility_SetLimit::Query' has a wrong offset!");
static_assert(offsetof(LobbySubsystemLobbySearchQueryUtility_SetLimit, NewLimit) == 0x000018, "Member 'LobbySubsystemLobbySearchQueryUtility_SetLimit::NewLimit' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.GetLobbyId
// 0x0010 (0x0010 - 0x0000)
struct LobbyJoinInfo_GetLobbyId final
{
public:
	struct FLobbyId                               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_GetLobbyId) == 0x000008, "Wrong alignment on LobbyJoinInfo_GetLobbyId");
static_assert(sizeof(LobbyJoinInfo_GetLobbyId) == 0x000010, "Wrong size on LobbyJoinInfo_GetLobbyId");
static_assert(offsetof(LobbyJoinInfo_GetLobbyId, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_GetLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.GetPasswrod
// 0x0010 (0x0010 - 0x0000)
struct LobbyJoinInfo_GetPasswrod final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_GetPasswrod) == 0x000008, "Wrong alignment on LobbyJoinInfo_GetPasswrod");
static_assert(sizeof(LobbyJoinInfo_GetPasswrod) == 0x000010, "Wrong size on LobbyJoinInfo_GetPasswrod");
static_assert(offsetof(LobbyJoinInfo_GetPasswrod, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_GetPasswrod::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.GetSourceDisplayName
// 0x0010 (0x0010 - 0x0000)
struct LobbyJoinInfo_GetSourceDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_GetSourceDisplayName) == 0x000008, "Wrong alignment on LobbyJoinInfo_GetSourceDisplayName");
static_assert(sizeof(LobbyJoinInfo_GetSourceDisplayName) == 0x000010, "Wrong size on LobbyJoinInfo_GetSourceDisplayName");
static_assert(offsetof(LobbyJoinInfo_GetSourceDisplayName, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_GetSourceDisplayName::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.GetSourceUserId
// 0x0030 (0x0030 - 0x0000)
struct LobbyJoinInfo_GetSourceUserId final
{
public:
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_GetSourceUserId) == 0x000008, "Wrong alignment on LobbyJoinInfo_GetSourceUserId");
static_assert(sizeof(LobbyJoinInfo_GetSourceUserId) == 0x000030, "Wrong size on LobbyJoinInfo_GetSourceUserId");
static_assert(offsetof(LobbyJoinInfo_GetSourceUserId, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_GetSourceUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.HasSessionInvite
// 0x0001 (0x0001 - 0x0000)
struct LobbyJoinInfo_HasSessionInvite final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_HasSessionInvite) == 0x000001, "Wrong alignment on LobbyJoinInfo_HasSessionInvite");
static_assert(sizeof(LobbyJoinInfo_HasSessionInvite) == 0x000001, "Wrong size on LobbyJoinInfo_HasSessionInvite");
static_assert(offsetof(LobbyJoinInfo_HasSessionInvite, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_HasSessionInvite::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.IsAccepted
// 0x0001 (0x0001 - 0x0000)
struct LobbyJoinInfo_IsAccepted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_IsAccepted) == 0x000001, "Wrong alignment on LobbyJoinInfo_IsAccepted");
static_assert(sizeof(LobbyJoinInfo_IsAccepted) == 0x000001, "Wrong size on LobbyJoinInfo_IsAccepted");
static_assert(offsetof(LobbyJoinInfo_IsAccepted, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_IsAccepted::ReturnValue' has a wrong offset!");

// Function UnionSystem.LobbyJoinInfo.ToString
// 0x0010 (0x0010 - 0x0000)
struct LobbyJoinInfo_ToString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyJoinInfo_ToString) == 0x000008, "Wrong alignment on LobbyJoinInfo_ToString");
static_assert(sizeof(LobbyJoinInfo_ToString) == 0x000010, "Wrong size on LobbyJoinInfo_ToString");
static_assert(offsetof(LobbyJoinInfo_ToString, ReturnValue) == 0x000000, "Member 'LobbyJoinInfo_ToString::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.ConvLangToEnumFromString
// 0x0018 (0x0018 - 0x0000)
struct LocalizationFunctionLibrary_ConvLangToEnumFromString final
{
public:
	class FString                                 LangString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELanguage                                     ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LocalizationFunctionLibrary_ConvLangToEnumFromString) == 0x000008, "Wrong alignment on LocalizationFunctionLibrary_ConvLangToEnumFromString");
static_assert(sizeof(LocalizationFunctionLibrary_ConvLangToEnumFromString) == 0x000018, "Wrong size on LocalizationFunctionLibrary_ConvLangToEnumFromString");
static_assert(offsetof(LocalizationFunctionLibrary_ConvLangToEnumFromString, LangString) == 0x000000, "Member 'LocalizationFunctionLibrary_ConvLangToEnumFromString::LangString' has a wrong offset!");
static_assert(offsetof(LocalizationFunctionLibrary_ConvLangToEnumFromString, ReturnValue) == 0x000010, "Member 'LocalizationFunctionLibrary_ConvLangToEnumFromString::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.ConvLangToStringFromEnum
// 0x0018 (0x0018 - 0x0000)
struct LocalizationFunctionLibrary_ConvLangToStringFromEnum final
{
public:
	ELanguage                                     LangEnum;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_ConvLangToStringFromEnum) == 0x000008, "Wrong alignment on LocalizationFunctionLibrary_ConvLangToStringFromEnum");
static_assert(sizeof(LocalizationFunctionLibrary_ConvLangToStringFromEnum) == 0x000018, "Wrong size on LocalizationFunctionLibrary_ConvLangToStringFromEnum");
static_assert(offsetof(LocalizationFunctionLibrary_ConvLangToStringFromEnum, LangEnum) == 0x000000, "Member 'LocalizationFunctionLibrary_ConvLangToStringFromEnum::LangEnum' has a wrong offset!");
static_assert(offsetof(LocalizationFunctionLibrary_ConvLangToStringFromEnum, ReturnValue) == 0x000008, "Member 'LocalizationFunctionLibrary_ConvLangToStringFromEnum::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetDefaultTextLang
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_GetDefaultTextLang final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetDefaultTextLang) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetDefaultTextLang");
static_assert(sizeof(LocalizationFunctionLibrary_GetDefaultTextLang) == 0x000001, "Wrong size on LocalizationFunctionLibrary_GetDefaultTextLang");
static_assert(offsetof(LocalizationFunctionLibrary_GetDefaultTextLang, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetDefaultTextLang::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetFontSizeRate
// 0x0004 (0x0004 - 0x0000)
struct LocalizationFunctionLibrary_GetFontSizeRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetFontSizeRate) == 0x000004, "Wrong alignment on LocalizationFunctionLibrary_GetFontSizeRate");
static_assert(sizeof(LocalizationFunctionLibrary_GetFontSizeRate) == 0x000004, "Wrong size on LocalizationFunctionLibrary_GetFontSizeRate");
static_assert(offsetof(LocalizationFunctionLibrary_GetFontSizeRate, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetFontSizeRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetKeytopButtonTextByFKey
// 0x0030 (0x0030 - 0x0000)
struct LocalizationFunctionLibrary_GetKeytopButtonTextByFKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         KeytopPattern;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetKeytopButtonTextByFKey) == 0x000008, "Wrong alignment on LocalizationFunctionLibrary_GetKeytopButtonTextByFKey");
static_assert(sizeof(LocalizationFunctionLibrary_GetKeytopButtonTextByFKey) == 0x000030, "Wrong size on LocalizationFunctionLibrary_GetKeytopButtonTextByFKey");
static_assert(offsetof(LocalizationFunctionLibrary_GetKeytopButtonTextByFKey, InKey) == 0x000000, "Member 'LocalizationFunctionLibrary_GetKeytopButtonTextByFKey::InKey' has a wrong offset!");
static_assert(offsetof(LocalizationFunctionLibrary_GetKeytopButtonTextByFKey, KeytopPattern) == 0x000018, "Member 'LocalizationFunctionLibrary_GetKeytopButtonTextByFKey::KeytopPattern' has a wrong offset!");
static_assert(offsetof(LocalizationFunctionLibrary_GetKeytopButtonTextByFKey, ReturnValue) == 0x000020, "Member 'LocalizationFunctionLibrary_GetKeytopButtonTextByFKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetPCPlatformLanguage
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_GetPCPlatformLanguage final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetPCPlatformLanguage) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetPCPlatformLanguage");
static_assert(sizeof(LocalizationFunctionLibrary_GetPCPlatformLanguage) == 0x000001, "Wrong size on LocalizationFunctionLibrary_GetPCPlatformLanguage");
static_assert(offsetof(LocalizationFunctionLibrary_GetPCPlatformLanguage, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetPCPlatformLanguage::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetPCPlatformVoiceLangFromTable
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable");
static_assert(sizeof(LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable) == 0x000001, "Wrong size on LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable");
static_assert(offsetof(LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetPCPlatformVoiceLangFromTable::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetTextLang
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_GetTextLang final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetTextLang) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetTextLang");
static_assert(sizeof(LocalizationFunctionLibrary_GetTextLang) == 0x000001, "Wrong size on LocalizationFunctionLibrary_GetTextLang");
static_assert(offsetof(LocalizationFunctionLibrary_GetTextLang, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetTextLang::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetVoiceLang
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_GetVoiceLang final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetVoiceLang) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetVoiceLang");
static_assert(sizeof(LocalizationFunctionLibrary_GetVoiceLang) == 0x000001, "Wrong size on LocalizationFunctionLibrary_GetVoiceLang");
static_assert(offsetof(LocalizationFunctionLibrary_GetVoiceLang, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetVoiceLang::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetVoiceLangFromTable
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_GetVoiceLangFromTable final
{
public:
	ELanguage                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetVoiceLangFromTable) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetVoiceLangFromTable");
static_assert(sizeof(LocalizationFunctionLibrary_GetVoiceLangFromTable) == 0x000001, "Wrong size on LocalizationFunctionLibrary_GetVoiceLangFromTable");
static_assert(offsetof(LocalizationFunctionLibrary_GetVoiceLangFromTable, ReturnValue) == 0x000000, "Member 'LocalizationFunctionLibrary_GetVoiceLangFromTable::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.GetVoiceLangFromTableByEnum
// 0x0002 (0x0002 - 0x0000)
struct LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum final
{
public:
	ELanguage                                     Lang;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELanguage                                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum");
static_assert(sizeof(LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum) == 0x000002, "Wrong size on LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum");
static_assert(offsetof(LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum, Lang) == 0x000000, "Member 'LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum::Lang' has a wrong offset!");
static_assert(offsetof(LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum, ReturnValue) == 0x000001, "Member 'LocalizationFunctionLibrary_GetVoiceLangFromTableByEnum::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.SetTextLang
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_SetTextLang final
{
public:
	ELanguage                                     Lang;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_SetTextLang) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_SetTextLang");
static_assert(sizeof(LocalizationFunctionLibrary_SetTextLang) == 0x000001, "Wrong size on LocalizationFunctionLibrary_SetTextLang");
static_assert(offsetof(LocalizationFunctionLibrary_SetTextLang, Lang) == 0x000000, "Member 'LocalizationFunctionLibrary_SetTextLang::Lang' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.SetTextLangByString
// 0x0010 (0x0010 - 0x0000)
struct LocalizationFunctionLibrary_SetTextLangByString final
{
public:
	class FString                                 Lang;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_SetTextLangByString) == 0x000008, "Wrong alignment on LocalizationFunctionLibrary_SetTextLangByString");
static_assert(sizeof(LocalizationFunctionLibrary_SetTextLangByString) == 0x000010, "Wrong size on LocalizationFunctionLibrary_SetTextLangByString");
static_assert(offsetof(LocalizationFunctionLibrary_SetTextLangByString, Lang) == 0x000000, "Member 'LocalizationFunctionLibrary_SetTextLangByString::Lang' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.SetVoiceLang
// 0x0001 (0x0001 - 0x0000)
struct LocalizationFunctionLibrary_SetVoiceLang final
{
public:
	ELanguage                                     Lang;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_SetVoiceLang) == 0x000001, "Wrong alignment on LocalizationFunctionLibrary_SetVoiceLang");
static_assert(sizeof(LocalizationFunctionLibrary_SetVoiceLang) == 0x000001, "Wrong size on LocalizationFunctionLibrary_SetVoiceLang");
static_assert(offsetof(LocalizationFunctionLibrary_SetVoiceLang, Lang) == 0x000000, "Member 'LocalizationFunctionLibrary_SetVoiceLang::Lang' has a wrong offset!");

// Function UnionSystem.LocalizationFunctionLibrary.SetVoiceLangByString
// 0x0010 (0x0010 - 0x0000)
struct LocalizationFunctionLibrary_SetVoiceLangByString final
{
public:
	class FString                                 Lang;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizationFunctionLibrary_SetVoiceLangByString) == 0x000008, "Wrong alignment on LocalizationFunctionLibrary_SetVoiceLangByString");
static_assert(sizeof(LocalizationFunctionLibrary_SetVoiceLangByString) == 0x000010, "Wrong size on LocalizationFunctionLibrary_SetVoiceLangByString");
static_assert(offsetof(LocalizationFunctionLibrary_SetVoiceLangByString, Lang) == 0x000000, "Member 'LocalizationFunctionLibrary_SetVoiceLangByString::Lang' has a wrong offset!");

// Function UnionSystem.LocalStorageSubsystem.Delete
// 0x0018 (0x0018 - 0x0000)
struct LocalStorageSubsystem_Delete final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELocalStorageStatus                           OutStatus;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LocalStorageSubsystem_Delete) == 0x000008, "Wrong alignment on LocalStorageSubsystem_Delete");
static_assert(sizeof(LocalStorageSubsystem_Delete) == 0x000018, "Wrong size on LocalStorageSubsystem_Delete");
static_assert(offsetof(LocalStorageSubsystem_Delete, Filename) == 0x000000, "Member 'LocalStorageSubsystem_Delete::Filename' has a wrong offset!");
static_assert(offsetof(LocalStorageSubsystem_Delete, OutStatus) == 0x000010, "Member 'LocalStorageSubsystem_Delete::OutStatus' has a wrong offset!");

// Function UnionSystem.LocalStorageSubsystem.Exists
// 0x0018 (0x0018 - 0x0000)
struct LocalStorageSubsystem_Exists final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELocalStorageStatus                           OutStatus;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LocalStorageSubsystem_Exists) == 0x000008, "Wrong alignment on LocalStorageSubsystem_Exists");
static_assert(sizeof(LocalStorageSubsystem_Exists) == 0x000018, "Wrong size on LocalStorageSubsystem_Exists");
static_assert(offsetof(LocalStorageSubsystem_Exists, Filename) == 0x000000, "Member 'LocalStorageSubsystem_Exists::Filename' has a wrong offset!");
static_assert(offsetof(LocalStorageSubsystem_Exists, OutStatus) == 0x000010, "Member 'LocalStorageSubsystem_Exists::OutStatus' has a wrong offset!");
static_assert(offsetof(LocalStorageSubsystem_Exists, ReturnValue) == 0x000011, "Member 'LocalStorageSubsystem_Exists::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalStorageSubsystem.IsBusy
// 0x0001 (0x0001 - 0x0000)
struct LocalStorageSubsystem_IsBusy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalStorageSubsystem_IsBusy) == 0x000001, "Wrong alignment on LocalStorageSubsystem_IsBusy");
static_assert(sizeof(LocalStorageSubsystem_IsBusy) == 0x000001, "Wrong size on LocalStorageSubsystem_IsBusy");
static_assert(offsetof(LocalStorageSubsystem_IsBusy, ReturnValue) == 0x000000, "Member 'LocalStorageSubsystem_IsBusy::ReturnValue' has a wrong offset!");

// Function UnionSystem.LocalStorageSubsystem.LoadAsync
// 0x0020 (0x0020 - 0x0000)
struct LocalStorageSubsystem_LoadAsync final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 OutBuffer;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalStorageSubsystem_LoadAsync) == 0x000008, "Wrong alignment on LocalStorageSubsystem_LoadAsync");
static_assert(sizeof(LocalStorageSubsystem_LoadAsync) == 0x000020, "Wrong size on LocalStorageSubsystem_LoadAsync");
static_assert(offsetof(LocalStorageSubsystem_LoadAsync, Filename) == 0x000000, "Member 'LocalStorageSubsystem_LoadAsync::Filename' has a wrong offset!");
static_assert(offsetof(LocalStorageSubsystem_LoadAsync, OutBuffer) == 0x000010, "Member 'LocalStorageSubsystem_LoadAsync::OutBuffer' has a wrong offset!");

// Function UnionSystem.LocalStorageSubsystem.SaveAsync
// 0x0020 (0x0020 - 0x0000)
struct LocalStorageSubsystem_SaveAsync final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 InBuffer;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalStorageSubsystem_SaveAsync) == 0x000008, "Wrong alignment on LocalStorageSubsystem_SaveAsync");
static_assert(sizeof(LocalStorageSubsystem_SaveAsync) == 0x000020, "Wrong size on LocalStorageSubsystem_SaveAsync");
static_assert(offsetof(LocalStorageSubsystem_SaveAsync, Filename) == 0x000000, "Member 'LocalStorageSubsystem_SaveAsync::Filename' has a wrong offset!");
static_assert(offsetof(LocalStorageSubsystem_SaveAsync, InBuffer) == 0x000010, "Member 'LocalStorageSubsystem_SaveAsync::InBuffer' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.BuildHoverboardCenterPartsPath
// 0x0018 (0x0018 - 0x0000)
struct MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath final
{
public:
	EMachineId                                    FrontPartsId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMachineId                                    RearPartsId;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath) == 0x000008, "Wrong alignment on MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath");
static_assert(sizeof(MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath) == 0x000018, "Wrong size on MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath");
static_assert(offsetof(MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath, FrontPartsId) == 0x000000, "Member 'MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath::FrontPartsId' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath, RearPartsId) == 0x000001, "Member 'MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath::RearPartsId' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath, ReturnValue) == 0x000008, "Member 'MachineIdUtilityLibrary_BuildHoverboardCenterPartsPath::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.BuildMachineSidePartsPath
// 0x0018 (0x0018 - 0x0000)
struct MachineIdUtilityLibrary_BuildMachineSidePartsPath final
{
public:
	EMachineId                                    FrontPartsId;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMachineId                                    RearPartsId;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_BuildMachineSidePartsPath) == 0x000008, "Wrong alignment on MachineIdUtilityLibrary_BuildMachineSidePartsPath");
static_assert(sizeof(MachineIdUtilityLibrary_BuildMachineSidePartsPath) == 0x000018, "Wrong size on MachineIdUtilityLibrary_BuildMachineSidePartsPath");
static_assert(offsetof(MachineIdUtilityLibrary_BuildMachineSidePartsPath, FrontPartsId) == 0x000000, "Member 'MachineIdUtilityLibrary_BuildMachineSidePartsPath::FrontPartsId' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_BuildMachineSidePartsPath, RearPartsId) == 0x000001, "Member 'MachineIdUtilityLibrary_BuildMachineSidePartsPath::RearPartsId' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_BuildMachineSidePartsPath, ReturnValue) == 0x000008, "Member 'MachineIdUtilityLibrary_BuildMachineSidePartsPath::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.GetConvertMachineIdToMachineCustomId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMachineId                                    ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId");
static_assert(sizeof(MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId");
static_assert(offsetof(MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_GetConvertMachineIdToMachineCustomId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.GetPlayerIndexFromSimpleCustomMachineId
// 0x0008 (0x0008 - 0x0000)
struct MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId) == 0x000004, "Wrong alignment on MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId) == 0x000008, "Wrong size on MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId, ReturnValue) == 0x000004, "Member 'MachineIdUtilityLibrary_GetPlayerIndexFromSimpleCustomMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.IsBasicCustomMachineId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_IsBasicCustomMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_IsBasicCustomMachineId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_IsBasicCustomMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_IsBasicCustomMachineId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_IsBasicCustomMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_IsBasicCustomMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_IsBasicCustomMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_IsBasicCustomMachineId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_IsBasicCustomMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.IsBasicMachineId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_IsBasicMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_IsBasicMachineId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_IsBasicMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_IsBasicMachineId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_IsBasicMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_IsBasicMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_IsBasicMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_IsBasicMachineId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_IsBasicMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.IsCustomMachineId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_IsCustomMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_IsCustomMachineId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_IsCustomMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_IsCustomMachineId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_IsCustomMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_IsCustomMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_IsCustomMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_IsCustomMachineId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_IsCustomMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.IsExtendMachineId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_IsExtendMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_IsExtendMachineId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_IsExtendMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_IsExtendMachineId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_IsExtendMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_IsExtendMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_IsExtendMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_IsExtendMachineId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_IsExtendMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.IsHoverboardMachineId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_IsHoverboardMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_IsHoverboardMachineId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_IsHoverboardMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_IsHoverboardMachineId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_IsHoverboardMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_IsHoverboardMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_IsHoverboardMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_IsHoverboardMachineId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_IsHoverboardMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MachineIdUtilityLibrary.IsSimpleCustomMachineId
// 0x0002 (0x0002 - 0x0000)
struct MachineIdUtilityLibrary_IsSimpleCustomMachineId final
{
public:
	EMachineId                                    InMachineID;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MachineIdUtilityLibrary_IsSimpleCustomMachineId) == 0x000001, "Wrong alignment on MachineIdUtilityLibrary_IsSimpleCustomMachineId");
static_assert(sizeof(MachineIdUtilityLibrary_IsSimpleCustomMachineId) == 0x000002, "Wrong size on MachineIdUtilityLibrary_IsSimpleCustomMachineId");
static_assert(offsetof(MachineIdUtilityLibrary_IsSimpleCustomMachineId, InMachineID) == 0x000000, "Member 'MachineIdUtilityLibrary_IsSimpleCustomMachineId::InMachineID' has a wrong offset!");
static_assert(offsetof(MachineIdUtilityLibrary_IsSimpleCustomMachineId, ReturnValue) == 0x000001, "Member 'MachineIdUtilityLibrary_IsSimpleCustomMachineId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MatchmakingRequestContext.SetNoTriggerMatchmakingComplete
// 0x0001 (0x0001 - 0x0000)
struct MatchmakingRequestContext_SetNoTriggerMatchmakingComplete final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingRequestContext_SetNoTriggerMatchmakingComplete) == 0x000001, "Wrong alignment on MatchmakingRequestContext_SetNoTriggerMatchmakingComplete");
static_assert(sizeof(MatchmakingRequestContext_SetNoTriggerMatchmakingComplete) == 0x000001, "Wrong size on MatchmakingRequestContext_SetNoTriggerMatchmakingComplete");
static_assert(offsetof(MatchmakingRequestContext_SetNoTriggerMatchmakingComplete, bNewValue) == 0x000000, "Member 'MatchmakingRequestContext_SetNoTriggerMatchmakingComplete::bNewValue' has a wrong offset!");

// Function UnionSystem.MatchmakingRequestContext.IsSeries
// 0x0001 (0x0001 - 0x0000)
struct MatchmakingRequestContext_IsSeries final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingRequestContext_IsSeries) == 0x000001, "Wrong alignment on MatchmakingRequestContext_IsSeries");
static_assert(sizeof(MatchmakingRequestContext_IsSeries) == 0x000001, "Wrong size on MatchmakingRequestContext_IsSeries");
static_assert(offsetof(MatchmakingRequestContext_IsSeries, ReturnValue) == 0x000000, "Member 'MatchmakingRequestContext_IsSeries::ReturnValue' has a wrong offset!");

// Function UnionSystem.MatchmakingContext_WithFlexMatch.InitializeFlexMatch
// 0x0004 (0x0004 - 0x0000)
struct MatchmakingContext_WithFlexMatch_InitializeFlexMatch final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingContext_WithFlexMatch_InitializeFlexMatch) == 0x000004, "Wrong alignment on MatchmakingContext_WithFlexMatch_InitializeFlexMatch");
static_assert(sizeof(MatchmakingContext_WithFlexMatch_InitializeFlexMatch) == 0x000004, "Wrong size on MatchmakingContext_WithFlexMatch_InitializeFlexMatch");
static_assert(offsetof(MatchmakingContext_WithFlexMatch_InitializeFlexMatch, LocalUserNum) == 0x000000, "Member 'MatchmakingContext_WithFlexMatch_InitializeFlexMatch::LocalUserNum' has a wrong offset!");

// Function UnionSystem.MatchmakingSubsystem.CancelMatchmaking
// 0x0004 (0x0004 - 0x0000)
struct MatchmakingSubsystem_CancelMatchmaking final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingSubsystem_CancelMatchmaking) == 0x000004, "Wrong alignment on MatchmakingSubsystem_CancelMatchmaking");
static_assert(sizeof(MatchmakingSubsystem_CancelMatchmaking) == 0x000004, "Wrong size on MatchmakingSubsystem_CancelMatchmaking");
static_assert(offsetof(MatchmakingSubsystem_CancelMatchmaking, LocalUserNum) == 0x000000, "Member 'MatchmakingSubsystem_CancelMatchmaking::LocalUserNum' has a wrong offset!");

// Function UnionSystem.MatchmakingSubsystem.CreateMatchmakingContext
// 0x0010 (0x0010 - 0x0000)
struct MatchmakingSubsystem_CreateMatchmakingContext final
{
public:
	TSubclassOf<class UMatchmakingRequestContext> MatchmakingContextClass;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMatchmakingRequestContext*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingSubsystem_CreateMatchmakingContext) == 0x000008, "Wrong alignment on MatchmakingSubsystem_CreateMatchmakingContext");
static_assert(sizeof(MatchmakingSubsystem_CreateMatchmakingContext) == 0x000010, "Wrong size on MatchmakingSubsystem_CreateMatchmakingContext");
static_assert(offsetof(MatchmakingSubsystem_CreateMatchmakingContext, MatchmakingContextClass) == 0x000000, "Member 'MatchmakingSubsystem_CreateMatchmakingContext::MatchmakingContextClass' has a wrong offset!");
static_assert(offsetof(MatchmakingSubsystem_CreateMatchmakingContext, ReturnValue) == 0x000008, "Member 'MatchmakingSubsystem_CreateMatchmakingContext::ReturnValue' has a wrong offset!");

// Function UnionSystem.MatchmakingSubsystem.EndMatchmaking
// 0x0004 (0x0004 - 0x0000)
struct MatchmakingSubsystem_EndMatchmaking final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingSubsystem_EndMatchmaking) == 0x000004, "Wrong alignment on MatchmakingSubsystem_EndMatchmaking");
static_assert(sizeof(MatchmakingSubsystem_EndMatchmaking) == 0x000004, "Wrong size on MatchmakingSubsystem_EndMatchmaking");
static_assert(offsetof(MatchmakingSubsystem_EndMatchmaking, LocalUserNum) == 0x000000, "Member 'MatchmakingSubsystem_EndMatchmaking::LocalUserNum' has a wrong offset!");

// Function UnionSystem.MatchmakingSubsystem.GetCurrentMatchmakingContext
// 0x0010 (0x0010 - 0x0000)
struct MatchmakingSubsystem_GetCurrentMatchmakingContext final
{
public:
	bool                                          bIsExists;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchmakingRequestContext*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingSubsystem_GetCurrentMatchmakingContext) == 0x000008, "Wrong alignment on MatchmakingSubsystem_GetCurrentMatchmakingContext");
static_assert(sizeof(MatchmakingSubsystem_GetCurrentMatchmakingContext) == 0x000010, "Wrong size on MatchmakingSubsystem_GetCurrentMatchmakingContext");
static_assert(offsetof(MatchmakingSubsystem_GetCurrentMatchmakingContext, bIsExists) == 0x000000, "Member 'MatchmakingSubsystem_GetCurrentMatchmakingContext::bIsExists' has a wrong offset!");
static_assert(offsetof(MatchmakingSubsystem_GetCurrentMatchmakingContext, ReturnValue) == 0x000008, "Member 'MatchmakingSubsystem_GetCurrentMatchmakingContext::ReturnValue' has a wrong offset!");

// Function UnionSystem.MatchmakingSubsystem.SetMatchmakingCompleteDelegate
// 0x0010 (0x0010 - 0x0000)
struct MatchmakingSubsystem_SetMatchmakingCompleteDelegate final
{
public:
	TDelegate<void(EGameMatchmakingCompleteStatus Status, const struct FCreateOrConnectLobbyResult& Result)> Delegate; // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingSubsystem_SetMatchmakingCompleteDelegate) == 0x000004, "Wrong alignment on MatchmakingSubsystem_SetMatchmakingCompleteDelegate");
static_assert(sizeof(MatchmakingSubsystem_SetMatchmakingCompleteDelegate) == 0x000010, "Wrong size on MatchmakingSubsystem_SetMatchmakingCompleteDelegate");
static_assert(offsetof(MatchmakingSubsystem_SetMatchmakingCompleteDelegate, Delegate) == 0x000000, "Member 'MatchmakingSubsystem_SetMatchmakingCompleteDelegate::Delegate' has a wrong offset!");

// Function UnionSystem.MatchmakingSubsystem.StartMatchmaking
// 0x0020 (0x0020 - 0x0000)
struct MatchmakingSubsystem_StartMatchmaking final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchmakingRequestContext*             NewContext;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(EGameMatchmakingCompleteStatus Status, const struct FCreateOrConnectLobbyResult& Result)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MatchmakingSubsystem_StartMatchmaking) == 0x000008, "Wrong alignment on MatchmakingSubsystem_StartMatchmaking");
static_assert(sizeof(MatchmakingSubsystem_StartMatchmaking) == 0x000020, "Wrong size on MatchmakingSubsystem_StartMatchmaking");
static_assert(offsetof(MatchmakingSubsystem_StartMatchmaking, LocalUserNum) == 0x000000, "Member 'MatchmakingSubsystem_StartMatchmaking::LocalUserNum' has a wrong offset!");
static_assert(offsetof(MatchmakingSubsystem_StartMatchmaking, NewContext) == 0x000008, "Member 'MatchmakingSubsystem_StartMatchmaking::NewContext' has a wrong offset!");
static_assert(offsetof(MatchmakingSubsystem_StartMatchmaking, OnComplete) == 0x000010, "Member 'MatchmakingSubsystem_StartMatchmaking::OnComplete' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.GetCurrentTime
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayer_GetCurrentTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_GetCurrentTime) == 0x000004, "Wrong alignment on MaterialPlayer_GetCurrentTime");
static_assert(sizeof(MaterialPlayer_GetCurrentTime) == 0x000004, "Wrong size on MaterialPlayer_GetCurrentTime");
static_assert(offsetof(MaterialPlayer_GetCurrentTime, ReturnValue) == 0x000000, "Member 'MaterialPlayer_GetCurrentTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.GetCurrentTimeRatio
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayer_GetCurrentTimeRatio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_GetCurrentTimeRatio) == 0x000004, "Wrong alignment on MaterialPlayer_GetCurrentTimeRatio");
static_assert(sizeof(MaterialPlayer_GetCurrentTimeRatio) == 0x000004, "Wrong size on MaterialPlayer_GetCurrentTimeRatio");
static_assert(offsetof(MaterialPlayer_GetCurrentTimeRatio, ReturnValue) == 0x000000, "Member 'MaterialPlayer_GetCurrentTimeRatio::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.OverrideMaterialColorParameter
// 0x0018 (0x0018 - 0x0000)
struct MaterialPlayer_OverrideMaterialColorParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_OverrideMaterialColorParameter) == 0x000004, "Wrong alignment on MaterialPlayer_OverrideMaterialColorParameter");
static_assert(sizeof(MaterialPlayer_OverrideMaterialColorParameter) == 0x000018, "Wrong size on MaterialPlayer_OverrideMaterialColorParameter");
static_assert(offsetof(MaterialPlayer_OverrideMaterialColorParameter, ParameterName) == 0x000000, "Member 'MaterialPlayer_OverrideMaterialColorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(MaterialPlayer_OverrideMaterialColorParameter, Color) == 0x000008, "Member 'MaterialPlayer_OverrideMaterialColorParameter::Color' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.OverrideMaterialParameter
// 0x000C (0x000C - 0x0000)
struct MaterialPlayer_OverrideMaterialParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_OverrideMaterialParameter) == 0x000004, "Wrong alignment on MaterialPlayer_OverrideMaterialParameter");
static_assert(sizeof(MaterialPlayer_OverrideMaterialParameter) == 0x00000C, "Wrong size on MaterialPlayer_OverrideMaterialParameter");
static_assert(offsetof(MaterialPlayer_OverrideMaterialParameter, ParameterName) == 0x000000, "Member 'MaterialPlayer_OverrideMaterialParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(MaterialPlayer_OverrideMaterialParameter, Value) == 0x000008, "Member 'MaterialPlayer_OverrideMaterialParameter::Value' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.OverrideMaterialVectorParameter
// 0x0020 (0x0020 - 0x0000)
struct MaterialPlayer_OverrideMaterialVectorParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_OverrideMaterialVectorParameter) == 0x000008, "Wrong alignment on MaterialPlayer_OverrideMaterialVectorParameter");
static_assert(sizeof(MaterialPlayer_OverrideMaterialVectorParameter) == 0x000020, "Wrong size on MaterialPlayer_OverrideMaterialVectorParameter");
static_assert(offsetof(MaterialPlayer_OverrideMaterialVectorParameter, ParameterName) == 0x000000, "Member 'MaterialPlayer_OverrideMaterialVectorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(MaterialPlayer_OverrideMaterialVectorParameter, Value) == 0x000008, "Member 'MaterialPlayer_OverrideMaterialVectorParameter::Value' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.PlayWithStartTime
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayer_PlayWithStartTime final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_PlayWithStartTime) == 0x000004, "Wrong alignment on MaterialPlayer_PlayWithStartTime");
static_assert(sizeof(MaterialPlayer_PlayWithStartTime) == 0x000004, "Wrong size on MaterialPlayer_PlayWithStartTime");
static_assert(offsetof(MaterialPlayer_PlayWithStartTime, StartTime) == 0x000000, "Member 'MaterialPlayer_PlayWithStartTime::StartTime' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.SetCurrentTime
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayer_SetCurrentTime final
{
public:
	float                                         CurrentTime;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_SetCurrentTime) == 0x000004, "Wrong alignment on MaterialPlayer_SetCurrentTime");
static_assert(sizeof(MaterialPlayer_SetCurrentTime) == 0x000004, "Wrong size on MaterialPlayer_SetCurrentTime");
static_assert(offsetof(MaterialPlayer_SetCurrentTime, CurrentTime) == 0x000000, "Member 'MaterialPlayer_SetCurrentTime::CurrentTime' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.SetPause
// 0x0001 (0x0001 - 0x0000)
struct MaterialPlayer_SetPause final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_SetPause) == 0x000001, "Wrong alignment on MaterialPlayer_SetPause");
static_assert(sizeof(MaterialPlayer_SetPause) == 0x000001, "Wrong size on MaterialPlayer_SetPause");
static_assert(offsetof(MaterialPlayer_SetPause, bPause) == 0x000000, "Member 'MaterialPlayer_SetPause::bPause' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.Update
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayer_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_Update) == 0x000004, "Wrong alignment on MaterialPlayer_Update");
static_assert(sizeof(MaterialPlayer_Update) == 0x000004, "Wrong size on MaterialPlayer_Update");
static_assert(offsetof(MaterialPlayer_Update, DeltaTime) == 0x000000, "Member 'MaterialPlayer_Update::DeltaTime' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.IsActive
// 0x0001 (0x0001 - 0x0000)
struct MaterialPlayer_IsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_IsActive) == 0x000001, "Wrong alignment on MaterialPlayer_IsActive");
static_assert(sizeof(MaterialPlayer_IsActive) == 0x000001, "Wrong size on MaterialPlayer_IsActive");
static_assert(offsetof(MaterialPlayer_IsActive, ReturnValue) == 0x000000, "Member 'MaterialPlayer_IsActive::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayer.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct MaterialPlayer_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayer_IsPlaying) == 0x000001, "Wrong alignment on MaterialPlayer_IsPlaying");
static_assert(sizeof(MaterialPlayer_IsPlaying) == 0x000001, "Wrong size on MaterialPlayer_IsPlaying");
static_assert(offsetof(MaterialPlayer_IsPlaying, ReturnValue) == 0x000000, "Member 'MaterialPlayer_IsPlaying::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.BindCurves
// 0x0018 (0x0018 - 0x0000)
struct MaterialPlayerComponent_BindCurves final
{
public:
	class UCurveTable*                            CurveTable;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetTag;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MaterialPlayerComponent_BindCurves) == 0x000008, "Wrong alignment on MaterialPlayerComponent_BindCurves");
static_assert(sizeof(MaterialPlayerComponent_BindCurves) == 0x000018, "Wrong size on MaterialPlayerComponent_BindCurves");
static_assert(offsetof(MaterialPlayerComponent_BindCurves, CurveTable) == 0x000000, "Member 'MaterialPlayerComponent_BindCurves::CurveTable' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_BindCurves, TargetTag) == 0x000008, "Member 'MaterialPlayerComponent_BindCurves::TargetTag' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_BindCurves, ReturnValue) == 0x000010, "Member 'MaterialPlayerComponent_BindCurves::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.BindCurvesByInfo
// 0x0028 (0x0028 - 0x0000)
struct MaterialPlayerComponent_BindCurvesByInfo final
{
public:
	struct FMatereialPlayerBindInfo               BindInfo;                                          // 0x0000(0x0020)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MaterialPlayerComponent_BindCurvesByInfo) == 0x000008, "Wrong alignment on MaterialPlayerComponent_BindCurvesByInfo");
static_assert(sizeof(MaterialPlayerComponent_BindCurvesByInfo) == 0x000028, "Wrong size on MaterialPlayerComponent_BindCurvesByInfo");
static_assert(offsetof(MaterialPlayerComponent_BindCurvesByInfo, BindInfo) == 0x000000, "Member 'MaterialPlayerComponent_BindCurvesByInfo::BindInfo' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_BindCurvesByInfo, ReturnValue) == 0x000020, "Member 'MaterialPlayerComponent_BindCurvesByInfo::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.GetCurrentTime
// 0x0008 (0x0008 - 0x0000)
struct MaterialPlayerComponent_GetCurrentTime final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_GetCurrentTime) == 0x000004, "Wrong alignment on MaterialPlayerComponent_GetCurrentTime");
static_assert(sizeof(MaterialPlayerComponent_GetCurrentTime) == 0x000008, "Wrong size on MaterialPlayerComponent_GetCurrentTime");
static_assert(offsetof(MaterialPlayerComponent_GetCurrentTime, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_GetCurrentTime::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_GetCurrentTime, ReturnValue) == 0x000004, "Member 'MaterialPlayerComponent_GetCurrentTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.GetCurrentTimeRatio
// 0x0008 (0x0008 - 0x0000)
struct MaterialPlayerComponent_GetCurrentTimeRatio final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_GetCurrentTimeRatio) == 0x000004, "Wrong alignment on MaterialPlayerComponent_GetCurrentTimeRatio");
static_assert(sizeof(MaterialPlayerComponent_GetCurrentTimeRatio) == 0x000008, "Wrong size on MaterialPlayerComponent_GetCurrentTimeRatio");
static_assert(offsetof(MaterialPlayerComponent_GetCurrentTimeRatio, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_GetCurrentTimeRatio::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_GetCurrentTimeRatio, ReturnValue) == 0x000004, "Member 'MaterialPlayerComponent_GetCurrentTimeRatio::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.OverrideMaterialColorParameter
// 0x001C (0x001C - 0x0000)
struct MaterialPlayerComponent_OverrideMaterialColorParameter final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x000C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_OverrideMaterialColorParameter) == 0x000004, "Wrong alignment on MaterialPlayerComponent_OverrideMaterialColorParameter");
static_assert(sizeof(MaterialPlayerComponent_OverrideMaterialColorParameter) == 0x00001C, "Wrong size on MaterialPlayerComponent_OverrideMaterialColorParameter");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialColorParameter, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_OverrideMaterialColorParameter::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialColorParameter, ParameterName) == 0x000004, "Member 'MaterialPlayerComponent_OverrideMaterialColorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialColorParameter, Color) == 0x00000C, "Member 'MaterialPlayerComponent_OverrideMaterialColorParameter::Color' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.OverrideMaterialParameter
// 0x0010 (0x0010 - 0x0000)
struct MaterialPlayerComponent_OverrideMaterialParameter final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_OverrideMaterialParameter) == 0x000004, "Wrong alignment on MaterialPlayerComponent_OverrideMaterialParameter");
static_assert(sizeof(MaterialPlayerComponent_OverrideMaterialParameter) == 0x000010, "Wrong size on MaterialPlayerComponent_OverrideMaterialParameter");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialParameter, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_OverrideMaterialParameter::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialParameter, ParameterName) == 0x000004, "Member 'MaterialPlayerComponent_OverrideMaterialParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialParameter, Value) == 0x00000C, "Member 'MaterialPlayerComponent_OverrideMaterialParameter::Value' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.OverrideMaterialVectorParameter
// 0x0028 (0x0028 - 0x0000)
struct MaterialPlayerComponent_OverrideMaterialVectorParameter final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Value;                                             // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_OverrideMaterialVectorParameter) == 0x000008, "Wrong alignment on MaterialPlayerComponent_OverrideMaterialVectorParameter");
static_assert(sizeof(MaterialPlayerComponent_OverrideMaterialVectorParameter) == 0x000028, "Wrong size on MaterialPlayerComponent_OverrideMaterialVectorParameter");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialVectorParameter, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_OverrideMaterialVectorParameter::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialVectorParameter, ParameterName) == 0x000004, "Member 'MaterialPlayerComponent_OverrideMaterialVectorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_OverrideMaterialVectorParameter, Value) == 0x000010, "Member 'MaterialPlayerComponent_OverrideMaterialVectorParameter::Value' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.Play
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayerComponent_Play final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_Play) == 0x000004, "Wrong alignment on MaterialPlayerComponent_Play");
static_assert(sizeof(MaterialPlayerComponent_Play) == 0x000004, "Wrong size on MaterialPlayerComponent_Play");
static_assert(offsetof(MaterialPlayerComponent_Play, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_Play::Index_0' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.PlayWithStartTime
// 0x0008 (0x0008 - 0x0000)
struct MaterialPlayerComponent_PlayWithStartTime final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartTime;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_PlayWithStartTime) == 0x000004, "Wrong alignment on MaterialPlayerComponent_PlayWithStartTime");
static_assert(sizeof(MaterialPlayerComponent_PlayWithStartTime) == 0x000008, "Wrong size on MaterialPlayerComponent_PlayWithStartTime");
static_assert(offsetof(MaterialPlayerComponent_PlayWithStartTime, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_PlayWithStartTime::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_PlayWithStartTime, StartTime) == 0x000004, "Member 'MaterialPlayerComponent_PlayWithStartTime::StartTime' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.SetCurrentTime
// 0x0008 (0x0008 - 0x0000)
struct MaterialPlayerComponent_SetCurrentTime final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentTime;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_SetCurrentTime) == 0x000004, "Wrong alignment on MaterialPlayerComponent_SetCurrentTime");
static_assert(sizeof(MaterialPlayerComponent_SetCurrentTime) == 0x000008, "Wrong size on MaterialPlayerComponent_SetCurrentTime");
static_assert(offsetof(MaterialPlayerComponent_SetCurrentTime, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_SetCurrentTime::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_SetCurrentTime, CurrentTime) == 0x000004, "Member 'MaterialPlayerComponent_SetCurrentTime::CurrentTime' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.Stop
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayerComponent_Stop final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_Stop) == 0x000004, "Wrong alignment on MaterialPlayerComponent_Stop");
static_assert(sizeof(MaterialPlayerComponent_Stop) == 0x000004, "Wrong size on MaterialPlayerComponent_Stop");
static_assert(offsetof(MaterialPlayerComponent_Stop, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_Stop::Index_0' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.StopAll
// 0x0001 (0x0001 - 0x0000)
struct MaterialPlayerComponent_StopAll final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_StopAll) == 0x000001, "Wrong alignment on MaterialPlayerComponent_StopAll");
static_assert(sizeof(MaterialPlayerComponent_StopAll) == 0x000001, "Wrong size on MaterialPlayerComponent_StopAll");
static_assert(offsetof(MaterialPlayerComponent_StopAll, bReset) == 0x000000, "Member 'MaterialPlayerComponent_StopAll::bReset' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.StopAndReset
// 0x0004 (0x0004 - 0x0000)
struct MaterialPlayerComponent_StopAndReset final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaterialPlayerComponent_StopAndReset) == 0x000004, "Wrong alignment on MaterialPlayerComponent_StopAndReset");
static_assert(sizeof(MaterialPlayerComponent_StopAndReset) == 0x000004, "Wrong size on MaterialPlayerComponent_StopAndReset");
static_assert(offsetof(MaterialPlayerComponent_StopAndReset, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_StopAndReset::Index_0' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.IsPlaying
// 0x0008 (0x0008 - 0x0000)
struct MaterialPlayerComponent_IsPlaying final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MaterialPlayerComponent_IsPlaying) == 0x000004, "Wrong alignment on MaterialPlayerComponent_IsPlaying");
static_assert(sizeof(MaterialPlayerComponent_IsPlaying) == 0x000008, "Wrong size on MaterialPlayerComponent_IsPlaying");
static_assert(offsetof(MaterialPlayerComponent_IsPlaying, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_IsPlaying::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_IsPlaying, ReturnValue) == 0x000004, "Member 'MaterialPlayerComponent_IsPlaying::ReturnValue' has a wrong offset!");

// Function UnionSystem.MaterialPlayerComponent.IsValidPlayIndex
// 0x0008 (0x0008 - 0x0000)
struct MaterialPlayerComponent_IsValidPlayIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MaterialPlayerComponent_IsValidPlayIndex) == 0x000004, "Wrong alignment on MaterialPlayerComponent_IsValidPlayIndex");
static_assert(sizeof(MaterialPlayerComponent_IsValidPlayIndex) == 0x000008, "Wrong size on MaterialPlayerComponent_IsValidPlayIndex");
static_assert(offsetof(MaterialPlayerComponent_IsValidPlayIndex, Index_0) == 0x000000, "Member 'MaterialPlayerComponent_IsValidPlayIndex::Index_0' has a wrong offset!");
static_assert(offsetof(MaterialPlayerComponent_IsValidPlayIndex, ReturnValue) == 0x000004, "Member 'MaterialPlayerComponent_IsValidPlayIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.MCEvent.GetMCEventData_SpecifyId
// 0x0068 (0x0068 - 0x0000)
struct MCEvent_GetMCEventData_SpecifyId final
{
public:
	int32                                         PointUpChanceId;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMCEventData                           ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MCEvent_GetMCEventData_SpecifyId) == 0x000008, "Wrong alignment on MCEvent_GetMCEventData_SpecifyId");
static_assert(sizeof(MCEvent_GetMCEventData_SpecifyId) == 0x000068, "Wrong size on MCEvent_GetMCEventData_SpecifyId");
static_assert(offsetof(MCEvent_GetMCEventData_SpecifyId, PointUpChanceId) == 0x000000, "Member 'MCEvent_GetMCEventData_SpecifyId::PointUpChanceId' has a wrong offset!");
static_assert(offsetof(MCEvent_GetMCEventData_SpecifyId, ReturnValue) == 0x000008, "Member 'MCEvent_GetMCEventData_SpecifyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MCEvent.LotteryMCEventId
// 0x0004 (0x0004 - 0x0000)
struct MCEvent_LotteryMCEventId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MCEvent_LotteryMCEventId) == 0x000004, "Wrong alignment on MCEvent_LotteryMCEventId");
static_assert(sizeof(MCEvent_LotteryMCEventId) == 0x000004, "Wrong size on MCEvent_LotteryMCEventId");
static_assert(offsetof(MCEvent_LotteryMCEventId, ReturnValue) == 0x000000, "Member 'MCEvent_LotteryMCEventId::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct MenuInputRecieveInterface_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftStickAxis) == 0x000008, "Wrong alignment on MenuInputRecieveInterface_OnLeftStickAxis");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftStickAxis) == 0x000010, "Wrong size on MenuInputRecieveInterface_OnLeftStickAxis");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftStickAxis, Value) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftStickAxis::Value' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'MenuInputRecieveInterface_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct MenuInputRecieveInterface_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightStickAxis) == 0x000008, "Wrong alignment on MenuInputRecieveInterface_OnRightStickAxis");
static_assert(sizeof(MenuInputRecieveInterface_OnRightStickAxis) == 0x000010, "Wrong size on MenuInputRecieveInterface_OnRightStickAxis");
static_assert(offsetof(MenuInputRecieveInterface_OnRightStickAxis, Value) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightStickAxis::Value' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct MenuInputRecieveInterface_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MenuInputRecieveInterface_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on MenuInputRecieveInterface_OnRightStickAxisWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on MenuInputRecieveInterface_OnRightStickAxisWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(MenuInputRecieveInterface_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'MenuInputRecieveInterface_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnSpecialPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnSpecialPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'MenuInputRecieveInterface_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function UnionSystem.MenuInputRecieveInterface.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct MenuInputRecieveInterface_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuInputRecieveInterface_SilentFocusReady) == 0x000001, "Wrong alignment on MenuInputRecieveInterface_SilentFocusReady");
static_assert(sizeof(MenuInputRecieveInterface_SilentFocusReady) == 0x000001, "Wrong size on MenuInputRecieveInterface_SilentFocusReady");
static_assert(offsetof(MenuInputRecieveInterface_SilentFocusReady, bOnce) == 0x000000, "Member 'MenuInputRecieveInterface_SilentFocusReady::bOnce' has a wrong offset!");

// Function UnionSystem.MenuPlayerController.SetMenuDirectionKeyEnable
// 0x0001 (0x0001 - 0x0000)
struct MenuPlayerController_SetMenuDirectionKeyEnable final
{
public:
	bool                                          bEnableDirection;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPlayerController_SetMenuDirectionKeyEnable) == 0x000001, "Wrong alignment on MenuPlayerController_SetMenuDirectionKeyEnable");
static_assert(sizeof(MenuPlayerController_SetMenuDirectionKeyEnable) == 0x000001, "Wrong size on MenuPlayerController_SetMenuDirectionKeyEnable");
static_assert(offsetof(MenuPlayerController_SetMenuDirectionKeyEnable, bEnableDirection) == 0x000000, "Member 'MenuPlayerController_SetMenuDirectionKeyEnable::bEnableDirection' has a wrong offset!");

// Function UnionSystem.MenuPlayerController.GetMenuDirectionKeyEnable
// 0x0001 (0x0001 - 0x0000)
struct MenuPlayerController_GetMenuDirectionKeyEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPlayerController_GetMenuDirectionKeyEnable) == 0x000001, "Wrong alignment on MenuPlayerController_GetMenuDirectionKeyEnable");
static_assert(sizeof(MenuPlayerController_GetMenuDirectionKeyEnable) == 0x000001, "Wrong size on MenuPlayerController_GetMenuDirectionKeyEnable");
static_assert(offsetof(MenuPlayerController_GetMenuDirectionKeyEnable, ReturnValue) == 0x000000, "Member 'MenuPlayerController_GetMenuDirectionKeyEnable::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.GetAnimationIn
// 0x0008 (0x0008 - 0x0000)
struct MenuPopupWindowInterface_GetAnimationIn final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_GetAnimationIn) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_GetAnimationIn");
static_assert(sizeof(MenuPopupWindowInterface_GetAnimationIn) == 0x000008, "Wrong size on MenuPopupWindowInterface_GetAnimationIn");
static_assert(offsetof(MenuPopupWindowInterface_GetAnimationIn, ReturnValue) == 0x000000, "Member 'MenuPopupWindowInterface_GetAnimationIn::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.GetAnimationLoop
// 0x0008 (0x0008 - 0x0000)
struct MenuPopupWindowInterface_GetAnimationLoop final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_GetAnimationLoop) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_GetAnimationLoop");
static_assert(sizeof(MenuPopupWindowInterface_GetAnimationLoop) == 0x000008, "Wrong size on MenuPopupWindowInterface_GetAnimationLoop");
static_assert(offsetof(MenuPopupWindowInterface_GetAnimationLoop, ReturnValue) == 0x000000, "Member 'MenuPopupWindowInterface_GetAnimationLoop::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.GetAnimationOut
// 0x0008 (0x0008 - 0x0000)
struct MenuPopupWindowInterface_GetAnimationOut final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_GetAnimationOut) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_GetAnimationOut");
static_assert(sizeof(MenuPopupWindowInterface_GetAnimationOut) == 0x000008, "Wrong size on MenuPopupWindowInterface_GetAnimationOut");
static_assert(offsetof(MenuPopupWindowInterface_GetAnimationOut, ReturnValue) == 0x000000, "Member 'MenuPopupWindowInterface_GetAnimationOut::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.GetPopupWindowButtonType
// 0x0001 (0x0001 - 0x0000)
struct MenuPopupWindowInterface_GetPopupWindowButtonType final
{
public:
	EPopupWindowButtonType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_GetPopupWindowButtonType) == 0x000001, "Wrong alignment on MenuPopupWindowInterface_GetPopupWindowButtonType");
static_assert(sizeof(MenuPopupWindowInterface_GetPopupWindowButtonType) == 0x000001, "Wrong size on MenuPopupWindowInterface_GetPopupWindowButtonType");
static_assert(offsetof(MenuPopupWindowInterface_GetPopupWindowButtonType, ReturnValue) == 0x000000, "Member 'MenuPopupWindowInterface_GetPopupWindowButtonType::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.GetPopupWindowType
// 0x0001 (0x0001 - 0x0000)
struct MenuPopupWindowInterface_GetPopupWindowType final
{
public:
	EPopupWindowType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_GetPopupWindowType) == 0x000001, "Wrong alignment on MenuPopupWindowInterface_GetPopupWindowType");
static_assert(sizeof(MenuPopupWindowInterface_GetPopupWindowType) == 0x000001, "Wrong size on MenuPopupWindowInterface_GetPopupWindowType");
static_assert(offsetof(MenuPopupWindowInterface_GetPopupWindowType, ReturnValue) == 0x000000, "Member 'MenuPopupWindowInterface_GetPopupWindowType::ReturnValue' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.InitParam
// 0x0001 (0x0001 - 0x0000)
struct MenuPopupWindowInterface_InitParam final
{
public:
	EPopupWindowButtonType                        ButtonType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_InitParam) == 0x000001, "Wrong alignment on MenuPopupWindowInterface_InitParam");
static_assert(sizeof(MenuPopupWindowInterface_InitParam) == 0x000001, "Wrong size on MenuPopupWindowInterface_InitParam");
static_assert(offsetof(MenuPopupWindowInterface_InitParam, ButtonType) == 0x000000, "Member 'MenuPopupWindowInterface_InitParam::ButtonType' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetButtonControlDelayTime
// 0x0004 (0x0004 - 0x0000)
struct MenuPopupWindowInterface_SetButtonControlDelayTime final
{
public:
	float                                         InTime;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetButtonControlDelayTime) == 0x000004, "Wrong alignment on MenuPopupWindowInterface_SetButtonControlDelayTime");
static_assert(sizeof(MenuPopupWindowInterface_SetButtonControlDelayTime) == 0x000004, "Wrong size on MenuPopupWindowInterface_SetButtonControlDelayTime");
static_assert(offsetof(MenuPopupWindowInterface_SetButtonControlDelayTime, InTime) == 0x000000, "Member 'MenuPopupWindowInterface_SetButtonControlDelayTime::InTime' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetButtonText
// 0x0010 (0x0010 - 0x0000)
struct MenuPopupWindowInterface_SetButtonText final
{
public:
	TArray<class FText>                           BtnTextArray;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetButtonText) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_SetButtonText");
static_assert(sizeof(MenuPopupWindowInterface_SetButtonText) == 0x000010, "Wrong size on MenuPopupWindowInterface_SetButtonText");
static_assert(offsetof(MenuPopupWindowInterface_SetButtonText, BtnTextArray) == 0x000000, "Member 'MenuPopupWindowInterface_SetButtonText::BtnTextArray' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetDisplayFooterButton
// 0x0001 (0x0001 - 0x0000)
struct MenuPopupWindowInterface_SetDisplayFooterButton final
{
public:
	bool                                          InDisplay;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetDisplayFooterButton) == 0x000001, "Wrong alignment on MenuPopupWindowInterface_SetDisplayFooterButton");
static_assert(sizeof(MenuPopupWindowInterface_SetDisplayFooterButton) == 0x000001, "Wrong size on MenuPopupWindowInterface_SetDisplayFooterButton");
static_assert(offsetof(MenuPopupWindowInterface_SetDisplayFooterButton, InDisplay) == 0x000000, "Member 'MenuPopupWindowInterface_SetDisplayFooterButton::InDisplay' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetDonpaTicketCount
// 0x0008 (0x0008 - 0x0000)
struct MenuPopupWindowInterface_SetDonpaTicketCount final
{
public:
	int32                                         CurrentCount;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AfterCount;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetDonpaTicketCount) == 0x000004, "Wrong alignment on MenuPopupWindowInterface_SetDonpaTicketCount");
static_assert(sizeof(MenuPopupWindowInterface_SetDonpaTicketCount) == 0x000008, "Wrong size on MenuPopupWindowInterface_SetDonpaTicketCount");
static_assert(offsetof(MenuPopupWindowInterface_SetDonpaTicketCount, CurrentCount) == 0x000000, "Member 'MenuPopupWindowInterface_SetDonpaTicketCount::CurrentCount' has a wrong offset!");
static_assert(offsetof(MenuPopupWindowInterface_SetDonpaTicketCount, AfterCount) == 0x000004, "Member 'MenuPopupWindowInterface_SetDonpaTicketCount::AfterCount' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetEnableInput
// 0x0001 (0x0001 - 0x0000)
struct MenuPopupWindowInterface_SetEnableInput final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetEnableInput) == 0x000001, "Wrong alignment on MenuPopupWindowInterface_SetEnableInput");
static_assert(sizeof(MenuPopupWindowInterface_SetEnableInput) == 0x000001, "Wrong size on MenuPopupWindowInterface_SetEnableInput");
static_assert(offsetof(MenuPopupWindowInterface_SetEnableInput, InEnable) == 0x000000, "Member 'MenuPopupWindowInterface_SetEnableInput::InEnable' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetFooterMenuBtn
// 0x0018 (0x0018 - 0x0000)
struct MenuPopupWindowInterface_SetFooterMenuBtn final
{
public:
	int32                                         BtnIconIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BtnIconType;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BtnText;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetFooterMenuBtn) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_SetFooterMenuBtn");
static_assert(sizeof(MenuPopupWindowInterface_SetFooterMenuBtn) == 0x000018, "Wrong size on MenuPopupWindowInterface_SetFooterMenuBtn");
static_assert(offsetof(MenuPopupWindowInterface_SetFooterMenuBtn, BtnIconIndex) == 0x000000, "Member 'MenuPopupWindowInterface_SetFooterMenuBtn::BtnIconIndex' has a wrong offset!");
static_assert(offsetof(MenuPopupWindowInterface_SetFooterMenuBtn, BtnIconType) == 0x000004, "Member 'MenuPopupWindowInterface_SetFooterMenuBtn::BtnIconType' has a wrong offset!");
static_assert(offsetof(MenuPopupWindowInterface_SetFooterMenuBtn, BtnText) == 0x000008, "Member 'MenuPopupWindowInterface_SetFooterMenuBtn::BtnText' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetImageButtonSelectText
// 0x0010 (0x0010 - 0x0000)
struct MenuPopupWindowInterface_SetImageButtonSelectText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetImageButtonSelectText) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_SetImageButtonSelectText");
static_assert(sizeof(MenuPopupWindowInterface_SetImageButtonSelectText) == 0x000010, "Wrong size on MenuPopupWindowInterface_SetImageButtonSelectText");
static_assert(offsetof(MenuPopupWindowInterface_SetImageButtonSelectText, InText) == 0x000000, "Member 'MenuPopupWindowInterface_SetImageButtonSelectText::InText' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetImageTexture
// 0x0008 (0x0008 - 0x0000)
struct MenuPopupWindowInterface_SetImageTexture final
{
public:
	const class UTexture2D*                       Texture2D;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetImageTexture) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_SetImageTexture");
static_assert(sizeof(MenuPopupWindowInterface_SetImageTexture) == 0x000008, "Wrong size on MenuPopupWindowInterface_SetImageTexture");
static_assert(offsetof(MenuPopupWindowInterface_SetImageTexture, Texture2D) == 0x000000, "Member 'MenuPopupWindowInterface_SetImageTexture::Texture2D' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetInitialFocusButtonIndex
// 0x0004 (0x0004 - 0x0000)
struct MenuPopupWindowInterface_SetInitialFocusButtonIndex final
{
public:
	int32                                         InButtonIndex;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetInitialFocusButtonIndex) == 0x000004, "Wrong alignment on MenuPopupWindowInterface_SetInitialFocusButtonIndex");
static_assert(sizeof(MenuPopupWindowInterface_SetInitialFocusButtonIndex) == 0x000004, "Wrong size on MenuPopupWindowInterface_SetInitialFocusButtonIndex");
static_assert(offsetof(MenuPopupWindowInterface_SetInitialFocusButtonIndex, InButtonIndex) == 0x000000, "Member 'MenuPopupWindowInterface_SetInitialFocusButtonIndex::InButtonIndex' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetPopupInfoDisplayIndex
// 0x0004 (0x0004 - 0x0000)
struct MenuPopupWindowInterface_SetPopupInfoDisplayIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetPopupInfoDisplayIndex) == 0x000004, "Wrong alignment on MenuPopupWindowInterface_SetPopupInfoDisplayIndex");
static_assert(sizeof(MenuPopupWindowInterface_SetPopupInfoDisplayIndex) == 0x000004, "Wrong size on MenuPopupWindowInterface_SetPopupInfoDisplayIndex");
static_assert(offsetof(MenuPopupWindowInterface_SetPopupInfoDisplayIndex, Index_0) == 0x000000, "Member 'MenuPopupWindowInterface_SetPopupInfoDisplayIndex::Index_0' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetPopupInfoMainMenuButtonIconIndex
// 0x0008 (0x0008 - 0x0000)
struct MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex final
{
public:
	int32                                         Btn01IconIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Btn02IconIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex) == 0x000004, "Wrong alignment on MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex");
static_assert(sizeof(MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex) == 0x000008, "Wrong size on MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex");
static_assert(offsetof(MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex, Btn01IconIndex) == 0x000000, "Member 'MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex::Btn01IconIndex' has a wrong offset!");
static_assert(offsetof(MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex, Btn02IconIndex) == 0x000004, "Member 'MenuPopupWindowInterface_SetPopupInfoMainMenuButtonIconIndex::Btn02IconIndex' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetTextMessege
// 0x0010 (0x0010 - 0x0000)
struct MenuPopupWindowInterface_SetTextMessege final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MenuPopupWindowInterface_SetTextMessege) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_SetTextMessege");
static_assert(sizeof(MenuPopupWindowInterface_SetTextMessege) == 0x000010, "Wrong size on MenuPopupWindowInterface_SetTextMessege");
static_assert(offsetof(MenuPopupWindowInterface_SetTextMessege, Text) == 0x000000, "Member 'MenuPopupWindowInterface_SetTextMessege::Text' has a wrong offset!");

// Function UnionSystem.MenuPopupWindowInterface.SetTextTitle
// 0x0018 (0x0018 - 0x0000)
struct MenuPopupWindowInterface_SetTextTitle final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Attension;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MenuPopupWindowInterface_SetTextTitle) == 0x000008, "Wrong alignment on MenuPopupWindowInterface_SetTextTitle");
static_assert(sizeof(MenuPopupWindowInterface_SetTextTitle) == 0x000018, "Wrong size on MenuPopupWindowInterface_SetTextTitle");
static_assert(offsetof(MenuPopupWindowInterface_SetTextTitle, Text) == 0x000000, "Member 'MenuPopupWindowInterface_SetTextTitle::Text' has a wrong offset!");
static_assert(offsetof(MenuPopupWindowInterface_SetTextTitle, Attension) == 0x000010, "Member 'MenuPopupWindowInterface_SetTextTitle::Attension' has a wrong offset!");

// Function UnionSystem.MovieFunctionLibrary.GetMovieList
// 0x0008 (0x0008 - 0x0000)
struct MovieFunctionLibrary_GetMovieList final
{
public:
	class UDataTable*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieFunctionLibrary_GetMovieList) == 0x000008, "Wrong alignment on MovieFunctionLibrary_GetMovieList");
static_assert(sizeof(MovieFunctionLibrary_GetMovieList) == 0x000008, "Wrong size on MovieFunctionLibrary_GetMovieList");
static_assert(offsetof(MovieFunctionLibrary_GetMovieList, ReturnValue) == 0x000000, "Member 'MovieFunctionLibrary_GetMovieList::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.GetCurrentFestaData
// 0x0060 (0x0060 - 0x0000)
struct NetMasterDataManageSubsystem_GetCurrentFestaData final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMasterDataGetMasterDataResponse_MstFestaData ReturnValue;                                // 0x0008(0x0058)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetMasterDataManageSubsystem_GetCurrentFestaData) == 0x000008, "Wrong alignment on NetMasterDataManageSubsystem_GetCurrentFestaData");
static_assert(sizeof(NetMasterDataManageSubsystem_GetCurrentFestaData) == 0x000060, "Wrong size on NetMasterDataManageSubsystem_GetCurrentFestaData");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaData, bResult) == 0x000000, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaData::bResult' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaData, ReturnValue) == 0x000008, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaData::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.GetCurrentFestaRuleData
// 0x0030 (0x0030 - 0x0000)
struct NetMasterDataManageSubsystem_GetCurrentFestaRuleData final
{
public:
	struct FDateTime                              FestaStartUTCTime;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              FestaEndUTCTime;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         raceRuleId;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoopCount;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMasterDataGetMasterDataResponse_MstFestaTimeSceduleData> TimeScheduleDataArray;   // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData) == 0x000008, "Wrong alignment on NetMasterDataManageSubsystem_GetCurrentFestaRuleData");
static_assert(sizeof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData) == 0x000030, "Wrong size on NetMasterDataManageSubsystem_GetCurrentFestaRuleData");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData, FestaStartUTCTime) == 0x000000, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaRuleData::FestaStartUTCTime' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData, FestaEndUTCTime) == 0x000008, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaRuleData::FestaEndUTCTime' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData, raceRuleId) == 0x000010, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaRuleData::raceRuleId' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData, LoopCount) == 0x000014, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaRuleData::LoopCount' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData, TimeScheduleDataArray) == 0x000018, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaRuleData::TimeScheduleDataArray' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetCurrentFestaRuleData, ReturnValue) == 0x000028, "Member 'NetMasterDataManageSubsystem_GetCurrentFestaRuleData::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.GetGeneralizedParamData
// 0x0048 (0x0048 - 0x0000)
struct NetMasterDataManageSubsystem_GetGeneralizedParamData final
{
public:
	class FString                                 KeyName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMasterDataGetMasterDataResponse_MstGeneralizedParameterData Out;                         // 0x0010(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NetMasterDataManageSubsystem_GetGeneralizedParamData) == 0x000008, "Wrong alignment on NetMasterDataManageSubsystem_GetGeneralizedParamData");
static_assert(sizeof(NetMasterDataManageSubsystem_GetGeneralizedParamData) == 0x000048, "Wrong size on NetMasterDataManageSubsystem_GetGeneralizedParamData");
static_assert(offsetof(NetMasterDataManageSubsystem_GetGeneralizedParamData, KeyName) == 0x000000, "Member 'NetMasterDataManageSubsystem_GetGeneralizedParamData::KeyName' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetGeneralizedParamData, Out) == 0x000010, "Member 'NetMasterDataManageSubsystem_GetGeneralizedParamData::Out' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_GetGeneralizedParamData, ReturnValue) == 0x000040, "Member 'NetMasterDataManageSubsystem_GetGeneralizedParamData::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.GetMasterData
// 0x02C0 (0x02C0 - 0x0000)
struct NetMasterDataManageSubsystem_GetMasterData final
{
public:
	struct FMasterDataGetMasterDataResponse       ReturnValue;                                       // 0x0000(0x02C0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetMasterDataManageSubsystem_GetMasterData) == 0x000008, "Wrong alignment on NetMasterDataManageSubsystem_GetMasterData");
static_assert(sizeof(NetMasterDataManageSubsystem_GetMasterData) == 0x0002C0, "Wrong size on NetMasterDataManageSubsystem_GetMasterData");
static_assert(offsetof(NetMasterDataManageSubsystem_GetMasterData, ReturnValue) == 0x000000, "Member 'NetMasterDataManageSubsystem_GetMasterData::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.HasDifferentialData
// 0x0001 (0x0001 - 0x0000)
struct NetMasterDataManageSubsystem_HasDifferentialData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetMasterDataManageSubsystem_HasDifferentialData) == 0x000001, "Wrong alignment on NetMasterDataManageSubsystem_HasDifferentialData");
static_assert(sizeof(NetMasterDataManageSubsystem_HasDifferentialData) == 0x000001, "Wrong size on NetMasterDataManageSubsystem_HasDifferentialData");
static_assert(offsetof(NetMasterDataManageSubsystem_HasDifferentialData, ReturnValue) == 0x000000, "Member 'NetMasterDataManageSubsystem_HasDifferentialData::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.IsBusy
// 0x0001 (0x0001 - 0x0000)
struct NetMasterDataManageSubsystem_IsBusy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetMasterDataManageSubsystem_IsBusy) == 0x000001, "Wrong alignment on NetMasterDataManageSubsystem_IsBusy");
static_assert(sizeof(NetMasterDataManageSubsystem_IsBusy) == 0x000001, "Wrong size on NetMasterDataManageSubsystem_IsBusy");
static_assert(offsetof(NetMasterDataManageSubsystem_IsBusy, ReturnValue) == 0x000000, "Member 'NetMasterDataManageSubsystem_IsBusy::ReturnValue' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.OnGetHttpCommandComplete
// 0x0038 (0x0038 - 0x0000)
struct NetMasterDataManageSubsystem_OnGetHttpCommandComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NetMasterDataManageSubsystem_OnGetHttpCommandComplete) == 0x000008, "Wrong alignment on NetMasterDataManageSubsystem_OnGetHttpCommandComplete");
static_assert(sizeof(NetMasterDataManageSubsystem_OnGetHttpCommandComplete) == 0x000038, "Wrong size on NetMasterDataManageSubsystem_OnGetHttpCommandComplete");
static_assert(offsetof(NetMasterDataManageSubsystem_OnGetHttpCommandComplete, ApiName) == 0x000000, "Member 'NetMasterDataManageSubsystem_OnGetHttpCommandComplete::ApiName' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_OnGetHttpCommandComplete, RequestData) == 0x000010, "Member 'NetMasterDataManageSubsystem_OnGetHttpCommandComplete::RequestData' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_OnGetHttpCommandComplete, ResponseData) == 0x000020, "Member 'NetMasterDataManageSubsystem_OnGetHttpCommandComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(NetMasterDataManageSubsystem_OnGetHttpCommandComplete, Error) == 0x000030, "Member 'NetMasterDataManageSubsystem_OnGetHttpCommandComplete::Error' has a wrong offset!");

// Function UnionSystem.NetMasterDataManageSubsystem.UpdateMasterDataRequest
// 0x0010 (0x0010 - 0x0000)
struct NetMasterDataManageSubsystem_UpdateMasterDataRequest final
{
public:
	TDelegate<void(bool bWasSuccessful, int32 ErrorCode)> OnCompleteDelegate;                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetMasterDataManageSubsystem_UpdateMasterDataRequest) == 0x000004, "Wrong alignment on NetMasterDataManageSubsystem_UpdateMasterDataRequest");
static_assert(sizeof(NetMasterDataManageSubsystem_UpdateMasterDataRequest) == 0x000010, "Wrong size on NetMasterDataManageSubsystem_UpdateMasterDataRequest");
static_assert(offsetof(NetMasterDataManageSubsystem_UpdateMasterDataRequest, OnCompleteDelegate) == 0x000000, "Member 'NetMasterDataManageSubsystem_UpdateMasterDataRequest::OnCompleteDelegate' has a wrong offset!");

// Function UnionSystem.NetPingSubsystem.SetICMPAddr
// 0x0010 (0x0010 - 0x0000)
struct NetPingSubsystem_SetICMPAddr final
{
public:
	class FString                                 InAddr;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetPingSubsystem_SetICMPAddr) == 0x000008, "Wrong alignment on NetPingSubsystem_SetICMPAddr");
static_assert(sizeof(NetPingSubsystem_SetICMPAddr) == 0x000010, "Wrong size on NetPingSubsystem_SetICMPAddr");
static_assert(offsetof(NetPingSubsystem_SetICMPAddr, InAddr) == 0x000000, "Member 'NetPingSubsystem_SetICMPAddr::InAddr' has a wrong offset!");

// Function UnionSystem.NetPingSubsystem.SetTickEnabled
// 0x0001 (0x0001 - 0x0000)
struct NetPingSubsystem_SetTickEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetPingSubsystem_SetTickEnabled) == 0x000001, "Wrong alignment on NetPingSubsystem_SetTickEnabled");
static_assert(sizeof(NetPingSubsystem_SetTickEnabled) == 0x000001, "Wrong size on NetPingSubsystem_SetTickEnabled");
static_assert(offsetof(NetPingSubsystem_SetTickEnabled, bNewValue) == 0x000000, "Member 'NetPingSubsystem_SetTickEnabled::bNewValue' has a wrong offset!");

// Function UnionSystem.NetPingSubsystem.SetUDPQoSAddr
// 0x0010 (0x0010 - 0x0000)
struct NetPingSubsystem_SetUDPQoSAddr final
{
public:
	class FString                                 InAddr;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetPingSubsystem_SetUDPQoSAddr) == 0x000008, "Wrong alignment on NetPingSubsystem_SetUDPQoSAddr");
static_assert(sizeof(NetPingSubsystem_SetUDPQoSAddr) == 0x000010, "Wrong size on NetPingSubsystem_SetUDPQoSAddr");
static_assert(offsetof(NetPingSubsystem_SetUDPQoSAddr, InAddr) == 0x000000, "Member 'NetPingSubsystem_SetUDPQoSAddr::InAddr' has a wrong offset!");

// Function UnionSystem.NetPingSubsystem.GetCurrentPingMs
// 0x0004 (0x0004 - 0x0000)
struct NetPingSubsystem_GetCurrentPingMs final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NetPingSubsystem_GetCurrentPingMs) == 0x000004, "Wrong alignment on NetPingSubsystem_GetCurrentPingMs");
static_assert(sizeof(NetPingSubsystem_GetCurrentPingMs) == 0x000004, "Wrong size on NetPingSubsystem_GetCurrentPingMs");
static_assert(offsetof(NetPingSubsystem_GetCurrentPingMs, ReturnValue) == 0x000000, "Member 'NetPingSubsystem_GetCurrentPingMs::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.AddRecentPlayers
// 0x0018 (0x0018 - 0x0000)
struct OnlineActivitySubsystem_AddRecentPlayers final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PlatformIdList;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_AddRecentPlayers) == 0x000008, "Wrong alignment on OnlineActivitySubsystem_AddRecentPlayers");
static_assert(sizeof(OnlineActivitySubsystem_AddRecentPlayers) == 0x000018, "Wrong size on OnlineActivitySubsystem_AddRecentPlayers");
static_assert(offsetof(OnlineActivitySubsystem_AddRecentPlayers, LocalUserNum) == 0x000000, "Member 'OnlineActivitySubsystem_AddRecentPlayers::LocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_AddRecentPlayers, PlatformIdList) == 0x000008, "Member 'OnlineActivitySubsystem_AddRecentPlayers::PlatformIdList' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.DebugSetActivity
// 0x0010 (0x0010 - 0x0000)
struct OnlineActivitySubsystem_DebugSetActivity final
{
public:
	class FString                                 LobbyIdString;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_DebugSetActivity) == 0x000008, "Wrong alignment on OnlineActivitySubsystem_DebugSetActivity");
static_assert(sizeof(OnlineActivitySubsystem_DebugSetActivity) == 0x000010, "Wrong size on OnlineActivitySubsystem_DebugSetActivity");
static_assert(offsetof(OnlineActivitySubsystem_DebugSetActivity, LobbyIdString) == 0x000000, "Member 'OnlineActivitySubsystem_DebugSetActivity::LobbyIdString' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.DestroyInviteLobby
// 0x0004 (0x0004 - 0x0000)
struct OnlineActivitySubsystem_DestroyInviteLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_DestroyInviteLobby) == 0x000004, "Wrong alignment on OnlineActivitySubsystem_DestroyInviteLobby");
static_assert(sizeof(OnlineActivitySubsystem_DestroyInviteLobby) == 0x000004, "Wrong size on OnlineActivitySubsystem_DestroyInviteLobby");
static_assert(offsetof(OnlineActivitySubsystem_DestroyInviteLobby, LocalUserNum) == 0x000000, "Member 'OnlineActivitySubsystem_DestroyInviteLobby::LocalUserNum' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.GetJoinLobby
// 0x0010 (0x0010 - 0x0000)
struct OnlineActivitySubsystem_GetJoinLobby final
{
public:
	struct FLobbyId                               ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_GetJoinLobby) == 0x000008, "Wrong alignment on OnlineActivitySubsystem_GetJoinLobby");
static_assert(sizeof(OnlineActivitySubsystem_GetJoinLobby) == 0x000010, "Wrong size on OnlineActivitySubsystem_GetJoinLobby");
static_assert(offsetof(OnlineActivitySubsystem_GetJoinLobby, ReturnValue) == 0x000000, "Member 'OnlineActivitySubsystem_GetJoinLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.HasInviteOnly
// 0x0001 (0x0001 - 0x0000)
struct OnlineActivitySubsystem_HasInviteOnly final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_HasInviteOnly) == 0x000001, "Wrong alignment on OnlineActivitySubsystem_HasInviteOnly");
static_assert(sizeof(OnlineActivitySubsystem_HasInviteOnly) == 0x000001, "Wrong size on OnlineActivitySubsystem_HasInviteOnly");
static_assert(offsetof(OnlineActivitySubsystem_HasInviteOnly, ReturnValue) == 0x000000, "Member 'OnlineActivitySubsystem_HasInviteOnly::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.HasInviteRequest
// 0x0001 (0x0001 - 0x0000)
struct OnlineActivitySubsystem_HasInviteRequest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_HasInviteRequest) == 0x000001, "Wrong alignment on OnlineActivitySubsystem_HasInviteRequest");
static_assert(sizeof(OnlineActivitySubsystem_HasInviteRequest) == 0x000001, "Wrong size on OnlineActivitySubsystem_HasInviteRequest");
static_assert(offsetof(OnlineActivitySubsystem_HasInviteRequest, ReturnValue) == 0x000000, "Member 'OnlineActivitySubsystem_HasInviteRequest::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.IsJoinLobbyReady
// 0x0001 (0x0001 - 0x0000)
struct OnlineActivitySubsystem_IsJoinLobbyReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_IsJoinLobbyReady) == 0x000001, "Wrong alignment on OnlineActivitySubsystem_IsJoinLobbyReady");
static_assert(sizeof(OnlineActivitySubsystem_IsJoinLobbyReady) == 0x000001, "Wrong size on OnlineActivitySubsystem_IsJoinLobbyReady");
static_assert(offsetof(OnlineActivitySubsystem_IsJoinLobbyReady, ReturnValue) == 0x000000, "Member 'OnlineActivitySubsystem_IsJoinLobbyReady::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.JoinInviteLobby
// 0x0018 (0x0018 - 0x0000)
struct OnlineActivitySubsystem_JoinInviteLobby final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FCreateOrConnectLobbyResult& Result)> OnComplete;  // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineActivitySubsystem_JoinInviteLobby) == 0x000004, "Wrong alignment on OnlineActivitySubsystem_JoinInviteLobby");
static_assert(sizeof(OnlineActivitySubsystem_JoinInviteLobby) == 0x000018, "Wrong size on OnlineActivitySubsystem_JoinInviteLobby");
static_assert(offsetof(OnlineActivitySubsystem_JoinInviteLobby, LocalUserNum) == 0x000000, "Member 'OnlineActivitySubsystem_JoinInviteLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_JoinInviteLobby, OnComplete) == 0x000004, "Member 'OnlineActivitySubsystem_JoinInviteLobby::OnComplete' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_JoinInviteLobby, ReturnValue) == 0x000014, "Member 'OnlineActivitySubsystem_JoinInviteLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.OnConnectLobbyComplete
// 0x00B0 (0x00B0 - 0x0000)
struct OnlineActivitySubsystem_OnConnectLobbyComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCreateOrConnectLobbyResult            Result;                                            // 0x0008(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_OnConnectLobbyComplete) == 0x000008, "Wrong alignment on OnlineActivitySubsystem_OnConnectLobbyComplete");
static_assert(sizeof(OnlineActivitySubsystem_OnConnectLobbyComplete) == 0x0000B0, "Wrong size on OnlineActivitySubsystem_OnConnectLobbyComplete");
static_assert(offsetof(OnlineActivitySubsystem_OnConnectLobbyComplete, bSuccessful) == 0x000000, "Member 'OnlineActivitySubsystem_OnConnectLobbyComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_OnConnectLobbyComplete, Result) == 0x000008, "Member 'OnlineActivitySubsystem_OnConnectLobbyComplete::Result' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.SendInviteNoCallback
// 0x0048 (0x0048 - 0x0000)
struct OnlineActivitySubsystem_SendInviteNoCallback final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InLobbyIdString;                                   // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_SendInviteNoCallback) == 0x000008, "Wrong alignment on OnlineActivitySubsystem_SendInviteNoCallback");
static_assert(sizeof(OnlineActivitySubsystem_SendInviteNoCallback) == 0x000048, "Wrong size on OnlineActivitySubsystem_SendInviteNoCallback");
static_assert(offsetof(OnlineActivitySubsystem_SendInviteNoCallback, LocalUserNum) == 0x000000, "Member 'OnlineActivitySubsystem_SendInviteNoCallback::LocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_SendInviteNoCallback, UserId) == 0x000008, "Member 'OnlineActivitySubsystem_SendInviteNoCallback::UserId' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_SendInviteNoCallback, InLobbyIdString) == 0x000038, "Member 'OnlineActivitySubsystem_SendInviteNoCallback::InLobbyIdString' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.SetActivity
// 0x0020 (0x0020 - 0x0000)
struct OnlineActivitySubsystem_SetActivity final
{
public:
	class FString                                 LobbyIdString;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InLocalUserNum;                                    // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayerNum;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentPlayerNum;                                  // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineActivitySubsystem_SetActivity) == 0x000008, "Wrong alignment on OnlineActivitySubsystem_SetActivity");
static_assert(sizeof(OnlineActivitySubsystem_SetActivity) == 0x000020, "Wrong size on OnlineActivitySubsystem_SetActivity");
static_assert(offsetof(OnlineActivitySubsystem_SetActivity, LobbyIdString) == 0x000000, "Member 'OnlineActivitySubsystem_SetActivity::LobbyIdString' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_SetActivity, InLocalUserNum) == 0x000010, "Member 'OnlineActivitySubsystem_SetActivity::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_SetActivity, MaxPlayerNum) == 0x000014, "Member 'OnlineActivitySubsystem_SetActivity::MaxPlayerNum' has a wrong offset!");
static_assert(offsetof(OnlineActivitySubsystem_SetActivity, CurrentPlayerNum) == 0x000018, "Member 'OnlineActivitySubsystem_SetActivity::CurrentPlayerNum' has a wrong offset!");

// Function UnionSystem.OnlineActivitySubsystem.SetupJoinRequest
// 0x0010 (0x0010 - 0x0000)
struct OnlineActivitySubsystem_SetupJoinRequest final
{
public:
	TDelegate<void(bool bSuccess)>                OnComplete;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineActivitySubsystem_SetupJoinRequest) == 0x000004, "Wrong alignment on OnlineActivitySubsystem_SetupJoinRequest");
static_assert(sizeof(OnlineActivitySubsystem_SetupJoinRequest) == 0x000010, "Wrong size on OnlineActivitySubsystem_SetupJoinRequest");
static_assert(offsetof(OnlineActivitySubsystem_SetupJoinRequest, OnComplete) == 0x000000, "Member 'OnlineActivitySubsystem_SetupJoinRequest::OnComplete' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.IsEnableOnlineSinglePlay
// 0x0001 (0x0001 - 0x0000)
struct OnlineMatchSubsystem_IsEnableOnlineSinglePlay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_IsEnableOnlineSinglePlay) == 0x000001, "Wrong alignment on OnlineMatchSubsystem_IsEnableOnlineSinglePlay");
static_assert(sizeof(OnlineMatchSubsystem_IsEnableOnlineSinglePlay) == 0x000001, "Wrong size on OnlineMatchSubsystem_IsEnableOnlineSinglePlay");
static_assert(offsetof(OnlineMatchSubsystem_IsEnableOnlineSinglePlay, ReturnValue) == 0x000000, "Member 'OnlineMatchSubsystem_IsEnableOnlineSinglePlay::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.OnCheckNetworkOnlineComplete
// 0x0038 (0x0038 - 0x0000)
struct OnlineMatchSubsystem_OnCheckNetworkOnlineComplete final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestData;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResponseData;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Error;                                             // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineMatchSubsystem_OnCheckNetworkOnlineComplete) == 0x000008, "Wrong alignment on OnlineMatchSubsystem_OnCheckNetworkOnlineComplete");
static_assert(sizeof(OnlineMatchSubsystem_OnCheckNetworkOnlineComplete) == 0x000038, "Wrong size on OnlineMatchSubsystem_OnCheckNetworkOnlineComplete");
static_assert(offsetof(OnlineMatchSubsystem_OnCheckNetworkOnlineComplete, ApiName) == 0x000000, "Member 'OnlineMatchSubsystem_OnCheckNetworkOnlineComplete::ApiName' has a wrong offset!");
static_assert(offsetof(OnlineMatchSubsystem_OnCheckNetworkOnlineComplete, RequestData) == 0x000010, "Member 'OnlineMatchSubsystem_OnCheckNetworkOnlineComplete::RequestData' has a wrong offset!");
static_assert(offsetof(OnlineMatchSubsystem_OnCheckNetworkOnlineComplete, ResponseData) == 0x000020, "Member 'OnlineMatchSubsystem_OnCheckNetworkOnlineComplete::ResponseData' has a wrong offset!");
static_assert(offsetof(OnlineMatchSubsystem_OnCheckNetworkOnlineComplete, Error) == 0x000030, "Member 'OnlineMatchSubsystem_OnCheckNetworkOnlineComplete::Error' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.SetHostRemoteUser
// 0x0030 (0x0030 - 0x0000)
struct OnlineMatchSubsystem_SetHostRemoteUser final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_SetHostRemoteUser) == 0x000008, "Wrong alignment on OnlineMatchSubsystem_SetHostRemoteUser");
static_assert(sizeof(OnlineMatchSubsystem_SetHostRemoteUser) == 0x000030, "Wrong size on OnlineMatchSubsystem_SetHostRemoteUser");
static_assert(offsetof(OnlineMatchSubsystem_SetHostRemoteUser, UserId) == 0x000000, "Member 'OnlineMatchSubsystem_SetHostRemoteUser::UserId' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.SetupLocalUser
// 0x0030 (0x0030 - 0x0000)
struct OnlineMatchSubsystem_SetupLocalUser final
{
public:
	struct FUniqueNetIdRepl                       LocalUserId;                                       // 0x0000(0x0030)(ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_SetupLocalUser) == 0x000008, "Wrong alignment on OnlineMatchSubsystem_SetupLocalUser");
static_assert(sizeof(OnlineMatchSubsystem_SetupLocalUser) == 0x000030, "Wrong size on OnlineMatchSubsystem_SetupLocalUser");
static_assert(offsetof(OnlineMatchSubsystem_SetupLocalUser, LocalUserId) == 0x000000, "Member 'OnlineMatchSubsystem_SetupLocalUser::LocalUserId' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.ShutdownMatch
// 0x0001 (0x0001 - 0x0000)
struct OnlineMatchSubsystem_ShutdownMatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_ShutdownMatch) == 0x000001, "Wrong alignment on OnlineMatchSubsystem_ShutdownMatch");
static_assert(sizeof(OnlineMatchSubsystem_ShutdownMatch) == 0x000001, "Wrong size on OnlineMatchSubsystem_ShutdownMatch");
static_assert(offsetof(OnlineMatchSubsystem_ShutdownMatch, ReturnValue) == 0x000000, "Member 'OnlineMatchSubsystem_ShutdownMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.GetOnlineConnectPeerCount
// 0x0004 (0x0004 - 0x0000)
struct OnlineMatchSubsystem_GetOnlineConnectPeerCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_GetOnlineConnectPeerCount) == 0x000004, "Wrong alignment on OnlineMatchSubsystem_GetOnlineConnectPeerCount");
static_assert(sizeof(OnlineMatchSubsystem_GetOnlineConnectPeerCount) == 0x000004, "Wrong size on OnlineMatchSubsystem_GetOnlineConnectPeerCount");
static_assert(offsetof(OnlineMatchSubsystem_GetOnlineConnectPeerCount, ReturnValue) == 0x000000, "Member 'OnlineMatchSubsystem_GetOnlineConnectPeerCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.GetOnlineIndex
// 0x0038 (0x0038 - 0x0000)
struct OnlineMatchSubsystem_GetOnlineIndex final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineMatchSubsystem_GetOnlineIndex) == 0x000008, "Wrong alignment on OnlineMatchSubsystem_GetOnlineIndex");
static_assert(sizeof(OnlineMatchSubsystem_GetOnlineIndex) == 0x000038, "Wrong size on OnlineMatchSubsystem_GetOnlineIndex");
static_assert(offsetof(OnlineMatchSubsystem_GetOnlineIndex, UserId) == 0x000000, "Member 'OnlineMatchSubsystem_GetOnlineIndex::UserId' has a wrong offset!");
static_assert(offsetof(OnlineMatchSubsystem_GetOnlineIndex, ReturnValue) == 0x000030, "Member 'OnlineMatchSubsystem_GetOnlineIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.GetOnlineIndexToPeerUserId
// 0x0038 (0x0038 - 0x0000)
struct OnlineMatchSubsystem_GetOnlineIndexToPeerUserId final
{
public:
	int32                                         OnlineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_GetOnlineIndexToPeerUserId) == 0x000008, "Wrong alignment on OnlineMatchSubsystem_GetOnlineIndexToPeerUserId");
static_assert(sizeof(OnlineMatchSubsystem_GetOnlineIndexToPeerUserId) == 0x000038, "Wrong size on OnlineMatchSubsystem_GetOnlineIndexToPeerUserId");
static_assert(offsetof(OnlineMatchSubsystem_GetOnlineIndexToPeerUserId, OnlineIndex) == 0x000000, "Member 'OnlineMatchSubsystem_GetOnlineIndexToPeerUserId::OnlineIndex' has a wrong offset!");
static_assert(offsetof(OnlineMatchSubsystem_GetOnlineIndexToPeerUserId, ReturnValue) == 0x000008, "Member 'OnlineMatchSubsystem_GetOnlineIndexToPeerUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.OnlineMatchSubsystem.IsSetupLocalUser
// 0x0001 (0x0001 - 0x0000)
struct OnlineMatchSubsystem_IsSetupLocalUser final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineMatchSubsystem_IsSetupLocalUser) == 0x000001, "Wrong alignment on OnlineMatchSubsystem_IsSetupLocalUser");
static_assert(sizeof(OnlineMatchSubsystem_IsSetupLocalUser) == 0x000001, "Wrong size on OnlineMatchSubsystem_IsSetupLocalUser");
static_assert(offsetof(OnlineMatchSubsystem_IsSetupLocalUser, ReturnValue) == 0x000000, "Member 'OnlineMatchSubsystem_IsSetupLocalUser::ReturnValue' has a wrong offset!");

// Function UnionSystem.P2PConnectionSubsystem.OnUpdateLobbyComplete
// 0x0080 (0x0080 - 0x0000)
struct P2PConnectionSubsystem_OnUpdateLobbyComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  Result;                                            // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(P2PConnectionSubsystem_OnUpdateLobbyComplete) == 0x000008, "Wrong alignment on P2PConnectionSubsystem_OnUpdateLobbyComplete");
static_assert(sizeof(P2PConnectionSubsystem_OnUpdateLobbyComplete) == 0x000080, "Wrong size on P2PConnectionSubsystem_OnUpdateLobbyComplete");
static_assert(offsetof(P2PConnectionSubsystem_OnUpdateLobbyComplete, bSuccessful) == 0x000000, "Member 'P2PConnectionSubsystem_OnUpdateLobbyComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(P2PConnectionSubsystem_OnUpdateLobbyComplete, Result) == 0x000008, "Member 'P2PConnectionSubsystem_OnUpdateLobbyComplete::Result' has a wrong offset!");
static_assert(offsetof(P2PConnectionSubsystem_OnUpdateLobbyComplete, OnComplete) == 0x000070, "Member 'P2PConnectionSubsystem_OnUpdateLobbyComplete::OnComplete' has a wrong offset!");

// Function UnionSystem.P2PConnectionSubsystem.StartConnect
// 0x0008 (0x0008 - 0x0000)
struct P2PConnectionSubsystem_StartConnect final
{
public:
	bool                                          bIsHost;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsResend;                                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(P2PConnectionSubsystem_StartConnect) == 0x000004, "Wrong alignment on P2PConnectionSubsystem_StartConnect");
static_assert(sizeof(P2PConnectionSubsystem_StartConnect) == 0x000008, "Wrong size on P2PConnectionSubsystem_StartConnect");
static_assert(offsetof(P2PConnectionSubsystem_StartConnect, bIsHost) == 0x000000, "Member 'P2PConnectionSubsystem_StartConnect::bIsHost' has a wrong offset!");
static_assert(offsetof(P2PConnectionSubsystem_StartConnect, bIsResend) == 0x000001, "Member 'P2PConnectionSubsystem_StartConnect::bIsResend' has a wrong offset!");
static_assert(offsetof(P2PConnectionSubsystem_StartConnect, ReturnValue) == 0x000004, "Member 'P2PConnectionSubsystem_StartConnect::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlatformPrivilegeObject.IsEnd
// 0x0001 (0x0001 - 0x0000)
struct PlatformPrivilegeObject_IsEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformPrivilegeObject_IsEnd) == 0x000001, "Wrong alignment on PlatformPrivilegeObject_IsEnd");
static_assert(sizeof(PlatformPrivilegeObject_IsEnd) == 0x000001, "Wrong size on PlatformPrivilegeObject_IsEnd");
static_assert(offsetof(PlatformPrivilegeObject_IsEnd, ReturnValue) == 0x000000, "Member 'PlatformPrivilegeObject_IsEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlatformPrivilegeObject.IsSuccess
// 0x0001 (0x0001 - 0x0000)
struct PlatformPrivilegeObject_IsSuccess final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformPrivilegeObject_IsSuccess) == 0x000001, "Wrong alignment on PlatformPrivilegeObject_IsSuccess");
static_assert(sizeof(PlatformPrivilegeObject_IsSuccess) == 0x000001, "Wrong size on PlatformPrivilegeObject_IsSuccess");
static_assert(offsetof(PlatformPrivilegeObject_IsSuccess, ReturnValue) == 0x000000, "Member 'PlatformPrivilegeObject_IsSuccess::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlatformStoreMessageDataAsset.GetPlatformStoreButtonText
// 0x0020 (0x0020 - 0x0000)
struct PlatformStoreMessageDataAsset_GetPlatformStoreButtonText final
{
public:
	class FText                                   AcceptText;                                        // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   CancelText;                                        // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonText) == 0x000008, "Wrong alignment on PlatformStoreMessageDataAsset_GetPlatformStoreButtonText");
static_assert(sizeof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonText) == 0x000020, "Wrong size on PlatformStoreMessageDataAsset_GetPlatformStoreButtonText");
static_assert(offsetof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonText, AcceptText) == 0x000000, "Member 'PlatformStoreMessageDataAsset_GetPlatformStoreButtonText::AcceptText' has a wrong offset!");
static_assert(offsetof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonText, CancelText) == 0x000010, "Member 'PlatformStoreMessageDataAsset_GetPlatformStoreButtonText::CancelText' has a wrong offset!");

// Function UnionSystem.PlatformStoreMessageDataAsset.GetCurrentPlatform
// 0x0001 (0x0001 - 0x0000)
struct PlatformStoreMessageDataAsset_GetCurrentPlatform final
{
public:
	EPlatformStoreType                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformStoreMessageDataAsset_GetCurrentPlatform) == 0x000001, "Wrong alignment on PlatformStoreMessageDataAsset_GetCurrentPlatform");
static_assert(sizeof(PlatformStoreMessageDataAsset_GetCurrentPlatform) == 0x000001, "Wrong size on PlatformStoreMessageDataAsset_GetCurrentPlatform");
static_assert(offsetof(PlatformStoreMessageDataAsset_GetCurrentPlatform, ReturnValue) == 0x000000, "Member 'PlatformStoreMessageDataAsset_GetCurrentPlatform::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlatformStoreMessageDataAsset.GetPlatformStoreButtonMessage
// 0x0010 (0x0010 - 0x0000)
struct PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage) == 0x000008, "Wrong alignment on PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage");
static_assert(sizeof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage) == 0x000010, "Wrong size on PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage");
static_assert(offsetof(PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage, ReturnValue) == 0x000000, "Member 'PlatformStoreMessageDataAsset_GetPlatformStoreButtonMessage::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlatformStoreMessageDataAsset.GetPlatformStoreMessage
// 0x0018 (0x0018 - 0x0000)
struct PlatformStoreMessageDataAsset_GetPlatformStoreMessage final
{
public:
	EPlatformStoreType                            PlatformType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformStoreMessageDataAsset_GetPlatformStoreMessage) == 0x000008, "Wrong alignment on PlatformStoreMessageDataAsset_GetPlatformStoreMessage");
static_assert(sizeof(PlatformStoreMessageDataAsset_GetPlatformStoreMessage) == 0x000018, "Wrong size on PlatformStoreMessageDataAsset_GetPlatformStoreMessage");
static_assert(offsetof(PlatformStoreMessageDataAsset_GetPlatformStoreMessage, PlatformType) == 0x000000, "Member 'PlatformStoreMessageDataAsset_GetPlatformStoreMessage::PlatformType' has a wrong offset!");
static_assert(offsetof(PlatformStoreMessageDataAsset_GetPlatformStoreMessage, ReturnValue) == 0x000008, "Member 'PlatformStoreMessageDataAsset_GetPlatformStoreMessage::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlatformUIUtilityLibrary.GetPlatformControllerWidgetClass
// 0x0010 (0x0010 - 0x0000)
struct PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass final
{
public:
	EUnionControllerType                          Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnionPlatform                                Platform;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                OutClass;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass) == 0x000008, "Wrong alignment on PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass");
static_assert(sizeof(PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass) == 0x000010, "Wrong size on PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass");
static_assert(offsetof(PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass, Type) == 0x000000, "Member 'PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass::Type' has a wrong offset!");
static_assert(offsetof(PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass, Platform) == 0x000001, "Member 'PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass::Platform' has a wrong offset!");
static_assert(offsetof(PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass, OutClass) == 0x000008, "Member 'PlatformUIUtilityLibrary_GetPlatformControllerWidgetClass::OutClass' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetCOMIF
// 0x0001 (0x0001 - 0x0000)
struct PlayerNameInterface_SetCOMIF final
{
public:
	bool                                          IsCom;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetCOMIF) == 0x000001, "Wrong alignment on PlayerNameInterface_SetCOMIF");
static_assert(sizeof(PlayerNameInterface_SetCOMIF) == 0x000001, "Wrong size on PlayerNameInterface_SetCOMIF");
static_assert(offsetof(PlayerNameInterface_SetCOMIF, IsCom) == 0x000000, "Member 'PlayerNameInterface_SetCOMIF::IsCom' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetCrossPlayIconIF
// 0x0001 (0x0001 - 0x0000)
struct PlayerNameInterface_SetCrossPlayIconIF final
{
public:
	ECrossplayPlatform                            CrossplayType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetCrossPlayIconIF) == 0x000001, "Wrong alignment on PlayerNameInterface_SetCrossPlayIconIF");
static_assert(sizeof(PlayerNameInterface_SetCrossPlayIconIF) == 0x000001, "Wrong size on PlayerNameInterface_SetCrossPlayIconIF");
static_assert(offsetof(PlayerNameInterface_SetCrossPlayIconIF, CrossplayType) == 0x000000, "Member 'PlayerNameInterface_SetCrossPlayIconIF::CrossplayType' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetGroupIndexIF
// 0x000C (0x000C - 0x0000)
struct PlayerNameInterface_SetGroupIndexIF final
{
public:
	bool                                          IsGroup;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsForce;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayerNameInterface_SetGroupIndexIF) == 0x000004, "Wrong alignment on PlayerNameInterface_SetGroupIndexIF");
static_assert(sizeof(PlayerNameInterface_SetGroupIndexIF) == 0x00000C, "Wrong size on PlayerNameInterface_SetGroupIndexIF");
static_assert(offsetof(PlayerNameInterface_SetGroupIndexIF, IsGroup) == 0x000000, "Member 'PlayerNameInterface_SetGroupIndexIF::IsGroup' has a wrong offset!");
static_assert(offsetof(PlayerNameInterface_SetGroupIndexIF, GroupIndex) == 0x000004, "Member 'PlayerNameInterface_SetGroupIndexIF::GroupIndex' has a wrong offset!");
static_assert(offsetof(PlayerNameInterface_SetGroupIndexIF, IsForce) == 0x000008, "Member 'PlayerNameInterface_SetGroupIndexIF::IsForce' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetNameIF
// 0x0010 (0x0010 - 0x0000)
struct PlayerNameInterface_SetNameIF final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetNameIF) == 0x000008, "Wrong alignment on PlayerNameInterface_SetNameIF");
static_assert(sizeof(PlayerNameInterface_SetNameIF) == 0x000010, "Wrong size on PlayerNameInterface_SetNameIF");
static_assert(offsetof(PlayerNameInterface_SetNameIF, InName) == 0x000000, "Member 'PlayerNameInterface_SetNameIF::InName' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetOnlineIF
// 0x0001 (0x0001 - 0x0000)
struct PlayerNameInterface_SetOnlineIF final
{
public:
	bool                                          IsRival;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetOnlineIF) == 0x000001, "Wrong alignment on PlayerNameInterface_SetOnlineIF");
static_assert(sizeof(PlayerNameInterface_SetOnlineIF) == 0x000001, "Wrong size on PlayerNameInterface_SetOnlineIF");
static_assert(offsetof(PlayerNameInterface_SetOnlineIF, IsRival) == 0x000000, "Member 'PlayerNameInterface_SetOnlineIF::IsRival' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetPlayerIndexIF
// 0x0008 (0x0008 - 0x0000)
struct PlayerNameInterface_SetPlayerIndexIF final
{
public:
	bool                                          IsLocalPlayer;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetPlayerIndexIF) == 0x000004, "Wrong alignment on PlayerNameInterface_SetPlayerIndexIF");
static_assert(sizeof(PlayerNameInterface_SetPlayerIndexIF) == 0x000008, "Wrong size on PlayerNameInterface_SetPlayerIndexIF");
static_assert(offsetof(PlayerNameInterface_SetPlayerIndexIF, IsLocalPlayer) == 0x000000, "Member 'PlayerNameInterface_SetPlayerIndexIF::IsLocalPlayer' has a wrong offset!");
static_assert(offsetof(PlayerNameInterface_SetPlayerIndexIF, PlayerIndex) == 0x000004, "Member 'PlayerNameInterface_SetPlayerIndexIF::PlayerIndex' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetRankIF
// 0x0004 (0x0004 - 0x0000)
struct PlayerNameInterface_SetRankIF final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetRankIF) == 0x000004, "Wrong alignment on PlayerNameInterface_SetRankIF");
static_assert(sizeof(PlayerNameInterface_SetRankIF) == 0x000004, "Wrong size on PlayerNameInterface_SetRankIF");
static_assert(offsetof(PlayerNameInterface_SetRankIF, Rank) == 0x000000, "Member 'PlayerNameInterface_SetRankIF::Rank' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetReaderIF
// 0x0001 (0x0001 - 0x0000)
struct PlayerNameInterface_SetReaderIF final
{
public:
	bool                                          IsReader;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetReaderIF) == 0x000001, "Wrong alignment on PlayerNameInterface_SetReaderIF");
static_assert(sizeof(PlayerNameInterface_SetReaderIF) == 0x000001, "Wrong size on PlayerNameInterface_SetReaderIF");
static_assert(offsetof(PlayerNameInterface_SetReaderIF, IsReader) == 0x000000, "Member 'PlayerNameInterface_SetReaderIF::IsReader' has a wrong offset!");

// Function UnionSystem.PlayerNameInterface.SetRivalIF
// 0x0002 (0x0002 - 0x0000)
struct PlayerNameInterface_SetRivalIF final
{
public:
	bool                                          IsRival;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPowerRival;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayerNameInterface_SetRivalIF) == 0x000001, "Wrong alignment on PlayerNameInterface_SetRivalIF");
static_assert(sizeof(PlayerNameInterface_SetRivalIF) == 0x000002, "Wrong size on PlayerNameInterface_SetRivalIF");
static_assert(offsetof(PlayerNameInterface_SetRivalIF, IsRival) == 0x000000, "Member 'PlayerNameInterface_SetRivalIF::IsRival' has a wrong offset!");
static_assert(offsetof(PlayerNameInterface_SetRivalIF, IsPowerRival) == 0x000001, "Member 'PlayerNameInterface_SetRivalIF::IsPowerRival' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_GetUserInfoString
// 0x0010 (0x0010 - 0x0000)
struct PlaylogHelper_CRM_GetUserInfoString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_GetUserInfoString) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_GetUserInfoString");
static_assert(sizeof(PlaylogHelper_CRM_GetUserInfoString) == 0x000010, "Wrong size on PlaylogHelper_CRM_GetUserInfoString");
static_assert(offsetof(PlaylogHelper_CRM_GetUserInfoString, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_GetUserInfoString::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_KickStart
// 0x0010 (0x0010 - 0x0000)
struct PlaylogHelper_CRM_KickStart final
{
public:
	TDelegate<void(bool Result)>                  Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_KickStart) == 0x000004, "Wrong alignment on PlaylogHelper_CRM_KickStart");
static_assert(sizeof(PlaylogHelper_CRM_KickStart) == 0x000010, "Wrong size on PlaylogHelper_CRM_KickStart");
static_assert(offsetof(PlaylogHelper_CRM_KickStart, Callback) == 0x000000, "Member 'PlaylogHelper_CRM_KickStart::Callback' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_MakeRandomFloatArray
// 0x0018 (0x0018 - 0x0000)
struct PlaylogHelper_CRM_MakeRandomFloatArray final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_MakeRandomFloatArray) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_MakeRandomFloatArray");
static_assert(sizeof(PlaylogHelper_CRM_MakeRandomFloatArray) == 0x000018, "Wrong size on PlaylogHelper_CRM_MakeRandomFloatArray");
static_assert(offsetof(PlaylogHelper_CRM_MakeRandomFloatArray, Size) == 0x000000, "Member 'PlaylogHelper_CRM_MakeRandomFloatArray::Size' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_MakeRandomFloatArray, ReturnValue) == 0x000008, "Member 'PlaylogHelper_CRM_MakeRandomFloatArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_MakeRandomIntegerArray
// 0x0018 (0x0018 - 0x0000)
struct PlaylogHelper_CRM_MakeRandomIntegerArray final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_MakeRandomIntegerArray) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_MakeRandomIntegerArray");
static_assert(sizeof(PlaylogHelper_CRM_MakeRandomIntegerArray) == 0x000018, "Wrong size on PlaylogHelper_CRM_MakeRandomIntegerArray");
static_assert(offsetof(PlaylogHelper_CRM_MakeRandomIntegerArray, Size) == 0x000000, "Member 'PlaylogHelper_CRM_MakeRandomIntegerArray::Size' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_MakeRandomIntegerArray, ReturnValue) == 0x000008, "Member 'PlaylogHelper_CRM_MakeRandomIntegerArray::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutBaseMachine
// 0x0068 (0x0068 - 0x0000)
struct PlaylogHelper_CRM_PutBaseMachine final
{
public:
	struct FCRM_BaseMachine                       Data;                                              // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutBaseMachine) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutBaseMachine");
static_assert(sizeof(PlaylogHelper_CRM_PutBaseMachine) == 0x000068, "Wrong size on PlaylogHelper_CRM_PutBaseMachine");
static_assert(offsetof(PlaylogHelper_CRM_PutBaseMachine, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutBaseMachine::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutBaseMachine, ReturnValue) == 0x000060, "Member 'PlaylogHelper_CRM_PutBaseMachine::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutChallenge
// 0x0030 (0x0030 - 0x0000)
struct PlaylogHelper_CRM_PutChallenge final
{
public:
	struct FCRM_Challenge                         Data;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutChallenge) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutChallenge");
static_assert(sizeof(PlaylogHelper_CRM_PutChallenge) == 0x000030, "Wrong size on PlaylogHelper_CRM_PutChallenge");
static_assert(offsetof(PlaylogHelper_CRM_PutChallenge, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutChallenge::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutChallenge, ReturnValue) == 0x000028, "Member 'PlaylogHelper_CRM_PutChallenge::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutCharacter
// 0x0078 (0x0078 - 0x0000)
struct PlaylogHelper_CRM_PutCharacter final
{
public:
	struct FCRM_Character                         Data;                                              // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutCharacter) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutCharacter");
static_assert(sizeof(PlaylogHelper_CRM_PutCharacter) == 0x000078, "Wrong size on PlaylogHelper_CRM_PutCharacter");
static_assert(offsetof(PlaylogHelper_CRM_PutCharacter, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutCharacter::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutCharacter, ReturnValue) == 0x000070, "Member 'PlaylogHelper_CRM_PutCharacter::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutCondition
// 0x0098 (0x0098 - 0x0000)
struct PlaylogHelper_CRM_PutCondition final
{
public:
	struct FCRM_Condition                         Data;                                              // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutCondition) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutCondition");
static_assert(sizeof(PlaylogHelper_CRM_PutCondition) == 0x000098, "Wrong size on PlaylogHelper_CRM_PutCondition");
static_assert(offsetof(PlaylogHelper_CRM_PutCondition, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutCondition::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutCondition, ReturnValue) == 0x000090, "Member 'PlaylogHelper_CRM_PutCondition::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutConnection
// 0x0078 (0x0078 - 0x0000)
struct PlaylogHelper_CRM_PutConnection final
{
public:
	struct FCRM_Connection                        Data;                                              // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutConnection) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutConnection");
static_assert(sizeof(PlaylogHelper_CRM_PutConnection) == 0x000078, "Wrong size on PlaylogHelper_CRM_PutConnection");
static_assert(offsetof(PlaylogHelper_CRM_PutConnection, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutConnection::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutConnection, ReturnValue) == 0x000070, "Member 'PlaylogHelper_CRM_PutConnection::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutConnectionError
// 0x00D0 (0x00D0 - 0x0000)
struct PlaylogHelper_CRM_PutConnectionError final
{
public:
	struct FCRM_ConnectionError                   Data;                                              // 0x0000(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutConnectionError) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutConnectionError");
static_assert(sizeof(PlaylogHelper_CRM_PutConnectionError) == 0x0000D0, "Wrong size on PlaylogHelper_CRM_PutConnectionError");
static_assert(offsetof(PlaylogHelper_CRM_PutConnectionError, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutConnectionError::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutConnectionError, ReturnValue) == 0x0000C8, "Member 'PlaylogHelper_CRM_PutConnectionError::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutCustomMachineParts
// 0x0108 (0x0108 - 0x0000)
struct PlaylogHelper_CRM_PutCustomMachineParts final
{
public:
	struct FCRM_CustomMachineParts                Data;                                              // 0x0000(0x0100)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutCustomMachineParts) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutCustomMachineParts");
static_assert(sizeof(PlaylogHelper_CRM_PutCustomMachineParts) == 0x000108, "Wrong size on PlaylogHelper_CRM_PutCustomMachineParts");
static_assert(offsetof(PlaylogHelper_CRM_PutCustomMachineParts, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutCustomMachineParts::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutCustomMachineParts, ReturnValue) == 0x000100, "Member 'PlaylogHelper_CRM_PutCustomMachineParts::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutCustomMachinePartsSpot
// 0x0198 (0x0198 - 0x0000)
struct PlaylogHelper_CRM_PutCustomMachinePartsSpot final
{
public:
	struct FCRM_CustomMachinePartsSpot            Data;                                              // 0x0000(0x0190)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0190(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutCustomMachinePartsSpot) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutCustomMachinePartsSpot");
static_assert(sizeof(PlaylogHelper_CRM_PutCustomMachinePartsSpot) == 0x000198, "Wrong size on PlaylogHelper_CRM_PutCustomMachinePartsSpot");
static_assert(offsetof(PlaylogHelper_CRM_PutCustomMachinePartsSpot, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutCustomMachinePartsSpot::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutCustomMachinePartsSpot, ReturnValue) == 0x000190, "Member 'PlaylogHelper_CRM_PutCustomMachinePartsSpot::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutDlc
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutDlc final
{
public:
	struct FCRM_Dlc                               Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutDlc) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutDlc");
static_assert(sizeof(PlaylogHelper_CRM_PutDlc) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutDlc");
static_assert(offsetof(PlaylogHelper_CRM_PutDlc, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutDlc::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutDlc, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutDlc::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutEventFesta
// 0x0038 (0x0038 - 0x0000)
struct PlaylogHelper_CRM_PutEventFesta final
{
public:
	struct FCRM_EventFesta                        Data;                                              // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutEventFesta) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutEventFesta");
static_assert(sizeof(PlaylogHelper_CRM_PutEventFesta) == 0x000038, "Wrong size on PlaylogHelper_CRM_PutEventFesta");
static_assert(offsetof(PlaylogHelper_CRM_PutEventFesta, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutEventFesta::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutEventFesta, ReturnValue) == 0x000030, "Member 'PlaylogHelper_CRM_PutEventFesta::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutEventLegend
// 0x0030 (0x0030 - 0x0000)
struct PlaylogHelper_CRM_PutEventLegend final
{
public:
	struct FCRM_EventLegend                       Data;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutEventLegend) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutEventLegend");
static_assert(sizeof(PlaylogHelper_CRM_PutEventLegend) == 0x000030, "Wrong size on PlaylogHelper_CRM_PutEventLegend");
static_assert(offsetof(PlaylogHelper_CRM_PutEventLegend, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutEventLegend::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutEventLegend, ReturnValue) == 0x000028, "Member 'PlaylogHelper_CRM_PutEventLegend::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutFriendMatch
// 0x0058 (0x0058 - 0x0000)
struct PlaylogHelper_CRM_PutFriendMatch final
{
public:
	struct FCRM_FriendMatch                       Data;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutFriendMatch) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutFriendMatch");
static_assert(sizeof(PlaylogHelper_CRM_PutFriendMatch) == 0x000058, "Wrong size on PlaylogHelper_CRM_PutFriendMatch");
static_assert(offsetof(PlaylogHelper_CRM_PutFriendMatch, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutFriendMatch::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutFriendMatch, ReturnValue) == 0x000050, "Member 'PlaylogHelper_CRM_PutFriendMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutGadgetPossession
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutGadgetPossession final
{
public:
	struct FCRM_GadgetPossession                  Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutGadgetPossession) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutGadgetPossession");
static_assert(sizeof(PlaylogHelper_CRM_PutGadgetPossession) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutGadgetPossession");
static_assert(offsetof(PlaylogHelper_CRM_PutGadgetPossession, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutGadgetPossession::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutGadgetPossession, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutGadgetPossession::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutGadgetUsage
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutGadgetUsage final
{
public:
	struct FCRM_GadgetUsage                       Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutGadgetUsage) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutGadgetUsage");
static_assert(sizeof(PlaylogHelper_CRM_PutGadgetUsage) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutGadgetUsage");
static_assert(offsetof(PlaylogHelper_CRM_PutGadgetUsage, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutGadgetUsage::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutGadgetUsage, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutGadgetUsage::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutGameLogin
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutGameLogin final
{
public:
	struct FCRM_GameLogin                         Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutGameLogin) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutGameLogin");
static_assert(sizeof(PlaylogHelper_CRM_PutGameLogin) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutGameLogin");
static_assert(offsetof(PlaylogHelper_CRM_PutGameLogin, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutGameLogin::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutGameLogin, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutGameLogin::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutGhost
// 0x0038 (0x0038 - 0x0000)
struct PlaylogHelper_CRM_PutGhost final
{
public:
	struct FCRM_Ghost                             Data;                                              // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutGhost) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutGhost");
static_assert(sizeof(PlaylogHelper_CRM_PutGhost) == 0x000038, "Wrong size on PlaylogHelper_CRM_PutGhost");
static_assert(offsetof(PlaylogHelper_CRM_PutGhost, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutGhost::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutGhost, ReturnValue) == 0x000030, "Member 'PlaylogHelper_CRM_PutGhost::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutGrandprix
// 0x00D8 (0x00D8 - 0x0000)
struct PlaylogHelper_CRM_PutGrandprix final
{
public:
	struct FCRM_Grandprix                         Data;                                              // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutGrandprix) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutGrandprix");
static_assert(sizeof(PlaylogHelper_CRM_PutGrandprix) == 0x0000D8, "Wrong size on PlaylogHelper_CRM_PutGrandprix");
static_assert(offsetof(PlaylogHelper_CRM_PutGrandprix, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutGrandprix::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutGrandprix, ReturnValue) == 0x0000D0, "Member 'PlaylogHelper_CRM_PutGrandprix::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutLobbyBasic
// 0x0038 (0x0038 - 0x0000)
struct PlaylogHelper_CRM_PutLobbyBasic final
{
public:
	struct FCRM_LobbyBasic                        Data;                                              // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutLobbyBasic) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutLobbyBasic");
static_assert(sizeof(PlaylogHelper_CRM_PutLobbyBasic) == 0x000038, "Wrong size on PlaylogHelper_CRM_PutLobbyBasic");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyBasic, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutLobbyBasic::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyBasic, ReturnValue) == 0x000030, "Member 'PlaylogHelper_CRM_PutLobbyBasic::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutLobbyInvite
// 0x0058 (0x0058 - 0x0000)
struct PlaylogHelper_CRM_PutLobbyInvite final
{
public:
	struct FCRM_LobbyInvite                       Data;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutLobbyInvite) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutLobbyInvite");
static_assert(sizeof(PlaylogHelper_CRM_PutLobbyInvite) == 0x000058, "Wrong size on PlaylogHelper_CRM_PutLobbyInvite");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyInvite, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutLobbyInvite::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyInvite, ReturnValue) == 0x000050, "Member 'PlaylogHelper_CRM_PutLobbyInvite::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutLobbyStage
// 0x0038 (0x0038 - 0x0000)
struct PlaylogHelper_CRM_PutLobbyStage final
{
public:
	struct FCRM_LobbyStage                        Data;                                              // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutLobbyStage) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutLobbyStage");
static_assert(sizeof(PlaylogHelper_CRM_PutLobbyStage) == 0x000038, "Wrong size on PlaylogHelper_CRM_PutLobbyStage");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyStage, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutLobbyStage::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyStage, ReturnValue) == 0x000030, "Member 'PlaylogHelper_CRM_PutLobbyStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutLobbyStamp
// 0x0048 (0x0048 - 0x0000)
struct PlaylogHelper_CRM_PutLobbyStamp final
{
public:
	struct FCRM_LobbyStamp                        Data;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutLobbyStamp) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutLobbyStamp");
static_assert(sizeof(PlaylogHelper_CRM_PutLobbyStamp) == 0x000048, "Wrong size on PlaylogHelper_CRM_PutLobbyStamp");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyStamp, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutLobbyStamp::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutLobbyStamp, ReturnValue) == 0x000040, "Member 'PlaylogHelper_CRM_PutLobbyStamp::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutMatchingRaceStart
// 0x0048 (0x0048 - 0x0000)
struct PlaylogHelper_CRM_PutMatchingRaceStart final
{
public:
	struct FCRM_MatchingRaceStart                 Data;                                              // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutMatchingRaceStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutMatchingRaceStart");
static_assert(sizeof(PlaylogHelper_CRM_PutMatchingRaceStart) == 0x000048, "Wrong size on PlaylogHelper_CRM_PutMatchingRaceStart");
static_assert(offsetof(PlaylogHelper_CRM_PutMatchingRaceStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutMatchingRaceStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutMatchingRaceStart, ReturnValue) == 0x000040, "Member 'PlaylogHelper_CRM_PutMatchingRaceStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutMatchingRegistration
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutMatchingRegistration final
{
public:
	struct FCRM_MatchingRegistration              Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutMatchingRegistration) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutMatchingRegistration");
static_assert(sizeof(PlaylogHelper_CRM_PutMatchingRegistration) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutMatchingRegistration");
static_assert(offsetof(PlaylogHelper_CRM_PutMatchingRegistration, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutMatchingRegistration::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutMatchingRegistration, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutMatchingRegistration::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutMatchingResult
// 0x0098 (0x0098 - 0x0000)
struct PlaylogHelper_CRM_PutMatchingResult final
{
public:
	struct FCRM_MatchingResult                    Data;                                              // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutMatchingResult) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutMatchingResult");
static_assert(sizeof(PlaylogHelper_CRM_PutMatchingResult) == 0x000098, "Wrong size on PlaylogHelper_CRM_PutMatchingResult");
static_assert(offsetof(PlaylogHelper_CRM_PutMatchingResult, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutMatchingResult::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutMatchingResult, ReturnValue) == 0x000090, "Member 'PlaylogHelper_CRM_PutMatchingResult::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutParty
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutParty final
{
public:
	struct FCRM_Party                             Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutParty) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutParty");
static_assert(sizeof(PlaylogHelper_CRM_PutParty) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutParty");
static_assert(offsetof(PlaylogHelper_CRM_PutParty, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutParty::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutParty, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutParty::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutProgressGrandprix
// 0x0068 (0x0068 - 0x0000)
struct PlaylogHelper_CRM_PutProgressGrandprix final
{
public:
	struct FCRM_ProgressGrandprix                 Data;                                              // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutProgressGrandprix) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutProgressGrandprix");
static_assert(sizeof(PlaylogHelper_CRM_PutProgressGrandprix) == 0x000068, "Wrong size on PlaylogHelper_CRM_PutProgressGrandprix");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressGrandprix, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutProgressGrandprix::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressGrandprix, ReturnValue) == 0x000060, "Member 'PlaylogHelper_CRM_PutProgressGrandprix::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutProgressParty
// 0x0068 (0x0068 - 0x0000)
struct PlaylogHelper_CRM_PutProgressParty final
{
public:
	struct FCRM_ProgressParty                     Data;                                              // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutProgressParty) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutProgressParty");
static_assert(sizeof(PlaylogHelper_CRM_PutProgressParty) == 0x000068, "Wrong size on PlaylogHelper_CRM_PutProgressParty");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressParty, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutProgressParty::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressParty, ReturnValue) == 0x000060, "Member 'PlaylogHelper_CRM_PutProgressParty::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutProgressRival
// 0x00B8 (0x00B8 - 0x0000)
struct PlaylogHelper_CRM_PutProgressRival final
{
public:
	struct FCRM_ProgressRival                     Data;                                              // 0x0000(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutProgressRival) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutProgressRival");
static_assert(sizeof(PlaylogHelper_CRM_PutProgressRival) == 0x0000B8, "Wrong size on PlaylogHelper_CRM_PutProgressRival");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressRival, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutProgressRival::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressRival, ReturnValue) == 0x0000B0, "Member 'PlaylogHelper_CRM_PutProgressRival::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutProgressRivalTeam
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutProgressRivalTeam final
{
public:
	struct FCRM_ProgressRivalTeam                 Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutProgressRivalTeam) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutProgressRivalTeam");
static_assert(sizeof(PlaylogHelper_CRM_PutProgressRivalTeam) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutProgressRivalTeam");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressRivalTeam, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutProgressRivalTeam::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutProgressRivalTeam, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutProgressRivalTeam::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRaceLog
// 0x0140 (0x0140 - 0x0000)
struct PlaylogHelper_CRM_PutRaceLog final
{
public:
	struct FCRM_RaceLog                           Data;                                              // 0x0000(0x0138)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0138(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRaceLog) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRaceLog");
static_assert(sizeof(PlaylogHelper_CRM_PutRaceLog) == 0x000140, "Wrong size on PlaylogHelper_CRM_PutRaceLog");
static_assert(offsetof(PlaylogHelper_CRM_PutRaceLog, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRaceLog::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRaceLog, ReturnValue) == 0x000138, "Member 'PlaylogHelper_CRM_PutRaceLog::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjCom
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjCom final
{
public:
	struct FCRM_RadjCom                           Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjCom) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjCom");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjCom) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjCom");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjCom, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjCom::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjCom, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjCom::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAccelOff
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataAccelOff final
{
public:
	struct FCRM_RadjDataAccelOff                  Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataAccelOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataAccelOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataAccelOff) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutRadjDataAccelOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAccelOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataAccelOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAccelOff, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutRadjDataAccelOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAccelOn
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataAccelOn final
{
public:
	struct FCRM_RadjDataAccelOn                   Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataAccelOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataAccelOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataAccelOn) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataAccelOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAccelOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataAccelOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAccelOn, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataAccelOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAirtrickEnd
// 0x0050 (0x0050 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataAirtrickEnd final
{
public:
	struct FCRM_RadjDataAirtrickEnd               Data;                                              // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataAirtrickEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataAirtrickEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataAirtrickEnd) == 0x000050, "Wrong size on PlaylogHelper_CRM_PutRadjDataAirtrickEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAirtrickEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataAirtrickEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAirtrickEnd, ReturnValue) == 0x000048, "Member 'PlaylogHelper_CRM_PutRadjDataAirtrickEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataAirtrickStart
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataAirtrickStart final
{
public:
	struct FCRM_RadjDataAirtrickStart             Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataAirtrickStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataAirtrickStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataAirtrickStart) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutRadjDataAirtrickStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAirtrickStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataAirtrickStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataAirtrickStart, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutRadjDataAirtrickStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBackEnd
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBackEnd final
{
public:
	struct FCRM_RadjDataBackEnd                   Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBackEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBackEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBackEnd) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataBackEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBackEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBackEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBackEnd, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataBackEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBackStart
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBackStart final
{
public:
	struct FCRM_RadjDataBackStart                 Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBackStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBackStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBackStart) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataBackStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBackStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBackStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBackStart, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataBackStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitAssistWall
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall final
{
public:
	struct FCRM_RadjDataBodyHitAssistWall         Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitAssistWall::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitIrregular
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBodyHitIrregular final
{
public:
	struct FCRM_RadjDataBodyHitIrregular          Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBodyHitIrregular) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBodyHitIrregular");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBodyHitIrregular) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataBodyHitIrregular");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitIrregular, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitIrregular::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitIrregular, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitIrregular::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitMachine
// 0x0050 (0x0050 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBodyHitMachine final
{
public:
	struct FCRM_RadjDataBodyHitMachine            Data;                                              // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBodyHitMachine) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBodyHitMachine");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBodyHitMachine) == 0x000050, "Wrong size on PlaylogHelper_CRM_PutRadjDataBodyHitMachine");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitMachine, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitMachine::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitMachine, ReturnValue) == 0x000048, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitMachine::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitObject
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBodyHitObject final
{
public:
	struct FCRM_RadjDataBodyHitObject             Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBodyHitObject) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBodyHitObject");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBodyHitObject) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataBodyHitObject");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitObject, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitObject::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitObject, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitObject::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBodyHitWall
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBodyHitWall final
{
public:
	struct FCRM_RadjDataBodyHitWall               Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBodyHitWall) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBodyHitWall");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBodyHitWall) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataBodyHitWall");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitWall, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitWall::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBodyHitWall, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataBodyHitWall::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostAbsorbEnd
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd final
{
public:
	struct FCRM_RadjDataBoostAbsorbEnd            Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataBoostAbsorbEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostAbsorbEntry
// 0x0060 (0x0060 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry final
{
public:
	struct FCRM_RadjDataBoostAbsorbEntry          Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry) == 0x000060, "Wrong size on PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry, ReturnValue) == 0x000058, "Member 'PlaylogHelper_CRM_PutRadjDataBoostAbsorbEntry::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostRingMinus
// 0x0050 (0x0050 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBoostRingMinus final
{
public:
	struct FCRM_RadjDataBoostRingMinus            Data;                                              // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBoostRingMinus) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBoostRingMinus");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBoostRingMinus) == 0x000050, "Wrong size on PlaylogHelper_CRM_PutRadjDataBoostRingMinus");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostRingMinus, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBoostRingMinus::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostRingMinus, ReturnValue) == 0x000048, "Member 'PlaylogHelper_CRM_PutRadjDataBoostRingMinus::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostRingPlus
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBoostRingPlus final
{
public:
	struct FCRM_RadjDataBoostRingPlus             Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBoostRingPlus) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBoostRingPlus");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBoostRingPlus) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataBoostRingPlus");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostRingPlus, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBoostRingPlus::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostRingPlus, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataBoostRingPlus::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostSlipstreamEnd
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd final
{
public:
	struct FCRM_RadjDataBoostSlipstreamEnd        Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataBoostSlipstreamEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBoostSlipstreamStart
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart final
{
public:
	struct FCRM_RadjDataBoostSlipstreamStart      Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataBoostSlipstreamStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBrakeOff
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBrakeOff final
{
public:
	struct FCRM_RadjDataBrakeOff                  Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBrakeOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBrakeOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBrakeOff) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataBrakeOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBrakeOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBrakeOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBrakeOff, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataBrakeOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataBrakeOn
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataBrakeOn final
{
public:
	struct FCRM_RadjDataBrakeOn                   Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataBrakeOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataBrakeOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataBrakeOn) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutRadjDataBrakeOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBrakeOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataBrakeOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataBrakeOn, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutRadjDataBrakeOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataCheckPoint
// 0x00C0 (0x00C0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataCheckPoint final
{
public:
	struct FCRM_RadjDataCheckPoint                Data;                                              // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataCheckPoint) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataCheckPoint");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataCheckPoint) == 0x0000C0, "Wrong size on PlaylogHelper_CRM_PutRadjDataCheckPoint");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataCheckPoint, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataCheckPoint::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataCheckPoint, ReturnValue) == 0x0000B8, "Member 'PlaylogHelper_CRM_PutRadjDataCheckPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataDriftOff
// 0x0050 (0x0050 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataDriftOff final
{
public:
	struct FCRM_RadjDataDriftOff                  Data;                                              // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataDriftOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataDriftOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataDriftOff) == 0x000050, "Wrong size on PlaylogHelper_CRM_PutRadjDataDriftOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataDriftOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataDriftOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataDriftOff, ReturnValue) == 0x000048, "Member 'PlaylogHelper_CRM_PutRadjDataDriftOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataDriftOn
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataDriftOn final
{
public:
	struct FCRM_RadjDataDriftOn                   Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataDriftOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataDriftOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataDriftOn) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataDriftOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataDriftOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataDriftOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataDriftOn, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataDriftOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataEventsOnline
// 0x0060 (0x0060 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataEventsOnline final
{
public:
	struct FCRM_RadjDataEventsOnline              Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataEventsOnline) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataEventsOnline");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataEventsOnline) == 0x000060, "Wrong size on PlaylogHelper_CRM_PutRadjDataEventsOnline");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataEventsOnline, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataEventsOnline::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataEventsOnline, ReturnValue) == 0x000058, "Member 'PlaylogHelper_CRM_PutRadjDataEventsOnline::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataFinish
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataFinish final
{
public:
	struct FCRM_RadjDataFinish                    Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataFinish) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataFinish");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataFinish) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataFinish");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataFinish, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataFinish::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataFinish, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataFinish::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataFrameRateBoostingEnd
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd final
{
public:
	struct FCRM_RadjDataFrameRateBoostingEnd      Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataFrameRateBoostingEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataFrameRateBoostingStart
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart final
{
public:
	struct FCRM_RadjDataFrameRateBoostingStart    Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataFrameRateBoostingStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGameHighLoadingEnd
// 0x0060 (0x0060 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd final
{
public:
	struct FCRM_RadjDataGameHighLoadingEnd        Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd) == 0x000060, "Wrong size on PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd, ReturnValue) == 0x000058, "Member 'PlaylogHelper_CRM_PutRadjDataGameHighLoadingEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGameHighLoadingStart
// 0x0060 (0x0060 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart final
{
public:
	struct FCRM_RadjDataGameHighLoadingStart      Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart) == 0x000060, "Wrong size on PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart, ReturnValue) == 0x000058, "Member 'PlaylogHelper_CRM_PutRadjDataGameHighLoadingStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGuideJumpEnd
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataGuideJumpEnd final
{
public:
	struct FCRM_RadjDataGuideJumpEnd              Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataGuideJumpEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataGuideJumpEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataGuideJumpEnd) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataGuideJumpEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGuideJumpEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataGuideJumpEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGuideJumpEnd, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataGuideJumpEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataGuideJumpStart
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataGuideJumpStart final
{
public:
	struct FCRM_RadjDataGuideJumpStart            Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataGuideJumpStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataGuideJumpStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataGuideJumpStart) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataGuideJumpStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGuideJumpStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataGuideJumpStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataGuideJumpStart, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataGuideJumpStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemEnd
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataItemEnd final
{
public:
	struct FCRM_RadjDataItemEnd                   Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataItemEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataItemEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataItemEnd) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataItemEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataItemEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemEnd, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataItemEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemGet
// 0x00E0 (0x00E0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataItemGet final
{
public:
	struct FCRM_RadjDataItemGet                   Data;                                              // 0x0000(0x00D8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataItemGet) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataItemGet");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataItemGet) == 0x0000E0, "Wrong size on PlaylogHelper_CRM_PutRadjDataItemGet");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemGet, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataItemGet::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemGet, ReturnValue) == 0x0000D8, "Member 'PlaylogHelper_CRM_PutRadjDataItemGet::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemHitMachine
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataItemHitMachine final
{
public:
	struct FCRM_RadjDataItemHitMachine            Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataItemHitMachine) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataItemHitMachine");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataItemHitMachine) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataItemHitMachine");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemHitMachine, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataItemHitMachine::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemHitMachine, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataItemHitMachine::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataItemStart
// 0x00B0 (0x00B0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataItemStart final
{
public:
	struct FCRM_RadjDataItemStart                 Data;                                              // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataItemStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataItemStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataItemStart) == 0x0000B0, "Wrong size on PlaylogHelper_CRM_PutRadjDataItemStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataItemStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataItemStart, ReturnValue) == 0x0000A8, "Member 'PlaylogHelper_CRM_PutRadjDataItemStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataJumpEnd
// 0x0050 (0x0050 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataJumpEnd final
{
public:
	struct FCRM_RadjDataJumpEnd                   Data;                                              // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataJumpEnd) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataJumpEnd");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataJumpEnd) == 0x000050, "Wrong size on PlaylogHelper_CRM_PutRadjDataJumpEnd");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataJumpEnd, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataJumpEnd::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataJumpEnd, ReturnValue) == 0x000048, "Member 'PlaylogHelper_CRM_PutRadjDataJumpEnd::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataJumpStart
// 0x00A0 (0x00A0 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataJumpStart final
{
public:
	struct FCRM_RadjDataJumpStart                 Data;                                              // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataJumpStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataJumpStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataJumpStart) == 0x0000A0, "Wrong size on PlaylogHelper_CRM_PutRadjDataJumpStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataJumpStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataJumpStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataJumpStart, ReturnValue) == 0x000098, "Member 'PlaylogHelper_CRM_PutRadjDataJumpStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataLap
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataLap final
{
public:
	struct FCRM_RadjDataLap                       Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataLap) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataLap");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataLap) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataLap");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataLap, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataLap::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataLap, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataMisalignment
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataMisalignment final
{
public:
	struct FCRM_RadjDataMisalignment              Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataMisalignment) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataMisalignment");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataMisalignment) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataMisalignment");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataMisalignment, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataMisalignment::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataMisalignment, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataMisalignment::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataOvertake
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataOvertake final
{
public:
	struct FCRM_RadjDataOvertake                  Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataOvertake) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataOvertake");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataOvertake) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataOvertake");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataOvertake, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataOvertake::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataOvertake, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataOvertake::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataOvertaken
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataOvertaken final
{
public:
	struct FCRM_RadjDataOvertaken                 Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataOvertaken) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataOvertaken");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataOvertaken) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataOvertaken");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataOvertaken, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataOvertaken::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataOvertaken, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataOvertaken::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataPositionsOnline
// 0x0100 (0x0100 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataPositionsOnline final
{
public:
	struct FCRM_RadjDataPositionsOnline           Data;                                              // 0x0000(0x00F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataPositionsOnline) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataPositionsOnline");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataPositionsOnline) == 0x000100, "Wrong size on PlaylogHelper_CRM_PutRadjDataPositionsOnline");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataPositionsOnline, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataPositionsOnline::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataPositionsOnline, ReturnValue) == 0x0000F8, "Member 'PlaylogHelper_CRM_PutRadjDataPositionsOnline::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRankdown
// 0x0060 (0x0060 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataRankdown final
{
public:
	struct FCRM_RadjDataRankdown                  Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataRankdown) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataRankdown");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataRankdown) == 0x000060, "Wrong size on PlaylogHelper_CRM_PutRadjDataRankdown");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRankdown, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataRankdown::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRankdown, ReturnValue) == 0x000058, "Member 'PlaylogHelper_CRM_PutRadjDataRankdown::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRankup
// 0x0060 (0x0060 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataRankup final
{
public:
	struct FCRM_RadjDataRankup                    Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataRankup) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataRankup");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataRankup) == 0x000060, "Wrong size on PlaylogHelper_CRM_PutRadjDataRankup");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRankup, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataRankup::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRankup, ReturnValue) == 0x000058, "Member 'PlaylogHelper_CRM_PutRadjDataRankup::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRearViewOff
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataRearViewOff final
{
public:
	struct FCRM_RadjDataRearViewOff               Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataRearViewOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataRearViewOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataRearViewOff) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataRearViewOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRearViewOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataRearViewOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRearViewOff, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataRearViewOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRearViewOn
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataRearViewOn final
{
public:
	struct FCRM_RadjDataRearViewOn                Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataRearViewOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataRearViewOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataRearViewOn) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataRearViewOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRearViewOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataRearViewOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRearViewOn, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataRearViewOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRedStarRing
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataRedStarRing final
{
public:
	struct FCRM_RadjDataRedStarRing               Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataRedStarRing) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataRedStarRing");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataRedStarRing) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataRedStarRing");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRedStarRing, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataRedStarRing::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRedStarRing, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataRedStarRing::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataRespot
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataRespot final
{
public:
	struct FCRM_RadjDataRespot                    Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataRespot) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataRespot");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataRespot) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataRespot");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRespot, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataRespot::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataRespot, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataRespot::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataShortCutRing
// 0x0080 (0x0080 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataShortCutRing final
{
public:
	struct FCRM_RadjDataShortCutRing              Data;                                              // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataShortCutRing) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataShortCutRing");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataShortCutRing) == 0x000080, "Wrong size on PlaylogHelper_CRM_PutRadjDataShortCutRing");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataShortCutRing, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataShortCutRing::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataShortCutRing, ReturnValue) == 0x000078, "Member 'PlaylogHelper_CRM_PutRadjDataShortCutRing::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataShortWarp
// 0x0090 (0x0090 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataShortWarp final
{
public:
	struct FCRM_RadjDataShortWarp                 Data;                                              // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataShortWarp) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataShortWarp");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataShortWarp) == 0x000090, "Wrong size on PlaylogHelper_CRM_PutRadjDataShortWarp");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataShortWarp, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataShortWarp::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataShortWarp, ReturnValue) == 0x000088, "Member 'PlaylogHelper_CRM_PutRadjDataShortWarp::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataStart
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataStart final
{
public:
	struct FCRM_RadjDataStart                     Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataStart) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataStart");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataStart) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataStart");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataStart, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataStart::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataStart, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataStart::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataStartDash
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataStartDash final
{
public:
	struct FCRM_RadjDataStartDash                 Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataStartDash) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataStartDash");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataStartDash) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutRadjDataStartDash");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataStartDash, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataStartDash::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataStartDash, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutRadjDataStartDash::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerDownOff
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerDownOff final
{
public:
	struct FCRM_RadjDataSteerDownOff              Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerDownOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerDownOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerDownOff) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerDownOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerDownOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerDownOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerDownOff, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerDownOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerDownOn
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerDownOn final
{
public:
	struct FCRM_RadjDataSteerDownOn               Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerDownOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerDownOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerDownOn) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerDownOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerDownOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerDownOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerDownOn, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerDownOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerLeftOff
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerLeftOff final
{
public:
	struct FCRM_RadjDataSteerLeftOff              Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerLeftOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerLeftOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerLeftOff) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerLeftOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerLeftOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerLeftOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerLeftOff, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerLeftOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerLeftOn
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerLeftOn final
{
public:
	struct FCRM_RadjDataSteerLeftOn               Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerLeftOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerLeftOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerLeftOn) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerLeftOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerLeftOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerLeftOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerLeftOn, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerLeftOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerRightOff
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerRightOff final
{
public:
	struct FCRM_RadjDataSteerRightOff             Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerRightOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerRightOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerRightOff) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerRightOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerRightOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerRightOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerRightOff, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerRightOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerRightOn
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerRightOn final
{
public:
	struct FCRM_RadjDataSteerRightOn              Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerRightOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerRightOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerRightOn) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerRightOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerRightOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerRightOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerRightOn, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerRightOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerUpOff
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerUpOff final
{
public:
	struct FCRM_RadjDataSteerUpOff                Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerUpOff) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerUpOff");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerUpOff) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerUpOff");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerUpOff, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerUpOff::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerUpOff, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerUpOff::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataSteerUpOn
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataSteerUpOn final
{
public:
	struct FCRM_RadjDataSteerUpOn                 Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataSteerUpOn) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataSteerUpOn");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataSteerUpOn) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataSteerUpOn");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerUpOn, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataSteerUpOn::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataSteerUpOn, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataSteerUpOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataWiden
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataWiden final
{
public:
	struct FCRM_RadjDataWiden                     Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataWiden) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataWiden");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataWiden) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataWiden");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataWiden, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataWiden::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataWiden, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataWiden::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjDataWidened
// 0x0040 (0x0040 - 0x0000)
struct PlaylogHelper_CRM_PutRadjDataWidened final
{
public:
	struct FCRM_RadjDataWidened                   Data;                                              // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjDataWidened) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjDataWidened");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjDataWidened) == 0x000040, "Wrong size on PlaylogHelper_CRM_PutRadjDataWidened");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataWidened, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjDataWidened::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjDataWidened, ReturnValue) == 0x000038, "Member 'PlaylogHelper_CRM_PutRadjDataWidened::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjLocalPlayer
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutRadjLocalPlayer final
{
public:
	struct FCRM_RadjLocalPlayer                   Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjLocalPlayer) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjLocalPlayer");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjLocalPlayer) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutRadjLocalPlayer");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjLocalPlayer, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjLocalPlayer::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjLocalPlayer, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutRadjLocalPlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjMachine
// 0x0148 (0x0148 - 0x0000)
struct PlaylogHelper_CRM_PutRadjMachine final
{
public:
	struct FCRM_RadjMachine                       Data;                                              // 0x0000(0x0140)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0140(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjMachine) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjMachine");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjMachine) == 0x000148, "Wrong size on PlaylogHelper_CRM_PutRadjMachine");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjMachine, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjMachine::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjMachine, ReturnValue) == 0x000140, "Member 'PlaylogHelper_CRM_PutRadjMachine::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjOnlinePlayer
// 0x0070 (0x0070 - 0x0000)
struct PlaylogHelper_CRM_PutRadjOnlinePlayer final
{
public:
	struct FCRM_RadjOnlinePlayer                  Data;                                              // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjOnlinePlayer) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjOnlinePlayer");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjOnlinePlayer) == 0x000070, "Wrong size on PlaylogHelper_CRM_PutRadjOnlinePlayer");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjOnlinePlayer, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjOnlinePlayer::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjOnlinePlayer, ReturnValue) == 0x000068, "Member 'PlaylogHelper_CRM_PutRadjOnlinePlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutRadjRaceSetting
// 0x00A8 (0x00A8 - 0x0000)
struct PlaylogHelper_CRM_PutRadjRaceSetting final
{
public:
	struct FCRM_RadjRaceSetting                   Data;                                              // 0x0000(0x00A0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutRadjRaceSetting) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutRadjRaceSetting");
static_assert(sizeof(PlaylogHelper_CRM_PutRadjRaceSetting) == 0x0000A8, "Wrong size on PlaylogHelper_CRM_PutRadjRaceSetting");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjRaceSetting, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutRadjRaceSetting::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutRadjRaceSetting, ReturnValue) == 0x0000A0, "Member 'PlaylogHelper_CRM_PutRadjRaceSetting::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutSequence
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutSequence final
{
public:
	struct FCRM_Sequence                          Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutSequence) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutSequence");
static_assert(sizeof(PlaylogHelper_CRM_PutSequence) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutSequence");
static_assert(offsetof(PlaylogHelper_CRM_PutSequence, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutSequence::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutSequence, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutSequence::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutSubMode
// 0x0028 (0x0028 - 0x0000)
struct PlaylogHelper_CRM_PutSubMode final
{
public:
	struct FCRM_SubMode                           Data;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutSubMode) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutSubMode");
static_assert(sizeof(PlaylogHelper_CRM_PutSubMode) == 0x000028, "Wrong size on PlaylogHelper_CRM_PutSubMode");
static_assert(offsetof(PlaylogHelper_CRM_PutSubMode, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutSubMode::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutSubMode, ReturnValue) == 0x000020, "Member 'PlaylogHelper_CRM_PutSubMode::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutTimeTrial
// 0x00B0 (0x00B0 - 0x0000)
struct PlaylogHelper_CRM_PutTimeTrial final
{
public:
	struct FCRM_TimeTrial                         Data;                                              // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutTimeTrial) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutTimeTrial");
static_assert(sizeof(PlaylogHelper_CRM_PutTimeTrial) == 0x0000B0, "Wrong size on PlaylogHelper_CRM_PutTimeTrial");
static_assert(offsetof(PlaylogHelper_CRM_PutTimeTrial, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutTimeTrial::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutTimeTrial, ReturnValue) == 0x0000A8, "Member 'PlaylogHelper_CRM_PutTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_PutWorldMatch
// 0x0030 (0x0030 - 0x0000)
struct PlaylogHelper_CRM_PutWorldMatch final
{
public:
	struct FCRM_WorldMatch                        Data;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_PutWorldMatch) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_PutWorldMatch");
static_assert(sizeof(PlaylogHelper_CRM_PutWorldMatch) == 0x000030, "Wrong size on PlaylogHelper_CRM_PutWorldMatch");
static_assert(offsetof(PlaylogHelper_CRM_PutWorldMatch, Data) == 0x000000, "Member 'PlaylogHelper_CRM_PutWorldMatch::Data' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_PutWorldMatch, ReturnValue) == 0x000028, "Member 'PlaylogHelper_CRM_PutWorldMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetInactive
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_SetInactive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_SetInactive) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_SetInactive");
static_assert(sizeof(PlaylogHelper_CRM_SetInactive) == 0x000001, "Wrong size on PlaylogHelper_CRM_SetInactive");
static_assert(offsetof(PlaylogHelper_CRM_SetInactive, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_SetInactive::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetMessageSendingSuppress
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_SetMessageSendingSuppress final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_SetMessageSendingSuppress) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_SetMessageSendingSuppress");
static_assert(sizeof(PlaylogHelper_CRM_SetMessageSendingSuppress) == 0x000001, "Wrong size on PlaylogHelper_CRM_SetMessageSendingSuppress");
static_assert(offsetof(PlaylogHelper_CRM_SetMessageSendingSuppress, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_SetMessageSendingSuppress::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetOutfocus
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_SetOutfocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_SetOutfocus) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_SetOutfocus");
static_assert(sizeof(PlaylogHelper_CRM_SetOutfocus) == 0x000001, "Wrong size on PlaylogHelper_CRM_SetOutfocus");
static_assert(offsetof(PlaylogHelper_CRM_SetOutfocus, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_SetOutfocus::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetPushMessageCallback
// 0x0014 (0x0014 - 0x0000)
struct PlaylogHelper_CRM_SetPushMessageCallback final
{
public:
	TDelegate<void(const class FString& Message)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlaylogHelper_CRM_SetPushMessageCallback) == 0x000004, "Wrong alignment on PlaylogHelper_CRM_SetPushMessageCallback");
static_assert(sizeof(PlaylogHelper_CRM_SetPushMessageCallback) == 0x000014, "Wrong size on PlaylogHelper_CRM_SetPushMessageCallback");
static_assert(offsetof(PlaylogHelper_CRM_SetPushMessageCallback, Callback) == 0x000000, "Member 'PlaylogHelper_CRM_SetPushMessageCallback::Callback' has a wrong offset!");
static_assert(offsetof(PlaylogHelper_CRM_SetPushMessageCallback, ReturnValue) == 0x000010, "Member 'PlaylogHelper_CRM_SetPushMessageCallback::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetRestrictionInteger
// 0x0004 (0x0004 - 0x0000)
struct PlaylogHelper_CRM_SetRestrictionInteger final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_SetRestrictionInteger) == 0x000004, "Wrong alignment on PlaylogHelper_CRM_SetRestrictionInteger");
static_assert(sizeof(PlaylogHelper_CRM_SetRestrictionInteger) == 0x000004, "Wrong size on PlaylogHelper_CRM_SetRestrictionInteger");
static_assert(offsetof(PlaylogHelper_CRM_SetRestrictionInteger, Value) == 0x000000, "Member 'PlaylogHelper_CRM_SetRestrictionInteger::Value' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetRestrictionString
// 0x0010 (0x0010 - 0x0000)
struct PlaylogHelper_CRM_SetRestrictionString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_SetRestrictionString) == 0x000008, "Wrong alignment on PlaylogHelper_CRM_SetRestrictionString");
static_assert(sizeof(PlaylogHelper_CRM_SetRestrictionString) == 0x000010, "Wrong size on PlaylogHelper_CRM_SetRestrictionString");
static_assert(offsetof(PlaylogHelper_CRM_SetRestrictionString, Value) == 0x000000, "Member 'PlaylogHelper_CRM_SetRestrictionString::Value' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_SetSuspended
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_SetSuspended final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_SetSuspended) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_SetSuspended");
static_assert(sizeof(PlaylogHelper_CRM_SetSuspended) == 0x000001, "Wrong size on PlaylogHelper_CRM_SetSuspended");
static_assert(offsetof(PlaylogHelper_CRM_SetSuspended, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_SetSuspended::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_TestInactive
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_TestInactive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_TestInactive) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_TestInactive");
static_assert(sizeof(PlaylogHelper_CRM_TestInactive) == 0x000001, "Wrong size on PlaylogHelper_CRM_TestInactive");
static_assert(offsetof(PlaylogHelper_CRM_TestInactive, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_TestInactive::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_TestMessageSendingSuppress
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_TestMessageSendingSuppress final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_TestMessageSendingSuppress) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_TestMessageSendingSuppress");
static_assert(sizeof(PlaylogHelper_CRM_TestMessageSendingSuppress) == 0x000001, "Wrong size on PlaylogHelper_CRM_TestMessageSendingSuppress");
static_assert(offsetof(PlaylogHelper_CRM_TestMessageSendingSuppress, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_TestMessageSendingSuppress::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_TestOutfocus
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_TestOutfocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_TestOutfocus) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_TestOutfocus");
static_assert(sizeof(PlaylogHelper_CRM_TestOutfocus) == 0x000001, "Wrong size on PlaylogHelper_CRM_TestOutfocus");
static_assert(offsetof(PlaylogHelper_CRM_TestOutfocus, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_TestOutfocus::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_TestSuspended
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_TestSuspended final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_TestSuspended) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_TestSuspended");
static_assert(sizeof(PlaylogHelper_CRM_TestSuspended) == 0x000001, "Wrong size on PlaylogHelper_CRM_TestSuspended");
static_assert(offsetof(PlaylogHelper_CRM_TestSuspended, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_TestSuspended::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_UnsetInactive
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_UnsetInactive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_UnsetInactive) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_UnsetInactive");
static_assert(sizeof(PlaylogHelper_CRM_UnsetInactive) == 0x000001, "Wrong size on PlaylogHelper_CRM_UnsetInactive");
static_assert(offsetof(PlaylogHelper_CRM_UnsetInactive, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_UnsetInactive::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_UnsetMessageSendingSuppress
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_UnsetMessageSendingSuppress final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_UnsetMessageSendingSuppress) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_UnsetMessageSendingSuppress");
static_assert(sizeof(PlaylogHelper_CRM_UnsetMessageSendingSuppress) == 0x000001, "Wrong size on PlaylogHelper_CRM_UnsetMessageSendingSuppress");
static_assert(offsetof(PlaylogHelper_CRM_UnsetMessageSendingSuppress, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_UnsetMessageSendingSuppress::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_UnsetOutfocus
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_UnsetOutfocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_UnsetOutfocus) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_UnsetOutfocus");
static_assert(sizeof(PlaylogHelper_CRM_UnsetOutfocus) == 0x000001, "Wrong size on PlaylogHelper_CRM_UnsetOutfocus");
static_assert(offsetof(PlaylogHelper_CRM_UnsetOutfocus, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_UnsetOutfocus::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogHelper.CRM_UnsetSuspended
// 0x0001 (0x0001 - 0x0000)
struct PlaylogHelper_CRM_UnsetSuspended final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogHelper_CRM_UnsetSuspended) == 0x000001, "Wrong alignment on PlaylogHelper_CRM_UnsetSuspended");
static_assert(sizeof(PlaylogHelper_CRM_UnsetSuspended) == 0x000001, "Wrong size on PlaylogHelper_CRM_UnsetSuspended");
static_assert(offsetof(PlaylogHelper_CRM_UnsetSuspended, ReturnValue) == 0x000000, "Member 'PlaylogHelper_CRM_UnsetSuspended::ReturnValue' has a wrong offset!");

// Function UnionSystem.PlaylogManager.OnId
// 0x0010 (0x0010 - 0x0000)
struct PlaylogManager_OnId final
{
public:
	class FString                                 AccountID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogManager_OnId) == 0x000008, "Wrong alignment on PlaylogManager_OnId");
static_assert(sizeof(PlaylogManager_OnId) == 0x000010, "Wrong size on PlaylogManager_OnId");
static_assert(offsetof(PlaylogManager_OnId, AccountID) == 0x000000, "Member 'PlaylogManager_OnId::AccountID' has a wrong offset!");

// Function UnionSystem.PlaylogManager.OnUrl
// 0x0010 (0x0010 - 0x0000)
struct PlaylogManager_OnUrl final
{
public:
	class FString                                 RegistrationURL;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogManager_OnUrl) == 0x000008, "Wrong alignment on PlaylogManager_OnUrl");
static_assert(sizeof(PlaylogManager_OnUrl) == 0x000010, "Wrong size on PlaylogManager_OnUrl");
static_assert(offsetof(PlaylogManager_OnUrl, RegistrationURL) == 0x000000, "Member 'PlaylogManager_OnUrl::RegistrationURL' has a wrong offset!");

// Function UnionSystem.PlaylogManager.SteamOnSetupComplete
// 0x0001 (0x0001 - 0x0000)
struct PlaylogManager_SteamOnSetupComplete final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlaylogManager_SteamOnSetupComplete) == 0x000001, "Wrong alignment on PlaylogManager_SteamOnSetupComplete");
static_assert(sizeof(PlaylogManager_SteamOnSetupComplete) == 0x000001, "Wrong size on PlaylogManager_SteamOnSetupComplete");
static_assert(offsetof(PlaylogManager_SteamOnSetupComplete, Success) == 0x000000, "Member 'PlaylogManager_SteamOnSetupComplete::Success' has a wrong offset!");

// Function UnionSystem.ProceduralMeshComponentEx.ClearMeshSection
// 0x0004 (0x0004 - 0x0000)
struct ProceduralMeshComponentEx_ClearMeshSection final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ProceduralMeshComponentEx_ClearMeshSection) == 0x000004, "Wrong alignment on ProceduralMeshComponentEx_ClearMeshSection");
static_assert(sizeof(ProceduralMeshComponentEx_ClearMeshSection) == 0x000004, "Wrong size on ProceduralMeshComponentEx_ClearMeshSection");
static_assert(offsetof(ProceduralMeshComponentEx_ClearMeshSection, SectionIndex) == 0x000000, "Member 'ProceduralMeshComponentEx_ClearMeshSection::SectionIndex' has a wrong offset!");

// Function UnionSystem.ProceduralMeshComponentEx.SetMeshSectionVisible
// 0x0008 (0x0008 - 0x0000)
struct ProceduralMeshComponentEx_SetMeshSectionVisible final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewVisibility;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ProceduralMeshComponentEx_SetMeshSectionVisible) == 0x000004, "Wrong alignment on ProceduralMeshComponentEx_SetMeshSectionVisible");
static_assert(sizeof(ProceduralMeshComponentEx_SetMeshSectionVisible) == 0x000008, "Wrong size on ProceduralMeshComponentEx_SetMeshSectionVisible");
static_assert(offsetof(ProceduralMeshComponentEx_SetMeshSectionVisible, SectionIndex) == 0x000000, "Member 'ProceduralMeshComponentEx_SetMeshSectionVisible::SectionIndex' has a wrong offset!");
static_assert(offsetof(ProceduralMeshComponentEx_SetMeshSectionVisible, bNewVisibility) == 0x000004, "Member 'ProceduralMeshComponentEx_SetMeshSectionVisible::bNewVisibility' has a wrong offset!");

// Function UnionSystem.ProceduralMeshComponentEx.GetNumSections
// 0x0004 (0x0004 - 0x0000)
struct ProceduralMeshComponentEx_GetNumSections final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ProceduralMeshComponentEx_GetNumSections) == 0x000004, "Wrong alignment on ProceduralMeshComponentEx_GetNumSections");
static_assert(sizeof(ProceduralMeshComponentEx_GetNumSections) == 0x000004, "Wrong size on ProceduralMeshComponentEx_GetNumSections");
static_assert(offsetof(ProceduralMeshComponentEx_GetNumSections, ReturnValue) == 0x000000, "Member 'ProceduralMeshComponentEx_GetNumSections::ReturnValue' has a wrong offset!");

// Function UnionSystem.ProceduralMeshComponentEx.IsMeshSectionVisible
// 0x0008 (0x0008 - 0x0000)
struct ProceduralMeshComponentEx_IsMeshSectionVisible final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ProceduralMeshComponentEx_IsMeshSectionVisible) == 0x000004, "Wrong alignment on ProceduralMeshComponentEx_IsMeshSectionVisible");
static_assert(sizeof(ProceduralMeshComponentEx_IsMeshSectionVisible) == 0x000008, "Wrong size on ProceduralMeshComponentEx_IsMeshSectionVisible");
static_assert(offsetof(ProceduralMeshComponentEx_IsMeshSectionVisible, SectionIndex) == 0x000000, "Member 'ProceduralMeshComponentEx_IsMeshSectionVisible::SectionIndex' has a wrong offset!");
static_assert(offsetof(ProceduralMeshComponentEx_IsMeshSectionVisible, ReturnValue) == 0x000004, "Member 'ProceduralMeshComponentEx_IsMeshSectionVisible::ReturnValue' has a wrong offset!");

// Function UnionSystem.ProjectDecal.Initialize
// 0x0018 (0x0018 - 0x0000)
struct ProjectDecal_Initialize final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaterialIndex;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UStaticMeshComponent*             Projected;                                         // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ProjectDecal_Initialize) == 0x000008, "Wrong alignment on ProjectDecal_Initialize");
static_assert(sizeof(ProjectDecal_Initialize) == 0x000018, "Wrong size on ProjectDecal_Initialize");
static_assert(offsetof(ProjectDecal_Initialize, Width) == 0x000000, "Member 'ProjectDecal_Initialize::Width' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Initialize, Height) == 0x000004, "Member 'ProjectDecal_Initialize::Height' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Initialize, MaterialIndex) == 0x000008, "Member 'ProjectDecal_Initialize::MaterialIndex' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Initialize, Projected) == 0x000010, "Member 'ProjectDecal_Initialize::Projected' has a wrong offset!");

// Function UnionSystem.ProjectDecal.Project
// 0x0038 (0x0038 - 0x0000)
struct ProjectDecal_Project final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaterialIndex;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UStaticMeshComponent*             Projected;                                         // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStaticMeshComponent*             Projector;                                         // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UTexture2D*                       Texture;                                           // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ProjectDecal_Project) == 0x000008, "Wrong alignment on ProjectDecal_Project");
static_assert(sizeof(ProjectDecal_Project) == 0x000038, "Wrong size on ProjectDecal_Project");
static_assert(offsetof(ProjectDecal_Project, Width) == 0x000000, "Member 'ProjectDecal_Project::Width' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, Height) == 0x000004, "Member 'ProjectDecal_Project::Height' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, MaterialIndex) == 0x000008, "Member 'ProjectDecal_Project::MaterialIndex' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, Projected) == 0x000010, "Member 'ProjectDecal_Project::Projected' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, Projector) == 0x000018, "Member 'ProjectDecal_Project::Projector' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, Texture) == 0x000020, "Member 'ProjectDecal_Project::Texture' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, Overwrite) == 0x000028, "Member 'ProjectDecal_Project::Overwrite' has a wrong offset!");
static_assert(offsetof(ProjectDecal_Project, ReturnValue) == 0x000030, "Member 'ProjectDecal_Project::ReturnValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnAccelInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnAccelInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnAccelInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnAccelInput");
static_assert(sizeof(RaceInputRecieveInterface_OnAccelInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnAccelInput");
static_assert(offsetof(RaceInputRecieveInterface_OnAccelInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnAccelInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnBrakeInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnBrakeInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnBrakeInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnBrakeInput");
static_assert(sizeof(RaceInputRecieveInterface_OnBrakeInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnBrakeInput");
static_assert(offsetof(RaceInputRecieveInterface_OnBrakeInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnBrakeInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnPitchInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnPitchInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnPitchInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnPitchInput");
static_assert(sizeof(RaceInputRecieveInterface_OnPitchInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnPitchInput");
static_assert(offsetof(RaceInputRecieveInterface_OnPitchInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnPitchInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnSlimeCancelXInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnSlimeCancelXInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnSlimeCancelXInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnSlimeCancelXInput");
static_assert(sizeof(RaceInputRecieveInterface_OnSlimeCancelXInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnSlimeCancelXInput");
static_assert(offsetof(RaceInputRecieveInterface_OnSlimeCancelXInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnSlimeCancelXInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnSlimeCancelYInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnSlimeCancelYInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnSlimeCancelYInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnSlimeCancelYInput");
static_assert(sizeof(RaceInputRecieveInterface_OnSlimeCancelYInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnSlimeCancelYInput");
static_assert(offsetof(RaceInputRecieveInterface_OnSlimeCancelYInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnSlimeCancelYInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnSteerInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnSteerInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnSteerInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnSteerInput");
static_assert(sizeof(RaceInputRecieveInterface_OnSteerInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnSteerInput");
static_assert(offsetof(RaceInputRecieveInterface_OnSteerInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnSteerInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnTrickX2Input
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnTrickX2Input final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnTrickX2Input) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnTrickX2Input");
static_assert(sizeof(RaceInputRecieveInterface_OnTrickX2Input) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnTrickX2Input");
static_assert(offsetof(RaceInputRecieveInterface_OnTrickX2Input, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnTrickX2Input::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnTrickXInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnTrickXInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnTrickXInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnTrickXInput");
static_assert(sizeof(RaceInputRecieveInterface_OnTrickXInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnTrickXInput");
static_assert(offsetof(RaceInputRecieveInterface_OnTrickXInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnTrickXInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnTrickY2Input
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnTrickY2Input final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnTrickY2Input) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnTrickY2Input");
static_assert(sizeof(RaceInputRecieveInterface_OnTrickY2Input) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnTrickY2Input");
static_assert(offsetof(RaceInputRecieveInterface_OnTrickY2Input, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnTrickY2Input::InValue' has a wrong offset!");

// Function UnionSystem.RaceInputRecieveInterface.OnTrickYInput
// 0x0004 (0x0004 - 0x0000)
struct RaceInputRecieveInterface_OnTrickYInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceInputRecieveInterface_OnTrickYInput) == 0x000004, "Wrong alignment on RaceInputRecieveInterface_OnTrickYInput");
static_assert(sizeof(RaceInputRecieveInterface_OnTrickYInput) == 0x000004, "Wrong size on RaceInputRecieveInterface_OnTrickYInput");
static_assert(offsetof(RaceInputRecieveInterface_OnTrickYInput, InValue) == 0x000000, "Member 'RaceInputRecieveInterface_OnTrickYInput::InValue' has a wrong offset!");

// Function UnionSystem.RaceMasterDataAccessor.GetRunData
// 0x0010 (0x0010 - 0x0000)
struct RaceMasterDataAccessor_GetRunData final
{
public:
	ERaceRunDataType                              Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RaceMasterDataAccessor_GetRunData) == 0x000008, "Wrong alignment on RaceMasterDataAccessor_GetRunData");
static_assert(sizeof(RaceMasterDataAccessor_GetRunData) == 0x000010, "Wrong size on RaceMasterDataAccessor_GetRunData");
static_assert(offsetof(RaceMasterDataAccessor_GetRunData, Type) == 0x000000, "Member 'RaceMasterDataAccessor_GetRunData::Type' has a wrong offset!");
static_assert(offsetof(RaceMasterDataAccessor_GetRunData, ReturnValue) == 0x000008, "Member 'RaceMasterDataAccessor_GetRunData::ReturnValue' has a wrong offset!");

// Function UnionSystem.RacePlayerController.DoInputRacePressed
// 0x0008 (0x0008 - 0x0000)
struct RacePlayerController_DoInputRacePressed final
{
public:
	ERaceInputKey                                 InKey;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Amount;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RacePlayerController_DoInputRacePressed) == 0x000004, "Wrong alignment on RacePlayerController_DoInputRacePressed");
static_assert(sizeof(RacePlayerController_DoInputRacePressed) == 0x000008, "Wrong size on RacePlayerController_DoInputRacePressed");
static_assert(offsetof(RacePlayerController_DoInputRacePressed, InKey) == 0x000000, "Member 'RacePlayerController_DoInputRacePressed::InKey' has a wrong offset!");
static_assert(offsetof(RacePlayerController_DoInputRacePressed, Amount) == 0x000004, "Member 'RacePlayerController_DoInputRacePressed::Amount' has a wrong offset!");

// Function UnionSystem.RacePlayerController.DoInputRaceReleased
// 0x0001 (0x0001 - 0x0000)
struct RacePlayerController_DoInputRaceReleased final
{
public:
	ERaceInputKey                                 InKey;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RacePlayerController_DoInputRaceReleased) == 0x000001, "Wrong alignment on RacePlayerController_DoInputRaceReleased");
static_assert(sizeof(RacePlayerController_DoInputRaceReleased) == 0x000001, "Wrong size on RacePlayerController_DoInputRaceReleased");
static_assert(offsetof(RacePlayerController_DoInputRaceReleased, InKey) == 0x000000, "Member 'RacePlayerController_DoInputRaceReleased::InKey' has a wrong offset!");

// Function UnionSystem.RacePlayerController.SetSubMode
// 0x0001 (0x0001 - 0x0000)
struct RacePlayerController_SetSubMode final
{
public:
	ERacePlayerControllerSubMode                  InSubMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RacePlayerController_SetSubMode) == 0x000001, "Wrong alignment on RacePlayerController_SetSubMode");
static_assert(sizeof(RacePlayerController_SetSubMode) == 0x000001, "Wrong size on RacePlayerController_SetSubMode");
static_assert(offsetof(RacePlayerController_SetSubMode, InSubMode) == 0x000000, "Member 'RacePlayerController_SetSubMode::InSubMode' has a wrong offset!");

// Function UnionSystem.RacePlayerController.GetSubMode
// 0x0001 (0x0001 - 0x0000)
struct RacePlayerController_GetSubMode final
{
public:
	ERacePlayerControllerSubMode                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RacePlayerController_GetSubMode) == 0x000001, "Wrong alignment on RacePlayerController_GetSubMode");
static_assert(sizeof(RacePlayerController_GetSubMode) == 0x000001, "Wrong size on RacePlayerController_GetSubMode");
static_assert(offsetof(RacePlayerController_GetSubMode, ReturnValue) == 0x000000, "Member 'RacePlayerController_GetSubMode::ReturnValue' has a wrong offset!");

// Function UnionSystem.RacePlayerController.IsRaceInputEnabled
// 0x0001 (0x0001 - 0x0000)
struct RacePlayerController_IsRaceInputEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RacePlayerController_IsRaceInputEnabled) == 0x000001, "Wrong alignment on RacePlayerController_IsRaceInputEnabled");
static_assert(sizeof(RacePlayerController_IsRaceInputEnabled) == 0x000001, "Wrong size on RacePlayerController_IsRaceInputEnabled");
static_assert(offsetof(RacePlayerController_IsRaceInputEnabled, ReturnValue) == 0x000000, "Member 'RacePlayerController_IsRaceInputEnabled::ReturnValue' has a wrong offset!");

// Function UnionSystem.RankingSubsystem.GetRankingFestaPoint
// 0x0028 (0x0028 - 0x0000)
struct RankingSubsystem_GetRankingFestaPoint final
{
public:
	class FString                                 FilePathFull;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, const struct FRankingDataFestaPointList& RankDataList)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RankingSubsystem_GetRankingFestaPoint) == 0x000008, "Wrong alignment on RankingSubsystem_GetRankingFestaPoint");
static_assert(sizeof(RankingSubsystem_GetRankingFestaPoint) == 0x000028, "Wrong size on RankingSubsystem_GetRankingFestaPoint");
static_assert(offsetof(RankingSubsystem_GetRankingFestaPoint, FilePathFull) == 0x000000, "Member 'RankingSubsystem_GetRankingFestaPoint::FilePathFull' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingFestaPoint, OnComplete) == 0x000010, "Member 'RankingSubsystem_GetRankingFestaPoint::OnComplete' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingFestaPoint, ReturnValue) == 0x000020, "Member 'RankingSubsystem_GetRankingFestaPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.RankingSubsystem.GetRankingLegendCompe
// 0x0028 (0x0028 - 0x0000)
struct RankingSubsystem_GetRankingLegendCompe final
{
public:
	class FString                                 FilePathFull;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, const struct FRankingDataLegendCompeList& RankDataList)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RankingSubsystem_GetRankingLegendCompe) == 0x000008, "Wrong alignment on RankingSubsystem_GetRankingLegendCompe");
static_assert(sizeof(RankingSubsystem_GetRankingLegendCompe) == 0x000028, "Wrong size on RankingSubsystem_GetRankingLegendCompe");
static_assert(offsetof(RankingSubsystem_GetRankingLegendCompe, FilePathFull) == 0x000000, "Member 'RankingSubsystem_GetRankingLegendCompe::FilePathFull' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingLegendCompe, OnComplete) == 0x000010, "Member 'RankingSubsystem_GetRankingLegendCompe::OnComplete' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingLegendCompe, ReturnValue) == 0x000020, "Member 'RankingSubsystem_GetRankingLegendCompe::ReturnValue' has a wrong offset!");

// Function UnionSystem.RankingSubsystem.GetRankingRankMatch
// 0x0028 (0x0028 - 0x0000)
struct RankingSubsystem_GetRankingRankMatch final
{
public:
	class FString                                 FilePathFull;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, const struct FRankingDataRankMatchList& RankDataList)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RankingSubsystem_GetRankingRankMatch) == 0x000008, "Wrong alignment on RankingSubsystem_GetRankingRankMatch");
static_assert(sizeof(RankingSubsystem_GetRankingRankMatch) == 0x000028, "Wrong size on RankingSubsystem_GetRankingRankMatch");
static_assert(offsetof(RankingSubsystem_GetRankingRankMatch, FilePathFull) == 0x000000, "Member 'RankingSubsystem_GetRankingRankMatch::FilePathFull' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingRankMatch, OnComplete) == 0x000010, "Member 'RankingSubsystem_GetRankingRankMatch::OnComplete' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingRankMatch, ReturnValue) == 0x000020, "Member 'RankingSubsystem_GetRankingRankMatch::ReturnValue' has a wrong offset!");

// Function UnionSystem.RankingSubsystem.GetRankingTimeTrial
// 0x0028 (0x0028 - 0x0000)
struct RankingSubsystem_GetRankingTimeTrial final
{
public:
	class FString                                 FilePathFull;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bWasSuccessful, const struct FRankingDataTimeTrialList& RankDataList)> OnComplete; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RankingSubsystem_GetRankingTimeTrial) == 0x000008, "Wrong alignment on RankingSubsystem_GetRankingTimeTrial");
static_assert(sizeof(RankingSubsystem_GetRankingTimeTrial) == 0x000028, "Wrong size on RankingSubsystem_GetRankingTimeTrial");
static_assert(offsetof(RankingSubsystem_GetRankingTimeTrial, FilePathFull) == 0x000000, "Member 'RankingSubsystem_GetRankingTimeTrial::FilePathFull' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingTimeTrial, OnComplete) == 0x000010, "Member 'RankingSubsystem_GetRankingTimeTrial::OnComplete' has a wrong offset!");
static_assert(offsetof(RankingSubsystem_GetRankingTimeTrial, ReturnValue) == 0x000020, "Member 'RankingSubsystem_GetRankingTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.ResponseCodeHttp.IsOkProper
// 0x0008 (0x0008 - 0x0000)
struct ResponseCodeHttp_IsOkProper final
{
public:
	int32                                         ResponseCode;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ResponseCodeHttp_IsOkProper) == 0x000004, "Wrong alignment on ResponseCodeHttp_IsOkProper");
static_assert(sizeof(ResponseCodeHttp_IsOkProper) == 0x000008, "Wrong size on ResponseCodeHttp_IsOkProper");
static_assert(offsetof(ResponseCodeHttp_IsOkProper, ResponseCode) == 0x000000, "Member 'ResponseCodeHttp_IsOkProper::ResponseCode' has a wrong offset!");
static_assert(offsetof(ResponseCodeHttp_IsOkProper, ReturnValue) == 0x000004, "Member 'ResponseCodeHttp_IsOkProper::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoApp
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoApp final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoApp) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoApp");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoApp) == 0x000002, "Wrong size on SaveDataManageSubsystem_ExistsAutoApp");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoApp, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoApp::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoApp, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoApp::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoAppDemo
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoAppDemo final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoAppDemo) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoAppDemo");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoAppDemo) == 0x000002, "Wrong size on SaveDataManageSubsystem_ExistsAutoAppDemo");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoAppDemo, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoAppDemo::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoAppDemo, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoAppDemo::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoAppPS4
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoAppPS4 final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoAppPS4) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoAppPS4");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoAppPS4) == 0x000002, "Wrong size on SaveDataManageSubsystem_ExistsAutoAppPS4");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoAppPS4, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoAppPS4::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoAppPS4, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoAppPS4::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoNet
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoNet final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoNet) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoNet");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoNet) == 0x000002, "Wrong size on SaveDataManageSubsystem_ExistsAutoNet");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoNet, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoNet::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoNet, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoNet::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoOptionConfig
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoOptionConfig final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoOptionConfig) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoOptionConfig");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoOptionConfig) == 0x000002, "Wrong size on SaveDataManageSubsystem_ExistsAutoOptionConfig");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoOptionConfig, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoOptionConfig::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoOptionConfig, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoOptionConfig::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoPlayLog
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoPlayLog final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoPlayLog) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoPlayLog");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoPlayLog) == 0x000002, "Wrong size on SaveDataManageSubsystem_ExistsAutoPlayLog");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoPlayLog, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoPlayLog::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoPlayLog, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoPlayLog::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoReplayPS4SaveGameByIndex
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex final
{
public:
	int32                                         ReplaySlotIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex) == 0x000008, "Wrong size on SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex, ReplaySlotIndex) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex::ReplaySlotIndex' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex, OutStatus) == 0x000004, "Member 'SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex, ReturnValue) == 0x000005, "Member 'SaveDataManageSubsystem_ExistsAutoReplayPS4SaveGameByIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoReplaySaveGameByIndex
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex final
{
public:
	int32                                         ReplaySlotIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex) == 0x000008, "Wrong size on SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex, ReplaySlotIndex) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex::ReplaySlotIndex' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex, OutStatus) == 0x000004, "Member 'SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex, ReturnValue) == 0x000005, "Member 'SaveDataManageSubsystem_ExistsAutoReplaySaveGameByIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.ExistsAutoReplaySaveGameByStage
// 0x0003 (0x0003 - 0x0000)
struct SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage final
{
public:
	EStageId                                      StageId;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage");
static_assert(sizeof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage) == 0x000003, "Wrong size on SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage, StageId) == 0x000000, "Member 'SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage::StageId' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage, OutStatus) == 0x000001, "Member 'SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage, ReturnValue) == 0x000002, "Member 'SaveDataManageSubsystem_ExistsAutoReplaySaveGameByStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetAppSaveCount
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetAppSaveCount final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetAppSaveCount) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_GetAppSaveCount");
static_assert(sizeof(SaveDataManageSubsystem_GetAppSaveCount) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetAppSaveCount");
static_assert(offsetof(SaveDataManageSubsystem_GetAppSaveCount, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_GetAppSaveCount::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_GetAppSaveCount, ReturnValue) == 0x000004, "Member 'SaveDataManageSubsystem_GetAppSaveCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetAppSaveGamePtr
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetAppSaveGamePtr final
{
public:
	class UAppSaveGame*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetAppSaveGamePtr) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_GetAppSaveGamePtr");
static_assert(sizeof(SaveDataManageSubsystem_GetAppSaveGamePtr) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetAppSaveGamePtr");
static_assert(offsetof(SaveDataManageSubsystem_GetAppSaveGamePtr, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_GetAppSaveGamePtr::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetNetSaveCount
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetNetSaveCount final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetNetSaveCount) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_GetNetSaveCount");
static_assert(sizeof(SaveDataManageSubsystem_GetNetSaveCount) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetNetSaveCount");
static_assert(offsetof(SaveDataManageSubsystem_GetNetSaveCount, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_GetNetSaveCount::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_GetNetSaveCount, ReturnValue) == 0x000004, "Member 'SaveDataManageSubsystem_GetNetSaveCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetNetSaveGamePtr
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetNetSaveGamePtr final
{
public:
	class UNetSaveGame*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetNetSaveGamePtr) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_GetNetSaveGamePtr");
static_assert(sizeof(SaveDataManageSubsystem_GetNetSaveGamePtr) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetNetSaveGamePtr");
static_assert(offsetof(SaveDataManageSubsystem_GetNetSaveGamePtr, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_GetNetSaveGamePtr::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetOptionConfigSaveCount
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetOptionConfigSaveCount final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetOptionConfigSaveCount) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_GetOptionConfigSaveCount");
static_assert(sizeof(SaveDataManageSubsystem_GetOptionConfigSaveCount) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetOptionConfigSaveCount");
static_assert(offsetof(SaveDataManageSubsystem_GetOptionConfigSaveCount, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_GetOptionConfigSaveCount::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_GetOptionConfigSaveCount, ReturnValue) == 0x000004, "Member 'SaveDataManageSubsystem_GetOptionConfigSaveCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetOptionConfigSaveGamePtr
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetOptionConfigSaveGamePtr final
{
public:
	class UOptionConfigSaveGame*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetOptionConfigSaveGamePtr) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_GetOptionConfigSaveGamePtr");
static_assert(sizeof(SaveDataManageSubsystem_GetOptionConfigSaveGamePtr) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetOptionConfigSaveGamePtr");
static_assert(offsetof(SaveDataManageSubsystem_GetOptionConfigSaveGamePtr, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_GetOptionConfigSaveGamePtr::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetPlayLogSaveCount
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetPlayLogSaveCount final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetPlayLogSaveCount) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_GetPlayLogSaveCount");
static_assert(sizeof(SaveDataManageSubsystem_GetPlayLogSaveCount) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetPlayLogSaveCount");
static_assert(offsetof(SaveDataManageSubsystem_GetPlayLogSaveCount, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_GetPlayLogSaveCount::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_GetPlayLogSaveCount, ReturnValue) == 0x000004, "Member 'SaveDataManageSubsystem_GetPlayLogSaveCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetPlayLogSaveGamePtr
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetPlayLogSaveGamePtr final
{
public:
	class UPlayLogSaveGame*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetPlayLogSaveGamePtr) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_GetPlayLogSaveGamePtr");
static_assert(sizeof(SaveDataManageSubsystem_GetPlayLogSaveGamePtr) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetPlayLogSaveGamePtr");
static_assert(offsetof(SaveDataManageSubsystem_GetPlayLogSaveGamePtr, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_GetPlayLogSaveGamePtr::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetReplaySaveCount
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetReplaySaveCount final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetReplaySaveCount) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_GetReplaySaveCount");
static_assert(sizeof(SaveDataManageSubsystem_GetReplaySaveCount) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetReplaySaveCount");
static_assert(offsetof(SaveDataManageSubsystem_GetReplaySaveCount, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_GetReplaySaveCount::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_GetReplaySaveCount, ReturnValue) == 0x000004, "Member 'SaveDataManageSubsystem_GetReplaySaveCount::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetReplaySaveGamePtr
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_GetReplaySaveGamePtr final
{
public:
	class UReplaySaveGame*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetReplaySaveGamePtr) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_GetReplaySaveGamePtr");
static_assert(sizeof(SaveDataManageSubsystem_GetReplaySaveGamePtr) == 0x000008, "Wrong size on SaveDataManageSubsystem_GetReplaySaveGamePtr");
static_assert(offsetof(SaveDataManageSubsystem_GetReplaySaveGamePtr, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_GetReplaySaveGamePtr::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.GetUserNetworkSettingsFromLocalData
// 0x0020 (0x0020 - 0x0000)
struct SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData final
{
public:
	struct FUserSaveUserNetworkSettingsRequest    OutRequest;                                        // 0x0000(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData");
static_assert(sizeof(SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData) == 0x000020, "Wrong size on SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData");
static_assert(offsetof(SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData, OutRequest) == 0x000000, "Member 'SaveDataManageSubsystem_GetUserNetworkSettingsFromLocalData::OutRequest' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.InitSaveAutoReplayAsyncBySlot
// 0x0004 (0x0004 - 0x0000)
struct SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot final
{
public:
	int32                                         ReplaySlotIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot");
static_assert(sizeof(SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot) == 0x000004, "Wrong size on SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot");
static_assert(offsetof(SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot, ReplaySlotIndex) == 0x000000, "Member 'SaveDataManageSubsystem_InitSaveAutoReplayAsyncBySlot::ReplaySlotIndex' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.InitSaveAutoReplayAsyncByStage
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage final
{
public:
	EStageId                                      StageId;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage");
static_assert(sizeof(SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage) == 0x000001, "Wrong size on SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage");
static_assert(offsetof(SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage, StageId) == 0x000000, "Member 'SaveDataManageSubsystem_InitSaveAutoReplayAsyncByStage::StageId' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsBusy
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_IsBusy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_IsBusy) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_IsBusy");
static_assert(sizeof(SaveDataManageSubsystem_IsBusy) == 0x000001, "Wrong size on SaveDataManageSubsystem_IsBusy");
static_assert(offsetof(SaveDataManageSubsystem_IsBusy, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_IsBusy::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsLoadedAppSaveData
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_IsLoadedAppSaveData final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_IsLoadedAppSaveData) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_IsLoadedAppSaveData");
static_assert(sizeof(SaveDataManageSubsystem_IsLoadedAppSaveData) == 0x000002, "Wrong size on SaveDataManageSubsystem_IsLoadedAppSaveData");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedAppSaveData, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_IsLoadedAppSaveData::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedAppSaveData, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_IsLoadedAppSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsLoadedNetSaveData
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_IsLoadedNetSaveData final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_IsLoadedNetSaveData) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_IsLoadedNetSaveData");
static_assert(sizeof(SaveDataManageSubsystem_IsLoadedNetSaveData) == 0x000002, "Wrong size on SaveDataManageSubsystem_IsLoadedNetSaveData");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedNetSaveData, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_IsLoadedNetSaveData::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedNetSaveData, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_IsLoadedNetSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsLoadedOptionConfigSaveData
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_IsLoadedOptionConfigSaveData final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_IsLoadedOptionConfigSaveData) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_IsLoadedOptionConfigSaveData");
static_assert(sizeof(SaveDataManageSubsystem_IsLoadedOptionConfigSaveData) == 0x000002, "Wrong size on SaveDataManageSubsystem_IsLoadedOptionConfigSaveData");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedOptionConfigSaveData, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_IsLoadedOptionConfigSaveData::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedOptionConfigSaveData, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_IsLoadedOptionConfigSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsLoadedPlayLogSaveData
// 0x0002 (0x0002 - 0x0000)
struct SaveDataManageSubsystem_IsLoadedPlayLogSaveData final
{
public:
	ESaveDataStatus                               OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_IsLoadedPlayLogSaveData) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_IsLoadedPlayLogSaveData");
static_assert(sizeof(SaveDataManageSubsystem_IsLoadedPlayLogSaveData) == 0x000002, "Wrong size on SaveDataManageSubsystem_IsLoadedPlayLogSaveData");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedPlayLogSaveData, OutStatus) == 0x000000, "Member 'SaveDataManageSubsystem_IsLoadedPlayLogSaveData::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedPlayLogSaveData, ReturnValue) == 0x000001, "Member 'SaveDataManageSubsystem_IsLoadedPlayLogSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsLoadedReplaySaveData
// 0x0003 (0x0003 - 0x0000)
struct SaveDataManageSubsystem_IsLoadedReplaySaveData final
{
public:
	EStageId                                      StageId;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_IsLoadedReplaySaveData) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_IsLoadedReplaySaveData");
static_assert(sizeof(SaveDataManageSubsystem_IsLoadedReplaySaveData) == 0x000003, "Wrong size on SaveDataManageSubsystem_IsLoadedReplaySaveData");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedReplaySaveData, StageId) == 0x000000, "Member 'SaveDataManageSubsystem_IsLoadedReplaySaveData::StageId' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedReplaySaveData, OutStatus) == 0x000001, "Member 'SaveDataManageSubsystem_IsLoadedReplaySaveData::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsLoadedReplaySaveData, ReturnValue) == 0x000002, "Member 'SaveDataManageSubsystem_IsLoadedReplaySaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidAppDataVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidAppDataVersion final
{
public:
	int32                                         OutCurVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidAppDataVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidAppDataVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidAppDataVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidAppDataVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppDataVersion, OutCurVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidAppDataVersion::OutCurVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppDataVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidAppDataVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppDataVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidAppDataVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppDataVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidAppDataVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidAppRomVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidAppRomVersion final
{
public:
	int32                                         OutRomVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidAppRomVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidAppRomVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidAppRomVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidAppRomVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppRomVersion, OutRomVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidAppRomVersion::OutRomVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppRomVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidAppRomVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppRomVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidAppRomVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidAppRomVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidAppRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidNetDataVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidNetDataVersion final
{
public:
	int32                                         OutCurVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidNetDataVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidNetDataVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidNetDataVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidNetDataVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetDataVersion, OutCurVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidNetDataVersion::OutCurVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetDataVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidNetDataVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetDataVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidNetDataVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetDataVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidNetDataVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidNetRomVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidNetRomVersion final
{
public:
	int32                                         OutRomVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidNetRomVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidNetRomVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidNetRomVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidNetRomVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetRomVersion, OutRomVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidNetRomVersion::OutRomVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetRomVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidNetRomVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetRomVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidNetRomVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidNetRomVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidNetRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidOptionConfigDataVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidOptionConfigDataVersion final
{
public:
	int32                                         OutCurVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidOptionConfigDataVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidOptionConfigDataVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidOptionConfigDataVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidOptionConfigDataVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigDataVersion, OutCurVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidOptionConfigDataVersion::OutCurVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigDataVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidOptionConfigDataVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigDataVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidOptionConfigDataVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigDataVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidOptionConfigDataVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidOptionConfigRomVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidOptionConfigRomVersion final
{
public:
	int32                                         OutRomVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidOptionConfigRomVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidOptionConfigRomVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidOptionConfigRomVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidOptionConfigRomVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigRomVersion, OutRomVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidOptionConfigRomVersion::OutRomVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigRomVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidOptionConfigRomVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigRomVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidOptionConfigRomVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidOptionConfigRomVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidOptionConfigRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidPlayLogDataVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidPlayLogDataVersion final
{
public:
	int32                                         OutCurVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidPlayLogDataVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidPlayLogDataVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidPlayLogDataVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidPlayLogDataVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogDataVersion, OutCurVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidPlayLogDataVersion::OutCurVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogDataVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidPlayLogDataVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogDataVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidPlayLogDataVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogDataVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidPlayLogDataVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidPlayLogRomVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidPlayLogRomVersion final
{
public:
	int32                                         OutRomVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidPlayLogRomVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidPlayLogRomVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidPlayLogRomVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidPlayLogRomVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogRomVersion, OutRomVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidPlayLogRomVersion::OutRomVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogRomVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidPlayLogRomVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogRomVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidPlayLogRomVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidPlayLogRomVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidPlayLogRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidReplayDataVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidReplayDataVersion final
{
public:
	int32                                         OutCurVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidReplayDataVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidReplayDataVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidReplayDataVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidReplayDataVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayDataVersion, OutCurVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidReplayDataVersion::OutCurVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayDataVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidReplayDataVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayDataVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidReplayDataVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayDataVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidReplayDataVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.IsValidReplayRomVersion
// 0x000C (0x000C - 0x0000)
struct SaveDataManageSubsystem_IsValidReplayRomVersion final
{
public:
	int32                                         OutRomVersion;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSavedVersion;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               OutStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_IsValidReplayRomVersion) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_IsValidReplayRomVersion");
static_assert(sizeof(SaveDataManageSubsystem_IsValidReplayRomVersion) == 0x00000C, "Wrong size on SaveDataManageSubsystem_IsValidReplayRomVersion");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayRomVersion, OutRomVersion) == 0x000000, "Member 'SaveDataManageSubsystem_IsValidReplayRomVersion::OutRomVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayRomVersion, OutSavedVersion) == 0x000004, "Member 'SaveDataManageSubsystem_IsValidReplayRomVersion::OutSavedVersion' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayRomVersion, OutStatus) == 0x000008, "Member 'SaveDataManageSubsystem_IsValidReplayRomVersion::OutStatus' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_IsValidReplayRomVersion, ReturnValue) == 0x000009, "Member 'SaveDataManageSubsystem_IsValidReplayRomVersion::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.LoadAutoAppSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_LoadAutoAppSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_LoadAutoAppSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_LoadAutoAppSync");
static_assert(sizeof(SaveDataManageSubsystem_LoadAutoAppSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_LoadAutoAppSync");
static_assert(offsetof(SaveDataManageSubsystem_LoadAutoAppSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_LoadAutoAppSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.LoadAutoNetSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_LoadAutoNetSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_LoadAutoNetSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_LoadAutoNetSync");
static_assert(sizeof(SaveDataManageSubsystem_LoadAutoNetSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_LoadAutoNetSync");
static_assert(offsetof(SaveDataManageSubsystem_LoadAutoNetSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_LoadAutoNetSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.LoadAutoOptionConfigSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_LoadAutoOptionConfigSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_LoadAutoOptionConfigSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_LoadAutoOptionConfigSync");
static_assert(sizeof(SaveDataManageSubsystem_LoadAutoOptionConfigSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_LoadAutoOptionConfigSync");
static_assert(offsetof(SaveDataManageSubsystem_LoadAutoOptionConfigSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_LoadAutoOptionConfigSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.LoadAutoPlayLogSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_LoadAutoPlayLogSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_LoadAutoPlayLogSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_LoadAutoPlayLogSync");
static_assert(sizeof(SaveDataManageSubsystem_LoadAutoPlayLogSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_LoadAutoPlayLogSync");
static_assert(offsetof(SaveDataManageSubsystem_LoadAutoPlayLogSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_LoadAutoPlayLogSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.LoadReplayConfigAsync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_LoadReplayConfigAsync final
{
public:
	EStageId                                      StageId;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_LoadReplayConfigAsync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_LoadReplayConfigAsync");
static_assert(sizeof(SaveDataManageSubsystem_LoadReplayConfigAsync) == 0x000001, "Wrong size on SaveDataManageSubsystem_LoadReplayConfigAsync");
static_assert(offsetof(SaveDataManageSubsystem_LoadReplayConfigAsync, StageId) == 0x000000, "Member 'SaveDataManageSubsystem_LoadReplayConfigAsync::StageId' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.LoadReplayConfigSyncByIndex
// 0x0008 (0x0008 - 0x0000)
struct SaveDataManageSubsystem_LoadReplayConfigSyncByIndex final
{
public:
	int32                                         ReplaySlotIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveDataStatus                               ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_LoadReplayConfigSyncByIndex) == 0x000004, "Wrong alignment on SaveDataManageSubsystem_LoadReplayConfigSyncByIndex");
static_assert(sizeof(SaveDataManageSubsystem_LoadReplayConfigSyncByIndex) == 0x000008, "Wrong size on SaveDataManageSubsystem_LoadReplayConfigSyncByIndex");
static_assert(offsetof(SaveDataManageSubsystem_LoadReplayConfigSyncByIndex, ReplaySlotIndex) == 0x000000, "Member 'SaveDataManageSubsystem_LoadReplayConfigSyncByIndex::ReplaySlotIndex' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_LoadReplayConfigSyncByIndex, ReturnValue) == 0x000004, "Member 'SaveDataManageSubsystem_LoadReplayConfigSyncByIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.OnInitReplaySaveCompleteFunc
// 0x0018 (0x0018 - 0x0000)
struct SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc");
static_assert(sizeof(SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc) == 0x000018, "Wrong size on SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc");
static_assert(offsetof(SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc, SlotName) == 0x000000, "Member 'SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc::SlotName' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc, UserIndex) == 0x000010, "Member 'SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc::UserIndex' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc, bSuccess) == 0x000014, "Member 'SaveDataManageSubsystem_OnInitReplaySaveCompleteFunc::bSuccess' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.OnLoadCompleteFunc
// 0x0020 (0x0020 - 0x0000)
struct SaveDataManageSubsystem_OnLoadCompleteFunc final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              SaveGame;                                          // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_OnLoadCompleteFunc) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_OnLoadCompleteFunc");
static_assert(sizeof(SaveDataManageSubsystem_OnLoadCompleteFunc) == 0x000020, "Wrong size on SaveDataManageSubsystem_OnLoadCompleteFunc");
static_assert(offsetof(SaveDataManageSubsystem_OnLoadCompleteFunc, SlotName) == 0x000000, "Member 'SaveDataManageSubsystem_OnLoadCompleteFunc::SlotName' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_OnLoadCompleteFunc, UserIndex) == 0x000010, "Member 'SaveDataManageSubsystem_OnLoadCompleteFunc::UserIndex' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_OnLoadCompleteFunc, SaveGame) == 0x000018, "Member 'SaveDataManageSubsystem_OnLoadCompleteFunc::SaveGame' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.OnSaveCompleteFunc
// 0x0018 (0x0018 - 0x0000)
struct SaveDataManageSubsystem_OnSaveCompleteFunc final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SaveDataManageSubsystem_OnSaveCompleteFunc) == 0x000008, "Wrong alignment on SaveDataManageSubsystem_OnSaveCompleteFunc");
static_assert(sizeof(SaveDataManageSubsystem_OnSaveCompleteFunc) == 0x000018, "Wrong size on SaveDataManageSubsystem_OnSaveCompleteFunc");
static_assert(offsetof(SaveDataManageSubsystem_OnSaveCompleteFunc, SlotName) == 0x000000, "Member 'SaveDataManageSubsystem_OnSaveCompleteFunc::SlotName' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_OnSaveCompleteFunc, UserIndex) == 0x000010, "Member 'SaveDataManageSubsystem_OnSaveCompleteFunc::UserIndex' has a wrong offset!");
static_assert(offsetof(SaveDataManageSubsystem_OnSaveCompleteFunc, bSuccess) == 0x000014, "Member 'SaveDataManageSubsystem_OnSaveCompleteFunc::bSuccess' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.SaveAutoAppSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_SaveAutoAppSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_SaveAutoAppSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_SaveAutoAppSync");
static_assert(sizeof(SaveDataManageSubsystem_SaveAutoAppSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_SaveAutoAppSync");
static_assert(offsetof(SaveDataManageSubsystem_SaveAutoAppSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_SaveAutoAppSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.SaveAutoNetSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_SaveAutoNetSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_SaveAutoNetSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_SaveAutoNetSync");
static_assert(sizeof(SaveDataManageSubsystem_SaveAutoNetSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_SaveAutoNetSync");
static_assert(offsetof(SaveDataManageSubsystem_SaveAutoNetSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_SaveAutoNetSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.SaveAutoOptionConfigSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_SaveAutoOptionConfigSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_SaveAutoOptionConfigSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_SaveAutoOptionConfigSync");
static_assert(sizeof(SaveDataManageSubsystem_SaveAutoOptionConfigSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_SaveAutoOptionConfigSync");
static_assert(offsetof(SaveDataManageSubsystem_SaveAutoOptionConfigSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_SaveAutoOptionConfigSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.SaveAutoPlayLogSync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_SaveAutoPlayLogSync final
{
public:
	ESaveDataStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_SaveAutoPlayLogSync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_SaveAutoPlayLogSync");
static_assert(sizeof(SaveDataManageSubsystem_SaveAutoPlayLogSync) == 0x000001, "Wrong size on SaveDataManageSubsystem_SaveAutoPlayLogSync");
static_assert(offsetof(SaveDataManageSubsystem_SaveAutoPlayLogSync, ReturnValue) == 0x000000, "Member 'SaveDataManageSubsystem_SaveAutoPlayLogSync::ReturnValue' has a wrong offset!");

// Function UnionSystem.SaveDataManageSubsystem.SaveAutoReplayAsync
// 0x0001 (0x0001 - 0x0000)
struct SaveDataManageSubsystem_SaveAutoReplayAsync final
{
public:
	EStageId                                      StageId;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SaveDataManageSubsystem_SaveAutoReplayAsync) == 0x000001, "Wrong alignment on SaveDataManageSubsystem_SaveAutoReplayAsync");
static_assert(sizeof(SaveDataManageSubsystem_SaveAutoReplayAsync) == 0x000001, "Wrong size on SaveDataManageSubsystem_SaveAutoReplayAsync");
static_assert(offsetof(SaveDataManageSubsystem_SaveAutoReplayAsync, StageId) == 0x000000, "Member 'SaveDataManageSubsystem_SaveAutoReplayAsync::StageId' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceAccelFloorVisibility_
// 0x0001 (0x0001 - 0x0000)
struct SequenceParameterActor_SetSequenceAccelFloorVisibility_ final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceAccelFloorVisibility_) == 0x000001, "Wrong alignment on SequenceParameterActor_SetSequenceAccelFloorVisibility_");
static_assert(sizeof(SequenceParameterActor_SetSequenceAccelFloorVisibility_) == 0x000001, "Wrong size on SequenceParameterActor_SetSequenceAccelFloorVisibility_");
static_assert(offsetof(SequenceParameterActor_SetSequenceAccelFloorVisibility_, bVisibility) == 0x000000, "Member 'SequenceParameterActor_SetSequenceAccelFloorVisibility_::bVisibility' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceEvent_
// 0x0001 (0x0001 - 0x0000)
struct SequenceParameterActor_SetSequenceEvent_ final
{
public:
	bool                                          bEvent;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceEvent_) == 0x000001, "Wrong alignment on SequenceParameterActor_SetSequenceEvent_");
static_assert(sizeof(SequenceParameterActor_SetSequenceEvent_) == 0x000001, "Wrong size on SequenceParameterActor_SetSequenceEvent_");
static_assert(offsetof(SequenceParameterActor_SetSequenceEvent_, bEvent) == 0x000000, "Member 'SequenceParameterActor_SetSequenceEvent_::bEvent' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceFloorBackVisibility_
// 0x0001 (0x0001 - 0x0000)
struct SequenceParameterActor_SetSequenceFloorBackVisibility_ final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceFloorBackVisibility_) == 0x000001, "Wrong alignment on SequenceParameterActor_SetSequenceFloorBackVisibility_");
static_assert(sizeof(SequenceParameterActor_SetSequenceFloorBackVisibility_) == 0x000001, "Wrong size on SequenceParameterActor_SetSequenceFloorBackVisibility_");
static_assert(offsetof(SequenceParameterActor_SetSequenceFloorBackVisibility_, bVisibility) == 0x000000, "Member 'SequenceParameterActor_SetSequenceFloorBackVisibility_::bVisibility' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceFloorFrontVisibility_
// 0x0001 (0x0001 - 0x0000)
struct SequenceParameterActor_SetSequenceFloorFrontVisibility_ final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceFloorFrontVisibility_) == 0x000001, "Wrong alignment on SequenceParameterActor_SetSequenceFloorFrontVisibility_");
static_assert(sizeof(SequenceParameterActor_SetSequenceFloorFrontVisibility_) == 0x000001, "Wrong size on SequenceParameterActor_SetSequenceFloorFrontVisibility_");
static_assert(offsetof(SequenceParameterActor_SetSequenceFloorFrontVisibility_, bVisibility) == 0x000000, "Member 'SequenceParameterActor_SetSequenceFloorFrontVisibility_::bVisibility' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceMainFloorVisibility_
// 0x0001 (0x0001 - 0x0000)
struct SequenceParameterActor_SetSequenceMainFloorVisibility_ final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceMainFloorVisibility_) == 0x000001, "Wrong alignment on SequenceParameterActor_SetSequenceMainFloorVisibility_");
static_assert(sizeof(SequenceParameterActor_SetSequenceMainFloorVisibility_) == 0x000001, "Wrong size on SequenceParameterActor_SetSequenceMainFloorVisibility_");
static_assert(offsetof(SequenceParameterActor_SetSequenceMainFloorVisibility_, bVisibility) == 0x000000, "Member 'SequenceParameterActor_SetSequenceMainFloorVisibility_::bVisibility' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceTransform_
// 0x0060 (0x0060 - 0x0000)
struct SequenceParameterActor_SetSequenceTransform_ final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceTransform_) == 0x000010, "Wrong alignment on SequenceParameterActor_SetSequenceTransform_");
static_assert(sizeof(SequenceParameterActor_SetSequenceTransform_) == 0x000060, "Wrong size on SequenceParameterActor_SetSequenceTransform_");
static_assert(offsetof(SequenceParameterActor_SetSequenceTransform_, Transform) == 0x000000, "Member 'SequenceParameterActor_SetSequenceTransform_::Transform' has a wrong offset!");

// Function UnionSystem.SequenceParameterActor.SetSequenceVisibility_
// 0x0001 (0x0001 - 0x0000)
struct SequenceParameterActor_SetSequenceVisibility_ final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SequenceParameterActor_SetSequenceVisibility_) == 0x000001, "Wrong alignment on SequenceParameterActor_SetSequenceVisibility_");
static_assert(sizeof(SequenceParameterActor_SetSequenceVisibility_) == 0x000001, "Wrong size on SequenceParameterActor_SetSequenceVisibility_");
static_assert(offsetof(SequenceParameterActor_SetSequenceVisibility_, bVisibility) == 0x000000, "Member 'SequenceParameterActor_SetSequenceVisibility_::bVisibility' has a wrong offset!");

// Function UnionSystem.SessionManager.GetDisplayCode
// 0x0018 (0x0018 - 0x0000)
struct SessionManager_GetDisplayCode final
{
public:
	class FString                                 displayCode;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetDisplayCode) == 0x000008, "Wrong alignment on SessionManager_GetDisplayCode");
static_assert(sizeof(SessionManager_GetDisplayCode) == 0x000018, "Wrong size on SessionManager_GetDisplayCode");
static_assert(offsetof(SessionManager_GetDisplayCode, displayCode) == 0x000000, "Member 'SessionManager_GetDisplayCode::displayCode' has a wrong offset!");
static_assert(offsetof(SessionManager_GetDisplayCode, ReturnValue) == 0x000010, "Member 'SessionManager_GetDisplayCode::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetExternalAddressRegionName
// 0x0018 (0x0018 - 0x0000)
struct SessionManager_GetExternalAddressRegionName final
{
public:
	class FString                                 AddressRegionName;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetExternalAddressRegionName) == 0x000008, "Wrong alignment on SessionManager_GetExternalAddressRegionName");
static_assert(sizeof(SessionManager_GetExternalAddressRegionName) == 0x000018, "Wrong size on SessionManager_GetExternalAddressRegionName");
static_assert(offsetof(SessionManager_GetExternalAddressRegionName, AddressRegionName) == 0x000000, "Member 'SessionManager_GetExternalAddressRegionName::AddressRegionName' has a wrong offset!");
static_assert(offsetof(SessionManager_GetExternalAddressRegionName, ReturnValue) == 0x000010, "Member 'SessionManager_GetExternalAddressRegionName::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetFairPlayPoint
// 0x0008 (0x0008 - 0x0000)
struct SessionManager_GetFairPlayPoint final
{
public:
	int32                                         OutFairPlayPoint;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetFairPlayPoint) == 0x000004, "Wrong alignment on SessionManager_GetFairPlayPoint");
static_assert(sizeof(SessionManager_GetFairPlayPoint) == 0x000008, "Wrong size on SessionManager_GetFairPlayPoint");
static_assert(offsetof(SessionManager_GetFairPlayPoint, OutFairPlayPoint) == 0x000000, "Member 'SessionManager_GetFairPlayPoint::OutFairPlayPoint' has a wrong offset!");
static_assert(offsetof(SessionManager_GetFairPlayPoint, ReturnValue) == 0x000004, "Member 'SessionManager_GetFairPlayPoint::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetIsBan
// 0x0002 (0x0002 - 0x0000)
struct SessionManager_GetIsBan final
{
public:
	bool                                          bOutIsBan;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SessionManager_GetIsBan) == 0x000001, "Wrong alignment on SessionManager_GetIsBan");
static_assert(sizeof(SessionManager_GetIsBan) == 0x000002, "Wrong size on SessionManager_GetIsBan");
static_assert(offsetof(SessionManager_GetIsBan, bOutIsBan) == 0x000000, "Member 'SessionManager_GetIsBan::bOutIsBan' has a wrong offset!");
static_assert(offsetof(SessionManager_GetIsBan, ReturnValue) == 0x000001, "Member 'SessionManager_GetIsBan::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetLoginComplete
// 0x0001 (0x0001 - 0x0000)
struct SessionManager_GetLoginComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SessionManager_GetLoginComplete) == 0x000001, "Wrong alignment on SessionManager_GetLoginComplete");
static_assert(sizeof(SessionManager_GetLoginComplete) == 0x000001, "Wrong size on SessionManager_GetLoginComplete");
static_assert(offsetof(SessionManager_GetLoginComplete, ReturnValue) == 0x000000, "Member 'SessionManager_GetLoginComplete::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetPenaltyEndTime
// 0x0018 (0x0018 - 0x0000)
struct SessionManager_GetPenaltyEndTime final
{
public:
	class FString                                 endTime;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetPenaltyEndTime) == 0x000008, "Wrong alignment on SessionManager_GetPenaltyEndTime");
static_assert(sizeof(SessionManager_GetPenaltyEndTime) == 0x000018, "Wrong size on SessionManager_GetPenaltyEndTime");
static_assert(offsetof(SessionManager_GetPenaltyEndTime, endTime) == 0x000000, "Member 'SessionManager_GetPenaltyEndTime::endTime' has a wrong offset!");
static_assert(offsetof(SessionManager_GetPenaltyEndTime, ReturnValue) == 0x000010, "Member 'SessionManager_GetPenaltyEndTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetRegionCode
// 0x0018 (0x0018 - 0x0000)
struct SessionManager_GetRegionCode final
{
public:
	class FString                                 regionCode;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetRegionCode) == 0x000008, "Wrong alignment on SessionManager_GetRegionCode");
static_assert(sizeof(SessionManager_GetRegionCode) == 0x000018, "Wrong size on SessionManager_GetRegionCode");
static_assert(offsetof(SessionManager_GetRegionCode, regionCode) == 0x000000, "Member 'SessionManager_GetRegionCode::regionCode' has a wrong offset!");
static_assert(offsetof(SessionManager_GetRegionCode, ReturnValue) == 0x000010, "Member 'SessionManager_GetRegionCode::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetResponseCodeAbstract
// 0x0001 (0x0001 - 0x0000)
struct SessionManager_GetResponseCodeAbstract final
{
public:
	EResponseCodeAbstract                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SessionManager_GetResponseCodeAbstract) == 0x000001, "Wrong alignment on SessionManager_GetResponseCodeAbstract");
static_assert(sizeof(SessionManager_GetResponseCodeAbstract) == 0x000001, "Wrong size on SessionManager_GetResponseCodeAbstract");
static_assert(offsetof(SessionManager_GetResponseCodeAbstract, ReturnValue) == 0x000000, "Member 'SessionManager_GetResponseCodeAbstract::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetSwitchOnlineCode
// 0x0008 (0x0008 - 0x0000)
struct SessionManager_GetSwitchOnlineCode final
{
public:
	int32                                         switchOnlineCode;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetSwitchOnlineCode) == 0x000004, "Wrong alignment on SessionManager_GetSwitchOnlineCode");
static_assert(sizeof(SessionManager_GetSwitchOnlineCode) == 0x000008, "Wrong size on SessionManager_GetSwitchOnlineCode");
static_assert(offsetof(SessionManager_GetSwitchOnlineCode, switchOnlineCode) == 0x000000, "Member 'SessionManager_GetSwitchOnlineCode::switchOnlineCode' has a wrong offset!");
static_assert(offsetof(SessionManager_GetSwitchOnlineCode, ReturnValue) == 0x000004, "Member 'SessionManager_GetSwitchOnlineCode::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.GetUserID
// 0x0018 (0x0018 - 0x0000)
struct SessionManager_GetUserID final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SessionManager_GetUserID) == 0x000008, "Wrong alignment on SessionManager_GetUserID");
static_assert(sizeof(SessionManager_GetUserID) == 0x000018, "Wrong size on SessionManager_GetUserID");
static_assert(offsetof(SessionManager_GetUserID, UserId) == 0x000000, "Member 'SessionManager_GetUserID::UserId' has a wrong offset!");
static_assert(offsetof(SessionManager_GetUserID, ReturnValue) == 0x000010, "Member 'SessionManager_GetUserID::ReturnValue' has a wrong offset!");

// Function UnionSystem.SessionManager.StartLogin
// 0x0010 (0x0010 - 0x0000)
struct SessionManager_StartLogin final
{
public:
	TDelegate<void(bool Error, bool SavedataDeleted)> Callback;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SessionManager_StartLogin) == 0x000004, "Wrong alignment on SessionManager_StartLogin");
static_assert(sizeof(SessionManager_StartLogin) == 0x000010, "Wrong size on SessionManager_StartLogin");
static_assert(offsetof(SessionManager_StartLogin, Callback) == 0x000000, "Member 'SessionManager_StartLogin::Callback' has a wrong offset!");

// Function UnionSystem.UnionSpeedClassLibrary.GetMaxSpeedByClass
// 0x0008 (0x0008 - 0x0000)
struct UnionSpeedClassLibrary_GetMaxSpeedByClass final
{
public:
	ESpeedClassId                                 ClassId;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSpeedClassLibrary_GetMaxSpeedByClass) == 0x000004, "Wrong alignment on UnionSpeedClassLibrary_GetMaxSpeedByClass");
static_assert(sizeof(UnionSpeedClassLibrary_GetMaxSpeedByClass) == 0x000008, "Wrong size on UnionSpeedClassLibrary_GetMaxSpeedByClass");
static_assert(offsetof(UnionSpeedClassLibrary_GetMaxSpeedByClass, ClassId) == 0x000000, "Member 'UnionSpeedClassLibrary_GetMaxSpeedByClass::ClassId' has a wrong offset!");
static_assert(offsetof(UnionSpeedClassLibrary_GetMaxSpeedByClass, ReturnValue) == 0x000004, "Member 'UnionSpeedClassLibrary_GetMaxSpeedByClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSpeedClassLibrary.GetMinSpeedByClass
// 0x0008 (0x0008 - 0x0000)
struct UnionSpeedClassLibrary_GetMinSpeedByClass final
{
public:
	ESpeedClassId                                 ClassId;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSpeedClassLibrary_GetMinSpeedByClass) == 0x000004, "Wrong alignment on UnionSpeedClassLibrary_GetMinSpeedByClass");
static_assert(sizeof(UnionSpeedClassLibrary_GetMinSpeedByClass) == 0x000008, "Wrong size on UnionSpeedClassLibrary_GetMinSpeedByClass");
static_assert(offsetof(UnionSpeedClassLibrary_GetMinSpeedByClass, ClassId) == 0x000000, "Member 'UnionSpeedClassLibrary_GetMinSpeedByClass::ClassId' has a wrong offset!");
static_assert(offsetof(UnionSpeedClassLibrary_GetMinSpeedByClass, ReturnValue) == 0x000004, "Member 'UnionSpeedClassLibrary_GetMinSpeedByClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSpeedClassLibrary.GetTimeTrialIndex
// 0x0002 (0x0002 - 0x0000)
struct UnionSpeedClassLibrary_GetTimeTrialIndex final
{
public:
	ESpeedClassId                                 InId;                                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSpeedClassLibrary_GetTimeTrialIndex) == 0x000001, "Wrong alignment on UnionSpeedClassLibrary_GetTimeTrialIndex");
static_assert(sizeof(UnionSpeedClassLibrary_GetTimeTrialIndex) == 0x000002, "Wrong size on UnionSpeedClassLibrary_GetTimeTrialIndex");
static_assert(offsetof(UnionSpeedClassLibrary_GetTimeTrialIndex, InId) == 0x000000, "Member 'UnionSpeedClassLibrary_GetTimeTrialIndex::InId' has a wrong offset!");
static_assert(offsetof(UnionSpeedClassLibrary_GetTimeTrialIndex, ReturnValue) == 0x000001, "Member 'UnionSpeedClassLibrary_GetTimeTrialIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSpeedClassLibrary.IsTimeTrialActive
// 0x0002 (0x0002 - 0x0000)
struct UnionSpeedClassLibrary_IsTimeTrialActive final
{
public:
	ESpeedClassId                                 InId;                                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSpeedClassLibrary_IsTimeTrialActive) == 0x000001, "Wrong alignment on UnionSpeedClassLibrary_IsTimeTrialActive");
static_assert(sizeof(UnionSpeedClassLibrary_IsTimeTrialActive) == 0x000002, "Wrong size on UnionSpeedClassLibrary_IsTimeTrialActive");
static_assert(offsetof(UnionSpeedClassLibrary_IsTimeTrialActive, InId) == 0x000000, "Member 'UnionSpeedClassLibrary_IsTimeTrialActive::InId' has a wrong offset!");
static_assert(offsetof(UnionSpeedClassLibrary_IsTimeTrialActive, ReturnValue) == 0x000001, "Member 'UnionSpeedClassLibrary_IsTimeTrialActive::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.BuildStageDirectory
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_BuildStageDirectory final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_BuildStageDirectory) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_BuildStageDirectory");
static_assert(sizeof(StageIdUtilityLibrary_BuildStageDirectory) == 0x000018, "Wrong size on StageIdUtilityLibrary_BuildStageDirectory");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageDirectory, InId) == 0x000000, "Member 'StageIdUtilityLibrary_BuildStageDirectory::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageDirectory, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_BuildStageDirectory::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.BuildStageName
// 0x0028 (0x0028 - 0x0000)
struct StageIdUtilityLibrary_BuildStageName final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InPrefix;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_BuildStageName) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_BuildStageName");
static_assert(sizeof(StageIdUtilityLibrary_BuildStageName) == 0x000028, "Wrong size on StageIdUtilityLibrary_BuildStageName");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageName, InId) == 0x000000, "Member 'StageIdUtilityLibrary_BuildStageName::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageName, InPrefix) == 0x000008, "Member 'StageIdUtilityLibrary_BuildStageName::InPrefix' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageName, ReturnValue) == 0x000018, "Member 'StageIdUtilityLibrary_BuildStageName::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.BuildStageString
// 0x0028 (0x0028 - 0x0000)
struct StageIdUtilityLibrary_BuildStageString final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InPrefix;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_BuildStageString) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_BuildStageString");
static_assert(sizeof(StageIdUtilityLibrary_BuildStageString) == 0x000028, "Wrong size on StageIdUtilityLibrary_BuildStageString");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageString, InId) == 0x000000, "Member 'StageIdUtilityLibrary_BuildStageString::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageString, InPrefix) == 0x000008, "Member 'StageIdUtilityLibrary_BuildStageString::InPrefix' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_BuildStageString, ReturnValue) == 0x000018, "Member 'StageIdUtilityLibrary_BuildStageString::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetEditorLevelStageId
// 0x0001 (0x0001 - 0x0000)
struct StageIdUtilityLibrary_GetEditorLevelStageId final
{
public:
	EStageId                                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetEditorLevelStageId) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_GetEditorLevelStageId");
static_assert(sizeof(StageIdUtilityLibrary_GetEditorLevelStageId) == 0x000001, "Wrong size on StageIdUtilityLibrary_GetEditorLevelStageId");
static_assert(offsetof(StageIdUtilityLibrary_GetEditorLevelStageId, ReturnValue) == 0x000000, "Member 'StageIdUtilityLibrary_GetEditorLevelStageId::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_BG
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_BG final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_BG) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_BG");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_BG) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_BG");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_BG, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_BG::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_BG, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_BG::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_Editor
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_Editor final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_Editor) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_Editor");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_Editor) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_Editor");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_Editor, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_Editor::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_Editor, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_Editor::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_FX
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_FX final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_FX) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_FX");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_FX) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_FX");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_FX, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_FX::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_FX, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_FX::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ItemBox
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_ItemBox final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_ItemBox) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_ItemBox");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_ItemBox) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_ItemBox");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ItemBox, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_ItemBox::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ItemBox, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_ItemBox::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ItemBoxFinalLap
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_ItemBoxFinalLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ItemBoxIrregular
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_ItemBoxIrregular::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ObjectGame
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_ObjectGame final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_ObjectGame) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_ObjectGame");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_ObjectGame) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_ObjectGame");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ObjectGame, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_ObjectGame::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ObjectGame, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_ObjectGame::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ObjectGameFinalLap
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_ObjectGameFinalLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_ObjectGameIrregular
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_ObjectGameIrregular::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetLevelName_Sound
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetLevelName_Sound final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetLevelName_Sound) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetLevelName_Sound");
static_assert(sizeof(StageIdUtilityLibrary_GetLevelName_Sound) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetLevelName_Sound");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_Sound, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetLevelName_Sound::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetLevelName_Sound, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetLevelName_Sound::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetStageEndNumber
// 0x0008 (0x0008 - 0x0000)
struct StageIdUtilityLibrary_GetStageEndNumber final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetStageEndNumber) == 0x000004, "Wrong alignment on StageIdUtilityLibrary_GetStageEndNumber");
static_assert(sizeof(StageIdUtilityLibrary_GetStageEndNumber) == 0x000008, "Wrong size on StageIdUtilityLibrary_GetStageEndNumber");
static_assert(offsetof(StageIdUtilityLibrary_GetStageEndNumber, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetStageEndNumber::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetStageEndNumber, ReturnValue) == 0x000004, "Member 'StageIdUtilityLibrary_GetStageEndNumber::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetStageId
// 0x0008 (0x0008 - 0x0000)
struct StageIdUtilityLibrary_GetStageId final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StageIdUtilityLibrary_GetStageId) == 0x000004, "Wrong alignment on StageIdUtilityLibrary_GetStageId");
static_assert(sizeof(StageIdUtilityLibrary_GetStageId) == 0x000008, "Wrong size on StageIdUtilityLibrary_GetStageId");
static_assert(offsetof(StageIdUtilityLibrary_GetStageId, InNumber) == 0x000000, "Member 'StageIdUtilityLibrary_GetStageId::InNumber' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetStageId, ReturnValue) == 0x000004, "Member 'StageIdUtilityLibrary_GetStageId::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetStageIdByActor
// 0x0010 (0x0010 - 0x0000)
struct StageIdUtilityLibrary_GetStageIdByActor final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StageIdUtilityLibrary_GetStageIdByActor) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetStageIdByActor");
static_assert(sizeof(StageIdUtilityLibrary_GetStageIdByActor) == 0x000010, "Wrong size on StageIdUtilityLibrary_GetStageIdByActor");
static_assert(offsetof(StageIdUtilityLibrary_GetStageIdByActor, Actor) == 0x000000, "Member 'StageIdUtilityLibrary_GetStageIdByActor::Actor' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetStageIdByActor, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetStageIdByActor::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetStageName
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetStageName final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetStageName) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetStageName");
static_assert(sizeof(StageIdUtilityLibrary_GetStageName) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetStageName");
static_assert(offsetof(StageIdUtilityLibrary_GetStageName, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetStageName::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetStageName, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetStageName::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetStageNumber
// 0x0008 (0x0008 - 0x0000)
struct StageIdUtilityLibrary_GetStageNumber final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetStageNumber) == 0x000004, "Wrong alignment on StageIdUtilityLibrary_GetStageNumber");
static_assert(sizeof(StageIdUtilityLibrary_GetStageNumber) == 0x000008, "Wrong size on StageIdUtilityLibrary_GetStageNumber");
static_assert(offsetof(StageIdUtilityLibrary_GetStageNumber, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetStageNumber::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetStageNumber, ReturnValue) == 0x000004, "Member 'StageIdUtilityLibrary_GetStageNumber::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.GetStageString
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_GetStageString final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_GetStageString) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_GetStageString");
static_assert(sizeof(StageIdUtilityLibrary_GetStageString) == 0x000018, "Wrong size on StageIdUtilityLibrary_GetStageString");
static_assert(offsetof(StageIdUtilityLibrary_GetStageString, InId) == 0x000000, "Member 'StageIdUtilityLibrary_GetStageString::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_GetStageString, ReturnValue) == 0x000008, "Member 'StageIdUtilityLibrary_GetStageString::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsAnotherStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsAnotherStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsAnotherStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsAnotherStage");
static_assert(sizeof(StageIdUtilityLibrary_IsAnotherStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsAnotherStage");
static_assert(offsetof(StageIdUtilityLibrary_IsAnotherStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsAnotherStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsAnotherStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsAnotherStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsCommonStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsCommonStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsCommonStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsCommonStage");
static_assert(sizeof(StageIdUtilityLibrary_IsCommonStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsCommonStage");
static_assert(offsetof(StageIdUtilityLibrary_IsCommonStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsCommonStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsCommonStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsCommonStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsDebugAnotherStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsDebugAnotherStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsDebugAnotherStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsDebugAnotherStage");
static_assert(sizeof(StageIdUtilityLibrary_IsDebugAnotherStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsDebugAnotherStage");
static_assert(offsetof(StageIdUtilityLibrary_IsDebugAnotherStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsDebugAnotherStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsDebugAnotherStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsDebugAnotherStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsDebugMainStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsDebugMainStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsDebugMainStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsDebugMainStage");
static_assert(sizeof(StageIdUtilityLibrary_IsDebugMainStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsDebugMainStage");
static_assert(offsetof(StageIdUtilityLibrary_IsDebugMainStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsDebugMainStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsDebugMainStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsDebugMainStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsDebugStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsDebugStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsDebugStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsDebugStage");
static_assert(sizeof(StageIdUtilityLibrary_IsDebugStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsDebugStage");
static_assert(offsetof(StageIdUtilityLibrary_IsDebugStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsDebugStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsDebugStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsDebugStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsExtndMainStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsExtndMainStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsExtndMainStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsExtndMainStage");
static_assert(sizeof(StageIdUtilityLibrary_IsExtndMainStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsExtndMainStage");
static_assert(offsetof(StageIdUtilityLibrary_IsExtndMainStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsExtndMainStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsExtndMainStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsExtndMainStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsMainStage
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsMainStage final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsMainStage) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsMainStage");
static_assert(sizeof(StageIdUtilityLibrary_IsMainStage) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsMainStage");
static_assert(offsetof(StageIdUtilityLibrary_IsMainStage, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsMainStage::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsMainStage, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsMainStage::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.IsStageIdValid
// 0x0002 (0x0002 - 0x0000)
struct StageIdUtilityLibrary_IsStageIdValid final
{
public:
	EStageId                                      InId;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StageIdUtilityLibrary_IsStageIdValid) == 0x000001, "Wrong alignment on StageIdUtilityLibrary_IsStageIdValid");
static_assert(sizeof(StageIdUtilityLibrary_IsStageIdValid) == 0x000002, "Wrong size on StageIdUtilityLibrary_IsStageIdValid");
static_assert(offsetof(StageIdUtilityLibrary_IsStageIdValid, InId) == 0x000000, "Member 'StageIdUtilityLibrary_IsStageIdValid::InId' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_IsStageIdValid, ReturnValue) == 0x000001, "Member 'StageIdUtilityLibrary_IsStageIdValid::ReturnValue' has a wrong offset!");

// Function UnionSystem.StageIdUtilityLibrary.StringToStageId
// 0x0018 (0x0018 - 0x0000)
struct StageIdUtilityLibrary_StringToStageId final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StageIdUtilityLibrary_StringToStageId) == 0x000008, "Wrong alignment on StageIdUtilityLibrary_StringToStageId");
static_assert(sizeof(StageIdUtilityLibrary_StringToStageId) == 0x000018, "Wrong size on StageIdUtilityLibrary_StringToStageId");
static_assert(offsetof(StageIdUtilityLibrary_StringToStageId, String) == 0x000000, "Member 'StageIdUtilityLibrary_StringToStageId::String' has a wrong offset!");
static_assert(offsetof(StageIdUtilityLibrary_StringToStageId, ReturnValue) == 0x000010, "Member 'StageIdUtilityLibrary_StringToStageId::ReturnValue' has a wrong offset!");

// Function UnionSystem.SwitchPlatformUtility.SetCPUBoostModeEnabled
// 0x0001 (0x0001 - 0x0000)
struct SwitchPlatformUtility_SetCPUBoostModeEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SwitchPlatformUtility_SetCPUBoostModeEnabled) == 0x000001, "Wrong alignment on SwitchPlatformUtility_SetCPUBoostModeEnabled");
static_assert(sizeof(SwitchPlatformUtility_SetCPUBoostModeEnabled) == 0x000001, "Wrong size on SwitchPlatformUtility_SetCPUBoostModeEnabled");
static_assert(offsetof(SwitchPlatformUtility_SetCPUBoostModeEnabled, bEnable) == 0x000000, "Member 'SwitchPlatformUtility_SetCPUBoostModeEnabled::bEnable' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.CheckForNewRecord
// 0x0008 (0x0008 - 0x0000)
struct TimeTrialVariousLibrary_CheckForNewRecord final
{
public:
	int32                                         InClockCount;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0005(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutMedalAcquistion;                                // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_CheckForNewRecord) == 0x000004, "Wrong alignment on TimeTrialVariousLibrary_CheckForNewRecord");
static_assert(sizeof(TimeTrialVariousLibrary_CheckForNewRecord) == 0x000008, "Wrong size on TimeTrialVariousLibrary_CheckForNewRecord");
static_assert(offsetof(TimeTrialVariousLibrary_CheckForNewRecord, InClockCount) == 0x000000, "Member 'TimeTrialVariousLibrary_CheckForNewRecord::InClockCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckForNewRecord, InStageId) == 0x000004, "Member 'TimeTrialVariousLibrary_CheckForNewRecord::InStageId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckForNewRecord, InSpeedClassId) == 0x000005, "Member 'TimeTrialVariousLibrary_CheckForNewRecord::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckForNewRecord, OutMedalAcquistion) == 0x000006, "Member 'TimeTrialVariousLibrary_CheckForNewRecord::OutMedalAcquistion' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckForNewRecord, ReturnValue) == 0x000007, "Member 'TimeTrialVariousLibrary_CheckForNewRecord::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.CheckHashGhostResultMatch
// 0x0003 (0x0003 - 0x0000)
struct TimeTrialVariousLibrary_CheckHashGhostResultMatch final
{
public:
	ESpeedClassId                                 InSpeedClass;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutResult;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_CheckHashGhostResultMatch) == 0x000001, "Wrong alignment on TimeTrialVariousLibrary_CheckHashGhostResultMatch");
static_assert(sizeof(TimeTrialVariousLibrary_CheckHashGhostResultMatch) == 0x000003, "Wrong size on TimeTrialVariousLibrary_CheckHashGhostResultMatch");
static_assert(offsetof(TimeTrialVariousLibrary_CheckHashGhostResultMatch, InSpeedClass) == 0x000000, "Member 'TimeTrialVariousLibrary_CheckHashGhostResultMatch::InSpeedClass' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckHashGhostResultMatch, InStageId) == 0x000001, "Member 'TimeTrialVariousLibrary_CheckHashGhostResultMatch::InStageId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckHashGhostResultMatch, OutResult) == 0x000002, "Member 'TimeTrialVariousLibrary_CheckHashGhostResultMatch::OutResult' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.CheckIsTargetTimeClear
// 0x0008 (0x0008 - 0x0000)
struct TimeTrialVariousLibrary_CheckIsTargetTimeClear final
{
public:
	int32                                         InClockCount;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0005(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimeTrialClearRankId                         OutClearRank;                                      // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_CheckIsTargetTimeClear) == 0x000004, "Wrong alignment on TimeTrialVariousLibrary_CheckIsTargetTimeClear");
static_assert(sizeof(TimeTrialVariousLibrary_CheckIsTargetTimeClear) == 0x000008, "Wrong size on TimeTrialVariousLibrary_CheckIsTargetTimeClear");
static_assert(offsetof(TimeTrialVariousLibrary_CheckIsTargetTimeClear, InClockCount) == 0x000000, "Member 'TimeTrialVariousLibrary_CheckIsTargetTimeClear::InClockCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckIsTargetTimeClear, InStageId) == 0x000004, "Member 'TimeTrialVariousLibrary_CheckIsTargetTimeClear::InStageId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckIsTargetTimeClear, InSpeedClassId) == 0x000005, "Member 'TimeTrialVariousLibrary_CheckIsTargetTimeClear::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckIsTargetTimeClear, OutClearRank) == 0x000006, "Member 'TimeTrialVariousLibrary_CheckIsTargetTimeClear::OutClearRank' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_CheckIsTargetTimeClear, ReturnValue) == 0x000007, "Member 'TimeTrialVariousLibrary_CheckIsTargetTimeClear::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.ConvertUserTimeTrialRaceData
// 0x0128 (0x0128 - 0x0000)
struct TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData final
{
public:
	struct FTimeTrialLapTimes                     InLapTimes;                                        // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EDriverId                                     InDriverId;                                        // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMachineCustomizeData              InMachineCustomizeData;                            // 0x0048(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUserGadgetPresetData                  InGadgetPresetData;                                // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ETimeTrialClearRankId                         InClearRank;                                       // 0x00D0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserTimeTrialRaceData                 OutRaceData;                                       // 0x00D8(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData");
static_assert(sizeof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData) == 0x000128, "Wrong size on TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData");
static_assert(offsetof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData, InLapTimes) == 0x000000, "Member 'TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData::InLapTimes' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData, InDriverId) == 0x000040, "Member 'TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData::InDriverId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData, InMachineCustomizeData) == 0x000048, "Member 'TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData::InMachineCustomizeData' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData, InGadgetPresetData) == 0x0000C0, "Member 'TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData::InGadgetPresetData' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData, InClearRank) == 0x0000D0, "Member 'TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData::InClearRank' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData, OutRaceData) == 0x0000D8, "Member 'TimeTrialVariousLibrary_ConvertUserTimeTrialRaceData::OutRaceData' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.GetCurrentRewardData
// 0x0068 (0x0068 - 0x0000)
struct TimeTrialVariousLibrary_GetCurrentRewardData final
{
public:
	struct FTimeTrialResultRewardTableData        ReturnValue;                                       // 0x0000(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_GetCurrentRewardData) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_GetCurrentRewardData");
static_assert(sizeof(TimeTrialVariousLibrary_GetCurrentRewardData) == 0x000068, "Wrong size on TimeTrialVariousLibrary_GetCurrentRewardData");
static_assert(offsetof(TimeTrialVariousLibrary_GetCurrentRewardData, ReturnValue) == 0x000000, "Member 'TimeTrialVariousLibrary_GetCurrentRewardData::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.GetNextRewardData
// 0x0078 (0x0078 - 0x0000)
struct TimeTrialVariousLibrary_GetNextRewardData final
{
public:
	int32                                         MedalCount;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutRewardCount;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutRewardMax;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutIsValid;                                        // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeTrialResultRewardTableData        ReturnValue;                                       // 0x0010(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_GetNextRewardData) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_GetNextRewardData");
static_assert(sizeof(TimeTrialVariousLibrary_GetNextRewardData) == 0x000078, "Wrong size on TimeTrialVariousLibrary_GetNextRewardData");
static_assert(offsetof(TimeTrialVariousLibrary_GetNextRewardData, MedalCount) == 0x000000, "Member 'TimeTrialVariousLibrary_GetNextRewardData::MedalCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetNextRewardData, OutRewardCount) == 0x000004, "Member 'TimeTrialVariousLibrary_GetNextRewardData::OutRewardCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetNextRewardData, OutRewardMax) == 0x000008, "Member 'TimeTrialVariousLibrary_GetNextRewardData::OutRewardMax' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetNextRewardData, OutIsValid) == 0x00000C, "Member 'TimeTrialVariousLibrary_GetNextRewardData::OutIsValid' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetNextRewardData, ReturnValue) == 0x000010, "Member 'TimeTrialVariousLibrary_GetNextRewardData::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.GetRewardData
// 0x0078 (0x0078 - 0x0000)
struct TimeTrialVariousLibrary_GetRewardData final
{
public:
	int32                                         MedalCount;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeTrialResultRewardTableData        OutRewardData;                                     // 0x0008(0x0068)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TimeTrialVariousLibrary_GetRewardData) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_GetRewardData");
static_assert(sizeof(TimeTrialVariousLibrary_GetRewardData) == 0x000078, "Wrong size on TimeTrialVariousLibrary_GetRewardData");
static_assert(offsetof(TimeTrialVariousLibrary_GetRewardData, MedalCount) == 0x000000, "Member 'TimeTrialVariousLibrary_GetRewardData::MedalCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetRewardData, OutRewardData) == 0x000008, "Member 'TimeTrialVariousLibrary_GetRewardData::OutRewardData' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetRewardData, ReturnValue) == 0x000070, "Member 'TimeTrialVariousLibrary_GetRewardData::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.GetTimeTrialBestTimeData
// 0x0044 (0x0044 - 0x0000)
struct TimeTrialVariousLibrary_GetTimeTrialBestTimeData final
{
public:
	EStageId                                      InStageId;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeTrialLapTimes                     ReturnValue;                                       // 0x0004(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_GetTimeTrialBestTimeData) == 0x000004, "Wrong alignment on TimeTrialVariousLibrary_GetTimeTrialBestTimeData");
static_assert(sizeof(TimeTrialVariousLibrary_GetTimeTrialBestTimeData) == 0x000044, "Wrong size on TimeTrialVariousLibrary_GetTimeTrialBestTimeData");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialBestTimeData, InStageId) == 0x000000, "Member 'TimeTrialVariousLibrary_GetTimeTrialBestTimeData::InStageId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialBestTimeData, InSpeedClassId) == 0x000001, "Member 'TimeTrialVariousLibrary_GetTimeTrialBestTimeData::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialBestTimeData, ReturnValue) == 0x000004, "Member 'TimeTrialVariousLibrary_GetTimeTrialBestTimeData::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.GetTimeTrialRankData
// 0x0014 (0x0014 - 0x0000)
struct TimeTrialVariousLibrary_GetTimeTrialRankData final
{
public:
	int32                                         InClockCount;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClassId;                                    // 0x0005(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeTrialRankData                     ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_GetTimeTrialRankData) == 0x000004, "Wrong alignment on TimeTrialVariousLibrary_GetTimeTrialRankData");
static_assert(sizeof(TimeTrialVariousLibrary_GetTimeTrialRankData) == 0x000014, "Wrong size on TimeTrialVariousLibrary_GetTimeTrialRankData");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialRankData, InClockCount) == 0x000000, "Member 'TimeTrialVariousLibrary_GetTimeTrialRankData::InClockCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialRankData, InStageId) == 0x000004, "Member 'TimeTrialVariousLibrary_GetTimeTrialRankData::InStageId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialRankData, InSpeedClassId) == 0x000005, "Member 'TimeTrialVariousLibrary_GetTimeTrialRankData::InSpeedClassId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialRankData, ReturnValue) == 0x000008, "Member 'TimeTrialVariousLibrary_GetTimeTrialRankData::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.GetTimeTrialTargetTime
// 0x0008 (0x0008 - 0x0000)
struct TimeTrialVariousLibrary_GetTimeTrialTargetTime final
{
public:
	ESpeedClassId                                 InSpeedClass;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      InStageId;                                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_GetTimeTrialTargetTime) == 0x000004, "Wrong alignment on TimeTrialVariousLibrary_GetTimeTrialTargetTime");
static_assert(sizeof(TimeTrialVariousLibrary_GetTimeTrialTargetTime) == 0x000008, "Wrong size on TimeTrialVariousLibrary_GetTimeTrialTargetTime");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialTargetTime, InSpeedClass) == 0x000000, "Member 'TimeTrialVariousLibrary_GetTimeTrialTargetTime::InSpeedClass' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialTargetTime, InStageId) == 0x000001, "Member 'TimeTrialVariousLibrary_GetTimeTrialTargetTime::InStageId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_GetTimeTrialTargetTime, ReturnValue) == 0x000004, "Member 'TimeTrialVariousLibrary_GetTimeTrialTargetTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.IsGhostResultReleased
// 0x0058 (0x0058 - 0x0000)
struct TimeTrialVariousLibrary_IsGhostResultReleased final
{
public:
	struct FUserTimeTrialRaceData                 InResultData;                                      // 0x0000(0x0050)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TimeTrialVariousLibrary_IsGhostResultReleased) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_IsGhostResultReleased");
static_assert(sizeof(TimeTrialVariousLibrary_IsGhostResultReleased) == 0x000058, "Wrong size on TimeTrialVariousLibrary_IsGhostResultReleased");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostResultReleased, InResultData) == 0x000000, "Member 'TimeTrialVariousLibrary_IsGhostResultReleased::InResultData' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostResultReleased, ReturnValue) == 0x000050, "Member 'TimeTrialVariousLibrary_IsGhostResultReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.IsGhostVersionCheck
// 0x0008 (0x0008 - 0x0000)
struct TimeTrialVariousLibrary_IsGhostVersionCheck final
{
public:
	int32                                         InStageVersion;                                    // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpeedClassId                                 InSpeedClass;                                      // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TimeTrialVariousLibrary_IsGhostVersionCheck) == 0x000004, "Wrong alignment on TimeTrialVariousLibrary_IsGhostVersionCheck");
static_assert(sizeof(TimeTrialVariousLibrary_IsGhostVersionCheck) == 0x000008, "Wrong size on TimeTrialVariousLibrary_IsGhostVersionCheck");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostVersionCheck, InStageVersion) == 0x000000, "Member 'TimeTrialVariousLibrary_IsGhostVersionCheck::InStageVersion' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostVersionCheck, InSpeedClass) == 0x000004, "Member 'TimeTrialVariousLibrary_IsGhostVersionCheck::InSpeedClass' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostVersionCheck, ReturnValue) == 0x000005, "Member 'TimeTrialVariousLibrary_IsGhostVersionCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.IsGhostVersionHeaderCheck
// 0x00D8 (0x00D8 - 0x0000)
struct TimeTrialVariousLibrary_IsGhostVersionHeaderCheck final
{
public:
	int32                                         InStageVersion;                                    // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplayHeader                          InGhostHeader;                                     // 0x0008(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TimeTrialVariousLibrary_IsGhostVersionHeaderCheck) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_IsGhostVersionHeaderCheck");
static_assert(sizeof(TimeTrialVariousLibrary_IsGhostVersionHeaderCheck) == 0x0000D8, "Wrong size on TimeTrialVariousLibrary_IsGhostVersionHeaderCheck");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostVersionHeaderCheck, InStageVersion) == 0x000000, "Member 'TimeTrialVariousLibrary_IsGhostVersionHeaderCheck::InStageVersion' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostVersionHeaderCheck, InGhostHeader) == 0x000008, "Member 'TimeTrialVariousLibrary_IsGhostVersionHeaderCheck::InGhostHeader' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsGhostVersionHeaderCheck, ReturnValue) == 0x0000D0, "Member 'TimeTrialVariousLibrary_IsGhostVersionHeaderCheck::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.IsReplayGhostReleased
// 0x0148 (0x0148 - 0x0000)
struct TimeTrialVariousLibrary_IsReplayGhostReleased final
{
public:
	struct FReplaySaveInfo                        InGhostData;                                       // 0x0000(0x0140)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0140(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TimeTrialVariousLibrary_IsReplayGhostReleased) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_IsReplayGhostReleased");
static_assert(sizeof(TimeTrialVariousLibrary_IsReplayGhostReleased) == 0x000148, "Wrong size on TimeTrialVariousLibrary_IsReplayGhostReleased");
static_assert(offsetof(TimeTrialVariousLibrary_IsReplayGhostReleased, InGhostData) == 0x000000, "Member 'TimeTrialVariousLibrary_IsReplayGhostReleased::InGhostData' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsReplayGhostReleased, ReturnValue) == 0x000140, "Member 'TimeTrialVariousLibrary_IsReplayGhostReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.IsTimeTrialRankCleared
// 0x0002 (0x0002 - 0x0000)
struct TimeTrialVariousLibrary_IsTimeTrialRankCleared final
{
public:
	ETimeTrialClearRankId                         InId;                                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeTrialVariousLibrary_IsTimeTrialRankCleared) == 0x000001, "Wrong alignment on TimeTrialVariousLibrary_IsTimeTrialRankCleared");
static_assert(sizeof(TimeTrialVariousLibrary_IsTimeTrialRankCleared) == 0x000002, "Wrong size on TimeTrialVariousLibrary_IsTimeTrialRankCleared");
static_assert(offsetof(TimeTrialVariousLibrary_IsTimeTrialRankCleared, InId) == 0x000000, "Member 'TimeTrialVariousLibrary_IsTimeTrialRankCleared::InId' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_IsTimeTrialRankCleared, ReturnValue) == 0x000001, "Member 'TimeTrialVariousLibrary_IsTimeTrialRankCleared::ReturnValue' has a wrong offset!");

// Function UnionSystem.TimeTrialVariousLibrary.isTimeTrialResultReward
// 0x0018 (0x0018 - 0x0000)
struct TimeTrialVariousLibrary_isTimeTrialResultReward final
{
public:
	int32                                         MedalCount;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             ResultRewardDataTable;                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TimeTrialVariousLibrary_isTimeTrialResultReward) == 0x000008, "Wrong alignment on TimeTrialVariousLibrary_isTimeTrialResultReward");
static_assert(sizeof(TimeTrialVariousLibrary_isTimeTrialResultReward) == 0x000018, "Wrong size on TimeTrialVariousLibrary_isTimeTrialResultReward");
static_assert(offsetof(TimeTrialVariousLibrary_isTimeTrialResultReward, MedalCount) == 0x000000, "Member 'TimeTrialVariousLibrary_isTimeTrialResultReward::MedalCount' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_isTimeTrialResultReward, ResultRewardDataTable) == 0x000008, "Member 'TimeTrialVariousLibrary_isTimeTrialResultReward::ResultRewardDataTable' has a wrong offset!");
static_assert(offsetof(TimeTrialVariousLibrary_isTimeTrialResultReward, ReturnValue) == 0x000010, "Member 'TimeTrialVariousLibrary_isTimeTrialResultReward::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.CreateAdvertiseWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_CreateAdvertiseWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_CreateAdvertiseWidget) == 0x000008, "Wrong alignment on UISubsystem_CreateAdvertiseWidget");
static_assert(sizeof(UISubsystem_CreateAdvertiseWidget) == 0x000008, "Wrong size on UISubsystem_CreateAdvertiseWidget");
static_assert(offsetof(UISubsystem_CreateAdvertiseWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_CreateAdvertiseWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.CreateAutoSaveInfoWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_CreateAutoSaveInfoWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_CreateAutoSaveInfoWidget) == 0x000008, "Wrong alignment on UISubsystem_CreateAutoSaveInfoWidget");
static_assert(sizeof(UISubsystem_CreateAutoSaveInfoWidget) == 0x000008, "Wrong size on UISubsystem_CreateAutoSaveInfoWidget");
static_assert(offsetof(UISubsystem_CreateAutoSaveInfoWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_CreateAutoSaveInfoWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.CreateFriendListWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_CreateFriendListWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_CreateFriendListWidget) == 0x000008, "Wrong alignment on UISubsystem_CreateFriendListWidget");
static_assert(sizeof(UISubsystem_CreateFriendListWidget) == 0x000008, "Wrong size on UISubsystem_CreateFriendListWidget");
static_assert(offsetof(UISubsystem_CreateFriendListWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_CreateFriendListWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.CreateProfileErrorPopupWindow
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_CreateProfileErrorPopupWindow final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_CreateProfileErrorPopupWindow) == 0x000008, "Wrong alignment on UISubsystem_CreateProfileErrorPopupWindow");
static_assert(sizeof(UISubsystem_CreateProfileErrorPopupWindow) == 0x000008, "Wrong size on UISubsystem_CreateProfileErrorPopupWindow");
static_assert(offsetof(UISubsystem_CreateProfileErrorPopupWindow, ReturnValue) == 0x000000, "Member 'UISubsystem_CreateProfileErrorPopupWindow::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.CreateRewardDisplayWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_CreateRewardDisplayWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_CreateRewardDisplayWidget) == 0x000008, "Wrong alignment on UISubsystem_CreateRewardDisplayWidget");
static_assert(sizeof(UISubsystem_CreateRewardDisplayWidget) == 0x000008, "Wrong size on UISubsystem_CreateRewardDisplayWidget");
static_assert(offsetof(UISubsystem_CreateRewardDisplayWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_CreateRewardDisplayWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.GetAdvertiseWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_GetAdvertiseWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_GetAdvertiseWidget) == 0x000008, "Wrong alignment on UISubsystem_GetAdvertiseWidget");
static_assert(sizeof(UISubsystem_GetAdvertiseWidget) == 0x000008, "Wrong size on UISubsystem_GetAdvertiseWidget");
static_assert(offsetof(UISubsystem_GetAdvertiseWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_GetAdvertiseWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.GetAutoSaveInfoWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_GetAutoSaveInfoWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_GetAutoSaveInfoWidget) == 0x000008, "Wrong alignment on UISubsystem_GetAutoSaveInfoWidget");
static_assert(sizeof(UISubsystem_GetAutoSaveInfoWidget) == 0x000008, "Wrong size on UISubsystem_GetAutoSaveInfoWidget");
static_assert(offsetof(UISubsystem_GetAutoSaveInfoWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_GetAutoSaveInfoWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.GetFriendListWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_GetFriendListWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_GetFriendListWidget) == 0x000008, "Wrong alignment on UISubsystem_GetFriendListWidget");
static_assert(sizeof(UISubsystem_GetFriendListWidget) == 0x000008, "Wrong size on UISubsystem_GetFriendListWidget");
static_assert(offsetof(UISubsystem_GetFriendListWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_GetFriendListWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.GetPopupWindowType
// 0x0001 (0x0001 - 0x0000)
struct UISubsystem_GetPopupWindowType final
{
public:
	EPopupWindowType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_GetPopupWindowType) == 0x000001, "Wrong alignment on UISubsystem_GetPopupWindowType");
static_assert(sizeof(UISubsystem_GetPopupWindowType) == 0x000001, "Wrong size on UISubsystem_GetPopupWindowType");
static_assert(offsetof(UISubsystem_GetPopupWindowType, ReturnValue) == 0x000000, "Member 'UISubsystem_GetPopupWindowType::ReturnValue' has a wrong offset!");

// Function UnionSystem.UISubsystem.GetRewardDisplayWidget
// 0x0008 (0x0008 - 0x0000)
struct UISubsystem_GetRewardDisplayWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UISubsystem_GetRewardDisplayWidget) == 0x000008, "Wrong alignment on UISubsystem_GetRewardDisplayWidget");
static_assert(sizeof(UISubsystem_GetRewardDisplayWidget) == 0x000008, "Wrong size on UISubsystem_GetRewardDisplayWidget");
static_assert(offsetof(UISubsystem_GetRewardDisplayWidget, ReturnValue) == 0x000000, "Member 'UISubsystem_GetRewardDisplayWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionAtomComponent.OnStatusChangedFunc
// 0x0010 (0x0010 - 0x0000)
struct UnionAtomComponent_OnStatusChangedFunc final
{
public:
	EAtomComponentStatus                          Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         AtomComponent;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionAtomComponent_OnStatusChangedFunc) == 0x000008, "Wrong alignment on UnionAtomComponent_OnStatusChangedFunc");
static_assert(sizeof(UnionAtomComponent_OnStatusChangedFunc) == 0x000010, "Wrong size on UnionAtomComponent_OnStatusChangedFunc");
static_assert(offsetof(UnionAtomComponent_OnStatusChangedFunc, Status) == 0x000000, "Member 'UnionAtomComponent_OnStatusChangedFunc::Status' has a wrong offset!");
static_assert(offsetof(UnionAtomComponent_OnStatusChangedFunc, AtomComponent) == 0x000008, "Member 'UnionAtomComponent_OnStatusChangedFunc::AtomComponent' has a wrong offset!");

// Function UnionSystem.UnionAtomComponent.PlayWithAutoAttach
// 0x0004 (0x0004 - 0x0000)
struct UnionAtomComponent_PlayWithAutoAttach final
{
public:
	float                                         InStartTime;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionAtomComponent_PlayWithAutoAttach) == 0x000004, "Wrong alignment on UnionAtomComponent_PlayWithAutoAttach");
static_assert(sizeof(UnionAtomComponent_PlayWithAutoAttach) == 0x000004, "Wrong size on UnionAtomComponent_PlayWithAutoAttach");
static_assert(offsetof(UnionAtomComponent_PlayWithAutoAttach, InStartTime) == 0x000000, "Member 'UnionAtomComponent_PlayWithAutoAttach::InStartTime' has a wrong offset!");

// Function UnionSystem.UnionAtomComponent.SetPanSplit
// 0x0002 (0x0002 - 0x0000)
struct UnionAtomComponent_SetPanSplit final
{
public:
	ESoundPan                                     Pan;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionAtomComponent_SetPanSplit) == 0x000001, "Wrong alignment on UnionAtomComponent_SetPanSplit");
static_assert(sizeof(UnionAtomComponent_SetPanSplit) == 0x000002, "Wrong size on UnionAtomComponent_SetPanSplit");
static_assert(offsetof(UnionAtomComponent_SetPanSplit, Pan) == 0x000000, "Member 'UnionAtomComponent_SetPanSplit::Pan' has a wrong offset!");
static_assert(offsetof(UnionAtomComponent_SetPanSplit, ReturnValue) == 0x000001, "Member 'UnionAtomComponent_SetPanSplit::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionChallengeManager.SetIsRaceSequence
// 0x0001 (0x0001 - 0x0000)
struct UnionChallengeManager_SetIsRaceSequence final
{
public:
	bool                                          IsRace;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionChallengeManager_SetIsRaceSequence) == 0x000001, "Wrong alignment on UnionChallengeManager_SetIsRaceSequence");
static_assert(sizeof(UnionChallengeManager_SetIsRaceSequence) == 0x000001, "Wrong size on UnionChallengeManager_SetIsRaceSequence");
static_assert(offsetof(UnionChallengeManager_SetIsRaceSequence, IsRace) == 0x000000, "Member 'UnionChallengeManager_SetIsRaceSequence::IsRace' has a wrong offset!");

// Function UnionSystem.UnionChallengeManager.GetIsRaceSequence
// 0x0001 (0x0001 - 0x0000)
struct UnionChallengeManager_GetIsRaceSequence final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionChallengeManager_GetIsRaceSequence) == 0x000001, "Wrong alignment on UnionChallengeManager_GetIsRaceSequence");
static_assert(sizeof(UnionChallengeManager_GetIsRaceSequence) == 0x000001, "Wrong size on UnionChallengeManager_GetIsRaceSequence");
static_assert(offsetof(UnionChallengeManager_GetIsRaceSequence, ReturnValue) == 0x000000, "Member 'UnionChallengeManager_GetIsRaceSequence::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseAlbum
// 0x0008 (0x0008 - 0x0000)
struct UnionContentUtils_CanUseAlbum final
{
public:
	int32                                         AlbumID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionContentUtils_CanUseAlbum) == 0x000004, "Wrong alignment on UnionContentUtils_CanUseAlbum");
static_assert(sizeof(UnionContentUtils_CanUseAlbum) == 0x000008, "Wrong size on UnionContentUtils_CanUseAlbum");
static_assert(offsetof(UnionContentUtils_CanUseAlbum, AlbumID) == 0x000000, "Member 'UnionContentUtils_CanUseAlbum::AlbumID' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseAlbum, ReturnValue) == 0x000004, "Member 'UnionContentUtils_CanUseAlbum::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseCharacter
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_CanUseCharacter final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_CanUseCharacter) == 0x000001, "Wrong alignment on UnionContentUtils_CanUseCharacter");
static_assert(sizeof(UnionContentUtils_CanUseCharacter) == 0x000002, "Wrong size on UnionContentUtils_CanUseCharacter");
static_assert(offsetof(UnionContentUtils_CanUseCharacter, DriverId) == 0x000000, "Member 'UnionContentUtils_CanUseCharacter::DriverId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseCharacter, ReturnValue) == 0x000001, "Member 'UnionContentUtils_CanUseCharacter::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseHonorTitle
// 0x0008 (0x0008 - 0x0000)
struct UnionContentUtils_CanUseHonorTitle final
{
public:
	int32                                         HonorTitleId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionContentUtils_CanUseHonorTitle) == 0x000004, "Wrong alignment on UnionContentUtils_CanUseHonorTitle");
static_assert(sizeof(UnionContentUtils_CanUseHonorTitle) == 0x000008, "Wrong size on UnionContentUtils_CanUseHonorTitle");
static_assert(offsetof(UnionContentUtils_CanUseHonorTitle, HonorTitleId) == 0x000000, "Member 'UnionContentUtils_CanUseHonorTitle::HonorTitleId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseHonorTitle, ReturnValue) == 0x000004, "Member 'UnionContentUtils_CanUseHonorTitle::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseMachine
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_CanUseMachine final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_CanUseMachine) == 0x000001, "Wrong alignment on UnionContentUtils_CanUseMachine");
static_assert(sizeof(UnionContentUtils_CanUseMachine) == 0x000002, "Wrong size on UnionContentUtils_CanUseMachine");
static_assert(offsetof(UnionContentUtils_CanUseMachine, MachineId) == 0x000000, "Member 'UnionContentUtils_CanUseMachine::MachineId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseMachine, ReturnValue) == 0x000001, "Member 'UnionContentUtils_CanUseMachine::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseStageByGameMode
// 0x0003 (0x0003 - 0x0000)
struct UnionContentUtils_CanUseStageByGameMode final
{
public:
	EGameModeId                                   GameModeID;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      StageId;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_CanUseStageByGameMode) == 0x000001, "Wrong alignment on UnionContentUtils_CanUseStageByGameMode");
static_assert(sizeof(UnionContentUtils_CanUseStageByGameMode) == 0x000003, "Wrong size on UnionContentUtils_CanUseStageByGameMode");
static_assert(offsetof(UnionContentUtils_CanUseStageByGameMode, GameModeID) == 0x000000, "Member 'UnionContentUtils_CanUseStageByGameMode::GameModeID' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseStageByGameMode, StageId) == 0x000001, "Member 'UnionContentUtils_CanUseStageByGameMode::StageId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseStageByGameMode, ReturnValue) == 0x000002, "Member 'UnionContentUtils_CanUseStageByGameMode::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseStageByGameModeForCourseSelect
// 0x0003 (0x0003 - 0x0000)
struct UnionContentUtils_CanUseStageByGameModeForCourseSelect final
{
public:
	EGameModeId                                   GameModeID;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      StageId;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_CanUseStageByGameModeForCourseSelect) == 0x000001, "Wrong alignment on UnionContentUtils_CanUseStageByGameModeForCourseSelect");
static_assert(sizeof(UnionContentUtils_CanUseStageByGameModeForCourseSelect) == 0x000003, "Wrong size on UnionContentUtils_CanUseStageByGameModeForCourseSelect");
static_assert(offsetof(UnionContentUtils_CanUseStageByGameModeForCourseSelect, GameModeID) == 0x000000, "Member 'UnionContentUtils_CanUseStageByGameModeForCourseSelect::GameModeID' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseStageByGameModeForCourseSelect, StageId) == 0x000001, "Member 'UnionContentUtils_CanUseStageByGameModeForCourseSelect::StageId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseStageByGameModeForCourseSelect, ReturnValue) == 0x000002, "Member 'UnionContentUtils_CanUseStageByGameModeForCourseSelect::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.CanUseSticker
// 0x0008 (0x0008 - 0x0000)
struct UnionContentUtils_CanUseSticker final
{
public:
	int32                                         stickerId;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionContentUtils_CanUseSticker) == 0x000004, "Wrong alignment on UnionContentUtils_CanUseSticker");
static_assert(sizeof(UnionContentUtils_CanUseSticker) == 0x000008, "Wrong size on UnionContentUtils_CanUseSticker");
static_assert(offsetof(UnionContentUtils_CanUseSticker, stickerId) == 0x000000, "Member 'UnionContentUtils_CanUseSticker::stickerId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_CanUseSticker, ReturnValue) == 0x000004, "Member 'UnionContentUtils_CanUseSticker::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.GetIsItemReleased
// 0x0010 (0x0010 - 0x0000)
struct UnionContentUtils_GetIsItemReleased final
{
public:
	struct FContentItem                           CheckItem;                                         // 0x0000(0x000C)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          IsReleased;                                        // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionContentUtils_GetIsItemReleased) == 0x000004, "Wrong alignment on UnionContentUtils_GetIsItemReleased");
static_assert(sizeof(UnionContentUtils_GetIsItemReleased) == 0x000010, "Wrong size on UnionContentUtils_GetIsItemReleased");
static_assert(offsetof(UnionContentUtils_GetIsItemReleased, CheckItem) == 0x000000, "Member 'UnionContentUtils_GetIsItemReleased::CheckItem' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_GetIsItemReleased, IsReleased) == 0x00000C, "Member 'UnionContentUtils_GetIsItemReleased::IsReleased' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.GetUseItemList
// 0x0028 (0x0028 - 0x0000)
struct UnionContentUtils_GetUseItemList final
{
public:
	EGameModeId                                   GameModeID;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContentItem>                   CheckItemList;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FContentItem>                   UnlockItemList;                                    // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_GetUseItemList) == 0x000008, "Wrong alignment on UnionContentUtils_GetUseItemList");
static_assert(sizeof(UnionContentUtils_GetUseItemList) == 0x000028, "Wrong size on UnionContentUtils_GetUseItemList");
static_assert(offsetof(UnionContentUtils_GetUseItemList, GameModeID) == 0x000000, "Member 'UnionContentUtils_GetUseItemList::GameModeID' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_GetUseItemList, CheckItemList) == 0x000008, "Member 'UnionContentUtils_GetUseItemList::CheckItemList' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_GetUseItemList, UnlockItemList) == 0x000018, "Member 'UnionContentUtils_GetUseItemList::UnlockItemList' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsAuraReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsAuraReleased final
{
public:
	EMachineAuraId                                AuraId;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsAuraReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsAuraReleased");
static_assert(sizeof(UnionContentUtils_IsAuraReleased) == 0x000002, "Wrong size on UnionContentUtils_IsAuraReleased");
static_assert(offsetof(UnionContentUtils_IsAuraReleased, AuraId) == 0x000000, "Member 'UnionContentUtils_IsAuraReleased::AuraId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsAuraReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsAuraReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsBusyCheckContent
// 0x0001 (0x0001 - 0x0000)
struct UnionContentUtils_IsBusyCheckContent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsBusyCheckContent) == 0x000001, "Wrong alignment on UnionContentUtils_IsBusyCheckContent");
static_assert(sizeof(UnionContentUtils_IsBusyCheckContent) == 0x000001, "Wrong size on UnionContentUtils_IsBusyCheckContent");
static_assert(offsetof(UnionContentUtils_IsBusyCheckContent, ReturnValue) == 0x000000, "Member 'UnionContentUtils_IsBusyCheckContent::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsCharacterReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsCharacterReleased final
{
public:
	EDriverId                                     DriverId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsCharacterReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsCharacterReleased");
static_assert(sizeof(UnionContentUtils_IsCharacterReleased) == 0x000002, "Wrong size on UnionContentUtils_IsCharacterReleased");
static_assert(offsetof(UnionContentUtils_IsCharacterReleased, DriverId) == 0x000000, "Member 'UnionContentUtils_IsCharacterReleased::DriverId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsCharacterReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsCharacterReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsGadgetReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsGadgetReleased final
{
public:
	EGadgetId                                     gadgetId;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsGadgetReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsGadgetReleased");
static_assert(sizeof(UnionContentUtils_IsGadgetReleased) == 0x000002, "Wrong size on UnionContentUtils_IsGadgetReleased");
static_assert(offsetof(UnionContentUtils_IsGadgetReleased, gadgetId) == 0x000000, "Member 'UnionContentUtils_IsGadgetReleased::gadgetId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsGadgetReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsGadgetReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsHonorTitleReleased
// 0x0008 (0x0008 - 0x0000)
struct UnionContentUtils_IsHonorTitleReleased final
{
public:
	int32                                         HonorTitleId;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionContentUtils_IsHonorTitleReleased) == 0x000004, "Wrong alignment on UnionContentUtils_IsHonorTitleReleased");
static_assert(sizeof(UnionContentUtils_IsHonorTitleReleased) == 0x000008, "Wrong size on UnionContentUtils_IsHonorTitleReleased");
static_assert(offsetof(UnionContentUtils_IsHonorTitleReleased, HonorTitleId) == 0x000000, "Member 'UnionContentUtils_IsHonorTitleReleased::HonorTitleId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsHonorTitleReleased, ReturnValue) == 0x000004, "Member 'UnionContentUtils_IsHonorTitleReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsHornReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsHornReleased final
{
public:
	EMachineHornType                              hornId;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsHornReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsHornReleased");
static_assert(sizeof(UnionContentUtils_IsHornReleased) == 0x000002, "Wrong size on UnionContentUtils_IsHornReleased");
static_assert(offsetof(UnionContentUtils_IsHornReleased, hornId) == 0x000000, "Member 'UnionContentUtils_IsHornReleased::hornId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsHornReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsHornReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsMachineFrontPartsReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsMachineFrontPartsReleased final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsMachineFrontPartsReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsMachineFrontPartsReleased");
static_assert(sizeof(UnionContentUtils_IsMachineFrontPartsReleased) == 0x000002, "Wrong size on UnionContentUtils_IsMachineFrontPartsReleased");
static_assert(offsetof(UnionContentUtils_IsMachineFrontPartsReleased, MachineId) == 0x000000, "Member 'UnionContentUtils_IsMachineFrontPartsReleased::MachineId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsMachineFrontPartsReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsMachineFrontPartsReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsMachineRearPartsReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsMachineRearPartsReleased final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsMachineRearPartsReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsMachineRearPartsReleased");
static_assert(sizeof(UnionContentUtils_IsMachineRearPartsReleased) == 0x000002, "Wrong size on UnionContentUtils_IsMachineRearPartsReleased");
static_assert(offsetof(UnionContentUtils_IsMachineRearPartsReleased, MachineId) == 0x000000, "Member 'UnionContentUtils_IsMachineRearPartsReleased::MachineId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsMachineRearPartsReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsMachineRearPartsReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsMachineTirePartsReleased
// 0x0002 (0x0002 - 0x0000)
struct UnionContentUtils_IsMachineTirePartsReleased final
{
public:
	EMachineId                                    MachineId;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_IsMachineTirePartsReleased) == 0x000001, "Wrong alignment on UnionContentUtils_IsMachineTirePartsReleased");
static_assert(sizeof(UnionContentUtils_IsMachineTirePartsReleased) == 0x000002, "Wrong size on UnionContentUtils_IsMachineTirePartsReleased");
static_assert(offsetof(UnionContentUtils_IsMachineTirePartsReleased, MachineId) == 0x000000, "Member 'UnionContentUtils_IsMachineTirePartsReleased::MachineId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsMachineTirePartsReleased, ReturnValue) == 0x000001, "Member 'UnionContentUtils_IsMachineTirePartsReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.IsStickerReleased
// 0x0008 (0x0008 - 0x0000)
struct UnionContentUtils_IsStickerReleased final
{
public:
	int32                                         stickerId;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionContentUtils_IsStickerReleased) == 0x000004, "Wrong alignment on UnionContentUtils_IsStickerReleased");
static_assert(sizeof(UnionContentUtils_IsStickerReleased) == 0x000008, "Wrong size on UnionContentUtils_IsStickerReleased");
static_assert(offsetof(UnionContentUtils_IsStickerReleased, stickerId) == 0x000000, "Member 'UnionContentUtils_IsStickerReleased::stickerId' has a wrong offset!");
static_assert(offsetof(UnionContentUtils_IsStickerReleased, ReturnValue) == 0x000004, "Member 'UnionContentUtils_IsStickerReleased::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionContentUtils.RequestCheckContent
// 0x0001 (0x0001 - 0x0000)
struct UnionContentUtils_RequestCheckContent final
{
public:
	bool                                          bEnableMasterData;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionContentUtils_RequestCheckContent) == 0x000001, "Wrong alignment on UnionContentUtils_RequestCheckContent");
static_assert(sizeof(UnionContentUtils_RequestCheckContent) == 0x000001, "Wrong size on UnionContentUtils_RequestCheckContent");
static_assert(offsetof(UnionContentUtils_RequestCheckContent, bEnableMasterData) == 0x000000, "Member 'UnionContentUtils_RequestCheckContent::bEnableMasterData' has a wrong offset!");

// Function UnionSystem.UnionDateTime.FromUnixTimestamp
// 0x0010 (0x0010 - 0x0000)
struct UnionDateTime_FromUnixTimestamp final
{
public:
	int64                                         UnixTime;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_FromUnixTimestamp) == 0x000008, "Wrong alignment on UnionDateTime_FromUnixTimestamp");
static_assert(sizeof(UnionDateTime_FromUnixTimestamp) == 0x000010, "Wrong size on UnionDateTime_FromUnixTimestamp");
static_assert(offsetof(UnionDateTime_FromUnixTimestamp, UnixTime) == 0x000000, "Member 'UnionDateTime_FromUnixTimestamp::UnixTime' has a wrong offset!");
static_assert(offsetof(UnionDateTime_FromUnixTimestamp, ReturnValue) == 0x000008, "Member 'UnionDateTime_FromUnixTimestamp::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetServerTime
// 0x0008 (0x0008 - 0x0000)
struct UnionDateTime_GetServerTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetServerTime) == 0x000008, "Wrong alignment on UnionDateTime_GetServerTime");
static_assert(sizeof(UnionDateTime_GetServerTime) == 0x000008, "Wrong size on UnionDateTime_GetServerTime");
static_assert(offsetof(UnionDateTime_GetServerTime, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetServerTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionDay
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionDay final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionDay) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionDay");
static_assert(sizeof(UnionDateTime_GetUnionDay) == 0x000004, "Wrong size on UnionDateTime_GetUnionDay");
static_assert(offsetof(UnionDateTime_GetUnionDay, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionDay::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionHour
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionHour final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionHour) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionHour");
static_assert(sizeof(UnionDateTime_GetUnionHour) == 0x000004, "Wrong size on UnionDateTime_GetUnionHour");
static_assert(offsetof(UnionDateTime_GetUnionHour, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionHour::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionMillisecond
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionMillisecond final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionMillisecond) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionMillisecond");
static_assert(sizeof(UnionDateTime_GetUnionMillisecond) == 0x000004, "Wrong size on UnionDateTime_GetUnionMillisecond");
static_assert(offsetof(UnionDateTime_GetUnionMillisecond, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionMillisecond::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionMinute
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionMinute final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionMinute) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionMinute");
static_assert(sizeof(UnionDateTime_GetUnionMinute) == 0x000004, "Wrong size on UnionDateTime_GetUnionMinute");
static_assert(offsetof(UnionDateTime_GetUnionMinute, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionMinute::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionMonth
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionMonth final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionMonth) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionMonth");
static_assert(sizeof(UnionDateTime_GetUnionMonth) == 0x000004, "Wrong size on UnionDateTime_GetUnionMonth");
static_assert(offsetof(UnionDateTime_GetUnionMonth, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionMonth::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionNow
// 0x0008 (0x0008 - 0x0000)
struct UnionDateTime_GetUnionNow final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionNow) == 0x000008, "Wrong alignment on UnionDateTime_GetUnionNow");
static_assert(sizeof(UnionDateTime_GetUnionNow) == 0x000008, "Wrong size on UnionDateTime_GetUnionNow");
static_assert(offsetof(UnionDateTime_GetUnionNow, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionNow::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionSecond
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionSecond final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionSecond) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionSecond");
static_assert(sizeof(UnionDateTime_GetUnionSecond) == 0x000004, "Wrong size on UnionDateTime_GetUnionSecond");
static_assert(offsetof(UnionDateTime_GetUnionSecond, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionSecond::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionUtcNow
// 0x0008 (0x0008 - 0x0000)
struct UnionDateTime_GetUnionUtcNow final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionUtcNow) == 0x000008, "Wrong alignment on UnionDateTime_GetUnionUtcNow");
static_assert(sizeof(UnionDateTime_GetUnionUtcNow) == 0x000008, "Wrong size on UnionDateTime_GetUnionUtcNow");
static_assert(offsetof(UnionDateTime_GetUnionUtcNow, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionUtcNow::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.GetUnionYear
// 0x0004 (0x0004 - 0x0000)
struct UnionDateTime_GetUnionYear final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_GetUnionYear) == 0x000004, "Wrong alignment on UnionDateTime_GetUnionYear");
static_assert(sizeof(UnionDateTime_GetUnionYear) == 0x000004, "Wrong size on UnionDateTime_GetUnionYear");
static_assert(offsetof(UnionDateTime_GetUnionYear, ReturnValue) == 0x000000, "Member 'UnionDateTime_GetUnionYear::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionDateTime.SetServerTime
// 0x0008 (0x0008 - 0x0000)
struct UnionDateTime_SetServerTime final
{
public:
	struct FDateTime                              InServerTime;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_SetServerTime) == 0x000008, "Wrong alignment on UnionDateTime_SetServerTime");
static_assert(sizeof(UnionDateTime_SetServerTime) == 0x000008, "Wrong size on UnionDateTime_SetServerTime");
static_assert(offsetof(UnionDateTime_SetServerTime, InServerTime) == 0x000000, "Member 'UnionDateTime_SetServerTime::InServerTime' has a wrong offset!");

// Function UnionSystem.UnionDateTime.ToUnixTimestamp
// 0x0008 (0x0008 - 0x0000)
struct UnionDateTime_ToUnixTimestamp final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionDateTime_ToUnixTimestamp) == 0x000008, "Wrong alignment on UnionDateTime_ToUnixTimestamp");
static_assert(sizeof(UnionDateTime_ToUnixTimestamp) == 0x000008, "Wrong size on UnionDateTime_ToUnixTimestamp");
static_assert(offsetof(UnionDateTime_ToUnixTimestamp, ReturnValue) == 0x000000, "Member 'UnionDateTime_ToUnixTimestamp::ReturnValue' has a wrong offset!");

// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleDisplayNiagaraBounds
// 0x0001 (0x0001 - 0x0000)
struct DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds) == 0x000001, "Wrong alignment on DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds");
static_assert(sizeof(DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds) == 0x000001, "Wrong size on DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds");
static_assert(offsetof(DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds, bEnable) == 0x000000, "Member 'DebugViewBlueprintFunctionLibrary_ToggleDisplayNiagaraBounds::bEnable' has a wrong offset!");

// Function UnionSystem.DebugViewBlueprintFunctionLibrary.ToggleEffects
// 0x0001 (0x0001 - 0x0000)
struct DebugViewBlueprintFunctionLibrary_ToggleEffects final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DebugViewBlueprintFunctionLibrary_ToggleEffects) == 0x000001, "Wrong alignment on DebugViewBlueprintFunctionLibrary_ToggleEffects");
static_assert(sizeof(DebugViewBlueprintFunctionLibrary_ToggleEffects) == 0x000001, "Wrong size on DebugViewBlueprintFunctionLibrary_ToggleEffects");
static_assert(offsetof(DebugViewBlueprintFunctionLibrary_ToggleEffects, bEnable) == 0x000000, "Member 'DebugViewBlueprintFunctionLibrary_ToggleEffects::bEnable' has a wrong offset!");

// Function UnionSystem.UnionErrorManager.IsShowAppRestartErrorWindow
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorManager_IsShowAppRestartErrorWindow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorManager_IsShowAppRestartErrorWindow) == 0x000001, "Wrong alignment on UnionErrorManager_IsShowAppRestartErrorWindow");
static_assert(sizeof(UnionErrorManager_IsShowAppRestartErrorWindow) == 0x000001, "Wrong size on UnionErrorManager_IsShowAppRestartErrorWindow");
static_assert(offsetof(UnionErrorManager_IsShowAppRestartErrorWindow, ReturnValue) == 0x000000, "Member 'UnionErrorManager_IsShowAppRestartErrorWindow::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.CheckReturnTitleError
// 0x0002 (0x0002 - 0x0000)
struct UnionErrorUtils_CheckReturnTitleError final
{
public:
	EResponseCodeAbstract                         ResponseCodeAbstract;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_CheckReturnTitleError) == 0x000001, "Wrong alignment on UnionErrorUtils_CheckReturnTitleError");
static_assert(sizeof(UnionErrorUtils_CheckReturnTitleError) == 0x000002, "Wrong size on UnionErrorUtils_CheckReturnTitleError");
static_assert(offsetof(UnionErrorUtils_CheckReturnTitleError, ResponseCodeAbstract) == 0x000000, "Member 'UnionErrorUtils_CheckReturnTitleError::ResponseCodeAbstract' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_CheckReturnTitleError, ReturnValue) == 0x000001, "Member 'UnionErrorUtils_CheckReturnTitleError::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.DbgSetNetworkErrorWithString
// 0x0018 (0x0018 - 0x0000)
struct UnionErrorUtils_DbgSetNetworkErrorWithString final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BodyStr;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_DbgSetNetworkErrorWithString) == 0x000008, "Wrong alignment on UnionErrorUtils_DbgSetNetworkErrorWithString");
static_assert(sizeof(UnionErrorUtils_DbgSetNetworkErrorWithString) == 0x000018, "Wrong size on UnionErrorUtils_DbgSetNetworkErrorWithString");
static_assert(offsetof(UnionErrorUtils_DbgSetNetworkErrorWithString, ErrorID) == 0x000000, "Member 'UnionErrorUtils_DbgSetNetworkErrorWithString::ErrorID' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_DbgSetNetworkErrorWithString, BodyStr) == 0x000008, "Member 'UnionErrorUtils_DbgSetNetworkErrorWithString::BodyStr' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.DbgSetNetworkErrorWithText
// 0x0018 (0x0018 - 0x0000)
struct UnionErrorUtils_DbgSetNetworkErrorWithText final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BodyText;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_DbgSetNetworkErrorWithText) == 0x000008, "Wrong alignment on UnionErrorUtils_DbgSetNetworkErrorWithText");
static_assert(sizeof(UnionErrorUtils_DbgSetNetworkErrorWithText) == 0x000018, "Wrong size on UnionErrorUtils_DbgSetNetworkErrorWithText");
static_assert(offsetof(UnionErrorUtils_DbgSetNetworkErrorWithText, ErrorID) == 0x000000, "Member 'UnionErrorUtils_DbgSetNetworkErrorWithText::ErrorID' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_DbgSetNetworkErrorWithText, BodyText) == 0x000008, "Member 'UnionErrorUtils_DbgSetNetworkErrorWithText::BodyText' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetErrorLevel
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorUtils_GetErrorLevel final
{
public:
	EErrorLevel                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetErrorLevel) == 0x000001, "Wrong alignment on UnionErrorUtils_GetErrorLevel");
static_assert(sizeof(UnionErrorUtils_GetErrorLevel) == 0x000001, "Wrong size on UnionErrorUtils_GetErrorLevel");
static_assert(offsetof(UnionErrorUtils_GetErrorLevel, ReturnValue) == 0x000000, "Member 'UnionErrorUtils_GetErrorLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetOnlineErrorBodyText
// 0x0020 (0x0020 - 0x0000)
struct UnionErrorUtils_GetOnlineErrorBodyText final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppendId;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NetworkDelayLevel;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetOnlineErrorBodyText) == 0x000008, "Wrong alignment on UnionErrorUtils_GetOnlineErrorBodyText");
static_assert(sizeof(UnionErrorUtils_GetOnlineErrorBodyText) == 0x000020, "Wrong size on UnionErrorUtils_GetOnlineErrorBodyText");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorBodyText, ErrorID) == 0x000000, "Member 'UnionErrorUtils_GetOnlineErrorBodyText::ErrorID' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorBodyText, AppendId) == 0x000004, "Member 'UnionErrorUtils_GetOnlineErrorBodyText::AppendId' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorBodyText, NetworkDelayLevel) == 0x000008, "Member 'UnionErrorUtils_GetOnlineErrorBodyText::NetworkDelayLevel' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorBodyText, ReturnValue) == 0x000010, "Member 'UnionErrorUtils_GetOnlineErrorBodyText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetOnlineErrorReturnMenuText
// 0x0018 (0x0018 - 0x0000)
struct UnionErrorUtils_GetOnlineErrorReturnMenuText final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppendId;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetOnlineErrorReturnMenuText) == 0x000008, "Wrong alignment on UnionErrorUtils_GetOnlineErrorReturnMenuText");
static_assert(sizeof(UnionErrorUtils_GetOnlineErrorReturnMenuText) == 0x000018, "Wrong size on UnionErrorUtils_GetOnlineErrorReturnMenuText");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorReturnMenuText, ErrorID) == 0x000000, "Member 'UnionErrorUtils_GetOnlineErrorReturnMenuText::ErrorID' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorReturnMenuText, AppendId) == 0x000004, "Member 'UnionErrorUtils_GetOnlineErrorReturnMenuText::AppendId' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorReturnMenuText, ReturnValue) == 0x000008, "Member 'UnionErrorUtils_GetOnlineErrorReturnMenuText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetOnlineErrorTitleText
// 0x0018 (0x0018 - 0x0000)
struct UnionErrorUtils_GetOnlineErrorTitleText final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetOnlineErrorTitleText) == 0x000008, "Wrong alignment on UnionErrorUtils_GetOnlineErrorTitleText");
static_assert(sizeof(UnionErrorUtils_GetOnlineErrorTitleText) == 0x000018, "Wrong size on UnionErrorUtils_GetOnlineErrorTitleText");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorTitleText, ErrorID) == 0x000000, "Member 'UnionErrorUtils_GetOnlineErrorTitleText::ErrorID' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetOnlineErrorTitleText, ReturnValue) == 0x000008, "Member 'UnionErrorUtils_GetOnlineErrorTitleText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetServerErrorBodyText
// 0x0020 (0x0020 - 0x0000)
struct UnionErrorUtils_GetServerErrorBodyText final
{
public:
	EResponseCodeAbstract                         ResponseCode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppendId;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NetworkDelayLevel;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetServerErrorBodyText) == 0x000008, "Wrong alignment on UnionErrorUtils_GetServerErrorBodyText");
static_assert(sizeof(UnionErrorUtils_GetServerErrorBodyText) == 0x000020, "Wrong size on UnionErrorUtils_GetServerErrorBodyText");
static_assert(offsetof(UnionErrorUtils_GetServerErrorBodyText, ResponseCode) == 0x000000, "Member 'UnionErrorUtils_GetServerErrorBodyText::ResponseCode' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetServerErrorBodyText, AppendId) == 0x000004, "Member 'UnionErrorUtils_GetServerErrorBodyText::AppendId' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetServerErrorBodyText, NetworkDelayLevel) == 0x000008, "Member 'UnionErrorUtils_GetServerErrorBodyText::NetworkDelayLevel' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetServerErrorBodyText, ReturnValue) == 0x000010, "Member 'UnionErrorUtils_GetServerErrorBodyText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetServerErrorReturnMenuText
// 0x0018 (0x0018 - 0x0000)
struct UnionErrorUtils_GetServerErrorReturnMenuText final
{
public:
	EResponseCodeAbstract                         ResponseCode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppendId;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetServerErrorReturnMenuText) == 0x000008, "Wrong alignment on UnionErrorUtils_GetServerErrorReturnMenuText");
static_assert(sizeof(UnionErrorUtils_GetServerErrorReturnMenuText) == 0x000018, "Wrong size on UnionErrorUtils_GetServerErrorReturnMenuText");
static_assert(offsetof(UnionErrorUtils_GetServerErrorReturnMenuText, ResponseCode) == 0x000000, "Member 'UnionErrorUtils_GetServerErrorReturnMenuText::ResponseCode' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetServerErrorReturnMenuText, AppendId) == 0x000004, "Member 'UnionErrorUtils_GetServerErrorReturnMenuText::AppendId' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetServerErrorReturnMenuText, ReturnValue) == 0x000008, "Member 'UnionErrorUtils_GetServerErrorReturnMenuText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.GetServerErrorTitleText
// 0x0018 (0x0018 - 0x0000)
struct UnionErrorUtils_GetServerErrorTitleText final
{
public:
	EResponseCodeAbstract                         ResponseCode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_GetServerErrorTitleText) == 0x000008, "Wrong alignment on UnionErrorUtils_GetServerErrorTitleText");
static_assert(sizeof(UnionErrorUtils_GetServerErrorTitleText) == 0x000018, "Wrong size on UnionErrorUtils_GetServerErrorTitleText");
static_assert(offsetof(UnionErrorUtils_GetServerErrorTitleText, ResponseCode) == 0x000000, "Member 'UnionErrorUtils_GetServerErrorTitleText::ResponseCode' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_GetServerErrorTitleText, ReturnValue) == 0x000008, "Member 'UnionErrorUtils_GetServerErrorTitleText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.HasRaceFatalError
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorUtils_HasRaceFatalError final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_HasRaceFatalError) == 0x000001, "Wrong alignment on UnionErrorUtils_HasRaceFatalError");
static_assert(sizeof(UnionErrorUtils_HasRaceFatalError) == 0x000001, "Wrong size on UnionErrorUtils_HasRaceFatalError");
static_assert(offsetof(UnionErrorUtils_HasRaceFatalError, ReturnValue) == 0x000000, "Member 'UnionErrorUtils_HasRaceFatalError::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.IsAddFairPlayPoints
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorUtils_IsAddFairPlayPoints final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_IsAddFairPlayPoints) == 0x000001, "Wrong alignment on UnionErrorUtils_IsAddFairPlayPoints");
static_assert(sizeof(UnionErrorUtils_IsAddFairPlayPoints) == 0x000001, "Wrong size on UnionErrorUtils_IsAddFairPlayPoints");
static_assert(offsetof(UnionErrorUtils_IsAddFairPlayPoints, ReturnValue) == 0x000000, "Member 'UnionErrorUtils_IsAddFairPlayPoints::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.IsDisplayedErrorViewer
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorUtils_IsDisplayedErrorViewer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_IsDisplayedErrorViewer) == 0x000001, "Wrong alignment on UnionErrorUtils_IsDisplayedErrorViewer");
static_assert(sizeof(UnionErrorUtils_IsDisplayedErrorViewer) == 0x000001, "Wrong size on UnionErrorUtils_IsDisplayedErrorViewer");
static_assert(offsetof(UnionErrorUtils_IsDisplayedErrorViewer, ReturnValue) == 0x000000, "Member 'UnionErrorUtils_IsDisplayedErrorViewer::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.IsNeedReLogin
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorUtils_IsNeedReLogin final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_IsNeedReLogin) == 0x000001, "Wrong alignment on UnionErrorUtils_IsNeedReLogin");
static_assert(sizeof(UnionErrorUtils_IsNeedReLogin) == 0x000001, "Wrong size on UnionErrorUtils_IsNeedReLogin");
static_assert(offsetof(UnionErrorUtils_IsNeedReLogin, ReturnValue) == 0x000000, "Member 'UnionErrorUtils_IsNeedReLogin::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.SetNetworkError
// 0x0008 (0x0008 - 0x0000)
struct UnionErrorUtils_SetNetworkError final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppendId;                                          // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_SetNetworkError) == 0x000004, "Wrong alignment on UnionErrorUtils_SetNetworkError");
static_assert(sizeof(UnionErrorUtils_SetNetworkError) == 0x000008, "Wrong size on UnionErrorUtils_SetNetworkError");
static_assert(offsetof(UnionErrorUtils_SetNetworkError, ErrorID) == 0x000000, "Member 'UnionErrorUtils_SetNetworkError::ErrorID' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_SetNetworkError, AppendId) == 0x000004, "Member 'UnionErrorUtils_SetNetworkError::AppendId' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.SetNetworkErrorWithTopMenuText
// 0x0001 (0x0001 - 0x0000)
struct UnionErrorUtils_SetNetworkErrorWithTopMenuText final
{
public:
	EOnlineErrorId                                ErrorID;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_SetNetworkErrorWithTopMenuText) == 0x000001, "Wrong alignment on UnionErrorUtils_SetNetworkErrorWithTopMenuText");
static_assert(sizeof(UnionErrorUtils_SetNetworkErrorWithTopMenuText) == 0x000001, "Wrong size on UnionErrorUtils_SetNetworkErrorWithTopMenuText");
static_assert(offsetof(UnionErrorUtils_SetNetworkErrorWithTopMenuText, ErrorID) == 0x000000, "Member 'UnionErrorUtils_SetNetworkErrorWithTopMenuText::ErrorID' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.SetSeverError
// 0x0008 (0x0008 - 0x0000)
struct UnionErrorUtils_SetSeverError final
{
public:
	EResponseCodeAbstract                         ResponseCode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Code;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_SetSeverError) == 0x000004, "Wrong alignment on UnionErrorUtils_SetSeverError");
static_assert(sizeof(UnionErrorUtils_SetSeverError) == 0x000008, "Wrong size on UnionErrorUtils_SetSeverError");
static_assert(offsetof(UnionErrorUtils_SetSeverError, ResponseCode) == 0x000000, "Member 'UnionErrorUtils_SetSeverError::ResponseCode' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_SetSeverError, Code) == 0x000004, "Member 'UnionErrorUtils_SetSeverError::Code' has a wrong offset!");

// Function UnionSystem.UnionErrorUtils.SetSeverErrorWithTopMenuText
// 0x0008 (0x0008 - 0x0000)
struct UnionErrorUtils_SetSeverErrorWithTopMenuText final
{
public:
	EResponseCodeAbstract                         ResponseCode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Code;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionErrorUtils_SetSeverErrorWithTopMenuText) == 0x000004, "Wrong alignment on UnionErrorUtils_SetSeverErrorWithTopMenuText");
static_assert(sizeof(UnionErrorUtils_SetSeverErrorWithTopMenuText) == 0x000008, "Wrong size on UnionErrorUtils_SetSeverErrorWithTopMenuText");
static_assert(offsetof(UnionErrorUtils_SetSeverErrorWithTopMenuText, ResponseCode) == 0x000000, "Member 'UnionErrorUtils_SetSeverErrorWithTopMenuText::ResponseCode' has a wrong offset!");
static_assert(offsetof(UnionErrorUtils_SetSeverErrorWithTopMenuText, Code) == 0x000004, "Member 'UnionErrorUtils_SetSeverErrorWithTopMenuText::Code' has a wrong offset!");

// Function UnionSystem.UnionExecuteConsoleCommandBP.AnimationBudgetEnabled
// 0x0018 (0x0018 - 0x0000)
struct UnionExecuteConsoleCommandBP_AnimationBudgetEnabled final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionExecuteConsoleCommandBP_AnimationBudgetEnabled) == 0x000008, "Wrong alignment on UnionExecuteConsoleCommandBP_AnimationBudgetEnabled");
static_assert(sizeof(UnionExecuteConsoleCommandBP_AnimationBudgetEnabled) == 0x000018, "Wrong size on UnionExecuteConsoleCommandBP_AnimationBudgetEnabled");
static_assert(offsetof(UnionExecuteConsoleCommandBP_AnimationBudgetEnabled, WorldContextObject) == 0x000000, "Member 'UnionExecuteConsoleCommandBP_AnimationBudgetEnabled::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionExecuteConsoleCommandBP_AnimationBudgetEnabled, Value) == 0x000008, "Member 'UnionExecuteConsoleCommandBP_AnimationBudgetEnabled::Value' has a wrong offset!");

// Function UnionSystem.UnionExecuteConsoleCommandBP.DebugExecuteConsoleCommand
// 0x0018 (0x0018 - 0x0000)
struct UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Command;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand) == 0x000008, "Wrong alignment on UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand");
static_assert(sizeof(UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand) == 0x000018, "Wrong size on UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand");
static_assert(offsetof(UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand, WorldContextObject) == 0x000000, "Member 'UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand, Command) == 0x000008, "Member 'UnionExecuteConsoleCommandBP_DebugExecuteConsoleCommand::Command' has a wrong offset!");

// Function UnionSystem.UnionExecuteConsoleCommandBP.IsEnableGlobalInvalidation
// 0x0001 (0x0001 - 0x0000)
struct UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation) == 0x000001, "Wrong alignment on UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation");
static_assert(sizeof(UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation) == 0x000001, "Wrong size on UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation");
static_assert(offsetof(UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation, ReturnValue) == 0x000000, "Member 'UnionExecuteConsoleCommandBP_IsEnableGlobalInvalidation::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionExecuteConsoleCommandBP.RestartLevel
// 0x0008 (0x0008 - 0x0000)
struct UnionExecuteConsoleCommandBP_RestartLevel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionExecuteConsoleCommandBP_RestartLevel) == 0x000008, "Wrong alignment on UnionExecuteConsoleCommandBP_RestartLevel");
static_assert(sizeof(UnionExecuteConsoleCommandBP_RestartLevel) == 0x000008, "Wrong size on UnionExecuteConsoleCommandBP_RestartLevel");
static_assert(offsetof(UnionExecuteConsoleCommandBP_RestartLevel, WorldContextObject) == 0x000000, "Member 'UnionExecuteConsoleCommandBP_RestartLevel::WorldContextObject' has a wrong offset!");

// Function UnionSystem.UnionExecuteConsoleCommandBP.SlateEnableGlobalInvalidation
// 0x0018 (0x0018 - 0x0000)
struct UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation) == 0x000008, "Wrong alignment on UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation");
static_assert(sizeof(UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation) == 0x000018, "Wrong size on UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation");
static_assert(offsetof(UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation, WorldContextObject) == 0x000000, "Member 'UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation, Value) == 0x000008, "Member 'UnionExecuteConsoleCommandBP_SlateEnableGlobalInvalidation::Value' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.IsPlayingPresetForceFeedback
// 0x0008 (0x0008 - 0x0000)
struct UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPresetForceFeedbackType                      ForceFeedbackType;                                 // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback");
static_assert(sizeof(UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback) == 0x000008, "Wrong size on UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback");
static_assert(offsetof(UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback, ForceFeedbackType) == 0x000004, "Member 'UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback::ForceFeedbackType' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback, ReturnValue) == 0x000005, "Member 'UnionForceFeedbackLibrary_IsPlayingPresetForceFeedback::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.PlayForceFeedback
// 0x0020 (0x0020 - 0x0000)
struct UnionForceFeedbackLibrary_PlayForceFeedback final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag;                                               // 0x0014(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionForceFeedbackLibrary_PlayForceFeedback) == 0x000008, "Wrong alignment on UnionForceFeedbackLibrary_PlayForceFeedback");
static_assert(sizeof(UnionForceFeedbackLibrary_PlayForceFeedback) == 0x000020, "Wrong size on UnionForceFeedbackLibrary_PlayForceFeedback");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayForceFeedback, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_PlayForceFeedback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayForceFeedback, ForceFeedbackEffect) == 0x000008, "Member 'UnionForceFeedbackLibrary_PlayForceFeedback::ForceFeedbackEffect' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayForceFeedback, bLooping) == 0x000010, "Member 'UnionForceFeedbackLibrary_PlayForceFeedback::bLooping' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayForceFeedback, Tag) == 0x000014, "Member 'UnionForceFeedbackLibrary_PlayForceFeedback::Tag' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.PlayPresetForceFeedback
// 0x0008 (0x0008 - 0x0000)
struct UnionForceFeedbackLibrary_PlayPresetForceFeedback final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPresetForceFeedbackType                      ForceFeedbackType;                                 // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionForceFeedbackLibrary_PlayPresetForceFeedback) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_PlayPresetForceFeedback");
static_assert(sizeof(UnionForceFeedbackLibrary_PlayPresetForceFeedback) == 0x000008, "Wrong size on UnionForceFeedbackLibrary_PlayPresetForceFeedback");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayPresetForceFeedback, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_PlayPresetForceFeedback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayPresetForceFeedback, ForceFeedbackType) == 0x000004, "Member 'UnionForceFeedbackLibrary_PlayPresetForceFeedback::ForceFeedbackType' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.PlayPresetForceFeedbackWithParam
// 0x0010 (0x0010 - 0x0000)
struct UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPresetForceFeedbackType                      ForceFeedbackType;                                 // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupId;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayIgnoreTime;                                    // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam");
static_assert(sizeof(UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam) == 0x000010, "Wrong size on UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam, ForceFeedbackType) == 0x000004, "Member 'UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam::ForceFeedbackType' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam, GroupId) == 0x000008, "Member 'UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam::GroupId' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam, PlayIgnoreTime) == 0x00000C, "Member 'UnionForceFeedbackLibrary_PlayPresetForceFeedbackWithParam::PlayIgnoreTime' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.SetLevel
// 0x0008 (0x0008 - 0x0000)
struct UnionForceFeedbackLibrary_SetLevel final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EForceFeedbackLevel                           Level;                                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionForceFeedbackLibrary_SetLevel) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_SetLevel");
static_assert(sizeof(UnionForceFeedbackLibrary_SetLevel) == 0x000008, "Wrong size on UnionForceFeedbackLibrary_SetLevel");
static_assert(offsetof(UnionForceFeedbackLibrary_SetLevel, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_SetLevel::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_SetLevel, Level) == 0x000004, "Member 'UnionForceFeedbackLibrary_SetLevel::Level' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.StopAllForceFeedback
// 0x0004 (0x0004 - 0x0000)
struct UnionForceFeedbackLibrary_StopAllForceFeedback final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionForceFeedbackLibrary_StopAllForceFeedback) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_StopAllForceFeedback");
static_assert(sizeof(UnionForceFeedbackLibrary_StopAllForceFeedback) == 0x000004, "Wrong size on UnionForceFeedbackLibrary_StopAllForceFeedback");
static_assert(offsetof(UnionForceFeedbackLibrary_StopAllForceFeedback, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_StopAllForceFeedback::PlayerIndex' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.StopForceFeedback
// 0x0010 (0x0010 - 0x0000)
struct UnionForceFeedbackLibrary_StopForceFeedback final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionForceFeedbackLibrary_StopForceFeedback) == 0x000008, "Wrong alignment on UnionForceFeedbackLibrary_StopForceFeedback");
static_assert(sizeof(UnionForceFeedbackLibrary_StopForceFeedback) == 0x000010, "Wrong size on UnionForceFeedbackLibrary_StopForceFeedback");
static_assert(offsetof(UnionForceFeedbackLibrary_StopForceFeedback, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_StopForceFeedback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_StopForceFeedback, ForceFeedbackEffect) == 0x000008, "Member 'UnionForceFeedbackLibrary_StopForceFeedback::ForceFeedbackEffect' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.StopForceFeedbackByTag
// 0x000C (0x000C - 0x0000)
struct UnionForceFeedbackLibrary_StopForceFeedbackByTag final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0004(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionForceFeedbackLibrary_StopForceFeedbackByTag) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_StopForceFeedbackByTag");
static_assert(sizeof(UnionForceFeedbackLibrary_StopForceFeedbackByTag) == 0x00000C, "Wrong size on UnionForceFeedbackLibrary_StopForceFeedbackByTag");
static_assert(offsetof(UnionForceFeedbackLibrary_StopForceFeedbackByTag, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_StopForceFeedbackByTag::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_StopForceFeedbackByTag, Tag) == 0x000004, "Member 'UnionForceFeedbackLibrary_StopForceFeedbackByTag::Tag' has a wrong offset!");

// Function UnionSystem.UnionForceFeedbackLibrary.StopPresetForceFeedback
// 0x0008 (0x0008 - 0x0000)
struct UnionForceFeedbackLibrary_StopPresetForceFeedback final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPresetForceFeedbackType                      ForceFeedbackType;                                 // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionForceFeedbackLibrary_StopPresetForceFeedback) == 0x000004, "Wrong alignment on UnionForceFeedbackLibrary_StopPresetForceFeedback");
static_assert(sizeof(UnionForceFeedbackLibrary_StopPresetForceFeedback) == 0x000008, "Wrong size on UnionForceFeedbackLibrary_StopPresetForceFeedback");
static_assert(offsetof(UnionForceFeedbackLibrary_StopPresetForceFeedback, PlayerIndex) == 0x000000, "Member 'UnionForceFeedbackLibrary_StopPresetForceFeedback::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionForceFeedbackLibrary_StopPresetForceFeedback, ForceFeedbackType) == 0x000004, "Member 'UnionForceFeedbackLibrary_StopPresetForceFeedback::ForceFeedbackType' has a wrong offset!");

// Function UnionSystem.UnionGameInstanceSubsystem.IsCastShadowDashPanel
// 0x0001 (0x0001 - 0x0000)
struct UnionGameInstanceSubsystem_IsCastShadowDashPanel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionGameInstanceSubsystem_IsCastShadowDashPanel) == 0x000001, "Wrong alignment on UnionGameInstanceSubsystem_IsCastShadowDashPanel");
static_assert(sizeof(UnionGameInstanceSubsystem_IsCastShadowDashPanel) == 0x000001, "Wrong size on UnionGameInstanceSubsystem_IsCastShadowDashPanel");
static_assert(offsetof(UnionGameInstanceSubsystem_IsCastShadowDashPanel, ReturnValue) == 0x000000, "Member 'UnionGameInstanceSubsystem_IsCastShadowDashPanel::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionGameInstanceSubsystem.IsCastShadowItemBox
// 0x0001 (0x0001 - 0x0000)
struct UnionGameInstanceSubsystem_IsCastShadowItemBox final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionGameInstanceSubsystem_IsCastShadowItemBox) == 0x000001, "Wrong alignment on UnionGameInstanceSubsystem_IsCastShadowItemBox");
static_assert(sizeof(UnionGameInstanceSubsystem_IsCastShadowItemBox) == 0x000001, "Wrong size on UnionGameInstanceSubsystem_IsCastShadowItemBox");
static_assert(offsetof(UnionGameInstanceSubsystem_IsCastShadowItemBox, ReturnValue) == 0x000000, "Member 'UnionGameInstanceSubsystem_IsCastShadowItemBox::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionGameInstanceSubsystem.IsCastShadowRing
// 0x0001 (0x0001 - 0x0000)
struct UnionGameInstanceSubsystem_IsCastShadowRing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionGameInstanceSubsystem_IsCastShadowRing) == 0x000001, "Wrong alignment on UnionGameInstanceSubsystem_IsCastShadowRing");
static_assert(sizeof(UnionGameInstanceSubsystem_IsCastShadowRing) == 0x000001, "Wrong size on UnionGameInstanceSubsystem_IsCastShadowRing");
static_assert(offsetof(UnionGameInstanceSubsystem_IsCastShadowRing, ReturnValue) == 0x000000, "Member 'UnionGameInstanceSubsystem_IsCastShadowRing::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionGameInstanceSubsystem.SetUseCustomCulling
// 0x0001 (0x0001 - 0x0000)
struct UnionGameInstanceSubsystem_SetUseCustomCulling final
{
public:
	bool                                          IsUse;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionGameInstanceSubsystem_SetUseCustomCulling) == 0x000001, "Wrong alignment on UnionGameInstanceSubsystem_SetUseCustomCulling");
static_assert(sizeof(UnionGameInstanceSubsystem_SetUseCustomCulling) == 0x000001, "Wrong size on UnionGameInstanceSubsystem_SetUseCustomCulling");
static_assert(offsetof(UnionGameInstanceSubsystem_SetUseCustomCulling, IsUse) == 0x000000, "Member 'UnionGameInstanceSubsystem_SetUseCustomCulling::IsUse' has a wrong offset!");

// Function UnionSystem.UnionGameInstanceSubsystem.IsUseCustomCulling
// 0x0001 (0x0001 - 0x0000)
struct UnionGameInstanceSubsystem_IsUseCustomCulling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionGameInstanceSubsystem_IsUseCustomCulling) == 0x000001, "Wrong alignment on UnionGameInstanceSubsystem_IsUseCustomCulling");
static_assert(sizeof(UnionGameInstanceSubsystem_IsUseCustomCulling) == 0x000001, "Wrong size on UnionGameInstanceSubsystem_IsUseCustomCulling");
static_assert(offsetof(UnionGameInstanceSubsystem_IsUseCustomCulling, ReturnValue) == 0x000000, "Member 'UnionGameInstanceSubsystem_IsUseCustomCulling::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionGraph.Deserialize
// 0x0018 (0x0018 - 0x0000)
struct UnionGraph_Deserialize final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionGraph_Deserialize) == 0x000008, "Wrong alignment on UnionGraph_Deserialize");
static_assert(sizeof(UnionGraph_Deserialize) == 0x000018, "Wrong size on UnionGraph_Deserialize");
static_assert(offsetof(UnionGraph_Deserialize, Bytes) == 0x000000, "Member 'UnionGraph_Deserialize::Bytes' has a wrong offset!");
static_assert(offsetof(UnionGraph_Deserialize, ReturnValue) == 0x000010, "Member 'UnionGraph_Deserialize::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionGraph.Dump
// 0x0018 (0x0018 - 0x0000)
struct UnionGraph_Dump final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionGraph_Dump) == 0x000008, "Wrong alignment on UnionGraph_Dump");
static_assert(sizeof(UnionGraph_Dump) == 0x000018, "Wrong size on UnionGraph_Dump");
static_assert(offsetof(UnionGraph_Dump, Name_0) == 0x000000, "Member 'UnionGraph_Dump::Name_0' has a wrong offset!");
static_assert(offsetof(UnionGraph_Dump, ReturnValue) == 0x000010, "Member 'UnionGraph_Dump::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.Create
// 0x0020 (0x0020 - 0x0000)
struct UnionManaPlayer_Create final
{
public:
	class UMaterialInterface*                     MaterialForPrime;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     MaterialForVp9;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManaTexture*                           ManaTexture;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_Create) == 0x000008, "Wrong alignment on UnionManaPlayer_Create");
static_assert(sizeof(UnionManaPlayer_Create) == 0x000020, "Wrong size on UnionManaPlayer_Create");
static_assert(offsetof(UnionManaPlayer_Create, MaterialForPrime) == 0x000000, "Member 'UnionManaPlayer_Create::MaterialForPrime' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_Create, MaterialForVp9) == 0x000008, "Member 'UnionManaPlayer_Create::MaterialForVp9' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_Create, ManaTexture) == 0x000010, "Member 'UnionManaPlayer_Create::ManaTexture' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_Create, ReturnValue) == 0x000018, "Member 'UnionManaPlayer_Create::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.DisableTrack
// 0x0002 (0x0002 - 0x0000)
struct UnionManaPlayer_DisableTrack final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_DisableTrack) == 0x000001, "Wrong alignment on UnionManaPlayer_DisableTrack");
static_assert(sizeof(UnionManaPlayer_DisableTrack) == 0x000002, "Wrong size on UnionManaPlayer_DisableTrack");
static_assert(offsetof(UnionManaPlayer_DisableTrack, TrackType) == 0x000000, "Member 'UnionManaPlayer_DisableTrack::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_DisableTrack, ReturnValue) == 0x000001, "Member 'UnionManaPlayer_DisableTrack::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetAtomComponent
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetAtomComponent final
{
public:
	class UAtomComponent*                         ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetAtomComponent) == 0x000008, "Wrong alignment on UnionManaPlayer_GetAtomComponent");
static_assert(sizeof(UnionManaPlayer_GetAtomComponent) == 0x000008, "Wrong size on UnionManaPlayer_GetAtomComponent");
static_assert(offsetof(UnionManaPlayer_GetAtomComponent, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetAtomComponent::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetMaterial
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetMaterial final
{
public:
	class UMaterialInterface*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetMaterial) == 0x000008, "Wrong alignment on UnionManaPlayer_GetMaterial");
static_assert(sizeof(UnionManaPlayer_GetMaterial) == 0x000008, "Wrong size on UnionManaPlayer_GetMaterial");
static_assert(offsetof(UnionManaPlayer_GetMaterial, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetMaterial::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetSubtitleTrackEncoding
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetSubtitleTrackEncoding final
{
public:
	int32                                         TrackIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EManaSubtitlesEncoding                        ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_GetSubtitleTrackEncoding) == 0x000004, "Wrong alignment on UnionManaPlayer_GetSubtitleTrackEncoding");
static_assert(sizeof(UnionManaPlayer_GetSubtitleTrackEncoding) == 0x000008, "Wrong size on UnionManaPlayer_GetSubtitleTrackEncoding");
static_assert(offsetof(UnionManaPlayer_GetSubtitleTrackEncoding, TrackIndex) == 0x000000, "Member 'UnionManaPlayer_GetSubtitleTrackEncoding::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetSubtitleTrackEncoding, ReturnValue) == 0x000004, "Member 'UnionManaPlayer_GetSubtitleTrackEncoding::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetTexture
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetTexture final
{
public:
	class UManaTexture*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetTexture) == 0x000008, "Wrong alignment on UnionManaPlayer_GetTexture");
static_assert(sizeof(UnionManaPlayer_GetTexture) == 0x000008, "Wrong size on UnionManaPlayer_GetTexture");
static_assert(offsetof(UnionManaPlayer_GetTexture, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetTexture::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetTimeSyncedSource
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetTimeSyncedSource final
{
public:
	class UAtomComponent*                         ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetTimeSyncedSource) == 0x000008, "Wrong alignment on UnionManaPlayer_GetTimeSyncedSource");
static_assert(sizeof(UnionManaPlayer_GetTimeSyncedSource) == 0x000008, "Wrong size on UnionManaPlayer_GetTimeSyncedSource");
static_assert(offsetof(UnionManaPlayer_GetTimeSyncedSource, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetTimeSyncedSource::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetVolume
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetVolume final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetVolume) == 0x000004, "Wrong alignment on UnionManaPlayer_GetVolume");
static_assert(sizeof(UnionManaPlayer_GetVolume) == 0x000008, "Wrong size on UnionManaPlayer_GetVolume");
static_assert(offsetof(UnionManaPlayer_GetVolume, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetVolume::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetVolume, ReturnValue) == 0x000004, "Member 'UnionManaPlayer_GetVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.HandleManaPlayerEventPoint
// 0x0028 (0x0028 - 0x0000)
struct UnionManaPlayer_HandleManaPlayerEventPoint final
{
public:
	struct FManaEventPointInfo                    EventPointInfo;                                    // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_HandleManaPlayerEventPoint) == 0x000008, "Wrong alignment on UnionManaPlayer_HandleManaPlayerEventPoint");
static_assert(sizeof(UnionManaPlayer_HandleManaPlayerEventPoint) == 0x000028, "Wrong size on UnionManaPlayer_HandleManaPlayerEventPoint");
static_assert(offsetof(UnionManaPlayer_HandleManaPlayerEventPoint, EventPointInfo) == 0x000000, "Member 'UnionManaPlayer_HandleManaPlayerEventPoint::EventPointInfo' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.HandleManaPlayerMovieOpened
// 0x0010 (0x0010 - 0x0000)
struct UnionManaPlayer_HandleManaPlayerMovieOpened final
{
public:
	class FString                                 OpenedUrl;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_HandleManaPlayerMovieOpened) == 0x000008, "Wrong alignment on UnionManaPlayer_HandleManaPlayerMovieOpened");
static_assert(sizeof(UnionManaPlayer_HandleManaPlayerMovieOpened) == 0x000010, "Wrong size on UnionManaPlayer_HandleManaPlayerMovieOpened");
static_assert(offsetof(UnionManaPlayer_HandleManaPlayerMovieOpened, OpenedUrl) == 0x000000, "Member 'UnionManaPlayer_HandleManaPlayerMovieOpened::OpenedUrl' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.HandleManaPlayerMovieOpenFailed
// 0x0010 (0x0010 - 0x0000)
struct UnionManaPlayer_HandleManaPlayerMovieOpenFailed final
{
public:
	class FString                                 FailedUrl;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_HandleManaPlayerMovieOpenFailed) == 0x000008, "Wrong alignment on UnionManaPlayer_HandleManaPlayerMovieOpenFailed");
static_assert(sizeof(UnionManaPlayer_HandleManaPlayerMovieOpenFailed) == 0x000010, "Wrong size on UnionManaPlayer_HandleManaPlayerMovieOpenFailed");
static_assert(offsetof(UnionManaPlayer_HandleManaPlayerMovieOpenFailed, FailedUrl) == 0x000000, "Member 'UnionManaPlayer_HandleManaPlayerMovieOpenFailed::FailedUrl' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.HandleManaPlayerSubtitleChanged
// 0x0010 (0x0010 - 0x0000)
struct UnionManaPlayer_HandleManaPlayerSubtitleChanged final
{
public:
	class FText                                   Subtitle;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_HandleManaPlayerSubtitleChanged) == 0x000008, "Wrong alignment on UnionManaPlayer_HandleManaPlayerSubtitleChanged");
static_assert(sizeof(UnionManaPlayer_HandleManaPlayerSubtitleChanged) == 0x000010, "Wrong size on UnionManaPlayer_HandleManaPlayerSubtitleChanged");
static_assert(offsetof(UnionManaPlayer_HandleManaPlayerSubtitleChanged, Subtitle) == 0x000000, "Member 'UnionManaPlayer_HandleManaPlayerSubtitleChanged::Subtitle' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.Pause
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_Pause final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_Pause) == 0x000001, "Wrong alignment on UnionManaPlayer_Pause");
static_assert(sizeof(UnionManaPlayer_Pause) == 0x000001, "Wrong size on UnionManaPlayer_Pause");
static_assert(offsetof(UnionManaPlayer_Pause, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_Pause::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.Play
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_Play final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_Play) == 0x000001, "Wrong alignment on UnionManaPlayer_Play");
static_assert(sizeof(UnionManaPlayer_Play) == 0x000001, "Wrong size on UnionManaPlayer_Play");
static_assert(offsetof(UnionManaPlayer_Play, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_Play::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.Reopen
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_Reopen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_Reopen) == 0x000001, "Wrong alignment on UnionManaPlayer_Reopen");
static_assert(sizeof(UnionManaPlayer_Reopen) == 0x000001, "Wrong size on UnionManaPlayer_Reopen");
static_assert(offsetof(UnionManaPlayer_Reopen, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_Reopen::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.Rewind
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_Rewind final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_Rewind) == 0x000001, "Wrong alignment on UnionManaPlayer_Rewind");
static_assert(sizeof(UnionManaPlayer_Rewind) == 0x000001, "Wrong size on UnionManaPlayer_Rewind");
static_assert(offsetof(UnionManaPlayer_Rewind, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_Rewind::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.Seek
// 0x0010 (0x0010 - 0x0000)
struct UnionManaPlayer_Seek final
{
public:
	struct FTimespan                              Time;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_Seek) == 0x000008, "Wrong alignment on UnionManaPlayer_Seek");
static_assert(sizeof(UnionManaPlayer_Seek) == 0x000010, "Wrong size on UnionManaPlayer_Seek");
static_assert(offsetof(UnionManaPlayer_Seek, Time) == 0x000000, "Member 'UnionManaPlayer_Seek::Time' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_Seek, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_Seek::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SelectTrack
// 0x000C (0x000C - 0x0000)
struct UnionManaPlayer_SelectTrack final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_SelectTrack) == 0x000004, "Wrong alignment on UnionManaPlayer_SelectTrack");
static_assert(sizeof(UnionManaPlayer_SelectTrack) == 0x00000C, "Wrong size on UnionManaPlayer_SelectTrack");
static_assert(offsetof(UnionManaPlayer_SelectTrack, TrackType) == 0x000000, "Member 'UnionManaPlayer_SelectTrack::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SelectTrack, TrackIndex) == 0x000004, "Member 'UnionManaPlayer_SelectTrack::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SelectTrack, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_SelectTrack::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetLooping
// 0x0002 (0x0002 - 0x0000)
struct UnionManaPlayer_SetLooping final
{
public:
	bool                                          Looping;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_SetLooping) == 0x000001, "Wrong alignment on UnionManaPlayer_SetLooping");
static_assert(sizeof(UnionManaPlayer_SetLooping) == 0x000002, "Wrong size on UnionManaPlayer_SetLooping");
static_assert(offsetof(UnionManaPlayer_SetLooping, Looping) == 0x000000, "Member 'UnionManaPlayer_SetLooping::Looping' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetLooping, ReturnValue) == 0x000001, "Member 'UnionManaPlayer_SetLooping::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetMovie
// 0x000C (0x000C - 0x0000)
struct UnionManaPlayer_SetMovie final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_SetMovie) == 0x000004, "Wrong alignment on UnionManaPlayer_SetMovie");
static_assert(sizeof(UnionManaPlayer_SetMovie) == 0x00000C, "Wrong size on UnionManaPlayer_SetMovie");
static_assert(offsetof(UnionManaPlayer_SetMovie, Name_0) == 0x000000, "Member 'UnionManaPlayer_SetMovie::Name_0' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetMovie, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_SetMovie::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetRate
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_SetRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_SetRate) == 0x000004, "Wrong alignment on UnionManaPlayer_SetRate");
static_assert(sizeof(UnionManaPlayer_SetRate) == 0x000008, "Wrong size on UnionManaPlayer_SetRate");
static_assert(offsetof(UnionManaPlayer_SetRate, Rate) == 0x000000, "Member 'UnionManaPlayer_SetRate::Rate' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetRate, ReturnValue) == 0x000004, "Member 'UnionManaPlayer_SetRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetTexture
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_SetTexture final
{
public:
	class UManaTexture*                           InManaTexture;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_SetTexture) == 0x000008, "Wrong alignment on UnionManaPlayer_SetTexture");
static_assert(sizeof(UnionManaPlayer_SetTexture) == 0x000008, "Wrong size on UnionManaPlayer_SetTexture");
static_assert(offsetof(UnionManaPlayer_SetTexture, InManaTexture) == 0x000000, "Member 'UnionManaPlayer_SetTexture::InManaTexture' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetTimeSyncedSource
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_SetTimeSyncedSource final
{
public:
	class UAtomComponent*                         SyncedSource;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_SetTimeSyncedSource) == 0x000008, "Wrong alignment on UnionManaPlayer_SetTimeSyncedSource");
static_assert(sizeof(UnionManaPlayer_SetTimeSyncedSource) == 0x000008, "Wrong size on UnionManaPlayer_SetTimeSyncedSource");
static_assert(offsetof(UnionManaPlayer_SetTimeSyncedSource, SyncedSource) == 0x000000, "Member 'UnionManaPlayer_SetTimeSyncedSource::SyncedSource' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetTrackFormat
// 0x0010 (0x0010 - 0x0000)
struct UnionManaPlayer_SetTrackFormat final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FormatIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_SetTrackFormat) == 0x000004, "Wrong alignment on UnionManaPlayer_SetTrackFormat");
static_assert(sizeof(UnionManaPlayer_SetTrackFormat) == 0x000010, "Wrong size on UnionManaPlayer_SetTrackFormat");
static_assert(offsetof(UnionManaPlayer_SetTrackFormat, TrackType) == 0x000000, "Member 'UnionManaPlayer_SetTrackFormat::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetTrackFormat, TrackIndex) == 0x000004, "Member 'UnionManaPlayer_SetTrackFormat::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetTrackFormat, FormatIndex) == 0x000008, "Member 'UnionManaPlayer_SetTrackFormat::FormatIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetTrackFormat, ReturnValue) == 0x00000C, "Member 'UnionManaPlayer_SetTrackFormat::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.SetVolume
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_SetVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EManaPlayerTrack                              TrackType;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionManaPlayer_SetVolume) == 0x000004, "Wrong alignment on UnionManaPlayer_SetVolume");
static_assert(sizeof(UnionManaPlayer_SetVolume) == 0x000008, "Wrong size on UnionManaPlayer_SetVolume");
static_assert(offsetof(UnionManaPlayer_SetVolume, Volume) == 0x000000, "Member 'UnionManaPlayer_SetVolume::Volume' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetVolume, TrackType) == 0x000004, "Member 'UnionManaPlayer_SetVolume::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_SetVolume, ReturnValue) == 0x000005, "Member 'UnionManaPlayer_SetVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetDuration
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetDuration final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetDuration) == 0x000008, "Wrong alignment on UnionManaPlayer_GetDuration");
static_assert(sizeof(UnionManaPlayer_GetDuration) == 0x000008, "Wrong size on UnionManaPlayer_GetDuration");
static_assert(offsetof(UnionManaPlayer_GetDuration, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetDuration::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetFrames
// 0x0004 (0x0004 - 0x0000)
struct UnionManaPlayer_GetFrames final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetFrames) == 0x000004, "Wrong alignment on UnionManaPlayer_GetFrames");
static_assert(sizeof(UnionManaPlayer_GetFrames) == 0x000004, "Wrong size on UnionManaPlayer_GetFrames");
static_assert(offsetof(UnionManaPlayer_GetFrames, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetFrames::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetMovieFrames
// 0x0004 (0x0004 - 0x0000)
struct UnionManaPlayer_GetMovieFrames final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetMovieFrames) == 0x000004, "Wrong alignment on UnionManaPlayer_GetMovieFrames");
static_assert(sizeof(UnionManaPlayer_GetMovieFrames) == 0x000004, "Wrong size on UnionManaPlayer_GetMovieFrames");
static_assert(offsetof(UnionManaPlayer_GetMovieFrames, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetMovieFrames::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetMovieSource
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetMovieSource final
{
public:
	class UManaMovie*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetMovieSource) == 0x000008, "Wrong alignment on UnionManaPlayer_GetMovieSource");
static_assert(sizeof(UnionManaPlayer_GetMovieSource) == 0x000008, "Wrong size on UnionManaPlayer_GetMovieSource");
static_assert(offsetof(UnionManaPlayer_GetMovieSource, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetMovieSource::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetMovieTime
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetMovieTime final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetMovieTime) == 0x000008, "Wrong alignment on UnionManaPlayer_GetMovieTime");
static_assert(sizeof(UnionManaPlayer_GetMovieTime) == 0x000008, "Wrong size on UnionManaPlayer_GetMovieTime");
static_assert(offsetof(UnionManaPlayer_GetMovieTime, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetMovieTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetNumTrackFormats
// 0x000C (0x000C - 0x0000)
struct UnionManaPlayer_GetNumTrackFormats final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetNumTrackFormats) == 0x000004, "Wrong alignment on UnionManaPlayer_GetNumTrackFormats");
static_assert(sizeof(UnionManaPlayer_GetNumTrackFormats) == 0x00000C, "Wrong size on UnionManaPlayer_GetNumTrackFormats");
static_assert(offsetof(UnionManaPlayer_GetNumTrackFormats, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetNumTrackFormats::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetNumTrackFormats, TrackIndex) == 0x000004, "Member 'UnionManaPlayer_GetNumTrackFormats::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetNumTrackFormats, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_GetNumTrackFormats::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetNumTracks
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetNumTracks final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetNumTracks) == 0x000004, "Wrong alignment on UnionManaPlayer_GetNumTracks");
static_assert(sizeof(UnionManaPlayer_GetNumTracks) == 0x000008, "Wrong size on UnionManaPlayer_GetNumTracks");
static_assert(offsetof(UnionManaPlayer_GetNumTracks, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetNumTracks::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetNumTracks, ReturnValue) == 0x000004, "Member 'UnionManaPlayer_GetNumTracks::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetRate
// 0x0004 (0x0004 - 0x0000)
struct UnionManaPlayer_GetRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetRate) == 0x000004, "Wrong alignment on UnionManaPlayer_GetRate");
static_assert(sizeof(UnionManaPlayer_GetRate) == 0x000004, "Wrong size on UnionManaPlayer_GetRate");
static_assert(offsetof(UnionManaPlayer_GetRate, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetRate::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetSelectedTrack
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetSelectedTrack final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetSelectedTrack) == 0x000004, "Wrong alignment on UnionManaPlayer_GetSelectedTrack");
static_assert(sizeof(UnionManaPlayer_GetSelectedTrack) == 0x000008, "Wrong size on UnionManaPlayer_GetSelectedTrack");
static_assert(offsetof(UnionManaPlayer_GetSelectedTrack, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetSelectedTrack::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetSelectedTrack, ReturnValue) == 0x000004, "Member 'UnionManaPlayer_GetSelectedTrack::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_GetStatus final
{
public:
	EManaComponentStatus                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetStatus) == 0x000001, "Wrong alignment on UnionManaPlayer_GetStatus");
static_assert(sizeof(UnionManaPlayer_GetStatus) == 0x000001, "Wrong size on UnionManaPlayer_GetStatus");
static_assert(offsetof(UnionManaPlayer_GetStatus, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetStatus::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetTime
// 0x0008 (0x0008 - 0x0000)
struct UnionManaPlayer_GetTime final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetTime) == 0x000008, "Wrong alignment on UnionManaPlayer_GetTime");
static_assert(sizeof(UnionManaPlayer_GetTime) == 0x000008, "Wrong size on UnionManaPlayer_GetTime");
static_assert(offsetof(UnionManaPlayer_GetTime, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_GetTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetTrackDisplayName
// 0x0018 (0x0018 - 0x0000)
struct UnionManaPlayer_GetTrackDisplayName final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetTrackDisplayName) == 0x000008, "Wrong alignment on UnionManaPlayer_GetTrackDisplayName");
static_assert(sizeof(UnionManaPlayer_GetTrackDisplayName) == 0x000018, "Wrong size on UnionManaPlayer_GetTrackDisplayName");
static_assert(offsetof(UnionManaPlayer_GetTrackDisplayName, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetTrackDisplayName::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetTrackDisplayName, TrackIndex) == 0x000004, "Member 'UnionManaPlayer_GetTrackDisplayName::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetTrackDisplayName, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_GetTrackDisplayName::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetTrackFormat
// 0x000C (0x000C - 0x0000)
struct UnionManaPlayer_GetTrackFormat final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetTrackFormat) == 0x000004, "Wrong alignment on UnionManaPlayer_GetTrackFormat");
static_assert(sizeof(UnionManaPlayer_GetTrackFormat) == 0x00000C, "Wrong size on UnionManaPlayer_GetTrackFormat");
static_assert(offsetof(UnionManaPlayer_GetTrackFormat, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetTrackFormat::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetTrackFormat, TrackIndex) == 0x000004, "Member 'UnionManaPlayer_GetTrackFormat::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetTrackFormat, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_GetTrackFormat::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.GetTrackLanguage
// 0x0018 (0x0018 - 0x0000)
struct UnionManaPlayer_GetTrackLanguage final
{
public:
	EManaPlayerTrack                              TrackType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_GetTrackLanguage) == 0x000008, "Wrong alignment on UnionManaPlayer_GetTrackLanguage");
static_assert(sizeof(UnionManaPlayer_GetTrackLanguage) == 0x000018, "Wrong size on UnionManaPlayer_GetTrackLanguage");
static_assert(offsetof(UnionManaPlayer_GetTrackLanguage, TrackType) == 0x000000, "Member 'UnionManaPlayer_GetTrackLanguage::TrackType' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetTrackLanguage, TrackIndex) == 0x000004, "Member 'UnionManaPlayer_GetTrackLanguage::TrackIndex' has a wrong offset!");
static_assert(offsetof(UnionManaPlayer_GetTrackLanguage, ReturnValue) == 0x000008, "Member 'UnionManaPlayer_GetTrackLanguage::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.HasError
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_HasError final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_HasError) == 0x000001, "Wrong alignment on UnionManaPlayer_HasError");
static_assert(sizeof(UnionManaPlayer_HasError) == 0x000001, "Wrong size on UnionManaPlayer_HasError");
static_assert(offsetof(UnionManaPlayer_HasError, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_HasError::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsClosed
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsClosed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsClosed) == 0x000001, "Wrong alignment on UnionManaPlayer_IsClosed");
static_assert(sizeof(UnionManaPlayer_IsClosed) == 0x000001, "Wrong size on UnionManaPlayer_IsClosed");
static_assert(offsetof(UnionManaPlayer_IsClosed, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsClosed::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsLooping
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsLooping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsLooping) == 0x000001, "Wrong alignment on UnionManaPlayer_IsLooping");
static_assert(sizeof(UnionManaPlayer_IsLooping) == 0x000001, "Wrong size on UnionManaPlayer_IsLooping");
static_assert(offsetof(UnionManaPlayer_IsLooping, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsLooping::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsPaused
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsPaused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsPaused) == 0x000001, "Wrong alignment on UnionManaPlayer_IsPaused");
static_assert(sizeof(UnionManaPlayer_IsPaused) == 0x000001, "Wrong size on UnionManaPlayer_IsPaused");
static_assert(offsetof(UnionManaPlayer_IsPaused, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsPaused::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsPlaying) == 0x000001, "Wrong alignment on UnionManaPlayer_IsPlaying");
static_assert(sizeof(UnionManaPlayer_IsPlaying) == 0x000001, "Wrong size on UnionManaPlayer_IsPlaying");
static_assert(offsetof(UnionManaPlayer_IsPlaying, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsPlaying::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsPreparing
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsPreparing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsPreparing) == 0x000001, "Wrong alignment on UnionManaPlayer_IsPreparing");
static_assert(sizeof(UnionManaPlayer_IsPreparing) == 0x000001, "Wrong size on UnionManaPlayer_IsPreparing");
static_assert(offsetof(UnionManaPlayer_IsPreparing, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsPreparing::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsReady
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsReady) == 0x000001, "Wrong alignment on UnionManaPlayer_IsReady");
static_assert(sizeof(UnionManaPlayer_IsReady) == 0x000001, "Wrong size on UnionManaPlayer_IsReady");
static_assert(offsetof(UnionManaPlayer_IsReady, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsReady::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionManaPlayer.IsSeeking
// 0x0001 (0x0001 - 0x0000)
struct UnionManaPlayer_IsSeeking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionManaPlayer_IsSeeking) == 0x000001, "Wrong alignment on UnionManaPlayer_IsSeeking");
static_assert(sizeof(UnionManaPlayer_IsSeeking) == 0x000001, "Wrong size on UnionManaPlayer_IsSeeking");
static_assert(offsetof(UnionManaPlayer_IsSeeking, ReturnValue) == 0x000000, "Member 'UnionManaPlayer_IsSeeking::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetRequestTimeManager.IsCommunicationTime
// 0x0018 (0x0018 - 0x0000)
struct UnionNetRequestTimeManager_IsCommunicationTime final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetRequestTimeManager_IsCommunicationTime) == 0x000008, "Wrong alignment on UnionNetRequestTimeManager_IsCommunicationTime");
static_assert(sizeof(UnionNetRequestTimeManager_IsCommunicationTime) == 0x000018, "Wrong size on UnionNetRequestTimeManager_IsCommunicationTime");
static_assert(offsetof(UnionNetRequestTimeManager_IsCommunicationTime, ApiName) == 0x000000, "Member 'UnionNetRequestTimeManager_IsCommunicationTime::ApiName' has a wrong offset!");
static_assert(offsetof(UnionNetRequestTimeManager_IsCommunicationTime, ReturnValue) == 0x000010, "Member 'UnionNetRequestTimeManager_IsCommunicationTime::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetRequestTimeManager.IsCommunicationTimeCompensation
// 0x0001 (0x0001 - 0x0000)
struct UnionNetRequestTimeManager_IsCommunicationTimeCompensation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetRequestTimeManager_IsCommunicationTimeCompensation) == 0x000001, "Wrong alignment on UnionNetRequestTimeManager_IsCommunicationTimeCompensation");
static_assert(sizeof(UnionNetRequestTimeManager_IsCommunicationTimeCompensation) == 0x000001, "Wrong size on UnionNetRequestTimeManager_IsCommunicationTimeCompensation");
static_assert(offsetof(UnionNetRequestTimeManager_IsCommunicationTimeCompensation, ReturnValue) == 0x000000, "Member 'UnionNetRequestTimeManager_IsCommunicationTimeCompensation::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetRequestTimeManager.IsCommunicationTimeForError
// 0x0018 (0x0018 - 0x0000)
struct UnionNetRequestTimeManager_IsCommunicationTimeForError final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetRequestTimeManager_IsCommunicationTimeForError) == 0x000008, "Wrong alignment on UnionNetRequestTimeManager_IsCommunicationTimeForError");
static_assert(sizeof(UnionNetRequestTimeManager_IsCommunicationTimeForError) == 0x000018, "Wrong size on UnionNetRequestTimeManager_IsCommunicationTimeForError");
static_assert(offsetof(UnionNetRequestTimeManager_IsCommunicationTimeForError, ApiName) == 0x000000, "Member 'UnionNetRequestTimeManager_IsCommunicationTimeForError::ApiName' has a wrong offset!");
static_assert(offsetof(UnionNetRequestTimeManager_IsCommunicationTimeForError, ReturnValue) == 0x000010, "Member 'UnionNetRequestTimeManager_IsCommunicationTimeForError::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetRequestTimeManager.SetResponseTime
// 0x0018 (0x0018 - 0x0000)
struct UnionNetRequestTimeManager_SetResponseTime final
{
public:
	class FString                                 ApiName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetRequestTimeManager_SetResponseTime) == 0x000008, "Wrong alignment on UnionNetRequestTimeManager_SetResponseTime");
static_assert(sizeof(UnionNetRequestTimeManager_SetResponseTime) == 0x000018, "Wrong size on UnionNetRequestTimeManager_SetResponseTime");
static_assert(offsetof(UnionNetRequestTimeManager_SetResponseTime, ApiName) == 0x000000, "Member 'UnionNetRequestTimeManager_SetResponseTime::ApiName' has a wrong offset!");
static_assert(offsetof(UnionNetRequestTimeManager_SetResponseTime, bSuccess) == 0x000010, "Member 'UnionNetRequestTimeManager_SetResponseTime::bSuccess' has a wrong offset!");

// Function UnionSystem.UnionNetRequestTimeManager.SetResponseTimeCompensation
// 0x0001 (0x0001 - 0x0000)
struct UnionNetRequestTimeManager_SetResponseTimeCompensation final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetRequestTimeManager_SetResponseTimeCompensation) == 0x000001, "Wrong alignment on UnionNetRequestTimeManager_SetResponseTimeCompensation");
static_assert(sizeof(UnionNetRequestTimeManager_SetResponseTimeCompensation) == 0x000001, "Wrong size on UnionNetRequestTimeManager_SetResponseTimeCompensation");
static_assert(offsetof(UnionNetRequestTimeManager_SetResponseTimeCompensation, bSuccess) == 0x000000, "Member 'UnionNetRequestTimeManager_SetResponseTimeCompensation::bSuccess' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.CheckOnlineSettingsForLobby
// 0x0048 (0x0048 - 0x0000)
struct UnionNetUtils_CheckOnlineSettingsForLobby final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocalUserNum;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               LobbyId;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FLobbyDoesMatchOnlineSettings          OutDoesMatch;                                      // 0x0020(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_CheckOnlineSettingsForLobby) == 0x000008, "Wrong alignment on UnionNetUtils_CheckOnlineSettingsForLobby");
static_assert(sizeof(UnionNetUtils_CheckOnlineSettingsForLobby) == 0x000048, "Wrong size on UnionNetUtils_CheckOnlineSettingsForLobby");
static_assert(offsetof(UnionNetUtils_CheckOnlineSettingsForLobby, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_CheckOnlineSettingsForLobby::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CheckOnlineSettingsForLobby, LocalUserNum) == 0x000008, "Member 'UnionNetUtils_CheckOnlineSettingsForLobby::LocalUserNum' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CheckOnlineSettingsForLobby, LobbyId) == 0x000010, "Member 'UnionNetUtils_CheckOnlineSettingsForLobby::LobbyId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CheckOnlineSettingsForLobby, OutDoesMatch) == 0x000020, "Member 'UnionNetUtils_CheckOnlineSettingsForLobby::OutDoesMatch' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CheckOnlineSettingsForLobby, ReturnValue) == 0x000040, "Member 'UnionNetUtils_CheckOnlineSettingsForLobby::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.CompareLobbyId
// 0x0028 (0x0028 - 0x0000)
struct UnionNetUtils_CompareLobbyId final
{
public:
	struct FLobbyId                               LobbyId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FLobbyId                               OtherLobbyId;                                      // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_CompareLobbyId) == 0x000008, "Wrong alignment on UnionNetUtils_CompareLobbyId");
static_assert(sizeof(UnionNetUtils_CompareLobbyId) == 0x000028, "Wrong size on UnionNetUtils_CompareLobbyId");
static_assert(offsetof(UnionNetUtils_CompareLobbyId, LobbyId) == 0x000000, "Member 'UnionNetUtils_CompareLobbyId::LobbyId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CompareLobbyId, OtherLobbyId) == 0x000010, "Member 'UnionNetUtils_CompareLobbyId::OtherLobbyId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CompareLobbyId, ReturnValue) == 0x000020, "Member 'UnionNetUtils_CompareLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.CompareUserId
// 0x0068 (0x0068 - 0x0000)
struct UnionNetUtils_CompareUserId final
{
public:
	struct FUniqueNetIdRepl                       UserId1;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       UserId2;                                           // 0x0030(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_CompareUserId) == 0x000008, "Wrong alignment on UnionNetUtils_CompareUserId");
static_assert(sizeof(UnionNetUtils_CompareUserId) == 0x000068, "Wrong size on UnionNetUtils_CompareUserId");
static_assert(offsetof(UnionNetUtils_CompareUserId, UserId1) == 0x000000, "Member 'UnionNetUtils_CompareUserId::UserId1' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CompareUserId, UserId2) == 0x000030, "Member 'UnionNetUtils_CompareUserId::UserId2' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CompareUserId, ReturnValue) == 0x000060, "Member 'UnionNetUtils_CompareUserId::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.ConvertLobbyIdToString
// 0x0020 (0x0020 - 0x0000)
struct UnionNetUtils_ConvertLobbyIdToString final
{
public:
	struct FLobbyId                               LobbyId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutUserIdString;                                   // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_ConvertLobbyIdToString) == 0x000008, "Wrong alignment on UnionNetUtils_ConvertLobbyIdToString");
static_assert(sizeof(UnionNetUtils_ConvertLobbyIdToString) == 0x000020, "Wrong size on UnionNetUtils_ConvertLobbyIdToString");
static_assert(offsetof(UnionNetUtils_ConvertLobbyIdToString, LobbyId) == 0x000000, "Member 'UnionNetUtils_ConvertLobbyIdToString::LobbyId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_ConvertLobbyIdToString, OutUserIdString) == 0x000010, "Member 'UnionNetUtils_ConvertLobbyIdToString::OutUserIdString' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.ConvertUserIdToString
// 0x0040 (0x0040 - 0x0000)
struct UnionNetUtils_ConvertUserIdToString final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutUserIdString;                                   // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_ConvertUserIdToString) == 0x000008, "Wrong alignment on UnionNetUtils_ConvertUserIdToString");
static_assert(sizeof(UnionNetUtils_ConvertUserIdToString) == 0x000040, "Wrong size on UnionNetUtils_ConvertUserIdToString");
static_assert(offsetof(UnionNetUtils_ConvertUserIdToString, UserId) == 0x000000, "Member 'UnionNetUtils_ConvertUserIdToString::UserId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_ConvertUserIdToString, OutUserIdString) == 0x000030, "Member 'UnionNetUtils_ConvertUserIdToString::OutUserIdString' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.CRM_PutConnectionError_Api
// 0x0038 (0x0038 - 0x0000)
struct UnionNetUtils_CRM_PutConnectionError_Api final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorNumber;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ErrorMessage;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ApiName;                                           // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Elapsed;                                           // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_CRM_PutConnectionError_Api) == 0x000008, "Wrong alignment on UnionNetUtils_CRM_PutConnectionError_Api");
static_assert(sizeof(UnionNetUtils_CRM_PutConnectionError_Api) == 0x000038, "Wrong size on UnionNetUtils_CRM_PutConnectionError_Api");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Api, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_CRM_PutConnectionError_Api::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Api, ErrorNumber) == 0x000008, "Member 'UnionNetUtils_CRM_PutConnectionError_Api::ErrorNumber' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Api, ErrorCode) == 0x00000C, "Member 'UnionNetUtils_CRM_PutConnectionError_Api::ErrorCode' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Api, ErrorMessage) == 0x000010, "Member 'UnionNetUtils_CRM_PutConnectionError_Api::ErrorMessage' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Api, ApiName) == 0x000020, "Member 'UnionNetUtils_CRM_PutConnectionError_Api::ApiName' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Api, Elapsed) == 0x000030, "Member 'UnionNetUtils_CRM_PutConnectionError_Api::Elapsed' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.CRM_PutConnectionError_Full
// 0x0070 (0x0070 - 0x0000)
struct UnionNetUtils_CRM_PutConnectionError_Full final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorNumber;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ErrorMessage;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OpponentUserId;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 entryRaceId;                                       // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserSlotId;                                        // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DisconnectionReason;                               // 0x0044(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisconnectionReasonInfo;                           // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ApiName;                                           // 0x0058(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Elapsed;                                           // 0x0068(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_CRM_PutConnectionError_Full) == 0x000008, "Wrong alignment on UnionNetUtils_CRM_PutConnectionError_Full");
static_assert(sizeof(UnionNetUtils_CRM_PutConnectionError_Full) == 0x000070, "Wrong size on UnionNetUtils_CRM_PutConnectionError_Full");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, ErrorNumber) == 0x000008, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::ErrorNumber' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, ErrorCode) == 0x00000C, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::ErrorCode' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, ErrorMessage) == 0x000010, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::ErrorMessage' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, OpponentUserId) == 0x000020, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::OpponentUserId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, entryRaceId) == 0x000030, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::entryRaceId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, UserSlotId) == 0x000040, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::UserSlotId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, DisconnectionReason) == 0x000044, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::DisconnectionReason' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, DisconnectionReasonInfo) == 0x000048, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::DisconnectionReasonInfo' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, ApiName) == 0x000058, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::ApiName' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Full, Elapsed) == 0x000068, "Member 'UnionNetUtils_CRM_PutConnectionError_Full::Elapsed' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.CRM_PutConnectionError_Minimum
// 0x0020 (0x0020 - 0x0000)
struct UnionNetUtils_CRM_PutConnectionError_Minimum final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorNumber;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorCode;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ErrorMessage;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_CRM_PutConnectionError_Minimum) == 0x000008, "Wrong alignment on UnionNetUtils_CRM_PutConnectionError_Minimum");
static_assert(sizeof(UnionNetUtils_CRM_PutConnectionError_Minimum) == 0x000020, "Wrong size on UnionNetUtils_CRM_PutConnectionError_Minimum");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Minimum, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_CRM_PutConnectionError_Minimum::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Minimum, ErrorNumber) == 0x000008, "Member 'UnionNetUtils_CRM_PutConnectionError_Minimum::ErrorNumber' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Minimum, ErrorCode) == 0x00000C, "Member 'UnionNetUtils_CRM_PutConnectionError_Minimum::ErrorCode' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_CRM_PutConnectionError_Minimum, ErrorMessage) == 0x000010, "Member 'UnionNetUtils_CRM_PutConnectionError_Minimum::ErrorMessage' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_Lobby_Create
// 0x0038 (0x0038 - 0x0000)
struct UnionNetUtils_Debug_Lobby_Create final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyContextBase*                      LobbyContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocked;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPublic;                                           // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHostMigration;                                    // 0x0012(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Password;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_Lobby_Create) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_Lobby_Create");
static_assert(sizeof(UnionNetUtils_Debug_Lobby_Create) == 0x000038, "Wrong size on UnionNetUtils_Debug_Lobby_Create");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_Lobby_Create::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_Lobby_Create::LobbyContext' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, bLocked) == 0x000010, "Member 'UnionNetUtils_Debug_Lobby_Create::bLocked' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, bPublic) == 0x000011, "Member 'UnionNetUtils_Debug_Lobby_Create::bPublic' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, bHostMigration) == 0x000012, "Member 'UnionNetUtils_Debug_Lobby_Create::bHostMigration' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, Password) == 0x000018, "Member 'UnionNetUtils_Debug_Lobby_Create::Password' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Create, OnComplete) == 0x000028, "Member 'UnionNetUtils_Debug_Lobby_Create::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_Lobby_Exit
// 0x0020 (0x0020 - 0x0000)
struct UnionNetUtils_Debug_Lobby_Exit final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyContextBase*                      LobbyContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_Lobby_Exit) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_Lobby_Exit");
static_assert(sizeof(UnionNetUtils_Debug_Lobby_Exit) == 0x000020, "Wrong size on UnionNetUtils_Debug_Lobby_Exit");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Exit, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_Lobby_Exit::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Exit, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_Lobby_Exit::LobbyContext' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Exit, OnComplete) == 0x000010, "Member 'UnionNetUtils_Debug_Lobby_Exit::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_Lobby_Join
// 0x0028 (0x0028 - 0x0000)
struct UnionNetUtils_Debug_Lobby_Join final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyContextBase*                      LobbyContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyJoinInfo*                         JoinInfo;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_Lobby_Join) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_Lobby_Join");
static_assert(sizeof(UnionNetUtils_Debug_Lobby_Join) == 0x000028, "Wrong size on UnionNetUtils_Debug_Lobby_Join");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Join, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_Lobby_Join::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Join, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_Lobby_Join::LobbyContext' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Join, JoinInfo) == 0x000010, "Member 'UnionNetUtils_Debug_Lobby_Join::JoinInfo' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Join, OnComplete) == 0x000018, "Member 'UnionNetUtils_Debug_Lobby_Join::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_Lobby_JoinByLobbyId
// 0x0030 (0x0030 - 0x0000)
struct UnionNetUtils_Debug_Lobby_JoinByLobbyId final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyContextBase*                      LobbyContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_Lobby_JoinByLobbyId) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_Lobby_JoinByLobbyId");
static_assert(sizeof(UnionNetUtils_Debug_Lobby_JoinByLobbyId) == 0x000030, "Wrong size on UnionNetUtils_Debug_Lobby_JoinByLobbyId");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_JoinByLobbyId, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_Lobby_JoinByLobbyId::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_JoinByLobbyId, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_Lobby_JoinByLobbyId::LobbyContext' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_JoinByLobbyId, LobbyId) == 0x000010, "Member 'UnionNetUtils_Debug_Lobby_JoinByLobbyId::LobbyId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_JoinByLobbyId, OnComplete) == 0x000020, "Member 'UnionNetUtils_Debug_Lobby_JoinByLobbyId::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_Lobby_Seach
// 0x0020 (0x0020 - 0x0000)
struct UnionNetUtils_Debug_Lobby_Seach final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyContextBase*                      LobbyContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)> OnComplete;           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_Lobby_Seach) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_Lobby_Seach");
static_assert(sizeof(UnionNetUtils_Debug_Lobby_Seach) == 0x000020, "Wrong size on UnionNetUtils_Debug_Lobby_Seach");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Seach, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_Lobby_Seach::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Seach, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_Lobby_Seach::LobbyContext' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_Seach, OnComplete) == 0x000010, "Member 'UnionNetUtils_Debug_Lobby_Seach::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_Lobby_SyncInitMemberAttributes
// 0x0020 (0x0020 - 0x0000)
struct UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULobbyContextBase*                      LobbyContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FLobbyOperationResult& Result)> OnComplete;        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes");
static_assert(sizeof(UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes) == 0x000020, "Wrong size on UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes::LobbyContext' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes, OnComplete) == 0x000010, "Member 'UnionNetUtils_Debug_Lobby_SyncInitMemberAttributes::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_P2P_DelConnectMemberSquad
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_Debug_P2P_DelConnectMemberSquad final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ULobbyMemberContextBase*          MemberContext;                                     // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_P2P_DelConnectMemberSquad) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_P2P_DelConnectMemberSquad");
static_assert(sizeof(UnionNetUtils_Debug_P2P_DelConnectMemberSquad) == 0x000010, "Wrong size on UnionNetUtils_Debug_P2P_DelConnectMemberSquad");
static_assert(offsetof(UnionNetUtils_Debug_P2P_DelConnectMemberSquad, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_P2P_DelConnectMemberSquad::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_P2P_DelConnectMemberSquad, MemberContext) == 0x000008, "Member 'UnionNetUtils_Debug_P2P_DelConnectMemberSquad::MemberContext' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_P2P_EndConnectSquadRequest
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_Debug_P2P_EndConnectSquadRequest final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ULobbyContextBase*                LobbyContext;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_P2P_EndConnectSquadRequest) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_P2P_EndConnectSquadRequest");
static_assert(sizeof(UnionNetUtils_Debug_P2P_EndConnectSquadRequest) == 0x000010, "Wrong size on UnionNetUtils_Debug_P2P_EndConnectSquadRequest");
static_assert(offsetof(UnionNetUtils_Debug_P2P_EndConnectSquadRequest, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_P2P_EndConnectSquadRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_P2P_EndConnectSquadRequest, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_P2P_EndConnectSquadRequest::LobbyContext' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_P2P_StartConnect
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_Debug_P2P_StartConnect final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHost;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_Debug_P2P_StartConnect) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_P2P_StartConnect");
static_assert(sizeof(UnionNetUtils_Debug_P2P_StartConnect) == 0x000010, "Wrong size on UnionNetUtils_Debug_P2P_StartConnect");
static_assert(offsetof(UnionNetUtils_Debug_P2P_StartConnect, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_P2P_StartConnect::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_P2P_StartConnect, bIsHost) == 0x000008, "Member 'UnionNetUtils_Debug_P2P_StartConnect::bIsHost' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_P2P_StartConnectionP2P
// 0x0018 (0x0018 - 0x0000)
struct UnionNetUtils_Debug_P2P_StartConnectionP2P final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLobbyId                               LobbyId;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_P2P_StartConnectionP2P) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_P2P_StartConnectionP2P");
static_assert(sizeof(UnionNetUtils_Debug_P2P_StartConnectionP2P) == 0x000018, "Wrong size on UnionNetUtils_Debug_P2P_StartConnectionP2P");
static_assert(offsetof(UnionNetUtils_Debug_P2P_StartConnectionP2P, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_P2P_StartConnectionP2P::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_P2P_StartConnectionP2P, LobbyId) == 0x000008, "Member 'UnionNetUtils_Debug_P2P_StartConnectionP2P::LobbyId' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_P2P_StartConnectSquad
// 0x0008 (0x0008 - 0x0000)
struct UnionNetUtils_Debug_P2P_StartConnectSquad final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_P2P_StartConnectSquad) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_P2P_StartConnectSquad");
static_assert(sizeof(UnionNetUtils_Debug_P2P_StartConnectSquad) == 0x000008, "Wrong size on UnionNetUtils_Debug_P2P_StartConnectSquad");
static_assert(offsetof(UnionNetUtils_Debug_P2P_StartConnectSquad, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_P2P_StartConnectSquad::WorldContextObject' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.Debug_P2P_UpdateConnectMemberSquad
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ULobbyContextBase*                LobbyContext;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad) == 0x000008, "Wrong alignment on UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad");
static_assert(sizeof(UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad) == 0x000010, "Wrong size on UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad");
static_assert(offsetof(UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad, LobbyContext) == 0x000008, "Member 'UnionNetUtils_Debug_P2P_UpdateConnectMemberSquad::LobbyContext' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.GetComputerNameString
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_GetComputerNameString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_GetComputerNameString) == 0x000008, "Wrong alignment on UnionNetUtils_GetComputerNameString");
static_assert(sizeof(UnionNetUtils_GetComputerNameString) == 0x000010, "Wrong size on UnionNetUtils_GetComputerNameString");
static_assert(offsetof(UnionNetUtils_GetComputerNameString, ReturnValue) == 0x000000, "Member 'UnionNetUtils_GetComputerNameString::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.GetEOSRelayControlString
// 0x0018 (0x0018 - 0x0000)
struct UnionNetUtils_GetEOSRelayControlString final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_GetEOSRelayControlString) == 0x000008, "Wrong alignment on UnionNetUtils_GetEOSRelayControlString");
static_assert(sizeof(UnionNetUtils_GetEOSRelayControlString) == 0x000018, "Wrong size on UnionNetUtils_GetEOSRelayControlString");
static_assert(offsetof(UnionNetUtils_GetEOSRelayControlString, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_GetEOSRelayControlString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_GetEOSRelayControlString, ReturnValue) == 0x000008, "Member 'UnionNetUtils_GetEOSRelayControlString::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.GetMatchSettingString
// 0x0018 (0x0018 - 0x0000)
struct UnionNetUtils_GetMatchSettingString final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_GetMatchSettingString) == 0x000008, "Wrong alignment on UnionNetUtils_GetMatchSettingString");
static_assert(sizeof(UnionNetUtils_GetMatchSettingString) == 0x000018, "Wrong size on UnionNetUtils_GetMatchSettingString");
static_assert(offsetof(UnionNetUtils_GetMatchSettingString, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_GetMatchSettingString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_GetMatchSettingString, ReturnValue) == 0x000008, "Member 'UnionNetUtils_GetMatchSettingString::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.GetNetworkSettingName
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_GetNetworkSettingName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_GetNetworkSettingName) == 0x000008, "Wrong alignment on UnionNetUtils_GetNetworkSettingName");
static_assert(sizeof(UnionNetUtils_GetNetworkSettingName) == 0x000010, "Wrong size on UnionNetUtils_GetNetworkSettingName");
static_assert(offsetof(UnionNetUtils_GetNetworkSettingName, ReturnValue) == 0x000000, "Member 'UnionNetUtils_GetNetworkSettingName::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.GetServerStagingName
// 0x0010 (0x0010 - 0x0000)
struct UnionNetUtils_GetServerStagingName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_GetServerStagingName) == 0x000008, "Wrong alignment on UnionNetUtils_GetServerStagingName");
static_assert(sizeof(UnionNetUtils_GetServerStagingName) == 0x000010, "Wrong size on UnionNetUtils_GetServerStagingName");
static_assert(offsetof(UnionNetUtils_GetServerStagingName, ReturnValue) == 0x000000, "Member 'UnionNetUtils_GetServerStagingName::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.GetTickMilliseconds
// 0x0008 (0x0008 - 0x0000)
struct UnionNetUtils_GetTickMilliseconds final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_GetTickMilliseconds) == 0x000008, "Wrong alignment on UnionNetUtils_GetTickMilliseconds");
static_assert(sizeof(UnionNetUtils_GetTickMilliseconds) == 0x000008, "Wrong size on UnionNetUtils_GetTickMilliseconds");
static_assert(offsetof(UnionNetUtils_GetTickMilliseconds, ReturnValue) == 0x000000, "Member 'UnionNetUtils_GetTickMilliseconds::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.IsValidLobbyId
// 0x0018 (0x0018 - 0x0000)
struct UnionNetUtils_IsValidLobbyId final
{
public:
	struct FLobbyId                               LobbyId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_IsValidLobbyId) == 0x000008, "Wrong alignment on UnionNetUtils_IsValidLobbyId");
static_assert(sizeof(UnionNetUtils_IsValidLobbyId) == 0x000018, "Wrong size on UnionNetUtils_IsValidLobbyId");
static_assert(offsetof(UnionNetUtils_IsValidLobbyId, LobbyId) == 0x000000, "Member 'UnionNetUtils_IsValidLobbyId::LobbyId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_IsValidLobbyId, ReturnValue) == 0x000010, "Member 'UnionNetUtils_IsValidLobbyId::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.MakeLobbyOperationResultByLobbyErrorType
// 0x0070 (0x0070 - 0x0000)
struct UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType final
{
public:
	ELobbyErrorType                               LobbyErrorType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  OutResult;                                         // 0x0008(0x0068)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType) == 0x000008, "Wrong alignment on UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType");
static_assert(sizeof(UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType) == 0x000070, "Wrong size on UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType");
static_assert(offsetof(UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType, LobbyErrorType) == 0x000000, "Member 'UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType::LobbyErrorType' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType, OutResult) == 0x000008, "Member 'UnionNetUtils_MakeLobbyOperationResultByLobbyErrorType::OutResult' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.SearchLobbyByHostUserId
// 0x0050 (0x0050 - 0x0000)
struct UnionNetUtils_SearchLobbyByHostUserId final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocalUserNum;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       HostProductUserId;                                 // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccessful, const struct FSearchLobbyResult& Result)> OnComplete;           // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionNetUtils_SearchLobbyByHostUserId) == 0x000008, "Wrong alignment on UnionNetUtils_SearchLobbyByHostUserId");
static_assert(sizeof(UnionNetUtils_SearchLobbyByHostUserId) == 0x000050, "Wrong size on UnionNetUtils_SearchLobbyByHostUserId");
static_assert(offsetof(UnionNetUtils_SearchLobbyByHostUserId, WorldContextObject) == 0x000000, "Member 'UnionNetUtils_SearchLobbyByHostUserId::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_SearchLobbyByHostUserId, LocalUserNum) == 0x000008, "Member 'UnionNetUtils_SearchLobbyByHostUserId::LocalUserNum' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_SearchLobbyByHostUserId, HostProductUserId) == 0x000010, "Member 'UnionNetUtils_SearchLobbyByHostUserId::HostProductUserId' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_SearchLobbyByHostUserId, OnComplete) == 0x000040, "Member 'UnionNetUtils_SearchLobbyByHostUserId::OnComplete' has a wrong offset!");

// Function UnionSystem.UnionNetUtils.ToLobbyErrorType
// 0x0040 (0x0040 - 0x0000)
struct UnionNetUtils_ToLobbyErrorType final
{
public:
	struct FOnlineErrorBP                         Error;                                             // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ELobbyErrorType                               ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionNetUtils_ToLobbyErrorType) == 0x000008, "Wrong alignment on UnionNetUtils_ToLobbyErrorType");
static_assert(sizeof(UnionNetUtils_ToLobbyErrorType) == 0x000040, "Wrong size on UnionNetUtils_ToLobbyErrorType");
static_assert(offsetof(UnionNetUtils_ToLobbyErrorType, Error) == 0x000000, "Member 'UnionNetUtils_ToLobbyErrorType::Error' has a wrong offset!");
static_assert(offsetof(UnionNetUtils_ToLobbyErrorType, ReturnValue) == 0x000038, "Member 'UnionNetUtils_ToLobbyErrorType::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformDebugMenu.OnGetAChievementEnd
// 0x0004 (0x0004 - 0x0000)
struct UnionPlatformDebugMenu_OnGetAChievementEnd final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformDebugMenu_OnGetAChievementEnd) == 0x000004, "Wrong alignment on UnionPlatformDebugMenu_OnGetAChievementEnd");
static_assert(sizeof(UnionPlatformDebugMenu_OnGetAChievementEnd) == 0x000004, "Wrong size on UnionPlatformDebugMenu_OnGetAChievementEnd");
static_assert(offsetof(UnionPlatformDebugMenu_OnGetAChievementEnd, InValue) == 0x000000, "Member 'UnionPlatformDebugMenu_OnGetAChievementEnd::InValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformDebugMenu.OnPlatformStoreClose
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformDebugMenu_OnPlatformStoreClose final
{
public:
	EUnionOpenStoreResultType                     InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformDebugMenu_OnPlatformStoreClose) == 0x000001, "Wrong alignment on UnionPlatformDebugMenu_OnPlatformStoreClose");
static_assert(sizeof(UnionPlatformDebugMenu_OnPlatformStoreClose) == 0x000001, "Wrong size on UnionPlatformDebugMenu_OnPlatformStoreClose");
static_assert(offsetof(UnionPlatformDebugMenu_OnPlatformStoreClose, InType) == 0x000000, "Member 'UnionPlatformDebugMenu_OnPlatformStoreClose::InType' has a wrong offset!");

// Function UnionSystem.UnionPlatformManager.OnPlatformEvent
// 0x0018 (0x0018 - 0x0000)
struct UnionPlatformManager_OnPlatformEvent final
{
public:
	struct FUnionPlatformEventInfo                EventInfo;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformManager_OnPlatformEvent) == 0x000008, "Wrong alignment on UnionPlatformManager_OnPlatformEvent");
static_assert(sizeof(UnionPlatformManager_OnPlatformEvent) == 0x000018, "Wrong size on UnionPlatformManager_OnPlatformEvent");
static_assert(offsetof(UnionPlatformManager_OnPlatformEvent, EventInfo) == 0x000000, "Member 'UnionPlatformManager_OnPlatformEvent::EventInfo' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetGamepadAcceptKey
// 0x0018 (0x0018 - 0x0000)
struct UnionPlatformUtils_GetGamepadAcceptKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetGamepadAcceptKey) == 0x000008, "Wrong alignment on UnionPlatformUtils_GetGamepadAcceptKey");
static_assert(sizeof(UnionPlatformUtils_GetGamepadAcceptKey) == 0x000018, "Wrong size on UnionPlatformUtils_GetGamepadAcceptKey");
static_assert(offsetof(UnionPlatformUtils_GetGamepadAcceptKey, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_GetGamepadAcceptKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetGamepadBackKey
// 0x0018 (0x0018 - 0x0000)
struct UnionPlatformUtils_GetGamepadBackKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetGamepadBackKey) == 0x000008, "Wrong alignment on UnionPlatformUtils_GetGamepadBackKey");
static_assert(sizeof(UnionPlatformUtils_GetGamepadBackKey) == 0x000018, "Wrong size on UnionPlatformUtils_GetGamepadBackKey");
static_assert(offsetof(UnionPlatformUtils_GetGamepadBackKey, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_GetGamepadBackKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetGamerTag
// 0x0010 (0x0010 - 0x0000)
struct UnionPlatformUtils_GetGamerTag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetGamerTag) == 0x000008, "Wrong alignment on UnionPlatformUtils_GetGamerTag");
static_assert(sizeof(UnionPlatformUtils_GetGamerTag) == 0x000010, "Wrong size on UnionPlatformUtils_GetGamerTag");
static_assert(offsetof(UnionPlatformUtils_GetGamerTag, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_GetGamerTag::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetNXOnlinePrivilege
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_GetNXOnlinePrivilege final
{
public:
	ENXPrivilegeType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetNXOnlinePrivilege) == 0x000001, "Wrong alignment on UnionPlatformUtils_GetNXOnlinePrivilege");
static_assert(sizeof(UnionPlatformUtils_GetNXOnlinePrivilege) == 0x000001, "Wrong size on UnionPlatformUtils_GetNXOnlinePrivilege");
static_assert(offsetof(UnionPlatformUtils_GetNXOnlinePrivilege, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_GetNXOnlinePrivilege::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetOnlinePlayRestrictionType
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_GetOnlinePlayRestrictionType final
{
public:
	EUnionPlatformOnlineRestrictionType           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetOnlinePlayRestrictionType) == 0x000001, "Wrong alignment on UnionPlatformUtils_GetOnlinePlayRestrictionType");
static_assert(sizeof(UnionPlatformUtils_GetOnlinePlayRestrictionType) == 0x000001, "Wrong size on UnionPlatformUtils_GetOnlinePlayRestrictionType");
static_assert(offsetof(UnionPlatformUtils_GetOnlinePlayRestrictionType, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_GetOnlinePlayRestrictionType::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetPresenceId
// 0x0018 (0x0018 - 0x0000)
struct UnionPlatformUtils_GetPresenceId final
{
public:
	EUnionPresenceType                            PresenceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetPresenceId) == 0x000008, "Wrong alignment on UnionPlatformUtils_GetPresenceId");
static_assert(sizeof(UnionPlatformUtils_GetPresenceId) == 0x000018, "Wrong size on UnionPlatformUtils_GetPresenceId");
static_assert(offsetof(UnionPlatformUtils_GetPresenceId, PresenceType) == 0x000000, "Member 'UnionPlatformUtils_GetPresenceId::PresenceType' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_GetPresenceId, ReturnValue) == 0x000008, "Member 'UnionPlatformUtils_GetPresenceId::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetPresenceText
// 0x0018 (0x0018 - 0x0000)
struct UnionPlatformUtils_GetPresenceText final
{
public:
	EUnionPresenceType                            PresenceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_GetPresenceText) == 0x000008, "Wrong alignment on UnionPlatformUtils_GetPresenceText");
static_assert(sizeof(UnionPlatformUtils_GetPresenceText) == 0x000018, "Wrong size on UnionPlatformUtils_GetPresenceText");
static_assert(offsetof(UnionPlatformUtils_GetPresenceText, PresenceType) == 0x000000, "Member 'UnionPlatformUtils_GetPresenceText::PresenceType' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_GetPresenceText, ReturnValue) == 0x000008, "Member 'UnionPlatformUtils_GetPresenceText::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.GetPresenceTexts
// 0x0020 (0x0020 - 0x0000)
struct UnionPlatformUtils_GetPresenceTexts final
{
public:
	EUnionPresenceType                            PresenceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         OutList;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionPlatformUtils_GetPresenceTexts) == 0x000008, "Wrong alignment on UnionPlatformUtils_GetPresenceTexts");
static_assert(sizeof(UnionPlatformUtils_GetPresenceTexts) == 0x000020, "Wrong size on UnionPlatformUtils_GetPresenceTexts");
static_assert(offsetof(UnionPlatformUtils_GetPresenceTexts, PresenceType) == 0x000000, "Member 'UnionPlatformUtils_GetPresenceTexts::PresenceType' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_GetPresenceTexts, OutList) == 0x000008, "Member 'UnionPlatformUtils_GetPresenceTexts::OutList' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_GetPresenceTexts, ReturnValue) == 0x000018, "Member 'UnionPlatformUtils_GetPresenceTexts::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsHighEndPlatform
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsHighEndPlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsHighEndPlatform) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsHighEndPlatform");
static_assert(sizeof(UnionPlatformUtils_IsHighEndPlatform) == 0x000001, "Wrong size on UnionPlatformUtils_IsHighEndPlatform");
static_assert(offsetof(UnionPlatformUtils_IsHighEndPlatform, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsHighEndPlatform::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsInvertGamepadAcceptAndBackKey
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey");
static_assert(sizeof(UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey) == 0x000001, "Wrong size on UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey");
static_assert(offsetof(UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsInvertGamepadAcceptAndBackKey::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsNXOnlinePrivilege
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsNXOnlinePrivilege final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsNXOnlinePrivilege) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsNXOnlinePrivilege");
static_assert(sizeof(UnionPlatformUtils_IsNXOnlinePrivilege) == 0x000001, "Wrong size on UnionPlatformUtils_IsNXOnlinePrivilege");
static_assert(offsetof(UnionPlatformUtils_IsNXOnlinePrivilege, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsNXOnlinePrivilege::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsOnlinePrivilegeOn
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsOnlinePrivilegeOn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsOnlinePrivilegeOn) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsOnlinePrivilegeOn");
static_assert(sizeof(UnionPlatformUtils_IsOnlinePrivilegeOn) == 0x000001, "Wrong size on UnionPlatformUtils_IsOnlinePrivilegeOn");
static_assert(offsetof(UnionPlatformUtils_IsOnlinePrivilegeOn, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsOnlinePrivilegeOn::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsPremiumResolveUiCanceledByUser
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsPremiumResolveUiCanceledByUser final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsPremiumResolveUiCanceledByUser) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsPremiumResolveUiCanceledByUser");
static_assert(sizeof(UnionPlatformUtils_IsPremiumResolveUiCanceledByUser) == 0x000001, "Wrong size on UnionPlatformUtils_IsPremiumResolveUiCanceledByUser");
static_assert(offsetof(UnionPlatformUtils_IsPremiumResolveUiCanceledByUser, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsPremiumResolveUiCanceledByUser::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsProhibitedOnlinPlayByParentalControls
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls");
static_assert(sizeof(UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls) == 0x000001, "Wrong size on UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls");
static_assert(offsetof(UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsProhibitedOnlinPlayByParentalControls::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsStartedStreamingInstall
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsStartedStreamingInstall final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsStartedStreamingInstall) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsStartedStreamingInstall");
static_assert(sizeof(UnionPlatformUtils_IsStartedStreamingInstall) == 0x000001, "Wrong size on UnionPlatformUtils_IsStartedStreamingInstall");
static_assert(offsetof(UnionPlatformUtils_IsStartedStreamingInstall, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsStartedStreamingInstall::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsUserHasNetworkRankingPrivilege
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_IsUserHasNetworkRankingPrivilege final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsUserHasNetworkRankingPrivilege) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsUserHasNetworkRankingPrivilege");
static_assert(sizeof(UnionPlatformUtils_IsUserHasNetworkRankingPrivilege) == 0x000001, "Wrong size on UnionPlatformUtils_IsUserHasNetworkRankingPrivilege");
static_assert(offsetof(UnionPlatformUtils_IsUserHasNetworkRankingPrivilege, ReturnValue) == 0x000000, "Member 'UnionPlatformUtils_IsUserHasNetworkRankingPrivilege::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.IsUserHasPrivilege
// 0x0002 (0x0002 - 0x0000)
struct UnionPlatformUtils_IsUserHasPrivilege final
{
public:
	EUnionPlatformPrivilegeType                   UnionPlatformPrivilegeType;                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_IsUserHasPrivilege) == 0x000001, "Wrong alignment on UnionPlatformUtils_IsUserHasPrivilege");
static_assert(sizeof(UnionPlatformUtils_IsUserHasPrivilege) == 0x000002, "Wrong size on UnionPlatformUtils_IsUserHasPrivilege");
static_assert(offsetof(UnionPlatformUtils_IsUserHasPrivilege, UnionPlatformPrivilegeType) == 0x000000, "Member 'UnionPlatformUtils_IsUserHasPrivilege::UnionPlatformPrivilegeType' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_IsUserHasPrivilege, ReturnValue) == 0x000001, "Member 'UnionPlatformUtils_IsUserHasPrivilege::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.RequestSoftwareKeyboard
// 0x0058 (0x0058 - 0x0000)
struct UnionPlatformUtils_RequestSoftwareKeyboard final
{
public:
	struct FSoftwareKeyBoardBootParam             PootParam;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_RequestSoftwareKeyboard) == 0x000008, "Wrong alignment on UnionPlatformUtils_RequestSoftwareKeyboard");
static_assert(sizeof(UnionPlatformUtils_RequestSoftwareKeyboard) == 0x000058, "Wrong size on UnionPlatformUtils_RequestSoftwareKeyboard");
static_assert(offsetof(UnionPlatformUtils_RequestSoftwareKeyboard, PootParam) == 0x000000, "Member 'UnionPlatformUtils_RequestSoftwareKeyboard::PootParam' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.SetNXOnlinePrivilege
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_SetNXOnlinePrivilege final
{
public:
	ENXPrivilegeType                              NXPrivilegeType;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_SetNXOnlinePrivilege) == 0x000001, "Wrong alignment on UnionPlatformUtils_SetNXOnlinePrivilege");
static_assert(sizeof(UnionPlatformUtils_SetNXOnlinePrivilege) == 0x000001, "Wrong size on UnionPlatformUtils_SetNXOnlinePrivilege");
static_assert(offsetof(UnionPlatformUtils_SetNXOnlinePrivilege, NXPrivilegeType) == 0x000000, "Member 'UnionPlatformUtils_SetNXOnlinePrivilege::NXPrivilegeType' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.StartPresence
// 0x0001 (0x0001 - 0x0000)
struct UnionPlatformUtils_StartPresence final
{
public:
	EUnionPresenceType                            PresenceType;                                      // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_StartPresence) == 0x000001, "Wrong alignment on UnionPlatformUtils_StartPresence");
static_assert(sizeof(UnionPlatformUtils_StartPresence) == 0x000001, "Wrong size on UnionPlatformUtils_StartPresence");
static_assert(offsetof(UnionPlatformUtils_StartPresence, PresenceType) == 0x000000, "Member 'UnionPlatformUtils_StartPresence::PresenceType' has a wrong offset!");

// Function UnionSystem.UnionPlatformUtils.WriteAchievement
// 0x0018 (0x0018 - 0x0000)
struct UnionPlatformUtils_WriteAchievement final
{
public:
	class FString                                 AchievementName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NowValue;                                          // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxValue;                                          // 0x0014(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionPlatformUtils_WriteAchievement) == 0x000008, "Wrong alignment on UnionPlatformUtils_WriteAchievement");
static_assert(sizeof(UnionPlatformUtils_WriteAchievement) == 0x000018, "Wrong size on UnionPlatformUtils_WriteAchievement");
static_assert(offsetof(UnionPlatformUtils_WriteAchievement, AchievementName) == 0x000000, "Member 'UnionPlatformUtils_WriteAchievement::AchievementName' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_WriteAchievement, NowValue) == 0x000010, "Member 'UnionPlatformUtils_WriteAchievement::NowValue' has a wrong offset!");
static_assert(offsetof(UnionPlatformUtils_WriteAchievement, MaxValue) == 0x000014, "Member 'UnionPlatformUtils_WriteAchievement::MaxValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLap
// 0x0018 (0x0018 - 0x0000)
struct UnionRaceBGMLibrary_ChangeFinalLap final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeFinalLap) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_ChangeFinalLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeFinalLap) == 0x000018, "Wrong size on UnionRaceBGMLibrary_ChangeFinalLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLap, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeFinalLap::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLap, ReturnValue) == 0x000010, "Member 'UnionRaceBGMLibrary_ChangeFinalLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLapForce
// 0x0028 (0x0028 - 0x0000)
struct UnionRaceBGMLibrary_ChangeFinalLapForce final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label2;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeFinalLapForce) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_ChangeFinalLapForce");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeFinalLapForce) == 0x000028, "Wrong size on UnionRaceBGMLibrary_ChangeFinalLapForce");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLapForce, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeFinalLapForce::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLapForce, Label2) == 0x000010, "Member 'UnionRaceBGMLibrary_ChangeFinalLapForce::Label2' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLapForce, ReturnValue) == 0x000020, "Member 'UnionRaceBGMLibrary_ChangeFinalLapForce::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLapLast
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeFinalLapLast final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeFinalLapLast) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeFinalLapLast");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeFinalLapLast) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeFinalLapLast");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLapLast, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeFinalLapLast::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeFinalLapWhenTimeTrial
// 0x0018 (0x0018 - 0x0000)
struct UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial) == 0x000018, "Wrong size on UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial, ReturnValue) == 0x000010, "Member 'UnionRaceBGMLibrary_ChangeFinalLapWhenTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeFirstLapWhenAnotherTimeTrial
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeFirstLapWhenAnotherTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeGateDecide
// 0x0018 (0x0018 - 0x0000)
struct UnionRaceBGMLibrary_ChangeGateDecide final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRandomCourse;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeGateDecide) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_ChangeGateDecide");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeGateDecide) == 0x000018, "Wrong size on UnionRaceBGMLibrary_ChangeGateDecide");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeGateDecide, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeGateDecide::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeGateDecide, bRandomCourse) == 0x000010, "Member 'UnionRaceBGMLibrary_ChangeGateDecide::bRandomCourse' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeGateDecide, ReturnValue) == 0x000011, "Member 'UnionRaceBGMLibrary_ChangeGateDecide::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeGateSelect
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeGateSelect final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeGateSelect) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeGateSelect");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeGateSelect) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeGateSelect");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeGateSelect, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeGateSelect::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeReturnFromDomainSubInFinalLap
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFinalLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeReturnFromDomainSubInFirstLap
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeReturnFromDomainSubInFirstLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeReturnFromDomainSubInSecondLap
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeReturnFromDomainSubInSecondLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeSecondLap
// 0x0002 (0x0002 - 0x0000)
struct UnionRaceBGMLibrary_ChangeSecondLap final
{
public:
	bool                                          bRandomCourse;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeSecondLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeSecondLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeSecondLap) == 0x000002, "Wrong size on UnionRaceBGMLibrary_ChangeSecondLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeSecondLap, bRandomCourse) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeSecondLap::bRandomCourse' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeSecondLap, ReturnValue) == 0x000001, "Member 'UnionRaceBGMLibrary_ChangeSecondLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeSecondLapForce
// 0x0028 (0x0028 - 0x0000)
struct UnionRaceBGMLibrary_ChangeSecondLapForce final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label2;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeSecondLapForce) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_ChangeSecondLapForce");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeSecondLapForce) == 0x000028, "Wrong size on UnionRaceBGMLibrary_ChangeSecondLapForce");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeSecondLapForce, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeSecondLapForce::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeSecondLapForce, Label2) == 0x000010, "Member 'UnionRaceBGMLibrary_ChangeSecondLapForce::Label2' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeSecondLapForce, ReturnValue) == 0x000020, "Member 'UnionRaceBGMLibrary_ChangeSecondLapForce::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeTransitionToDomainSubInFinalLap
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFinalLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeTransitionToDomainSubInFirstLap
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeTransitionToDomainSubInFirstLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.ChangeTransitionToDomainSubInSecondLap
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap");
static_assert(sizeof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap) == 0x000001, "Wrong size on UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap");
static_assert(offsetof(UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_ChangeTransitionToDomainSubInSecondLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.PlayFirstLap
// 0x0028 (0x0028 - 0x0000)
struct UnionRaceBGMLibrary_PlayFirstLap final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label2;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_PlayFirstLap) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_PlayFirstLap");
static_assert(sizeof(UnionRaceBGMLibrary_PlayFirstLap) == 0x000028, "Wrong size on UnionRaceBGMLibrary_PlayFirstLap");
static_assert(offsetof(UnionRaceBGMLibrary_PlayFirstLap, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_PlayFirstLap::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayFirstLap, Label2) == 0x000010, "Member 'UnionRaceBGMLibrary_PlayFirstLap::Label2' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayFirstLap, ReturnValue) == 0x000020, "Member 'UnionRaceBGMLibrary_PlayFirstLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.PlayGoalWithParam
// 0x000C (0x000C - 0x0000)
struct UnionRaceBGMLibrary_PlayGoalWithParam final
{
public:
	struct FAppRaceEventGoalData                  InGoalParam;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_PlayGoalWithParam) == 0x000004, "Wrong alignment on UnionRaceBGMLibrary_PlayGoalWithParam");
static_assert(sizeof(UnionRaceBGMLibrary_PlayGoalWithParam) == 0x00000C, "Wrong size on UnionRaceBGMLibrary_PlayGoalWithParam");
static_assert(offsetof(UnionRaceBGMLibrary_PlayGoalWithParam, InGoalParam) == 0x000000, "Member 'UnionRaceBGMLibrary_PlayGoalWithParam::InGoalParam' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayGoalWithParam, ReturnValue) == 0x000008, "Member 'UnionRaceBGMLibrary_PlayGoalWithParam::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.PlayIntro
// 0x0018 (0x0018 - 0x0000)
struct UnionRaceBGMLibrary_PlayIntro final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_PlayIntro) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_PlayIntro");
static_assert(sizeof(UnionRaceBGMLibrary_PlayIntro) == 0x000018, "Wrong size on UnionRaceBGMLibrary_PlayIntro");
static_assert(offsetof(UnionRaceBGMLibrary_PlayIntro, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_PlayIntro::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayIntro, ReturnValue) == 0x000010, "Member 'UnionRaceBGMLibrary_PlayIntro::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.PlayOnCourseEditor
// 0x0018 (0x0018 - 0x0000)
struct UnionRaceBGMLibrary_PlayOnCourseEditor final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFinalLap;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_PlayOnCourseEditor) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_PlayOnCourseEditor");
static_assert(sizeof(UnionRaceBGMLibrary_PlayOnCourseEditor) == 0x000018, "Wrong size on UnionRaceBGMLibrary_PlayOnCourseEditor");
static_assert(offsetof(UnionRaceBGMLibrary_PlayOnCourseEditor, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_PlayOnCourseEditor::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayOnCourseEditor, bFinalLap) == 0x000010, "Member 'UnionRaceBGMLibrary_PlayOnCourseEditor::bFinalLap' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayOnCourseEditor, ReturnValue) == 0x000011, "Member 'UnionRaceBGMLibrary_PlayOnCourseEditor::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.PlayPreFirstLapWhenAnotherTimeTrial
// 0x0018 (0x0018 - 0x0000)
struct UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial final
{
public:
	class FString                                 Label;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial");
static_assert(sizeof(UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial) == 0x000018, "Wrong size on UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial");
static_assert(offsetof(UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial, Label) == 0x000000, "Member 'UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial::Label' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial, ReturnValue) == 0x000010, "Member 'UnionRaceBGMLibrary_PlayPreFirstLapWhenAnotherTimeTrial::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.RaceBGMFinished
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_RaceBGMFinished final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_RaceBGMFinished) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_RaceBGMFinished");
static_assert(sizeof(UnionRaceBGMLibrary_RaceBGMFinished) == 0x000001, "Wrong size on UnionRaceBGMLibrary_RaceBGMFinished");
static_assert(offsetof(UnionRaceBGMLibrary_RaceBGMFinished, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_RaceBGMFinished::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.SetAisacGateDistanceFirstLapToSecondLap
// 0x0008 (0x0008 - 0x0000)
struct UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap) == 0x000004, "Wrong alignment on UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap");
static_assert(sizeof(UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap) == 0x000008, "Wrong size on UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap");
static_assert(offsetof(UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap, Value) == 0x000000, "Member 'UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap::Value' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap, ReturnValue) == 0x000004, "Member 'UnionRaceBGMLibrary_SetAisacGateDistanceFirstLapToSecondLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.SetAisacGateDistanceSecondLapToFinalLap
// 0x0008 (0x0008 - 0x0000)
struct UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap) == 0x000004, "Wrong alignment on UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap");
static_assert(sizeof(UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap) == 0x000008, "Wrong size on UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap");
static_assert(offsetof(UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap, Value) == 0x000000, "Member 'UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap::Value' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap, ReturnValue) == 0x000004, "Member 'UnionRaceBGMLibrary_SetAisacGateDistanceSecondLapToFinalLap::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.SetGoalStageSelectorLabel
// 0x0010 (0x0010 - 0x0000)
struct UnionRaceBGMLibrary_SetGoalStageSelectorLabel final
{
public:
	class FString                                 InGoalStageSelectorLabel;                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_SetGoalStageSelectorLabel) == 0x000008, "Wrong alignment on UnionRaceBGMLibrary_SetGoalStageSelectorLabel");
static_assert(sizeof(UnionRaceBGMLibrary_SetGoalStageSelectorLabel) == 0x000010, "Wrong size on UnionRaceBGMLibrary_SetGoalStageSelectorLabel");
static_assert(offsetof(UnionRaceBGMLibrary_SetGoalStageSelectorLabel, InGoalStageSelectorLabel) == 0x000000, "Member 'UnionRaceBGMLibrary_SetGoalStageSelectorLabel::InGoalStageSelectorLabel' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.SetVolume
// 0x0008 (0x0008 - 0x0000)
struct UnionRaceBGMLibrary_SetVolume final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRaceBGMLibrary_SetVolume) == 0x000004, "Wrong alignment on UnionRaceBGMLibrary_SetVolume");
static_assert(sizeof(UnionRaceBGMLibrary_SetVolume) == 0x000008, "Wrong size on UnionRaceBGMLibrary_SetVolume");
static_assert(offsetof(UnionRaceBGMLibrary_SetVolume, Value) == 0x000000, "Member 'UnionRaceBGMLibrary_SetVolume::Value' has a wrong offset!");
static_assert(offsetof(UnionRaceBGMLibrary_SetVolume, ReturnValue) == 0x000004, "Member 'UnionRaceBGMLibrary_SetVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRaceBGMLibrary.Stop
// 0x0001 (0x0001 - 0x0000)
struct UnionRaceBGMLibrary_Stop final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRaceBGMLibrary_Stop) == 0x000001, "Wrong alignment on UnionRaceBGMLibrary_Stop");
static_assert(sizeof(UnionRaceBGMLibrary_Stop) == 0x000001, "Wrong size on UnionRaceBGMLibrary_Stop");
static_assert(offsetof(UnionRaceBGMLibrary_Stop, ReturnValue) == 0x000000, "Member 'UnionRaceBGMLibrary_Stop::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRenderTargetUtility.CompressTexture2D
// 0x0018 (0x0018 - 0x0000)
struct UnionRenderTargetUtility_CompressTexture2D final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnionTextureCompressType                     Mode;                                              // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRenderTargetUtility_CompressTexture2D) == 0x000008, "Wrong alignment on UnionRenderTargetUtility_CompressTexture2D");
static_assert(sizeof(UnionRenderTargetUtility_CompressTexture2D) == 0x000018, "Wrong size on UnionRenderTargetUtility_CompressTexture2D");
static_assert(offsetof(UnionRenderTargetUtility_CompressTexture2D, Texture) == 0x000000, "Member 'UnionRenderTargetUtility_CompressTexture2D::Texture' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_CompressTexture2D, Mode) == 0x000008, "Member 'UnionRenderTargetUtility_CompressTexture2D::Mode' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_CompressTexture2D, ReturnValue) == 0x000010, "Member 'UnionRenderTargetUtility_CompressTexture2D::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRenderTargetUtility.ConvertAndCompressRenderTargetToTexture
// 0x0020 (0x0020 - 0x0000)
struct UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture final
{
public:
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnionTextureCompressType                     CompressType;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Partitions;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Uber;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture) == 0x000008, "Wrong alignment on UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture");
static_assert(sizeof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture) == 0x000020, "Wrong size on UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture");
static_assert(offsetof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture, RenderTarget) == 0x000000, "Member 'UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture::RenderTarget' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture, CompressType) == 0x000008, "Member 'UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture::CompressType' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture, Partitions) == 0x00000C, "Member 'UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture::Partitions' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture, Uber) == 0x000010, "Member 'UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture::Uber' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture, ReturnValue) == 0x000018, "Member 'UnionRenderTargetUtility_ConvertAndCompressRenderTargetToTexture::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRenderTargetUtility.LoadVfxAsset
// 0x0018 (0x0018 - 0x0000)
struct UnionRenderTargetUtility_LoadVfxAsset final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRenderTargetUtility_LoadVfxAsset) == 0x000008, "Wrong alignment on UnionRenderTargetUtility_LoadVfxAsset");
static_assert(sizeof(UnionRenderTargetUtility_LoadVfxAsset) == 0x000018, "Wrong size on UnionRenderTargetUtility_LoadVfxAsset");
static_assert(offsetof(UnionRenderTargetUtility_LoadVfxAsset, Path) == 0x000000, "Member 'UnionRenderTargetUtility_LoadVfxAsset::Path' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_LoadVfxAsset, ReturnValue) == 0x000010, "Member 'UnionRenderTargetUtility_LoadVfxAsset::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRenderTargetUtility.ReflectionFocus
// 0x0018 (0x0018 - 0x0000)
struct UnionRenderTargetUtility_ReflectionFocus final
{
public:
	class UCineCameraComponent*                   Cine;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*               Scene;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOVScale;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRenderTargetUtility_ReflectionFocus) == 0x000008, "Wrong alignment on UnionRenderTargetUtility_ReflectionFocus");
static_assert(sizeof(UnionRenderTargetUtility_ReflectionFocus) == 0x000018, "Wrong size on UnionRenderTargetUtility_ReflectionFocus");
static_assert(offsetof(UnionRenderTargetUtility_ReflectionFocus, Cine) == 0x000000, "Member 'UnionRenderTargetUtility_ReflectionFocus::Cine' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_ReflectionFocus, Scene) == 0x000008, "Member 'UnionRenderTargetUtility_ReflectionFocus::Scene' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_ReflectionFocus, FOVScale) == 0x000010, "Member 'UnionRenderTargetUtility_ReflectionFocus::FOVScale' has a wrong offset!");

// Function UnionSystem.UnionRenderTargetUtility.SetPostProcessToActiveCamera
// 0x0018 (0x0018 - 0x0000)
struct UnionRenderTargetUtility_SetPostProcessToActiveCamera final
{
public:
	class UWorld*                                 World;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialName;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionRenderTargetUtility_SetPostProcessToActiveCamera) == 0x000008, "Wrong alignment on UnionRenderTargetUtility_SetPostProcessToActiveCamera");
static_assert(sizeof(UnionRenderTargetUtility_SetPostProcessToActiveCamera) == 0x000018, "Wrong size on UnionRenderTargetUtility_SetPostProcessToActiveCamera");
static_assert(offsetof(UnionRenderTargetUtility_SetPostProcessToActiveCamera, World) == 0x000000, "Member 'UnionRenderTargetUtility_SetPostProcessToActiveCamera::World' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_SetPostProcessToActiveCamera, MaterialName) == 0x000008, "Member 'UnionRenderTargetUtility_SetPostProcessToActiveCamera::MaterialName' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_SetPostProcessToActiveCamera, ReturnValue) == 0x000010, "Member 'UnionRenderTargetUtility_SetPostProcessToActiveCamera::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionRenderTargetUtility.UpdateRenderTargetSizeForRuntime
// 0x0018 (0x0018 - 0x0000)
struct UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime final
{
public:
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class APlayerController*                PlayerController;                                  // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReductionScaleX;                                   // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReductionScaleY;                                   // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime) == 0x000008, "Wrong alignment on UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime");
static_assert(sizeof(UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime) == 0x000018, "Wrong size on UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime");
static_assert(offsetof(UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime, RenderTarget) == 0x000000, "Member 'UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime::RenderTarget' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime, PlayerController) == 0x000008, "Member 'UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime::PlayerController' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime, ReductionScaleX) == 0x000010, "Member 'UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime::ReductionScaleX' has a wrong offset!");
static_assert(offsetof(UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime, ReductionScaleY) == 0x000014, "Member 'UnionRenderTargetUtility_UpdateRenderTargetSizeForRuntime::ReductionScaleY' has a wrong offset!");

// Function UnionSystem.UnionRingGateCameraInterface.AddRingGateHiddenActor
// 0x0008 (0x0008 - 0x0000)
struct UnionRingGateCameraInterface_AddRingGateHiddenActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRingGateCameraInterface_AddRingGateHiddenActor) == 0x000008, "Wrong alignment on UnionRingGateCameraInterface_AddRingGateHiddenActor");
static_assert(sizeof(UnionRingGateCameraInterface_AddRingGateHiddenActor) == 0x000008, "Wrong size on UnionRingGateCameraInterface_AddRingGateHiddenActor");
static_assert(offsetof(UnionRingGateCameraInterface_AddRingGateHiddenActor, Actor) == 0x000000, "Member 'UnionRingGateCameraInterface_AddRingGateHiddenActor::Actor' has a wrong offset!");

// Function UnionSystem.UnionRingGateCameraInterface.AddRingGateShowActor
// 0x0008 (0x0008 - 0x0000)
struct UnionRingGateCameraInterface_AddRingGateShowActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRingGateCameraInterface_AddRingGateShowActor) == 0x000008, "Wrong alignment on UnionRingGateCameraInterface_AddRingGateShowActor");
static_assert(sizeof(UnionRingGateCameraInterface_AddRingGateShowActor) == 0x000008, "Wrong size on UnionRingGateCameraInterface_AddRingGateShowActor");
static_assert(offsetof(UnionRingGateCameraInterface_AddRingGateShowActor, Actor) == 0x000000, "Member 'UnionRingGateCameraInterface_AddRingGateShowActor::Actor' has a wrong offset!");

// Function UnionSystem.UnionRingGateCameraInterface.RemoveRingGateHiddenActor
// 0x0008 (0x0008 - 0x0000)
struct UnionRingGateCameraInterface_RemoveRingGateHiddenActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRingGateCameraInterface_RemoveRingGateHiddenActor) == 0x000008, "Wrong alignment on UnionRingGateCameraInterface_RemoveRingGateHiddenActor");
static_assert(sizeof(UnionRingGateCameraInterface_RemoveRingGateHiddenActor) == 0x000008, "Wrong size on UnionRingGateCameraInterface_RemoveRingGateHiddenActor");
static_assert(offsetof(UnionRingGateCameraInterface_RemoveRingGateHiddenActor, Actor) == 0x000000, "Member 'UnionRingGateCameraInterface_RemoveRingGateHiddenActor::Actor' has a wrong offset!");

// Function UnionSystem.UnionRingGateCameraInterface.RemoveRingGateShowActor
// 0x0008 (0x0008 - 0x0000)
struct UnionRingGateCameraInterface_RemoveRingGateShowActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionRingGateCameraInterface_RemoveRingGateShowActor) == 0x000008, "Wrong alignment on UnionRingGateCameraInterface_RemoveRingGateShowActor");
static_assert(sizeof(UnionRingGateCameraInterface_RemoveRingGateShowActor) == 0x000008, "Wrong size on UnionRingGateCameraInterface_RemoveRingGateShowActor");
static_assert(offsetof(UnionRingGateCameraInterface_RemoveRingGateShowActor, Actor) == 0x000000, "Member 'UnionRingGateCameraInterface_RemoveRingGateShowActor::Actor' has a wrong offset!");

// Function UnionSystem.UnionSaveDataTransferBase.GetResultSearchTrialVersionSaveData
// 0x0001 (0x0001 - 0x0000)
struct UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData final
{
public:
	EResultSearchTrialSaveData                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData) == 0x000001, "Wrong alignment on UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData");
static_assert(sizeof(UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData) == 0x000001, "Wrong size on UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData");
static_assert(offsetof(UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData, ReturnValue) == 0x000000, "Member 'UnionSaveDataTransferBase_GetResultSearchTrialVersionSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSaveDataTransferBase.GetResultTransferTrialVersionSaveData
// 0x0001 (0x0001 - 0x0000)
struct UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData final
{
public:
	EResultTransferTrialSaveData                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData) == 0x000001, "Wrong alignment on UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData");
static_assert(sizeof(UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData) == 0x000001, "Wrong size on UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData");
static_assert(offsetof(UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData, ReturnValue) == 0x000000, "Member 'UnionSaveDataTransferBase_GetResultTransferTrialVersionSaveData::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.SetEnableBlur
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_SetEnableBlur final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_SetEnableBlur) == 0x000001, "Wrong alignment on UnionSettings_SetEnableBlur");
static_assert(sizeof(UnionSettings_SetEnableBlur) == 0x000001, "Wrong size on UnionSettings_SetEnableBlur");
static_assert(offsetof(UnionSettings_SetEnableBlur, Enable) == 0x000000, "Member 'UnionSettings_SetEnableBlur::Enable' has a wrong offset!");

// Function UnionSystem.UnionSettings.SetMinLoDBias
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_SetMinLoDBias final
{
public:
	int32                                         Bias;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_SetMinLoDBias) == 0x000004, "Wrong alignment on UnionSettings_SetMinLoDBias");
static_assert(sizeof(UnionSettings_SetMinLoDBias) == 0x000004, "Wrong size on UnionSettings_SetMinLoDBias");
static_assert(offsetof(UnionSettings_SetMinLoDBias, Bias) == 0x000000, "Member 'UnionSettings_SetMinLoDBias::Bias' has a wrong offset!");

// Function UnionSystem.UnionSettings.SetRenderingScale
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_SetRenderingScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_SetRenderingScale) == 0x000004, "Wrong alignment on UnionSettings_SetRenderingScale");
static_assert(sizeof(UnionSettings_SetRenderingScale) == 0x000004, "Wrong size on UnionSettings_SetRenderingScale");
static_assert(offsetof(UnionSettings_SetRenderingScale, Scale) == 0x000000, "Member 'UnionSettings_SetRenderingScale::Scale' has a wrong offset!");

// Function UnionSystem.UnionSettings.CalcScreenPercentage
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_CalcScreenPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_CalcScreenPercentage) == 0x000004, "Wrong alignment on UnionSettings_CalcScreenPercentage");
static_assert(sizeof(UnionSettings_CalcScreenPercentage) == 0x000004, "Wrong size on UnionSettings_CalcScreenPercentage");
static_assert(offsetof(UnionSettings_CalcScreenPercentage, ReturnValue) == 0x000000, "Member 'UnionSettings_CalcScreenPercentage::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetCurrentMachinePostProcessSettings
// 0x0003 (0x0003 - 0x0000)
struct UnionSettings_GetCurrentMachinePostProcessSettings final
{
public:
	struct FMachinePostProcessSettings            ReturnValue;                                       // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetCurrentMachinePostProcessSettings) == 0x000001, "Wrong alignment on UnionSettings_GetCurrentMachinePostProcessSettings");
static_assert(sizeof(UnionSettings_GetCurrentMachinePostProcessSettings) == 0x000003, "Wrong size on UnionSettings_GetCurrentMachinePostProcessSettings");
static_assert(offsetof(UnionSettings_GetCurrentMachinePostProcessSettings, ReturnValue) == 0x000000, "Member 'UnionSettings_GetCurrentMachinePostProcessSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetCurrentUnionCastShadowSettings
// 0x0003 (0x0003 - 0x0000)
struct UnionSettings_GetCurrentUnionCastShadowSettings final
{
public:
	struct FUnionCastShadowSettings               ReturnValue;                                       // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetCurrentUnionCastShadowSettings) == 0x000001, "Wrong alignment on UnionSettings_GetCurrentUnionCastShadowSettings");
static_assert(sizeof(UnionSettings_GetCurrentUnionCastShadowSettings) == 0x000003, "Wrong size on UnionSettings_GetCurrentUnionCastShadowSettings");
static_assert(offsetof(UnionSettings_GetCurrentUnionCastShadowSettings, ReturnValue) == 0x000000, "Member 'UnionSettings_GetCurrentUnionCastShadowSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetDynamicShadowEnable
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_GetDynamicShadowEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetDynamicShadowEnable) == 0x000001, "Wrong alignment on UnionSettings_GetDynamicShadowEnable");
static_assert(sizeof(UnionSettings_GetDynamicShadowEnable) == 0x000001, "Wrong size on UnionSettings_GetDynamicShadowEnable");
static_assert(offsetof(UnionSettings_GetDynamicShadowEnable, ReturnValue) == 0x000000, "Member 'UnionSettings_GetDynamicShadowEnable::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetGFurEnable
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_GetGFurEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetGFurEnable) == 0x000001, "Wrong alignment on UnionSettings_GetGFurEnable");
static_assert(sizeof(UnionSettings_GetGFurEnable) == 0x000001, "Wrong size on UnionSettings_GetGFurEnable");
static_assert(offsetof(UnionSettings_GetGFurEnable, ReturnValue) == 0x000000, "Member 'UnionSettings_GetGFurEnable::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetHoldItemSettingsNonPC
// 0x0010 (0x0010 - 0x0000)
struct UnionSettings_GetHoldItemSettingsNonPC final
{
public:
	struct FHoldItemQualitySettings               ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetHoldItemSettingsNonPC) == 0x000008, "Wrong alignment on UnionSettings_GetHoldItemSettingsNonPC");
static_assert(sizeof(UnionSettings_GetHoldItemSettingsNonPC) == 0x000010, "Wrong size on UnionSettings_GetHoldItemSettingsNonPC");
static_assert(offsetof(UnionSettings_GetHoldItemSettingsNonPC, ReturnValue) == 0x000000, "Member 'UnionSettings_GetHoldItemSettingsNonPC::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetHoldItemSettingsPC
// 0x0010 (0x0010 - 0x0000)
struct UnionSettings_GetHoldItemSettingsPC final
{
public:
	struct FHoldItemQualitySettings               ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetHoldItemSettingsPC) == 0x000008, "Wrong alignment on UnionSettings_GetHoldItemSettingsPC");
static_assert(sizeof(UnionSettings_GetHoldItemSettingsPC) == 0x000010, "Wrong size on UnionSettings_GetHoldItemSettingsPC");
static_assert(offsetof(UnionSettings_GetHoldItemSettingsPC, ReturnValue) == 0x000000, "Member 'UnionSettings_GetHoldItemSettingsPC::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetLobbyMeshLOD
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_GetLobbyMeshLOD final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetLobbyMeshLOD) == 0x000004, "Wrong alignment on UnionSettings_GetLobbyMeshLOD");
static_assert(sizeof(UnionSettings_GetLobbyMeshLOD) == 0x000004, "Wrong size on UnionSettings_GetLobbyMeshLOD");
static_assert(offsetof(UnionSettings_GetLobbyMeshLOD, ReturnValue) == 0x000000, "Member 'UnionSettings_GetLobbyMeshLOD::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetMachineQualitySettingsNonPC
// 0x001C (0x001C - 0x0000)
struct UnionSettings_GetMachineQualitySettingsNonPC final
{
public:
	struct FMachineQualitySettings                ReturnValue;                                       // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetMachineQualitySettingsNonPC) == 0x000004, "Wrong alignment on UnionSettings_GetMachineQualitySettingsNonPC");
static_assert(sizeof(UnionSettings_GetMachineQualitySettingsNonPC) == 0x00001C, "Wrong size on UnionSettings_GetMachineQualitySettingsNonPC");
static_assert(offsetof(UnionSettings_GetMachineQualitySettingsNonPC, ReturnValue) == 0x000000, "Member 'UnionSettings_GetMachineQualitySettingsNonPC::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetMachineQualitySettingsPC
// 0x001C (0x001C - 0x0000)
struct UnionSettings_GetMachineQualitySettingsPC final
{
public:
	struct FMachineQualitySettings                ReturnValue;                                       // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetMachineQualitySettingsPC) == 0x000004, "Wrong alignment on UnionSettings_GetMachineQualitySettingsPC");
static_assert(sizeof(UnionSettings_GetMachineQualitySettingsPC) == 0x00001C, "Wrong size on UnionSettings_GetMachineQualitySettingsPC");
static_assert(offsetof(UnionSettings_GetMachineQualitySettingsPC, ReturnValue) == 0x000000, "Member 'UnionSettings_GetMachineQualitySettingsPC::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetMenuMinLoD
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_GetMenuMinLoD final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetMenuMinLoD) == 0x000004, "Wrong alignment on UnionSettings_GetMenuMinLoD");
static_assert(sizeof(UnionSettings_GetMenuMinLoD) == 0x000004, "Wrong size on UnionSettings_GetMenuMinLoD");
static_assert(offsetof(UnionSettings_GetMenuMinLoD, ReturnValue) == 0x000000, "Member 'UnionSettings_GetMenuMinLoD::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetMinLoDNonPC
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_GetMinLoDNonPC final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetMinLoDNonPC) == 0x000004, "Wrong alignment on UnionSettings_GetMinLoDNonPC");
static_assert(sizeof(UnionSettings_GetMinLoDNonPC) == 0x000004, "Wrong size on UnionSettings_GetMinLoDNonPC");
static_assert(offsetof(UnionSettings_GetMinLoDNonPC, ReturnValue) == 0x000000, "Member 'UnionSettings_GetMinLoDNonPC::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetMinLoDPC
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_GetMinLoDPC final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetMinLoDPC) == 0x000004, "Wrong alignment on UnionSettings_GetMinLoDPC");
static_assert(sizeof(UnionSettings_GetMinLoDPC) == 0x000004, "Wrong size on UnionSettings_GetMinLoDPC");
static_assert(offsetof(UnionSettings_GetMinLoDPC, ReturnValue) == 0x000000, "Member 'UnionSettings_GetMinLoDPC::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.GetQualityIndex
// 0x0004 (0x0004 - 0x0000)
struct UnionSettings_GetQualityIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_GetQualityIndex) == 0x000004, "Wrong alignment on UnionSettings_GetQualityIndex");
static_assert(sizeof(UnionSettings_GetQualityIndex) == 0x000004, "Wrong size on UnionSettings_GetQualityIndex");
static_assert(offsetof(UnionSettings_GetQualityIndex, ReturnValue) == 0x000000, "Member 'UnionSettings_GetQualityIndex::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.IsCastShadowDashPanel
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_IsCastShadowDashPanel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_IsCastShadowDashPanel) == 0x000001, "Wrong alignment on UnionSettings_IsCastShadowDashPanel");
static_assert(sizeof(UnionSettings_IsCastShadowDashPanel) == 0x000001, "Wrong size on UnionSettings_IsCastShadowDashPanel");
static_assert(offsetof(UnionSettings_IsCastShadowDashPanel, ReturnValue) == 0x000000, "Member 'UnionSettings_IsCastShadowDashPanel::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.IsCastShadowItemBox
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_IsCastShadowItemBox final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_IsCastShadowItemBox) == 0x000001, "Wrong alignment on UnionSettings_IsCastShadowItemBox");
static_assert(sizeof(UnionSettings_IsCastShadowItemBox) == 0x000001, "Wrong size on UnionSettings_IsCastShadowItemBox");
static_assert(offsetof(UnionSettings_IsCastShadowItemBox, ReturnValue) == 0x000000, "Member 'UnionSettings_IsCastShadowItemBox::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.IsCastShadowRing
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_IsCastShadowRing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_IsCastShadowRing) == 0x000001, "Wrong alignment on UnionSettings_IsCastShadowRing");
static_assert(sizeof(UnionSettings_IsCastShadowRing) == 0x000001, "Wrong size on UnionSettings_IsCastShadowRing");
static_assert(offsetof(UnionSettings_IsCastShadowRing, ReturnValue) == 0x000000, "Member 'UnionSettings_IsCastShadowRing::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.IsEnableFlowingWaterPP
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_IsEnableFlowingWaterPP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_IsEnableFlowingWaterPP) == 0x000001, "Wrong alignment on UnionSettings_IsEnableFlowingWaterPP");
static_assert(sizeof(UnionSettings_IsEnableFlowingWaterPP) == 0x000001, "Wrong size on UnionSettings_IsEnableFlowingWaterPP");
static_assert(offsetof(UnionSettings_IsEnableFlowingWaterPP, ReturnValue) == 0x000000, "Member 'UnionSettings_IsEnableFlowingWaterPP::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.IsEnableHiSpeedPP
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_IsEnableHiSpeedPP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_IsEnableHiSpeedPP) == 0x000001, "Wrong alignment on UnionSettings_IsEnableHiSpeedPP");
static_assert(sizeof(UnionSettings_IsEnableHiSpeedPP) == 0x000001, "Wrong size on UnionSettings_IsEnableHiSpeedPP");
static_assert(offsetof(UnionSettings_IsEnableHiSpeedPP, ReturnValue) == 0x000000, "Member 'UnionSettings_IsEnableHiSpeedPP::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSettings.IsEnableRadialBlurPP
// 0x0001 (0x0001 - 0x0000)
struct UnionSettings_IsEnableRadialBlurPP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSettings_IsEnableRadialBlurPP) == 0x000001, "Wrong alignment on UnionSettings_IsEnableRadialBlurPP");
static_assert(sizeof(UnionSettings_IsEnableRadialBlurPP) == 0x000001, "Wrong size on UnionSettings_IsEnableRadialBlurPP");
static_assert(offsetof(UnionSettings_IsEnableRadialBlurPP, ReturnValue) == 0x000000, "Member 'UnionSettings_IsEnableRadialBlurPP::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSkeletalMeshComponent.SetVisibilityWithTickControl
// 0x0002 (0x0002 - 0x0000)
struct UnionSkeletalMeshComponent_SetVisibilityWithTickControl final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPropagateToChildren;                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSkeletalMeshComponent_SetVisibilityWithTickControl) == 0x000001, "Wrong alignment on UnionSkeletalMeshComponent_SetVisibilityWithTickControl");
static_assert(sizeof(UnionSkeletalMeshComponent_SetVisibilityWithTickControl) == 0x000002, "Wrong size on UnionSkeletalMeshComponent_SetVisibilityWithTickControl");
static_assert(offsetof(UnionSkeletalMeshComponent_SetVisibilityWithTickControl, bNewVisibility) == 0x000000, "Member 'UnionSkeletalMeshComponent_SetVisibilityWithTickControl::bNewVisibility' has a wrong offset!");
static_assert(offsetof(UnionSkeletalMeshComponent_SetVisibilityWithTickControl, bPropagateToChildren) == 0x000001, "Member 'UnionSkeletalMeshComponent_SetVisibilityWithTickControl::bPropagateToChildren' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetCharacterStatsEventValue
// 0x0008 (0x0008 - 0x0000)
struct UnionStatsManager_GetCharacterStatsEventValue final
{
public:
	EStatsEventId                                 StatsEventId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     DriverId;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetCharacterStatsEventValue) == 0x000004, "Wrong alignment on UnionStatsManager_GetCharacterStatsEventValue");
static_assert(sizeof(UnionStatsManager_GetCharacterStatsEventValue) == 0x000008, "Wrong size on UnionStatsManager_GetCharacterStatsEventValue");
static_assert(offsetof(UnionStatsManager_GetCharacterStatsEventValue, StatsEventId) == 0x000000, "Member 'UnionStatsManager_GetCharacterStatsEventValue::StatsEventId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetCharacterStatsEventValue, DriverId) == 0x000001, "Member 'UnionStatsManager_GetCharacterStatsEventValue::DriverId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetCharacterStatsEventValue, ReturnValue) == 0x000004, "Member 'UnionStatsManager_GetCharacterStatsEventValue::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetCharacterStatsEventValueTopThree
// 0x0020 (0x0020 - 0x0000)
struct UnionStatsManager_GetCharacterStatsEventValueTopThree final
{
public:
	TArray<EDriverId>                             TopThreeIds;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 TopThreeCounts;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetCharacterStatsEventValueTopThree) == 0x000008, "Wrong alignment on UnionStatsManager_GetCharacterStatsEventValueTopThree");
static_assert(sizeof(UnionStatsManager_GetCharacterStatsEventValueTopThree) == 0x000020, "Wrong size on UnionStatsManager_GetCharacterStatsEventValueTopThree");
static_assert(offsetof(UnionStatsManager_GetCharacterStatsEventValueTopThree, TopThreeIds) == 0x000000, "Member 'UnionStatsManager_GetCharacterStatsEventValueTopThree::TopThreeIds' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetCharacterStatsEventValueTopThree, TopThreeCounts) == 0x000010, "Member 'UnionStatsManager_GetCharacterStatsEventValueTopThree::TopThreeCounts' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetMachineStatsEventValue
// 0x0008 (0x0008 - 0x0000)
struct UnionStatsManager_GetMachineStatsEventValue final
{
public:
	EStatsEventId                                 StatsEventId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMachineId                                    MachineId;                                         // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetMachineStatsEventValue) == 0x000004, "Wrong alignment on UnionStatsManager_GetMachineStatsEventValue");
static_assert(sizeof(UnionStatsManager_GetMachineStatsEventValue) == 0x000008, "Wrong size on UnionStatsManager_GetMachineStatsEventValue");
static_assert(offsetof(UnionStatsManager_GetMachineStatsEventValue, StatsEventId) == 0x000000, "Member 'UnionStatsManager_GetMachineStatsEventValue::StatsEventId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetMachineStatsEventValue, MachineId) == 0x000001, "Member 'UnionStatsManager_GetMachineStatsEventValue::MachineId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetMachineStatsEventValue, ReturnValue) == 0x000004, "Member 'UnionStatsManager_GetMachineStatsEventValue::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetResultHonorList
// 0x0018 (0x0018 - 0x0000)
struct UnionStatsManager_GetResultHonorList final
{
public:
	int32                                         RacerIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHonorCommendationData>         OutDataList;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetResultHonorList) == 0x000008, "Wrong alignment on UnionStatsManager_GetResultHonorList");
static_assert(sizeof(UnionStatsManager_GetResultHonorList) == 0x000018, "Wrong size on UnionStatsManager_GetResultHonorList");
static_assert(offsetof(UnionStatsManager_GetResultHonorList, RacerIndex) == 0x000000, "Member 'UnionStatsManager_GetResultHonorList::RacerIndex' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetResultHonorList, OutDataList) == 0x000008, "Member 'UnionStatsManager_GetResultHonorList::OutDataList' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetSaveRedStarRings
// 0x0010 (0x0010 - 0x0000)
struct UnionStatsManager_GetSaveRedStarRings final
{
public:
	TArray<bool>                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetSaveRedStarRings) == 0x000008, "Wrong alignment on UnionStatsManager_GetSaveRedStarRings");
static_assert(sizeof(UnionStatsManager_GetSaveRedStarRings) == 0x000010, "Wrong size on UnionStatsManager_GetSaveRedStarRings");
static_assert(offsetof(UnionStatsManager_GetSaveRedStarRings, ReturnValue) == 0x000000, "Member 'UnionStatsManager_GetSaveRedStarRings::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetStatsEventValue
// 0x0008 (0x0008 - 0x0000)
struct UnionStatsManager_GetStatsEventValue final
{
public:
	EStatsEventId                                 StatsEventId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetStatsEventValue) == 0x000004, "Wrong alignment on UnionStatsManager_GetStatsEventValue");
static_assert(sizeof(UnionStatsManager_GetStatsEventValue) == 0x000008, "Wrong size on UnionStatsManager_GetStatsEventValue");
static_assert(offsetof(UnionStatsManager_GetStatsEventValue, StatsEventId) == 0x000000, "Member 'UnionStatsManager_GetStatsEventValue::StatsEventId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetStatsEventValue, ReturnValue) == 0x000004, "Member 'UnionStatsManager_GetStatsEventValue::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetTopThreeCharactersUsageAddOne
// 0x0018 (0x0018 - 0x0000)
struct UnionStatsManager_GetTopThreeCharactersUsageAddOne final
{
public:
	EDriverId                                     AddOneDriverId;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCommon_HistoryData_CharacterUsage> ReturnValue;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetTopThreeCharactersUsageAddOne) == 0x000008, "Wrong alignment on UnionStatsManager_GetTopThreeCharactersUsageAddOne");
static_assert(sizeof(UnionStatsManager_GetTopThreeCharactersUsageAddOne) == 0x000018, "Wrong size on UnionStatsManager_GetTopThreeCharactersUsageAddOne");
static_assert(offsetof(UnionStatsManager_GetTopThreeCharactersUsageAddOne, AddOneDriverId) == 0x000000, "Member 'UnionStatsManager_GetTopThreeCharactersUsageAddOne::AddOneDriverId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_GetTopThreeCharactersUsageAddOne, ReturnValue) == 0x000008, "Member 'UnionStatsManager_GetTopThreeCharactersUsageAddOne::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.IsRaceRedStarRingDisplay
// 0x0001 (0x0001 - 0x0000)
struct UnionStatsManager_IsRaceRedStarRingDisplay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_IsRaceRedStarRingDisplay) == 0x000001, "Wrong alignment on UnionStatsManager_IsRaceRedStarRingDisplay");
static_assert(sizeof(UnionStatsManager_IsRaceRedStarRingDisplay) == 0x000001, "Wrong size on UnionStatsManager_IsRaceRedStarRingDisplay");
static_assert(offsetof(UnionStatsManager_IsRaceRedStarRingDisplay, ReturnValue) == 0x000000, "Member 'UnionStatsManager_IsRaceRedStarRingDisplay::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.OnSetHonorList
// 0x0010 (0x0010 - 0x0000)
struct UnionStatsManager_OnSetHonorList final
{
public:
	struct FHonorCommendationDataSetList          list;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_OnSetHonorList) == 0x000008, "Wrong alignment on UnionStatsManager_OnSetHonorList");
static_assert(sizeof(UnionStatsManager_OnSetHonorList) == 0x000010, "Wrong size on UnionStatsManager_OnSetHonorList");
static_assert(offsetof(UnionStatsManager_OnSetHonorList, list) == 0x000000, "Member 'UnionStatsManager_OnSetHonorList::list' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.RequestAddDriversParameter
// 0x0008 (0x0008 - 0x0000)
struct UnionStatsManager_RequestAddDriversParameter final
{
public:
	EStatsEventId                                 StatsEventId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDriverId                                     DriverId;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddValue;                                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_RequestAddDriversParameter) == 0x000004, "Wrong alignment on UnionStatsManager_RequestAddDriversParameter");
static_assert(sizeof(UnionStatsManager_RequestAddDriversParameter) == 0x000008, "Wrong size on UnionStatsManager_RequestAddDriversParameter");
static_assert(offsetof(UnionStatsManager_RequestAddDriversParameter, StatsEventId) == 0x000000, "Member 'UnionStatsManager_RequestAddDriversParameter::StatsEventId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_RequestAddDriversParameter, DriverId) == 0x000001, "Member 'UnionStatsManager_RequestAddDriversParameter::DriverId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_RequestAddDriversParameter, AddValue) == 0x000004, "Member 'UnionStatsManager_RequestAddDriversParameter::AddValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.RequestAddMachinesParameter
// 0x0008 (0x0008 - 0x0000)
struct UnionStatsManager_RequestAddMachinesParameter final
{
public:
	EStatsEventId                                 StatsEventId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMachineId                                    MachineId;                                         // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddValue;                                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_RequestAddMachinesParameter) == 0x000004, "Wrong alignment on UnionStatsManager_RequestAddMachinesParameter");
static_assert(sizeof(UnionStatsManager_RequestAddMachinesParameter) == 0x000008, "Wrong size on UnionStatsManager_RequestAddMachinesParameter");
static_assert(offsetof(UnionStatsManager_RequestAddMachinesParameter, StatsEventId) == 0x000000, "Member 'UnionStatsManager_RequestAddMachinesParameter::StatsEventId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_RequestAddMachinesParameter, MachineId) == 0x000001, "Member 'UnionStatsManager_RequestAddMachinesParameter::MachineId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_RequestAddMachinesParameter, AddValue) == 0x000004, "Member 'UnionStatsManager_RequestAddMachinesParameter::AddValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.RequestAddRaceDetailsParameter
// 0x0008 (0x0008 - 0x0000)
struct UnionStatsManager_RequestAddRaceDetailsParameter final
{
public:
	EStatsEventId                                 StatsEventId;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddValue;                                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_RequestAddRaceDetailsParameter) == 0x000004, "Wrong alignment on UnionStatsManager_RequestAddRaceDetailsParameter");
static_assert(sizeof(UnionStatsManager_RequestAddRaceDetailsParameter) == 0x000008, "Wrong size on UnionStatsManager_RequestAddRaceDetailsParameter");
static_assert(offsetof(UnionStatsManager_RequestAddRaceDetailsParameter, StatsEventId) == 0x000000, "Member 'UnionStatsManager_RequestAddRaceDetailsParameter::StatsEventId' has a wrong offset!");
static_assert(offsetof(UnionStatsManager_RequestAddRaceDetailsParameter, AddValue) == 0x000004, "Member 'UnionStatsManager_RequestAddRaceDetailsParameter::AddValue' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.SetSaveRedStarRings
// 0x0010 (0x0010 - 0x0000)
struct UnionStatsManager_SetSaveRedStarRings final
{
public:
	TArray<bool>                                  InRSRs;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_SetSaveRedStarRings) == 0x000008, "Wrong alignment on UnionStatsManager_SetSaveRedStarRings");
static_assert(sizeof(UnionStatsManager_SetSaveRedStarRings) == 0x000010, "Wrong size on UnionStatsManager_SetSaveRedStarRings");
static_assert(offsetof(UnionStatsManager_SetSaveRedStarRings, InRSRs) == 0x000000, "Member 'UnionStatsManager_SetSaveRedStarRings::InRSRs' has a wrong offset!");

// Function UnionSystem.UnionStatsManager.GetMultiPlayBonus
// 0x0001 (0x0001 - 0x0000)
struct UnionStatsManager_GetMultiPlayBonus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionStatsManager_GetMultiPlayBonus) == 0x000001, "Wrong alignment on UnionStatsManager_GetMultiPlayBonus");
static_assert(sizeof(UnionStatsManager_GetMultiPlayBonus) == 0x000001, "Wrong size on UnionStatsManager_GetMultiPlayBonus");
static_assert(offsetof(UnionStatsManager_GetMultiPlayBonus, ReturnValue) == 0x000000, "Member 'UnionStatsManager_GetMultiPlayBonus::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.AddLevel
// 0x0040 (0x0040 - 0x0000)
struct UnionSystemBP_AddLevel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Load;                                              // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Visible;                                           // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LightChannel;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Dependant;                                         // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_AddLevel) == 0x000008, "Wrong alignment on UnionSystemBP_AddLevel");
static_assert(sizeof(UnionSystemBP_AddLevel) == 0x000040, "Wrong size on UnionSystemBP_AddLevel");
static_assert(offsetof(UnionSystemBP_AddLevel, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_AddLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, LevelName) == 0x000008, "Member 'UnionSystemBP_AddLevel::LevelName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, Load) == 0x000010, "Member 'UnionSystemBP_AddLevel::Load' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, Visible) == 0x000011, "Member 'UnionSystemBP_AddLevel::Visible' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, LightChannel) == 0x000014, "Member 'UnionSystemBP_AddLevel::LightChannel' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, Location) == 0x000018, "Member 'UnionSystemBP_AddLevel::Location' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, Dependant) == 0x000030, "Member 'UnionSystemBP_AddLevel::Dependant' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevel, ReturnValue) == 0x000038, "Member 'UnionSystemBP_AddLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.AddLevelByReference
// 0x0080 (0x0080 - 0x0000)
struct UnionSystemBP_AddLevelByReference final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  Level;                                             // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Load;                                              // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Visible;                                           // 0x0031(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LightChannel;                                      // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0038(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  Dependant;                                         // 0x0050(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_AddLevelByReference) == 0x000008, "Wrong alignment on UnionSystemBP_AddLevelByReference");
static_assert(sizeof(UnionSystemBP_AddLevelByReference) == 0x000080, "Wrong size on UnionSystemBP_AddLevelByReference");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_AddLevelByReference::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, Level) == 0x000008, "Member 'UnionSystemBP_AddLevelByReference::Level' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, Load) == 0x000030, "Member 'UnionSystemBP_AddLevelByReference::Load' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, Visible) == 0x000031, "Member 'UnionSystemBP_AddLevelByReference::Visible' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, LightChannel) == 0x000034, "Member 'UnionSystemBP_AddLevelByReference::LightChannel' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, Location) == 0x000038, "Member 'UnionSystemBP_AddLevelByReference::Location' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, Dependant) == 0x000050, "Member 'UnionSystemBP_AddLevelByReference::Dependant' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AddLevelByReference, ReturnValue) == 0x000078, "Member 'UnionSystemBP_AddLevelByReference::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.AllLevelLoaded
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_AllLevelLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_AllLevelLoaded) == 0x000001, "Wrong alignment on UnionSystemBP_AllLevelLoaded");
static_assert(sizeof(UnionSystemBP_AllLevelLoaded) == 0x000001, "Wrong size on UnionSystemBP_AllLevelLoaded");
static_assert(offsetof(UnionSystemBP_AllLevelLoaded, ReturnValue) == 0x000000, "Member 'UnionSystemBP_AllLevelLoaded::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.AttachTo
// 0x0038 (0x0038 - 0x0000)
struct UnionSystemBP_AttachTo final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachLocation                               LocationType;                                      // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           ReturnValue;                                       // 0x0034(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_AttachTo) == 0x000008, "Wrong alignment on UnionSystemBP_AttachTo");
static_assert(sizeof(UnionSystemBP_AttachTo) == 0x000038, "Wrong size on UnionSystemBP_AttachTo");
static_assert(offsetof(UnionSystemBP_AttachTo, Handle) == 0x000000, "Member 'UnionSystemBP_AttachTo::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AttachTo, AttachToComponent) == 0x000008, "Member 'UnionSystemBP_AttachTo::AttachToComponent' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AttachTo, AttachPointName) == 0x000010, "Member 'UnionSystemBP_AttachTo::AttachPointName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AttachTo, Location) == 0x000018, "Member 'UnionSystemBP_AttachTo::Location' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AttachTo, LocationType) == 0x000030, "Member 'UnionSystemBP_AttachTo::LocationType' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_AttachTo, ReturnValue) == 0x000034, "Member 'UnionSystemBP_AttachTo::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.ClearLevels
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_ClearLevels final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_ClearLevels) == 0x000008, "Wrong alignment on UnionSystemBP_ClearLevels");
static_assert(sizeof(UnionSystemBP_ClearLevels) == 0x000008, "Wrong size on UnionSystemBP_ClearLevels");
static_assert(offsetof(UnionSystemBP_ClearLevels, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_ClearLevels::WorldContextObject' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.DeleteInvalidSaveData
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_DeleteInvalidSaveData final
{
public:
	bool                                          bOutQuitGame;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_DeleteInvalidSaveData) == 0x000001, "Wrong alignment on UnionSystemBP_DeleteInvalidSaveData");
static_assert(sizeof(UnionSystemBP_DeleteInvalidSaveData) == 0x000001, "Wrong size on UnionSystemBP_DeleteInvalidSaveData");
static_assert(offsetof(UnionSystemBP_DeleteInvalidSaveData, bOutQuitGame) == 0x000000, "Member 'UnionSystemBP_DeleteInvalidSaveData::bOutQuitGame' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.DoesPackageExist
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_DoesPackageExist final
{
public:
	class FString                                 LongPackageName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_DoesPackageExist) == 0x000008, "Wrong alignment on UnionSystemBP_DoesPackageExist");
static_assert(sizeof(UnionSystemBP_DoesPackageExist) == 0x000018, "Wrong size on UnionSystemBP_DoesPackageExist");
static_assert(offsetof(UnionSystemBP_DoesPackageExist, LongPackageName) == 0x000000, "Member 'UnionSystemBP_DoesPackageExist::LongPackageName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_DoesPackageExist, ReturnValue) == 0x000010, "Member 'UnionSystemBP_DoesPackageExist::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.FindDirectionalLight
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_FindDirectionalLight final
{
public:
	int32                                         LightChannel;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_FindDirectionalLight) == 0x000008, "Wrong alignment on UnionSystemBP_FindDirectionalLight");
static_assert(sizeof(UnionSystemBP_FindDirectionalLight) == 0x000018, "Wrong size on UnionSystemBP_FindDirectionalLight");
static_assert(offsetof(UnionSystemBP_FindDirectionalLight, LightChannel) == 0x000000, "Member 'UnionSystemBP_FindDirectionalLight::LightChannel' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_FindDirectionalLight, DirectionalLight) == 0x000008, "Member 'UnionSystemBP_FindDirectionalLight::DirectionalLight' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_FindDirectionalLight, ReturnValue) == 0x000010, "Member 'UnionSystemBP_FindDirectionalLight::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetActorOfLevelByClass
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_GetActorOfLevelByClass final
{
public:
	const class AActor*                           Target;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetActorOfLevelByClass) == 0x000008, "Wrong alignment on UnionSystemBP_GetActorOfLevelByClass");
static_assert(sizeof(UnionSystemBP_GetActorOfLevelByClass) == 0x000018, "Wrong size on UnionSystemBP_GetActorOfLevelByClass");
static_assert(offsetof(UnionSystemBP_GetActorOfLevelByClass, Target) == 0x000000, "Member 'UnionSystemBP_GetActorOfLevelByClass::Target' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetActorOfLevelByClass, ActorClass) == 0x000008, "Member 'UnionSystemBP_GetActorOfLevelByClass::ActorClass' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetActorOfLevelByClass, ReturnValue) == 0x000010, "Member 'UnionSystemBP_GetActorOfLevelByClass::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetAllActorsOfLevel
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_GetAllActorsOfLevel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         OutActors;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetAllActorsOfLevel) == 0x000008, "Wrong alignment on UnionSystemBP_GetAllActorsOfLevel");
static_assert(sizeof(UnionSystemBP_GetAllActorsOfLevel) == 0x000018, "Wrong size on UnionSystemBP_GetAllActorsOfLevel");
static_assert(offsetof(UnionSystemBP_GetAllActorsOfLevel, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_GetAllActorsOfLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetAllActorsOfLevel, OutActors) == 0x000008, "Member 'UnionSystemBP_GetAllActorsOfLevel::OutActors' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetAtomComponent
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_GetAtomComponent final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetAtomComponent) == 0x000008, "Wrong alignment on UnionSystemBP_GetAtomComponent");
static_assert(sizeof(UnionSystemBP_GetAtomComponent) == 0x000010, "Wrong size on UnionSystemBP_GetAtomComponent");
static_assert(offsetof(UnionSystemBP_GetAtomComponent, Handle) == 0x000000, "Member 'UnionSystemBP_GetAtomComponent::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetAtomComponent, ReturnValue) == 0x000008, "Member 'UnionSystemBP_GetAtomComponent::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetBGMVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_GetBGMVolume final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetBGMVolume) == 0x000004, "Wrong alignment on UnionSystemBP_GetBGMVolume");
static_assert(sizeof(UnionSystemBP_GetBGMVolume) == 0x000004, "Wrong size on UnionSystemBP_GetBGMVolume");
static_assert(offsetof(UnionSystemBP_GetBGMVolume, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetBGMVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetFFBVolume
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_GetFFBVolume final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetFFBVolume) == 0x000004, "Wrong alignment on UnionSystemBP_GetFFBVolume");
static_assert(sizeof(UnionSystemBP_GetFFBVolume) == 0x000008, "Wrong size on UnionSystemBP_GetFFBVolume");
static_assert(offsetof(UnionSystemBP_GetFFBVolume, PlayerIndex) == 0x000000, "Member 'UnionSystemBP_GetFFBVolume::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetFFBVolume, ReturnValue) == 0x000004, "Member 'UnionSystemBP_GetFFBVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetGameSettings
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_GetGameSettings final
{
public:
	const class UUnionSettings*                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetGameSettings) == 0x000008, "Wrong alignment on UnionSystemBP_GetGameSettings");
static_assert(sizeof(UnionSystemBP_GetGameSettings) == 0x000008, "Wrong size on UnionSystemBP_GetGameSettings");
static_assert(offsetof(UnionSystemBP_GetGameSettings, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetGameSettings::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetLevelName
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_GetLevelName final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetLevelName) == 0x000008, "Wrong alignment on UnionSystemBP_GetLevelName");
static_assert(sizeof(UnionSystemBP_GetLevelName) == 0x000018, "Wrong size on UnionSystemBP_GetLevelName");
static_assert(offsetof(UnionSystemBP_GetLevelName, World) == 0x000000, "Member 'UnionSystemBP_GetLevelName::World' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetLevelName, ReturnValue) == 0x000008, "Member 'UnionSystemBP_GetLevelName::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetLevelNameByReference
// 0x0038 (0x0038 - 0x0000)
struct UnionSystemBP_GetLevelNameByReference final
{
public:
	TSoftObjectPtr<class UWorld>                  SoftWorld;                                         // 0x0000(0x0028)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetLevelNameByReference) == 0x000008, "Wrong alignment on UnionSystemBP_GetLevelNameByReference");
static_assert(sizeof(UnionSystemBP_GetLevelNameByReference) == 0x000038, "Wrong size on UnionSystemBP_GetLevelNameByReference");
static_assert(offsetof(UnionSystemBP_GetLevelNameByReference, SoftWorld) == 0x000000, "Member 'UnionSystemBP_GetLevelNameByReference::SoftWorld' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetLevelNameByReference, ReturnValue) == 0x000028, "Member 'UnionSystemBP_GetLevelNameByReference::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetMasterVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_GetMasterVolume final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetMasterVolume) == 0x000004, "Wrong alignment on UnionSystemBP_GetMasterVolume");
static_assert(sizeof(UnionSystemBP_GetMasterVolume) == 0x000004, "Wrong size on UnionSystemBP_GetMasterVolume");
static_assert(offsetof(UnionSystemBP_GetMasterVolume, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetMasterVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetMasterVolumeMute
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_GetMasterVolumeMute final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetMasterVolumeMute) == 0x000001, "Wrong alignment on UnionSystemBP_GetMasterVolumeMute");
static_assert(sizeof(UnionSystemBP_GetMasterVolumeMute) == 0x000001, "Wrong size on UnionSystemBP_GetMasterVolumeMute");
static_assert(offsetof(UnionSystemBP_GetMasterVolumeMute, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetMasterVolumeMute::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetMenuKeyboardButtonImage
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_GetMenuKeyboardButtonImage final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetMenuKeyboardButtonImage) == 0x000008, "Wrong alignment on UnionSystemBP_GetMenuKeyboardButtonImage");
static_assert(sizeof(UnionSystemBP_GetMenuKeyboardButtonImage) == 0x000008, "Wrong size on UnionSystemBP_GetMenuKeyboardButtonImage");
static_assert(offsetof(UnionSystemBP_GetMenuKeyboardButtonImage, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetMenuKeyboardButtonImage::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetMenuMouseButtonImage
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_GetMenuMouseButtonImage final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetMenuMouseButtonImage) == 0x000008, "Wrong alignment on UnionSystemBP_GetMenuMouseButtonImage");
static_assert(sizeof(UnionSystemBP_GetMenuMouseButtonImage) == 0x000008, "Wrong size on UnionSystemBP_GetMenuMouseButtonImage");
static_assert(offsetof(UnionSystemBP_GetMenuMouseButtonImage, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetMenuMouseButtonImage::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetPlatformControllerButtonImage
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_GetPlatformControllerButtonImage final
{
public:
	EControllerButtonTextureType                  Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnionPlatform                                Platform;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetPlatformControllerButtonImage) == 0x000008, "Wrong alignment on UnionSystemBP_GetPlatformControllerButtonImage");
static_assert(sizeof(UnionSystemBP_GetPlatformControllerButtonImage) == 0x000010, "Wrong size on UnionSystemBP_GetPlatformControllerButtonImage");
static_assert(offsetof(UnionSystemBP_GetPlatformControllerButtonImage, Type) == 0x000000, "Member 'UnionSystemBP_GetPlatformControllerButtonImage::Type' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetPlatformControllerButtonImage, Platform) == 0x000001, "Member 'UnionSystemBP_GetPlatformControllerButtonImage::Platform' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetPlatformControllerButtonImage, ReturnValue) == 0x000008, "Member 'UnionSystemBP_GetPlatformControllerButtonImage::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetPlatformIcon
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_GetPlatformIcon final
{
public:
	EUnionPlatform                                Platform;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetPlatformIcon) == 0x000008, "Wrong alignment on UnionSystemBP_GetPlatformIcon");
static_assert(sizeof(UnionSystemBP_GetPlatformIcon) == 0x000010, "Wrong size on UnionSystemBP_GetPlatformIcon");
static_assert(offsetof(UnionSystemBP_GetPlatformIcon, Platform) == 0x000000, "Member 'UnionSystemBP_GetPlatformIcon::Platform' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetPlatformIcon, ReturnValue) == 0x000008, "Member 'UnionSystemBP_GetPlatformIcon::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetPlatformResource
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_GetPlatformResource final
{
public:
	EUnionControllerType                          Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnionPlatform                                Platform;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetPlatformResource) == 0x000008, "Wrong alignment on UnionSystemBP_GetPlatformResource");
static_assert(sizeof(UnionSystemBP_GetPlatformResource) == 0x000010, "Wrong size on UnionSystemBP_GetPlatformResource");
static_assert(offsetof(UnionSystemBP_GetPlatformResource, Type) == 0x000000, "Member 'UnionSystemBP_GetPlatformResource::Type' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetPlatformResource, Platform) == 0x000001, "Member 'UnionSystemBP_GetPlatformResource::Platform' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_GetPlatformResource, ReturnValue) == 0x000008, "Member 'UnionSystemBP_GetPlatformResource::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetSEVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_GetSEVolume final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetSEVolume) == 0x000004, "Wrong alignment on UnionSystemBP_GetSEVolume");
static_assert(sizeof(UnionSystemBP_GetSEVolume) == 0x000004, "Wrong size on UnionSystemBP_GetSEVolume");
static_assert(offsetof(UnionSystemBP_GetSEVolume, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetSEVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetSoundHandle
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_GetSoundHandle final
{
public:
	struct FSoundHandle                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetSoundHandle) == 0x000004, "Wrong alignment on UnionSystemBP_GetSoundHandle");
static_assert(sizeof(UnionSystemBP_GetSoundHandle) == 0x000004, "Wrong size on UnionSystemBP_GetSoundHandle");
static_assert(offsetof(UnionSystemBP_GetSoundHandle, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetSoundHandle::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.GetVoiceVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_GetVoiceVolume final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_GetVoiceVolume) == 0x000004, "Wrong alignment on UnionSystemBP_GetVoiceVolume");
static_assert(sizeof(UnionSystemBP_GetVoiceVolume) == 0x000004, "Wrong size on UnionSystemBP_GetVoiceVolume");
static_assert(offsetof(UnionSystemBP_GetVoiceVolume, ReturnValue) == 0x000000, "Member 'UnionSystemBP_GetVoiceVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.IsPlaying
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_IsPlaying final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_IsPlaying) == 0x000004, "Wrong alignment on UnionSystemBP_IsPlaying");
static_assert(sizeof(UnionSystemBP_IsPlaying) == 0x000008, "Wrong size on UnionSystemBP_IsPlaying");
static_assert(offsetof(UnionSystemBP_IsPlaying, Handle) == 0x000000, "Member 'UnionSystemBP_IsPlaying::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_IsPlaying, ReturnValue) == 0x000004, "Member 'UnionSystemBP_IsPlaying::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.IsUseCustomCulling
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_IsUseCustomCulling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_IsUseCustomCulling) == 0x000001, "Wrong alignment on UnionSystemBP_IsUseCustomCulling");
static_assert(sizeof(UnionSystemBP_IsUseCustomCulling) == 0x000001, "Wrong size on UnionSystemBP_IsUseCustomCulling");
static_assert(offsetof(UnionSystemBP_IsUseCustomCulling, ReturnValue) == 0x000000, "Member 'UnionSystemBP_IsUseCustomCulling::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.LoadDemoGameSlot
// 0x0020 (0x0020 - 0x0000)
struct UnionSystemBP_LoadDemoGameSlot final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_LoadDemoGameSlot) == 0x000008, "Wrong alignment on UnionSystemBP_LoadDemoGameSlot");
static_assert(sizeof(UnionSystemBP_LoadDemoGameSlot) == 0x000020, "Wrong size on UnionSystemBP_LoadDemoGameSlot");
static_assert(offsetof(UnionSystemBP_LoadDemoGameSlot, SlotName) == 0x000000, "Member 'UnionSystemBP_LoadDemoGameSlot::SlotName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_LoadDemoGameSlot, UserIndex) == 0x000010, "Member 'UnionSystemBP_LoadDemoGameSlot::UserIndex' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_LoadDemoGameSlot, ReturnValue) == 0x000018, "Member 'UnionSystemBP_LoadDemoGameSlot::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.LoadGameFromSlot
// 0x0020 (0x0020 - 0x0000)
struct UnionSystemBP_LoadGameFromSlot final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_LoadGameFromSlot) == 0x000008, "Wrong alignment on UnionSystemBP_LoadGameFromSlot");
static_assert(sizeof(UnionSystemBP_LoadGameFromSlot) == 0x000020, "Wrong size on UnionSystemBP_LoadGameFromSlot");
static_assert(offsetof(UnionSystemBP_LoadGameFromSlot, SlotName) == 0x000000, "Member 'UnionSystemBP_LoadGameFromSlot::SlotName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_LoadGameFromSlot, UserIndex) == 0x000010, "Member 'UnionSystemBP_LoadGameFromSlot::UserIndex' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_LoadGameFromSlot, ReturnValue) == 0x000018, "Member 'UnionSystemBP_LoadGameFromSlot::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.LoadPS4GameSlot
// 0x0020 (0x0020 - 0x0000)
struct UnionSystemBP_LoadPS4GameSlot final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_LoadPS4GameSlot) == 0x000008, "Wrong alignment on UnionSystemBP_LoadPS4GameSlot");
static_assert(sizeof(UnionSystemBP_LoadPS4GameSlot) == 0x000020, "Wrong size on UnionSystemBP_LoadPS4GameSlot");
static_assert(offsetof(UnionSystemBP_LoadPS4GameSlot, SlotName) == 0x000000, "Member 'UnionSystemBP_LoadPS4GameSlot::SlotName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_LoadPS4GameSlot, UserIndex) == 0x000010, "Member 'UnionSystemBP_LoadPS4GameSlot::UserIndex' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_LoadPS4GameSlot, ReturnValue) == 0x000018, "Member 'UnionSystemBP_LoadPS4GameSlot::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.OpenLevel
// 0x0028 (0x0028 - 0x0000)
struct UnionSystemBP_OpenLevel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAbsolute;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Options;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_OpenLevel) == 0x000008, "Wrong alignment on UnionSystemBP_OpenLevel");
static_assert(sizeof(UnionSystemBP_OpenLevel) == 0x000028, "Wrong size on UnionSystemBP_OpenLevel");
static_assert(offsetof(UnionSystemBP_OpenLevel, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_OpenLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_OpenLevel, LevelName) == 0x000008, "Member 'UnionSystemBP_OpenLevel::LevelName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_OpenLevel, bAbsolute) == 0x000010, "Member 'UnionSystemBP_OpenLevel::bAbsolute' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_OpenLevel, Options) == 0x000018, "Member 'UnionSystemBP_OpenLevel::Options' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.OpenLevelByReference
// 0x0048 (0x0048 - 0x0000)
struct UnionSystemBP_OpenLevelByReference final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  Level;                                             // 0x0008(0x0028)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAbsolute;                                         // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Options;                                           // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_OpenLevelByReference) == 0x000008, "Wrong alignment on UnionSystemBP_OpenLevelByReference");
static_assert(sizeof(UnionSystemBP_OpenLevelByReference) == 0x000048, "Wrong size on UnionSystemBP_OpenLevelByReference");
static_assert(offsetof(UnionSystemBP_OpenLevelByReference, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_OpenLevelByReference::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_OpenLevelByReference, Level) == 0x000008, "Member 'UnionSystemBP_OpenLevelByReference::Level' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_OpenLevelByReference, bAbsolute) == 0x000030, "Member 'UnionSystemBP_OpenLevelByReference::bAbsolute' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_OpenLevelByReference, Options) == 0x000038, "Member 'UnionSystemBP_OpenLevelByReference::Options' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.Play
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_Play final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Sound;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_Play) == 0x000008, "Wrong alignment on UnionSystemBP_Play");
static_assert(sizeof(UnionSystemBP_Play) == 0x000018, "Wrong size on UnionSystemBP_Play");
static_assert(offsetof(UnionSystemBP_Play, Handle) == 0x000000, "Member 'UnionSystemBP_Play::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_Play, Sound) == 0x000008, "Member 'UnionSystemBP_Play::Sound' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_Play, ReturnValue) == 0x000010, "Member 'UnionSystemBP_Play::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.PlayFFB
// 0x0020 (0x0020 - 0x0000)
struct UnionSystemBP_PlayFFB final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Sound;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoundPan                                     Pan;                                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Aduio;                                             // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FFBPlayerBit;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_PlayFFB) == 0x000008, "Wrong alignment on UnionSystemBP_PlayFFB");
static_assert(sizeof(UnionSystemBP_PlayFFB) == 0x000020, "Wrong size on UnionSystemBP_PlayFFB");
static_assert(offsetof(UnionSystemBP_PlayFFB, Handle) == 0x000000, "Member 'UnionSystemBP_PlayFFB::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_PlayFFB, Sound) == 0x000008, "Member 'UnionSystemBP_PlayFFB::Sound' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_PlayFFB, Pan) == 0x000010, "Member 'UnionSystemBP_PlayFFB::Pan' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_PlayFFB, Aduio) == 0x000011, "Member 'UnionSystemBP_PlayFFB::Aduio' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_PlayFFB, FFBPlayerBit) == 0x000014, "Member 'UnionSystemBP_PlayFFB::FFBPlayerBit' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_PlayFFB, ReturnValue) == 0x000018, "Member 'UnionSystemBP_PlayFFB::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.RemoveLevel
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_RemoveLevel final
{
public:
	class ULevelStreamingDynamic*                 StreamingLevel;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_RemoveLevel) == 0x000008, "Wrong alignment on UnionSystemBP_RemoveLevel");
static_assert(sizeof(UnionSystemBP_RemoveLevel) == 0x000010, "Wrong size on UnionSystemBP_RemoveLevel");
static_assert(offsetof(UnionSystemBP_RemoveLevel, StreamingLevel) == 0x000000, "Member 'UnionSystemBP_RemoveLevel::StreamingLevel' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_RemoveLevel, ReturnValue) == 0x000008, "Member 'UnionSystemBP_RemoveLevel::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SaveGameToSlot
// 0x0020 (0x0020 - 0x0000)
struct UnionSystemBP_SaveGameToSlot final
{
public:
	class USaveGame*                              SaveGameObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SlotName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_SaveGameToSlot) == 0x000008, "Wrong alignment on UnionSystemBP_SaveGameToSlot");
static_assert(sizeof(UnionSystemBP_SaveGameToSlot) == 0x000020, "Wrong size on UnionSystemBP_SaveGameToSlot");
static_assert(offsetof(UnionSystemBP_SaveGameToSlot, SaveGameObject) == 0x000000, "Member 'UnionSystemBP_SaveGameToSlot::SaveGameObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SaveGameToSlot, SlotName) == 0x000008, "Member 'UnionSystemBP_SaveGameToSlot::SlotName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SaveGameToSlot, UserIndex) == 0x000018, "Member 'UnionSystemBP_SaveGameToSlot::UserIndex' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SaveGameToSlot, ReturnValue) == 0x00001C, "Member 'UnionSystemBP_SaveGameToSlot::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SendEvent
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_SendEvent final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevel*                                 Level;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SendEvent) == 0x000008, "Wrong alignment on UnionSystemBP_SendEvent");
static_assert(sizeof(UnionSystemBP_SendEvent) == 0x000018, "Wrong size on UnionSystemBP_SendEvent");
static_assert(offsetof(UnionSystemBP_SendEvent, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_SendEvent::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SendEvent, Level) == 0x000008, "Member 'UnionSystemBP_SendEvent::Level' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SendEvent, EventName) == 0x000010, "Member 'UnionSystemBP_SendEvent::EventName' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetActiveHorizontalFlip
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_SetActiveHorizontalFlip final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetActiveHorizontalFlip) == 0x000001, "Wrong alignment on UnionSystemBP_SetActiveHorizontalFlip");
static_assert(sizeof(UnionSystemBP_SetActiveHorizontalFlip) == 0x000001, "Wrong size on UnionSystemBP_SetActiveHorizontalFlip");
static_assert(offsetof(UnionSystemBP_SetActiveHorizontalFlip, Active) == 0x000000, "Member 'UnionSystemBP_SetActiveHorizontalFlip::Active' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetAisacByName
// 0x0020 (0x0020 - 0x0000)
struct UnionSystemBP_SetAisacByName final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ControlName;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlValue;                                      // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetAisacByName) == 0x000008, "Wrong alignment on UnionSystemBP_SetAisacByName");
static_assert(sizeof(UnionSystemBP_SetAisacByName) == 0x000020, "Wrong size on UnionSystemBP_SetAisacByName");
static_assert(offsetof(UnionSystemBP_SetAisacByName, Handle) == 0x000000, "Member 'UnionSystemBP_SetAisacByName::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetAisacByName, ControlName) == 0x000008, "Member 'UnionSystemBP_SetAisacByName::ControlName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetAisacByName, ControlValue) == 0x000018, "Member 'UnionSystemBP_SetAisacByName::ControlValue' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetAisacByName, ReturnValue) == 0x00001C, "Member 'UnionSystemBP_SetAisacByName::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetBGMVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SetBGMVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetBGMVolume) == 0x000004, "Wrong alignment on UnionSystemBP_SetBGMVolume");
static_assert(sizeof(UnionSystemBP_SetBGMVolume) == 0x000004, "Wrong size on UnionSystemBP_SetBGMVolume");
static_assert(offsetof(UnionSystemBP_SetBGMVolume, Volume) == 0x000000, "Member 'UnionSystemBP_SetBGMVolume::Volume' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetFFBVolume
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_SetFFBVolume final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetFFBVolume) == 0x000004, "Wrong alignment on UnionSystemBP_SetFFBVolume");
static_assert(sizeof(UnionSystemBP_SetFFBVolume) == 0x000008, "Wrong size on UnionSystemBP_SetFFBVolume");
static_assert(offsetof(UnionSystemBP_SetFFBVolume, PlayerIndex) == 0x000000, "Member 'UnionSystemBP_SetFFBVolume::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetFFBVolume, Volume) == 0x000004, "Member 'UnionSystemBP_SetFFBVolume::Volume' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetGameSettings
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SetGameSettings final
{
public:
	int32                                         NumPlayers;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetGameSettings) == 0x000004, "Wrong alignment on UnionSystemBP_SetGameSettings");
static_assert(sizeof(UnionSystemBP_SetGameSettings) == 0x000004, "Wrong size on UnionSystemBP_SetGameSettings");
static_assert(offsetof(UnionSystemBP_SetGameSettings, NumPlayers) == 0x000000, "Member 'UnionSystemBP_SetGameSettings::NumPlayers' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetLevelFlagsForPSDCache
// 0x0003 (0x0003 - 0x0000)
struct UnionSystemBP_SetLevelFlagsForPSDCache final
{
public:
	EStageId                                      StageId0;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      StageId1;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStageId                                      StageId2;                                          // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetLevelFlagsForPSDCache) == 0x000001, "Wrong alignment on UnionSystemBP_SetLevelFlagsForPSDCache");
static_assert(sizeof(UnionSystemBP_SetLevelFlagsForPSDCache) == 0x000003, "Wrong size on UnionSystemBP_SetLevelFlagsForPSDCache");
static_assert(offsetof(UnionSystemBP_SetLevelFlagsForPSDCache, StageId0) == 0x000000, "Member 'UnionSystemBP_SetLevelFlagsForPSDCache::StageId0' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetLevelFlagsForPSDCache, StageId1) == 0x000001, "Member 'UnionSystemBP_SetLevelFlagsForPSDCache::StageId1' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetLevelFlagsForPSDCache, StageId2) == 0x000002, "Member 'UnionSystemBP_SetLevelFlagsForPSDCache::StageId2' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetLocation
// 0x0028 (0x0028 - 0x0000)
struct UnionSystemBP_SetLocation final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_SetLocation) == 0x000008, "Wrong alignment on UnionSystemBP_SetLocation");
static_assert(sizeof(UnionSystemBP_SetLocation) == 0x000028, "Wrong size on UnionSystemBP_SetLocation");
static_assert(offsetof(UnionSystemBP_SetLocation, Handle) == 0x000000, "Member 'UnionSystemBP_SetLocation::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetLocation, Location) == 0x000008, "Member 'UnionSystemBP_SetLocation::Location' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetLocation, ReturnValue) == 0x000020, "Member 'UnionSystemBP_SetLocation::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetMasterVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SetMasterVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetMasterVolume) == 0x000004, "Wrong alignment on UnionSystemBP_SetMasterVolume");
static_assert(sizeof(UnionSystemBP_SetMasterVolume) == 0x000004, "Wrong size on UnionSystemBP_SetMasterVolume");
static_assert(offsetof(UnionSystemBP_SetMasterVolume, Volume) == 0x000000, "Member 'UnionSystemBP_SetMasterVolume::Volume' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetMasterVolumeMute
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_SetMasterVolumeMute final
{
public:
	bool                                          OnOffFlag;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetMasterVolumeMute) == 0x000001, "Wrong alignment on UnionSystemBP_SetMasterVolumeMute");
static_assert(sizeof(UnionSystemBP_SetMasterVolumeMute) == 0x000001, "Wrong size on UnionSystemBP_SetMasterVolumeMute");
static_assert(offsetof(UnionSystemBP_SetMasterVolumeMute, OnOffFlag) == 0x000000, "Member 'UnionSystemBP_SetMasterVolumeMute::OnOffFlag' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetPanSplit
// 0x000C (0x000C - 0x0000)
struct UnionSystemBP_SetPanSplit final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	ESoundPan                                     Pan;                                               // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetPanSplit) == 0x000004, "Wrong alignment on UnionSystemBP_SetPanSplit");
static_assert(sizeof(UnionSystemBP_SetPanSplit) == 0x00000C, "Wrong size on UnionSystemBP_SetPanSplit");
static_assert(offsetof(UnionSystemBP_SetPanSplit, Handle) == 0x000000, "Member 'UnionSystemBP_SetPanSplit::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetPanSplit, Pan) == 0x000004, "Member 'UnionSystemBP_SetPanSplit::Pan' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetPanSplit, ReturnValue) == 0x000008, "Member 'UnionSystemBP_SetPanSplit::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetSEVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SetSEVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetSEVolume) == 0x000004, "Wrong alignment on UnionSystemBP_SetSEVolume");
static_assert(sizeof(UnionSystemBP_SetSEVolume) == 0x000004, "Wrong size on UnionSystemBP_SetSEVolume");
static_assert(offsetof(UnionSystemBP_SetSEVolume, Volume) == 0x000000, "Member 'UnionSystemBP_SetSEVolume::Volume' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetSoundHandle
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SetSoundHandle final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetSoundHandle) == 0x000004, "Wrong alignment on UnionSystemBP_SetSoundHandle");
static_assert(sizeof(UnionSystemBP_SetSoundHandle) == 0x000004, "Wrong size on UnionSystemBP_SetSoundHandle");
static_assert(offsetof(UnionSystemBP_SetSoundHandle, Handle) == 0x000000, "Member 'UnionSystemBP_SetSoundHandle::Handle' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetUseCustomCulling
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_SetUseCustomCulling final
{
public:
	bool                                          IsUse;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetUseCustomCulling) == 0x000001, "Wrong alignment on UnionSystemBP_SetUseCustomCulling");
static_assert(sizeof(UnionSystemBP_SetUseCustomCulling) == 0x000001, "Wrong size on UnionSystemBP_SetUseCustomCulling");
static_assert(offsetof(UnionSystemBP_SetUseCustomCulling, IsUse) == 0x000000, "Member 'UnionSystemBP_SetUseCustomCulling::IsUse' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetVoiceVolume
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SetVoiceVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetVoiceVolume) == 0x000004, "Wrong alignment on UnionSystemBP_SetVoiceVolume");
static_assert(sizeof(UnionSystemBP_SetVoiceVolume) == 0x000004, "Wrong size on UnionSystemBP_SetVoiceVolume");
static_assert(offsetof(UnionSystemBP_SetVoiceVolume, Volume) == 0x000000, "Member 'UnionSystemBP_SetVoiceVolume::Volume' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetVolume
// 0x000C (0x000C - 0x0000)
struct UnionSystemBP_SetVolume final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SetVolume) == 0x000004, "Wrong alignment on UnionSystemBP_SetVolume");
static_assert(sizeof(UnionSystemBP_SetVolume) == 0x00000C, "Wrong size on UnionSystemBP_SetVolume");
static_assert(offsetof(UnionSystemBP_SetVolume, Handle) == 0x000000, "Member 'UnionSystemBP_SetVolume::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetVolume, Volume) == 0x000004, "Member 'UnionSystemBP_SetVolume::Volume' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetVolume, ReturnValue) == 0x000008, "Member 'UnionSystemBP_SetVolume::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SetZOrder
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_SetZOrder final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ZOrder;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_SetZOrder) == 0x000008, "Wrong alignment on UnionSystemBP_SetZOrder");
static_assert(sizeof(UnionSystemBP_SetZOrder) == 0x000010, "Wrong size on UnionSystemBP_SetZOrder");
static_assert(offsetof(UnionSystemBP_SetZOrder, Widget) == 0x000000, "Member 'UnionSystemBP_SetZOrder::Widget' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetZOrder, ZOrder) == 0x000008, "Member 'UnionSystemBP_SetZOrder::ZOrder' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SetZOrder, ReturnValue) == 0x00000C, "Member 'UnionSystemBP_SetZOrder::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundBuildPlayer
// 0x0004 (0x0004 - 0x0000)
struct UnionSystemBP_SoundBuildPlayer final
{
public:
	struct FSoundHandle                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SoundBuildPlayer) == 0x000004, "Wrong alignment on UnionSystemBP_SoundBuildPlayer");
static_assert(sizeof(UnionSystemBP_SoundBuildPlayer) == 0x000004, "Wrong size on UnionSystemBP_SoundBuildPlayer");
static_assert(offsetof(UnionSystemBP_SoundBuildPlayer, ReturnValue) == 0x000000, "Member 'UnionSystemBP_SoundBuildPlayer::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundCuesheetLoadAsync
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_SoundCuesheetLoadAsync final
{
public:
	TArray<TSoftObjectPtr<class USoundAtomCueSheet>> CuesheetArray;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SoundCuesheetLoadAsync) == 0x000008, "Wrong alignment on UnionSystemBP_SoundCuesheetLoadAsync");
static_assert(sizeof(UnionSystemBP_SoundCuesheetLoadAsync) == 0x000010, "Wrong size on UnionSystemBP_SoundCuesheetLoadAsync");
static_assert(offsetof(UnionSystemBP_SoundCuesheetLoadAsync, CuesheetArray) == 0x000000, "Member 'UnionSystemBP_SoundCuesheetLoadAsync::CuesheetArray' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundCuesheetLoadSync
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_SoundCuesheetLoadSync final
{
public:
	TArray<TSoftObjectPtr<class USoundAtomCueSheet>> CuesheetArray;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SoundCuesheetLoadSync) == 0x000008, "Wrong alignment on UnionSystemBP_SoundCuesheetLoadSync");
static_assert(sizeof(UnionSystemBP_SoundCuesheetLoadSync) == 0x000010, "Wrong size on UnionSystemBP_SoundCuesheetLoadSync");
static_assert(offsetof(UnionSystemBP_SoundCuesheetLoadSync, CuesheetArray) == 0x000000, "Member 'UnionSystemBP_SoundCuesheetLoadSync::CuesheetArray' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundCuesheetUnloadSync
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_SoundCuesheetUnloadSync final
{
public:
	TArray<TSoftObjectPtr<class USoundAtomCueSheet>> CuesheetArray;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SoundCuesheetUnloadSync) == 0x000008, "Wrong alignment on UnionSystemBP_SoundCuesheetUnloadSync");
static_assert(sizeof(UnionSystemBP_SoundCuesheetUnloadSync) == 0x000010, "Wrong size on UnionSystemBP_SoundCuesheetUnloadSync");
static_assert(offsetof(UnionSystemBP_SoundCuesheetUnloadSync, CuesheetArray) == 0x000000, "Member 'UnionSystemBP_SoundCuesheetUnloadSync::CuesheetArray' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundPlay
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_SoundPlay final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_SoundPlay) == 0x000008, "Wrong alignment on UnionSystemBP_SoundPlay");
static_assert(sizeof(UnionSystemBP_SoundPlay) == 0x000010, "Wrong size on UnionSystemBP_SoundPlay");
static_assert(offsetof(UnionSystemBP_SoundPlay, Sound) == 0x000000, "Member 'UnionSystemBP_SoundPlay::Sound' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SoundPlay, ReturnValue) == 0x000008, "Member 'UnionSystemBP_SoundPlay::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundPlayFFB
// 0x0018 (0x0018 - 0x0000)
struct UnionSystemBP_SoundPlayFFB final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoundPan                                     Pan;                                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Audio;                                             // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FFBPlayerBit;                                      // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_SoundPlayFFB) == 0x000008, "Wrong alignment on UnionSystemBP_SoundPlayFFB");
static_assert(sizeof(UnionSystemBP_SoundPlayFFB) == 0x000018, "Wrong size on UnionSystemBP_SoundPlayFFB");
static_assert(offsetof(UnionSystemBP_SoundPlayFFB, Sound) == 0x000000, "Member 'UnionSystemBP_SoundPlayFFB::Sound' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SoundPlayFFB, Pan) == 0x000008, "Member 'UnionSystemBP_SoundPlayFFB::Pan' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SoundPlayFFB, Audio) == 0x000009, "Member 'UnionSystemBP_SoundPlayFFB::Audio' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SoundPlayFFB, FFBPlayerBit) == 0x00000C, "Member 'UnionSystemBP_SoundPlayFFB::FFBPlayerBit' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_SoundPlayFFB, ReturnValue) == 0x000010, "Member 'UnionSystemBP_SoundPlayFFB::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.SoundSetPanSplit
// 0x0001 (0x0001 - 0x0000)
struct UnionSystemBP_SoundSetPanSplit final
{
public:
	ESoundPan                                     Pan;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_SoundSetPanSplit) == 0x000001, "Wrong alignment on UnionSystemBP_SoundSetPanSplit");
static_assert(sizeof(UnionSystemBP_SoundSetPanSplit) == 0x000001, "Wrong size on UnionSystemBP_SoundSetPanSplit");
static_assert(offsetof(UnionSystemBP_SoundSetPanSplit, Pan) == 0x000000, "Member 'UnionSystemBP_SoundSetPanSplit::Pan' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.StartLevels
// 0x0028 (0x0028 - 0x0000)
struct UnionSystemBP_StartLevels final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_StartLevels) == 0x000008, "Wrong alignment on UnionSystemBP_StartLevels");
static_assert(sizeof(UnionSystemBP_StartLevels) == 0x000028, "Wrong size on UnionSystemBP_StartLevels");
static_assert(offsetof(UnionSystemBP_StartLevels, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_StartLevels::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_StartLevels, LatentInfo) == 0x000008, "Member 'UnionSystemBP_StartLevels::LatentInfo' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_StartLevels, ReturnValue) == 0x000020, "Member 'UnionSystemBP_StartLevels::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.StartLevelsAsync
// 0x0010 (0x0010 - 0x0000)
struct UnionSystemBP_StartLevelsAsync final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_StartLevelsAsync) == 0x000008, "Wrong alignment on UnionSystemBP_StartLevelsAsync");
static_assert(sizeof(UnionSystemBP_StartLevelsAsync) == 0x000010, "Wrong size on UnionSystemBP_StartLevelsAsync");
static_assert(offsetof(UnionSystemBP_StartLevelsAsync, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_StartLevelsAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_StartLevelsAsync, ReturnValue) == 0x000008, "Member 'UnionSystemBP_StartLevelsAsync::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.Stop
// 0x0008 (0x0008 - 0x0000)
struct UnionSystemBP_Stop final
{
public:
	struct FSoundHandle                           Handle;                                            // 0x0000(0x0004)(Parm, NativeAccessSpecifierPublic)
	struct FSoundHandle                           ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionSystemBP_Stop) == 0x000004, "Wrong alignment on UnionSystemBP_Stop");
static_assert(sizeof(UnionSystemBP_Stop) == 0x000008, "Wrong size on UnionSystemBP_Stop");
static_assert(offsetof(UnionSystemBP_Stop, Handle) == 0x000000, "Member 'UnionSystemBP_Stop::Handle' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_Stop, ReturnValue) == 0x000004, "Member 'UnionSystemBP_Stop::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.UnloadLevel
// 0x0030 (0x0030 - 0x0000)
struct UnionSystemBP_UnloadLevel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0010(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bShouldBlockOnUnload;                              // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_UnloadLevel) == 0x000008, "Wrong alignment on UnionSystemBP_UnloadLevel");
static_assert(sizeof(UnionSystemBP_UnloadLevel) == 0x000030, "Wrong size on UnionSystemBP_UnloadLevel");
static_assert(offsetof(UnionSystemBP_UnloadLevel, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_UnloadLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_UnloadLevel, LevelName) == 0x000008, "Member 'UnionSystemBP_UnloadLevel::LevelName' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_UnloadLevel, LatentInfo) == 0x000010, "Member 'UnionSystemBP_UnloadLevel::LatentInfo' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_UnloadLevel, bShouldBlockOnUnload) == 0x000028, "Member 'UnionSystemBP_UnloadLevel::bShouldBlockOnUnload' has a wrong offset!");

// Function UnionSystem.UnionSystemBP.UnloadLevelByReference
// 0x0050 (0x0050 - 0x0000)
struct UnionSystemBP_UnloadLevelByReference final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  Level;                                             // 0x0008(0x0028)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0030(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bShouldBlockOnUnload;                              // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionSystemBP_UnloadLevelByReference) == 0x000008, "Wrong alignment on UnionSystemBP_UnloadLevelByReference");
static_assert(sizeof(UnionSystemBP_UnloadLevelByReference) == 0x000050, "Wrong size on UnionSystemBP_UnloadLevelByReference");
static_assert(offsetof(UnionSystemBP_UnloadLevelByReference, WorldContextObject) == 0x000000, "Member 'UnionSystemBP_UnloadLevelByReference::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_UnloadLevelByReference, Level) == 0x000008, "Member 'UnionSystemBP_UnloadLevelByReference::Level' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_UnloadLevelByReference, LatentInfo) == 0x000030, "Member 'UnionSystemBP_UnloadLevelByReference::LatentInfo' has a wrong offset!");
static_assert(offsetof(UnionSystemBP_UnloadLevelByReference, bShouldBlockOnUnload) == 0x000048, "Member 'UnionSystemBP_UnloadLevelByReference::bShouldBlockOnUnload' has a wrong offset!");

// Function UnionSystem.UnionTestForceFeedbackViewerUI.Finalize
// 0x0001 (0x0001 - 0x0000)
struct UnionTestForceFeedbackViewerUI_Finalize final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionTestForceFeedbackViewerUI_Finalize) == 0x000001, "Wrong alignment on UnionTestForceFeedbackViewerUI_Finalize");
static_assert(sizeof(UnionTestForceFeedbackViewerUI_Finalize) == 0x000001, "Wrong size on UnionTestForceFeedbackViewerUI_Finalize");
static_assert(offsetof(UnionTestForceFeedbackViewerUI_Finalize, ReturnValue) == 0x000000, "Member 'UnionTestForceFeedbackViewerUI_Finalize::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionTestMapViewerUI.EnumerateMaps
// 0x0010 (0x0010 - 0x0000)
struct UnionTestMapViewerUI_EnumerateMaps final
{
public:
	TArray<class FText>                           Maps;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionTestMapViewerUI_EnumerateMaps) == 0x000008, "Wrong alignment on UnionTestMapViewerUI_EnumerateMaps");
static_assert(sizeof(UnionTestMapViewerUI_EnumerateMaps) == 0x000010, "Wrong size on UnionTestMapViewerUI_EnumerateMaps");
static_assert(offsetof(UnionTestMapViewerUI_EnumerateMaps, Maps) == 0x000000, "Member 'UnionTestMapViewerUI_EnumerateMaps::Maps' has a wrong offset!");

// Function UnionSystem.UnionTestMovieViewerUI.Finalize
// 0x0001 (0x0001 - 0x0000)
struct UnionTestMovieViewerUI_Finalize final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionTestMovieViewerUI_Finalize) == 0x000001, "Wrong alignment on UnionTestMovieViewerUI_Finalize");
static_assert(sizeof(UnionTestMovieViewerUI_Finalize) == 0x000001, "Wrong size on UnionTestMovieViewerUI_Finalize");
static_assert(offsetof(UnionTestMovieViewerUI_Finalize, ReturnValue) == 0x000000, "Member 'UnionTestMovieViewerUI_Finalize::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionVATMeshComponent.Rebuild
// 0x0001 (0x0001 - 0x0000)
struct UnionVATMeshComponent_Rebuild final
{
public:
	bool                                          ResetState;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionVATMeshComponent_Rebuild) == 0x000001, "Wrong alignment on UnionVATMeshComponent_Rebuild");
static_assert(sizeof(UnionVATMeshComponent_Rebuild) == 0x000001, "Wrong size on UnionVATMeshComponent_Rebuild");
static_assert(offsetof(UnionVATMeshComponent_Rebuild, ResetState) == 0x000000, "Member 'UnionVATMeshComponent_Rebuild::ResetState' has a wrong offset!");

// Function UnionSystem.UnionVATMeshComponent.SetFrame
// 0x0004 (0x0004 - 0x0000)
struct UnionVATMeshComponent_SetFrame final
{
public:
	int32                                         Frame;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionVATMeshComponent_SetFrame) == 0x000004, "Wrong alignment on UnionVATMeshComponent_SetFrame");
static_assert(sizeof(UnionVATMeshComponent_SetFrame) == 0x000004, "Wrong size on UnionVATMeshComponent_SetFrame");
static_assert(offsetof(UnionVATMeshComponent_SetFrame, Frame) == 0x000000, "Member 'UnionVATMeshComponent_SetFrame::Frame' has a wrong offset!");

// Function UnionSystem.UnionVATMeshComponent.SetPlayMode
// 0x0002 (0x0002 - 0x0000)
struct UnionVATMeshComponent_SetPlayMode final
{
public:
	EUnionVATPlayMode                             PlayMode_0;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ResetState;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionVATMeshComponent_SetPlayMode) == 0x000001, "Wrong alignment on UnionVATMeshComponent_SetPlayMode");
static_assert(sizeof(UnionVATMeshComponent_SetPlayMode) == 0x000002, "Wrong size on UnionVATMeshComponent_SetPlayMode");
static_assert(offsetof(UnionVATMeshComponent_SetPlayMode, PlayMode_0) == 0x000000, "Member 'UnionVATMeshComponent_SetPlayMode::PlayMode_0' has a wrong offset!");
static_assert(offsetof(UnionVATMeshComponent_SetPlayMode, ResetState) == 0x000001, "Member 'UnionVATMeshComponent_SetPlayMode::ResetState' has a wrong offset!");

// Function UnionSystem.UnionVATMeshComponent.UpdateDeltaTime
// 0x0004 (0x0004 - 0x0000)
struct UnionVATMeshComponent_UpdateDeltaTime final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionVATMeshComponent_UpdateDeltaTime) == 0x000004, "Wrong alignment on UnionVATMeshComponent_UpdateDeltaTime");
static_assert(sizeof(UnionVATMeshComponent_UpdateDeltaTime) == 0x000004, "Wrong size on UnionVATMeshComponent_UpdateDeltaTime");
static_assert(offsetof(UnionVATMeshComponent_UpdateDeltaTime, DeltaTime) == 0x000000, "Member 'UnionVATMeshComponent_UpdateDeltaTime::DeltaTime' has a wrong offset!");

// Function UnionSystem.UnionVATMeshComponent.GetFrame
// 0x0004 (0x0004 - 0x0000)
struct UnionVATMeshComponent_GetFrame final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionVATMeshComponent_GetFrame) == 0x000004, "Wrong alignment on UnionVATMeshComponent_GetFrame");
static_assert(sizeof(UnionVATMeshComponent_GetFrame) == 0x000004, "Wrong size on UnionVATMeshComponent_GetFrame");
static_assert(offsetof(UnionVATMeshComponent_GetFrame, ReturnValue) == 0x000000, "Member 'UnionVATMeshComponent_GetFrame::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionVATAnimEventComponent.OnVATSequence
// 0x0018 (0x0018 - 0x0000)
struct UnionVATAnimEventComponent_OnVATSequence final
{
public:
	class UUnionVATMeshComponent*                 VATMeshComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUnionVATSequenceInfo                  SequenceInfo;                                      // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionVATAnimEventComponent_OnVATSequence) == 0x000008, "Wrong alignment on UnionVATAnimEventComponent_OnVATSequence");
static_assert(sizeof(UnionVATAnimEventComponent_OnVATSequence) == 0x000018, "Wrong size on UnionVATAnimEventComponent_OnVATSequence");
static_assert(offsetof(UnionVATAnimEventComponent_OnVATSequence, VATMeshComponent) == 0x000000, "Member 'UnionVATAnimEventComponent_OnVATSequence::VATMeshComponent' has a wrong offset!");
static_assert(offsetof(UnionVATAnimEventComponent_OnVATSequence, SequenceInfo) == 0x000008, "Member 'UnionVATAnimEventComponent_OnVATSequence::SequenceInfo' has a wrong offset!");

// Function UnionSystem.UnionWidgetImageComponent.CreateOrUpdateMesh
// 0x0001 (0x0001 - 0x0000)
struct UnionWidgetImageComponent_CreateOrUpdateMesh final
{
public:
	bool                                          ForceCreate;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionWidgetImageComponent_CreateOrUpdateMesh) == 0x000001, "Wrong alignment on UnionWidgetImageComponent_CreateOrUpdateMesh");
static_assert(sizeof(UnionWidgetImageComponent_CreateOrUpdateMesh) == 0x000001, "Wrong size on UnionWidgetImageComponent_CreateOrUpdateMesh");
static_assert(offsetof(UnionWidgetImageComponent_CreateOrUpdateMesh, ForceCreate) == 0x000000, "Member 'UnionWidgetImageComponent_CreateOrUpdateMesh::ForceCreate' has a wrong offset!");

// Function UnionSystem.UnionWidgetImageComponent.SetBrushImageTexture
// 0x0010 (0x0010 - 0x0000)
struct UnionWidgetImageComponent_SetBrushImageTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Applying;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionWidgetImageComponent_SetBrushImageTexture) == 0x000008, "Wrong alignment on UnionWidgetImageComponent_SetBrushImageTexture");
static_assert(sizeof(UnionWidgetImageComponent_SetBrushImageTexture) == 0x000010, "Wrong size on UnionWidgetImageComponent_SetBrushImageTexture");
static_assert(offsetof(UnionWidgetImageComponent_SetBrushImageTexture, Texture) == 0x000000, "Member 'UnionWidgetImageComponent_SetBrushImageTexture::Texture' has a wrong offset!");
static_assert(offsetof(UnionWidgetImageComponent_SetBrushImageTexture, Applying) == 0x000008, "Member 'UnionWidgetImageComponent_SetBrushImageTexture::Applying' has a wrong offset!");

// Function UnionSystem.UnionWidgetImageComponent.SetColor
// 0x0014 (0x0014 - 0x0000)
struct UnionWidgetImageComponent_SetColor final
{
public:
	struct FLinearColor                           TintColorAndOpacity;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Applying;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionWidgetImageComponent_SetColor) == 0x000004, "Wrong alignment on UnionWidgetImageComponent_SetColor");
static_assert(sizeof(UnionWidgetImageComponent_SetColor) == 0x000014, "Wrong size on UnionWidgetImageComponent_SetColor");
static_assert(offsetof(UnionWidgetImageComponent_SetColor, TintColorAndOpacity) == 0x000000, "Member 'UnionWidgetImageComponent_SetColor::TintColorAndOpacity' has a wrong offset!");
static_assert(offsetof(UnionWidgetImageComponent_SetColor, Applying) == 0x000010, "Member 'UnionWidgetImageComponent_SetColor::Applying' has a wrong offset!");

// Function UnionSystem.UnionWidgetInterface.SetWidgetTransform
// 0x00B8 (0x00B8 - 0x0000)
struct UnionWidgetInterface_SetWidgetTransform final
{
public:
	struct FUnionWidgetTransform                  WidgetTransform;                                   // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionWidgetInterface_SetWidgetTransform) == 0x000008, "Wrong alignment on UnionWidgetInterface_SetWidgetTransform");
static_assert(sizeof(UnionWidgetInterface_SetWidgetTransform) == 0x0000B8, "Wrong size on UnionWidgetInterface_SetWidgetTransform");
static_assert(offsetof(UnionWidgetInterface_SetWidgetTransform, WidgetTransform) == 0x000000, "Member 'UnionWidgetInterface_SetWidgetTransform::WidgetTransform' has a wrong offset!");

// Function UnionSystem.UnionWidgetInterface.GetWidgetTransformCopy
// 0x00B8 (0x00B8 - 0x0000)
struct UnionWidgetInterface_GetWidgetTransformCopy final
{
public:
	struct FUnionWidgetTransform                  ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionWidgetInterface_GetWidgetTransformCopy) == 0x000008, "Wrong alignment on UnionWidgetInterface_GetWidgetTransformCopy");
static_assert(sizeof(UnionWidgetInterface_GetWidgetTransformCopy) == 0x0000B8, "Wrong size on UnionWidgetInterface_GetWidgetTransformCopy");
static_assert(offsetof(UnionWidgetInterface_GetWidgetTransformCopy, ReturnValue) == 0x000000, "Member 'UnionWidgetInterface_GetWidgetTransformCopy::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionWidgetTextComponent.SetAppearance
// 0x0300 (0x0300 - 0x0000)
struct UnionWidgetTextComponent_SetAppearance final
{
public:
	struct FEditableTextStyle                     Style;                                             // 0x0000(0x02F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          IsReadOnly;                                        // 0x02F0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPassword;                                        // 0x02F1(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDesiredWidth;                                   // 0x02F4(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextJustify                                  Justification;                                     // 0x02F8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UnionWidgetTextComponent_SetAppearance) == 0x000010, "Wrong alignment on UnionWidgetTextComponent_SetAppearance");
static_assert(sizeof(UnionWidgetTextComponent_SetAppearance) == 0x000300, "Wrong size on UnionWidgetTextComponent_SetAppearance");
static_assert(offsetof(UnionWidgetTextComponent_SetAppearance, Style) == 0x000000, "Member 'UnionWidgetTextComponent_SetAppearance::Style' has a wrong offset!");
static_assert(offsetof(UnionWidgetTextComponent_SetAppearance, IsReadOnly) == 0x0002F0, "Member 'UnionWidgetTextComponent_SetAppearance::IsReadOnly' has a wrong offset!");
static_assert(offsetof(UnionWidgetTextComponent_SetAppearance, IsPassword) == 0x0002F1, "Member 'UnionWidgetTextComponent_SetAppearance::IsPassword' has a wrong offset!");
static_assert(offsetof(UnionWidgetTextComponent_SetAppearance, MinDesiredWidth) == 0x0002F4, "Member 'UnionWidgetTextComponent_SetAppearance::MinDesiredWidth' has a wrong offset!");
static_assert(offsetof(UnionWidgetTextComponent_SetAppearance, Justification) == 0x0002F8, "Member 'UnionWidgetTextComponent_SetAppearance::Justification' has a wrong offset!");

// Function UnionSystem.UnionWidgetTextComponent.SetText
// 0x0010 (0x0010 - 0x0000)
struct UnionWidgetTextComponent_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionWidgetTextComponent_SetText) == 0x000008, "Wrong alignment on UnionWidgetTextComponent_SetText");
static_assert(sizeof(UnionWidgetTextComponent_SetText) == 0x000010, "Wrong size on UnionWidgetTextComponent_SetText");
static_assert(offsetof(UnionWidgetTextComponent_SetText, Text) == 0x000000, "Member 'UnionWidgetTextComponent_SetText::Text' has a wrong offset!");

// Function UnionSystem.UnionWidgetTextInterface.GetTextWidget
// 0x0008 (0x0008 - 0x0000)
struct UnionWidgetTextInterface_GetTextWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionWidgetTextInterface_GetTextWidget) == 0x000008, "Wrong alignment on UnionWidgetTextInterface_GetTextWidget");
static_assert(sizeof(UnionWidgetTextInterface_GetTextWidget) == 0x000008, "Wrong size on UnionWidgetTextInterface_GetTextWidget");
static_assert(offsetof(UnionWidgetTextInterface_GetTextWidget, ReturnValue) == 0x000000, "Member 'UnionWidgetTextInterface_GetTextWidget::ReturnValue' has a wrong offset!");

// Function UnionSystem.UnionWidgetUtility.TransformVertex
// 0x00D8 (0x00D8 - 0x0000)
struct UnionWidgetUtility_TransformVertex final
{
public:
	TArray<struct FVector2D>                      Vertex2Ds;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FUnionWidgetTransform                  WidgetTransform;                                   // 0x0010(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ParentSize;                                        // 0x00C8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionWidgetUtility_TransformVertex) == 0x000008, "Wrong alignment on UnionWidgetUtility_TransformVertex");
static_assert(sizeof(UnionWidgetUtility_TransformVertex) == 0x0000D8, "Wrong size on UnionWidgetUtility_TransformVertex");
static_assert(offsetof(UnionWidgetUtility_TransformVertex, Vertex2Ds) == 0x000000, "Member 'UnionWidgetUtility_TransformVertex::Vertex2Ds' has a wrong offset!");
static_assert(offsetof(UnionWidgetUtility_TransformVertex, WidgetTransform) == 0x000010, "Member 'UnionWidgetUtility_TransformVertex::WidgetTransform' has a wrong offset!");
static_assert(offsetof(UnionWidgetUtility_TransformVertex, ParentSize) == 0x0000C8, "Member 'UnionWidgetUtility_TransformVertex::ParentSize' has a wrong offset!");

// Function UnionSystem.UnionMatchmakingSettings.SetUseFlexMatch
// 0x0001 (0x0001 - 0x0000)
struct UnionMatchmakingSettings_SetUseFlexMatch final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnionMatchmakingSettings_SetUseFlexMatch) == 0x000001, "Wrong alignment on UnionMatchmakingSettings_SetUseFlexMatch");
static_assert(sizeof(UnionMatchmakingSettings_SetUseFlexMatch) == 0x000001, "Wrong size on UnionMatchmakingSettings_SetUseFlexMatch");
static_assert(offsetof(UnionMatchmakingSettings_SetUseFlexMatch, bNewValue) == 0x000000, "Member 'UnionMatchmakingSettings_SetUseFlexMatch::bNewValue' has a wrong offset!");

}

