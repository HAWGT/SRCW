#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_Sub_Btn_LR

#include "Basic.hpp"

#include "UnionRun_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.ExecuteUbergraph_WBP_Race_Sub_Btn_LR
// 0x0078 (0x0078 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_9;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_8;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_7;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_6;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_5;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_4;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_3;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_2;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue_1;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InValue;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR) == 0x000008, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR) == 0x000078, "Wrong size on WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, EntryPoint) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_9) == 0x000004, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_9' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_8) == 0x000008, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_7) == 0x00000C, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_6) == 0x000010, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_5) == 0x000014, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_4) == 0x000018, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_3) == 0x00001C, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_2) == 0x000020, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue_1) == 0x000024, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, K2Node_Event_InValue) == 0x000028, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::K2Node_Event_InValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000039, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000048, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000050, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x000058, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_PlayAnimation_ReturnValue_2) == 0x000068, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'WBP_Race_Sub_Btn_LR_C_ExecuteUbergraph_WBP_Race_Sub_Btn_LR::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnAccelInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnAccelInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnAccelInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnAccelInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnAccelInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnAccelInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnAccelInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnAccelInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnBrakeInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnBrakeInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnBrakeInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnBrakeInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnBrakeInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnBrakeInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnBrakeInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnBrakeInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnPitchInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnPitchInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnPitchInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnPitchInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnPitchInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnPitchInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnPitchInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnPitchInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnSlimeCancelXInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnSlimeCancelXInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnSlimeCancelYInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnSlimeCancelYInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnSteerInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnSteerInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnSteerInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnSteerInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnSteerInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnSteerInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnSteerInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnSteerInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnTrickX2Input
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnTrickX2Input final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnTrickX2Input) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnTrickX2Input");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnTrickX2Input) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnTrickX2Input");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnTrickX2Input, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnTrickX2Input::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnTrickXInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnTrickXInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnTrickXInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnTrickXInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnTrickXInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnTrickXInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnTrickXInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnTrickXInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnTrickY2Input
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnTrickY2Input final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnTrickY2Input) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnTrickY2Input");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnTrickY2Input) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnTrickY2Input");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnTrickY2Input, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnTrickY2Input::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.OnTrickYInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_OnTrickYInput final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_OnTrickYInput) == 0x000004, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_OnTrickYInput");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_OnTrickYInput) == 0x000004, "Wrong size on WBP_Race_Sub_Btn_LR_C_OnTrickYInput");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_OnTrickYInput, InValue) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_OnTrickYInput::InValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.SetBtnText
// 0x0070 (0x0070 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_SetBtnText final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtnGuidePlatFormController                   CallFunc_GetControllerType_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtnGuidePlatformText                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_SetBtnText) == 0x000008, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_SetBtnText");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_SetBtnText) == 0x000070, "Wrong size on WBP_Race_Sub_Btn_LR_C_SetBtnText");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetBtnText, PlayerControllerIndex) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_SetBtnText::PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetBtnText, CallFunc_GetControllerType_ReturnValue) == 0x000004, "Member 'WBP_Race_Sub_Btn_LR_C_SetBtnText::CallFunc_GetControllerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetBtnText, CallFunc_GetEnumeratorName_ReturnValue) == 0x000008, "Member 'WBP_Race_Sub_Btn_LR_C_SetBtnText::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetBtnText, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'WBP_Race_Sub_Btn_LR_C_SetBtnText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetBtnText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'WBP_Race_Sub_Btn_LR_C_SetBtnText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_Race_Sub_Btn_LR.WBP_Race_Sub_Btn_LR_C.SetKey
// 0x0040 (0x0040 - 0x0000)
struct WBP_Race_Sub_Btn_LR_C_SetKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_Sub_Btn_LR_C_SetKey) == 0x000008, "Wrong alignment on WBP_Race_Sub_Btn_LR_C_SetKey");
static_assert(sizeof(WBP_Race_Sub_Btn_LR_C_SetKey) == 0x000040, "Wrong size on WBP_Race_Sub_Btn_LR_C_SetKey");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, NewKey) == 0x000000, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, Success) == 0x000018, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::Success' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000019, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00001A, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00001B, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00001C, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000028, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000030, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Race_Sub_Btn_LR_C_SetKey, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x000038, "Member 'WBP_Race_Sub_Btn_LR_C_SetKey::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");

}

