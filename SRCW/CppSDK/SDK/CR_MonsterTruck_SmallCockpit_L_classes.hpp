#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_MonsterTruck_SmallCockpit_L

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"
#include "AnimationCore_structs.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CR_MonsterTruck_SmallCockpit_L.RigVMMemory_Work
// 0x0628 (0x0650 - 0x0028)
class CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x01C0)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_Result;                  // 0x01F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_A;                       // 0x01F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_Transform;             // 0x0200(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_CachedIndex;           // 0x0260(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_B;                       // 0x0270(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0xC];                                      // 0x0274(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_OffsetTransform__IO; // 0x0280(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_CachedIndex;   // 0x02E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_WorldUpSpaceCache; // 0x02F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_ChildCache; // 0x0300(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___AimConstraintLocalSpaceOffset_ParentCaches; // 0x0310(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_1_Result;                // 0x0320(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_A;                     // 0x0324(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_1_Transform;           // 0x0330(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_CachedIndex;         // 0x0390(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_1_B;                     // 0x03A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0xC];                                      // 0x03A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_OffsetTransform__IO; // 0x03B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_CachedIndex; // 0x0410(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUpSpaceCache; // 0x0420(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_1_ChildCache; // 0x0430(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___AimConstraintLocalSpaceOffset_1_ParentCaches; // 0x0440(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_2_Result;                // 0x0450(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_2_A;                     // 0x0454(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_1_1_Transform;         // 0x0460(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_CachedIndex;       // 0x04C0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_2_B;                     // 0x04D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0xC];                                      // 0x04D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_2_OffsetTransform__IO; // 0x04E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_2_CachedIndex; // 0x0540(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_3_Result;                // 0x0550(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_3_A;                     // 0x0554(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_1_1_1_Transform;       // 0x0560(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_1_CachedIndex;     // 0x05C0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatSub_3_B;                     // 0x05D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0xC];                                      // 0x05D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_3_OffsetTransform__IO; // 0x05E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_3_CachedIndex; // 0x0640(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_MonsterTruck_SmallCockpit_L.RigVMMemory_Work", true>();
	}
	static class CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work>();
	}
};
static_assert(alignof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work) == 0x000010, "Wrong alignment on CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work");
static_assert(sizeof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work) == 0x000650, "Wrong size on CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_Result) == 0x0001F0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_Result' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_A) == 0x0001F4, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_A' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_Transform) == 0x000200, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_CachedIndex) == 0x000260, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_B) == 0x000270, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_B' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_OffsetTransform__IO) == 0x000280, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_CachedIndex) == 0x0002E0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___AimConstraintLocalSpaceOffset_WorldUpSpaceCache) == 0x0002F0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___AimConstraintLocalSpaceOffset_WorldUpSpaceCache' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___AimConstraintLocalSpaceOffset_ChildCache) == 0x000300, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___AimConstraintLocalSpaceOffset_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___AimConstraintLocalSpaceOffset_ParentCaches) == 0x000310, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___AimConstraintLocalSpaceOffset_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_1_Result) == 0x000320, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_1_Result' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_1_A) == 0x000324, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_1_A' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_1_Transform) == 0x000330, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_1_CachedIndex) == 0x000390, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_1_B) == 0x0003A0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_1_B' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_OffsetTransform__IO) == 0x0003B0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_CachedIndex) == 0x000410, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUpSpaceCache) == 0x000420, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUpSpaceCache' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___AimConstraintLocalSpaceOffset_1_ChildCache) == 0x000430, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___AimConstraintLocalSpaceOffset_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___AimConstraintLocalSpaceOffset_1_ParentCaches) == 0x000440, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___AimConstraintLocalSpaceOffset_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_2_Result) == 0x000450, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_2_Result' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_2_A) == 0x000454, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_2_A' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_Transform) == 0x000460, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_CachedIndex) == 0x0004C0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_2_B) == 0x0004D0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_2_B' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_2_OffsetTransform__IO) == 0x0004E0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_2_CachedIndex) == 0x000540, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_3_Result) == 0x000550, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_3_Result' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_3_A) == 0x000554, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_3_A' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_Transform) == 0x000560, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_CachedIndex) == 0x0005C0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___MathFloatSub_3_B) == 0x0005D0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___MathFloatSub_3_B' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_3_OffsetTransform__IO) == 0x0005E0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_3_CachedIndex) == 0x000640, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_3_CachedIndex' has a wrong offset!");

// ControlRigBlueprintGeneratedClass CR_MonsterTruck_SmallCockpit_L.CR_MonsterTruck_SmallCockpit_L_C
// 0x0068 (0x0B10 - 0x0AA8)
class UCR_MonsterTruck_SmallCockpit_L_C final : public UControlRig
{
public:
	struct FVector                                WheelPosFL;                                        // 0x0AA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WheelPosFR;                                        // 0x0AC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WheelPosRL;                                        // 0x0AD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WheelPosRR;                                        // 0x0AF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableWheelUpdate;                               // 0x0B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_MonsterTruck_SmallCockpit_L_C">();
	}
	static class UCR_MonsterTruck_SmallCockpit_L_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_MonsterTruck_SmallCockpit_L_C>();
	}
};
static_assert(alignof(UCR_MonsterTruck_SmallCockpit_L_C) == 0x000008, "Wrong alignment on UCR_MonsterTruck_SmallCockpit_L_C");
static_assert(sizeof(UCR_MonsterTruck_SmallCockpit_L_C) == 0x000B10, "Wrong size on UCR_MonsterTruck_SmallCockpit_L_C");
static_assert(offsetof(UCR_MonsterTruck_SmallCockpit_L_C, WheelPosFL) == 0x000AA8, "Member 'UCR_MonsterTruck_SmallCockpit_L_C::WheelPosFL' has a wrong offset!");
static_assert(offsetof(UCR_MonsterTruck_SmallCockpit_L_C, WheelPosFR) == 0x000AC0, "Member 'UCR_MonsterTruck_SmallCockpit_L_C::WheelPosFR' has a wrong offset!");
static_assert(offsetof(UCR_MonsterTruck_SmallCockpit_L_C, WheelPosRL) == 0x000AD8, "Member 'UCR_MonsterTruck_SmallCockpit_L_C::WheelPosRL' has a wrong offset!");
static_assert(offsetof(UCR_MonsterTruck_SmallCockpit_L_C, WheelPosRR) == 0x000AF0, "Member 'UCR_MonsterTruck_SmallCockpit_L_C::WheelPosRR' has a wrong offset!");
static_assert(offsetof(UCR_MonsterTruck_SmallCockpit_L_C, IsEnableWheelUpdate) == 0x000B08, "Member 'UCR_MonsterTruck_SmallCockpit_L_C::IsEnableWheelUpdate' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_MonsterTruck_SmallCockpit_L.RigVMMemory_Literal
// 0x0208 (0x0230 - 0x0028)
class CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_Item__Const;   // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_Item__Const;           // 0x00A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___GetTransform_4_Space__Const;          // 0x00AC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetTransform_4_bInitial__Const : 1;   // 0x00AD(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___OffsetTransformForItem_Weight__Const; // 0x00B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimConstraintLocalSpaceOffset_Child__Const; // 0x00B4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FFilterOptionPerAxis                   RigVMModel___AimConstraintLocalSpaceOffset_Filter__Const; // 0x00C0(0x0003)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___AimConstraintLocalSpaceOffset_AimAxis__Const; // 0x00C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___AimConstraintLocalSpaceOffset_UpAxis__Const; // 0x00E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimConstraint_WorldUp         RigVMModel___AimConstraintLocalSpaceOffset_WorldUp__Const; // 0x00F8(0x0028)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FConstraintParent>              RigVMModel___AimConstraintLocalSpaceOffset_Parents__Const; // 0x0120(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimConstraint_AdvancedSettings RigVMModel___AimConstraintLocalSpaceOffset_AdvancedSettings__Const; // 0x0130(0x0080)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_Item__Const; // 0x01B0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_1_Item__Const;         // 0x01BC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimConstraintLocalSpaceOffset_1_Child__Const; // 0x01C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___AimConstraintLocalSpaceOffset_1_AimAxis__Const; // 0x01D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConstraintParent>              RigVMModel___AimConstraintLocalSpaceOffset_1_Parents__Const; // 0x01F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_2_Item__Const; // 0x0200(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_1_1_Item__Const;       // 0x020C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_3_Item__Const; // 0x0218(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_4_1_1_1_Item__Const;     // 0x0224(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_MonsterTruck_SmallCockpit_L.RigVMMemory_Literal", true>();
	}
	static class CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal");
static_assert(sizeof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal) == 0x000230, "Wrong size on CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_Item__Const) == 0x000028, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_OffsetTransform__Const) == 0x000040, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___GetTransform_4_Item__Const) == 0x0000A0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___GetTransform_4_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___GetTransform_4_Space__Const) == 0x0000AC, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___GetTransform_4_Space__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_Weight__Const) == 0x0000B0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_Weight__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_Child__Const) == 0x0000B4, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_Filter__Const) == 0x0000C0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_Filter__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_AimAxis__Const) == 0x0000C8, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_AimAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_UpAxis__Const) == 0x0000E0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_UpAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_WorldUp__Const) == 0x0000F8, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_WorldUp__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_Parents__Const) == 0x000120, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_AdvancedSettings__Const) == 0x000130, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_Item__Const) == 0x0001B0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___GetTransform_4_1_Item__Const) == 0x0001BC, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___GetTransform_4_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_1_Child__Const) == 0x0001C8, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_1_AimAxis__Const) == 0x0001D8, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_1_AimAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___AimConstraintLocalSpaceOffset_1_Parents__Const) == 0x0001F0, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___AimConstraintLocalSpaceOffset_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_2_Item__Const) == 0x000200, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___GetTransform_4_1_1_Item__Const) == 0x00020C, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___GetTransform_4_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_3_Item__Const) == 0x000218, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal, RigVMModel___GetTransform_4_1_1_1_Item__Const) == 0x000224, "Member 'CR_MonsterTruck_SmallCockpit_L::URigVMMemory_Literal::RigVMModel___GetTransform_4_1_1_1_Item__Const' has a wrong offset!");

}

