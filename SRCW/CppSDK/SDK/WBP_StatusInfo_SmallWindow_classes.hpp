#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatusInfo_SmallWindow

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StatusInfo_SmallWindow.WBP_StatusInfo_SmallWindow_C
// 0x0070 (0x0350 - 0x02E0)
class UWBP_StatusInfo_SmallWindow_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Blur;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_HornTmb;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemBase;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SmallWindowBase;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_ItemName;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_ItemType;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_ItemIcon_C*                    WBP_CMN_ItemIcon;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HonorTitle_Plate_C*                WBP_HonorTitle_Plate;                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnOpened;                                          // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnClosed;                                          // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_StatusInfo_SmallWindow(int32 EntryPoint);
	void Setup(ERewardType rewardType, int32 rewardId);
	void SetupDonpaTicket(int32 Num);
	void SetupDonpaticketIcon();
	void SetupGadget(int32 rewardId);
	void SetupGadgetIcon(int32 gadgetId);
	void SetupHonorTitle(int32 rewardId);
	void SetupHonorTitleIcon(int32 HonorId);
	void SetupHorn(int32 rewardId);
	void SetupHornIcon(int32 hornId);
	void SetupSticker(int32 stickerId);
	void SetupStickerIcon(int32 rewardId);
	void SetupTypeText(ERewardType rewardType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StatusInfo_SmallWindow_C">();
	}
	static class UWBP_StatusInfo_SmallWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StatusInfo_SmallWindow_C>();
	}
};
static_assert(alignof(UWBP_StatusInfo_SmallWindow_C) == 0x000008, "Wrong alignment on UWBP_StatusInfo_SmallWindow_C");
static_assert(sizeof(UWBP_StatusInfo_SmallWindow_C) == 0x000350, "Wrong size on UWBP_StatusInfo_SmallWindow_C");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_StatusInfo_SmallWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, Blur) == 0x0002E8, "Member 'UWBP_StatusInfo_SmallWindow_C::Blur' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, DMY_HornTmb) == 0x0002F0, "Member 'UWBP_StatusInfo_SmallWindow_C::DMY_HornTmb' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, ItemBase) == 0x0002F8, "Member 'UWBP_StatusInfo_SmallWindow_C::ItemBase' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, SmallWindowBase) == 0x000300, "Member 'UWBP_StatusInfo_SmallWindow_C::SmallWindowBase' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, TXT_ItemName) == 0x000308, "Member 'UWBP_StatusInfo_SmallWindow_C::TXT_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, TXT_ItemType) == 0x000310, "Member 'UWBP_StatusInfo_SmallWindow_C::TXT_ItemType' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, WBP_CMN_ItemIcon) == 0x000318, "Member 'UWBP_StatusInfo_SmallWindow_C::WBP_CMN_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, WBP_HonorTitle_Plate) == 0x000320, "Member 'UWBP_StatusInfo_SmallWindow_C::WBP_HonorTitle_Plate' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, WidgetSwitcher) == 0x000328, "Member 'UWBP_StatusInfo_SmallWindow_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, OnOpened) == 0x000330, "Member 'UWBP_StatusInfo_SmallWindow_C::OnOpened' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_SmallWindow_C, OnClosed) == 0x000340, "Member 'UWBP_StatusInfo_SmallWindow_C::OnClosed' has a wrong offset!");

}

