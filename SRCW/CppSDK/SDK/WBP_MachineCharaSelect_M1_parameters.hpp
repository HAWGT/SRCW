#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MachineCharaSelect_M1

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"


namespace SDK::Params
{

// Function WBP_MachineCharaSelect_M1.WBP_MachineCharaSelect_M1_C.ExecuteUbergraph_WBP_MachineCharaSelect_M1
// 0x0004 (0x0004 - 0x0000)
struct WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1) == 0x000004, "Wrong alignment on WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1");
static_assert(sizeof(WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1) == 0x000004, "Wrong size on WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1");
static_assert(offsetof(WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1, EntryPoint) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_C_ExecuteUbergraph_WBP_MachineCharaSelect_M1::EntryPoint' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1.WBP_MachineCharaSelect_M1_C.OnInit
// 0x0010 (0x0010 - 0x0000)
struct WBP_MachineCharaSelect_M1_C_OnInit final
{
public:
	TArray<class UCharaMachineSelectBase*>        K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_C_OnInit) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_C_OnInit");
static_assert(sizeof(WBP_MachineCharaSelect_M1_C_OnInit) == 0x000010, "Wrong size on WBP_MachineCharaSelect_M1_C_OnInit");
static_assert(offsetof(WBP_MachineCharaSelect_M1_C_OnInit, K2Node_MakeArray_Array) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_C_OnInit::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1.WBP_MachineCharaSelect_M1_C.OnPlayAnimationIn
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn");
static_assert(sizeof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn");
static_assert(offsetof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_C_OnPlayAnimationIn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1.WBP_MachineCharaSelect_M1_C.OnPlayAnimationNormal
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal");
static_assert(sizeof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal");
static_assert(offsetof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_C_OnPlayAnimationNormal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1.WBP_MachineCharaSelect_M1_C.OnPlayAnimationOut
// 0x0008 (0x0008 - 0x0000)
struct WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut) == 0x000008, "Wrong alignment on WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut");
static_assert(sizeof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut) == 0x000008, "Wrong size on WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut");
static_assert(offsetof(WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_C_OnPlayAnimationOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MachineCharaSelect_M1.WBP_MachineCharaSelect_M1_C.PlaySoundError
// 0x0004 (0x0004 - 0x0000)
struct WBP_MachineCharaSelect_M1_C_PlaySoundError final
{
public:
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0000(0x0004)()
};
static_assert(alignof(WBP_MachineCharaSelect_M1_C_PlaySoundError) == 0x000004, "Wrong alignment on WBP_MachineCharaSelect_M1_C_PlaySoundError");
static_assert(sizeof(WBP_MachineCharaSelect_M1_C_PlaySoundError) == 0x000004, "Wrong size on WBP_MachineCharaSelect_M1_C_PlaySoundError");
static_assert(offsetof(WBP_MachineCharaSelect_M1_C_PlaySoundError, CallFunc_SoundPlay_ReturnValue) == 0x000000, "Member 'WBP_MachineCharaSelect_M1_C_PlaySoundError::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");

}

