#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HoldMonsterTruck

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_HoldMonsterTruck.ABP_HoldMonsterTruck_C
// 0x0270 (0x0650 - 0x03E0)
class UABP_HoldMonsterTruck_C final : public UHoldItemAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03E8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03F0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03F8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0468(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0490(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x04F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0518(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0560(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0580(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_HoldMonsterTruck_AnimGraphNode_TransitionResult_67B84B27481B91EEA9683D991590DDA6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_HoldMonsterTruck_AnimGraphNode_TransitionResult_68E69D42460BE3EE9B03198CE4036A8B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_HoldMonsterTruck_AnimGraphNode_TransitionResult_BA793EB1464B9A597E5286AA3034C873();
	void ExecuteUbergraph_ABP_HoldMonsterTruck(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_HoldMonsterTruck_C">();
	}
	static class UABP_HoldMonsterTruck_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_HoldMonsterTruck_C>();
	}
};
static_assert(alignof(UABP_HoldMonsterTruck_C) == 0x000010, "Wrong alignment on UABP_HoldMonsterTruck_C");
static_assert(sizeof(UABP_HoldMonsterTruck_C) == 0x000650, "Wrong size on UABP_HoldMonsterTruck_C");
static_assert(offsetof(UABP_HoldMonsterTruck_C, UberGraphFrame) == 0x0003E0, "Member 'UABP_HoldMonsterTruck_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimBlueprintExtension_PropertyAccess) == 0x0003E8, "Member 'UABP_HoldMonsterTruck_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimBlueprintExtension_Base) == 0x0003F0, "Member 'UABP_HoldMonsterTruck_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_Root) == 0x0003F8, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_TransitionResult_2) == 0x000418, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_TransitionResult_1) == 0x000440, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_TransitionResult) == 0x000468, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_StateResult_2) == 0x000490, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_SequencePlayer_1) == 0x0004B0, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_StateResult_1) == 0x0004F8, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_SequencePlayer) == 0x000518, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_StateResult) == 0x000560, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_HoldMonsterTruck_C, AnimGraphNode_StateMachine) == 0x000580, "Member 'UABP_HoldMonsterTruck_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

