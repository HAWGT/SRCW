#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LegendInfo

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LegendInfo.WBP_LegendInfo_C
// 0x0048 (0x0328 - 0x02E0)
class UWBP_LegendInfo_C final : public UUserWidget
{
public:
	class UImage*                                 BlueBase;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_EventInfo;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Day;                                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Title;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UVScroll_01;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UVScroll_02;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UVScroll_03;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UVScroll_04;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WhiteBase;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LegendInfo_C">();
	}
	static class UWBP_LegendInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LegendInfo_C>();
	}
};
static_assert(alignof(UWBP_LegendInfo_C) == 0x000008, "Wrong alignment on UWBP_LegendInfo_C");
static_assert(sizeof(UWBP_LegendInfo_C) == 0x000328, "Wrong size on UWBP_LegendInfo_C");
static_assert(offsetof(UWBP_LegendInfo_C, BlueBase) == 0x0002E0, "Member 'UWBP_LegendInfo_C::BlueBase' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, DMY_EventInfo) == 0x0002E8, "Member 'UWBP_LegendInfo_C::DMY_EventInfo' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, TXT_Day) == 0x0002F0, "Member 'UWBP_LegendInfo_C::TXT_Day' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, TXT_Title) == 0x0002F8, "Member 'UWBP_LegendInfo_C::TXT_Title' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, UVScroll_01) == 0x000300, "Member 'UWBP_LegendInfo_C::UVScroll_01' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, UVScroll_02) == 0x000308, "Member 'UWBP_LegendInfo_C::UVScroll_02' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, UVScroll_03) == 0x000310, "Member 'UWBP_LegendInfo_C::UVScroll_03' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, UVScroll_04) == 0x000318, "Member 'UWBP_LegendInfo_C::UVScroll_04' has a wrong offset!");
static_assert(offsetof(UWBP_LegendInfo_C, WhiteBase) == 0x000320, "Member 'UWBP_LegendInfo_C::WhiteBase' has a wrong offset!");

}

