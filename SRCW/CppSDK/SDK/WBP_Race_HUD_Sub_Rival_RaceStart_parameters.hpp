#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Rival_RaceStart

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Race_HUD_Sub_Rival_RaceStart.WBP_Race_HUD_Sub_Rival_RaceStart_C.SetName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName");
static_assert(sizeof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName) == 0x000010, "Wrong size on WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName");
static_assert(offsetof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName, CharacterName) == 0x000000, "Member 'WBP_Race_HUD_Sub_Rival_RaceStart_C_SetName::CharacterName' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Rival_RaceStart.WBP_Race_HUD_Sub_Rival_RaceStart_C.SetRank
// 0x0018 (0x0018 - 0x0000)
struct WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank) == 0x000008, "Wrong alignment on WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank");
static_assert(sizeof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank) == 0x000018, "Wrong size on WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank");
static_assert(offsetof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank, Rank) == 0x000000, "Member 'WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank::Rank' has a wrong offset!");
static_assert(offsetof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRank::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Race_HUD_Sub_Rival_RaceStart.WBP_Race_HUD_Sub_Rival_RaceStart_C.SetRival
// 0x0001 (0x0001 - 0x0000)
struct WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival final
{
public:
	bool                                          IsPower;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival) == 0x000001, "Wrong alignment on WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival");
static_assert(sizeof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival) == 0x000001, "Wrong size on WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival");
static_assert(offsetof(WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival, IsPower) == 0x000000, "Member 'WBP_Race_HUD_Sub_Rival_RaceStart_C_SetRival::IsPower' has a wrong offset!");

}

