#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SL_MachineIconCapture

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SL_MachineIconCapture.SL_MachineIconCapture_C
// 0x0028 (0x02D0 - 0x02A8)
class ASL_MachineIconCapture_C final : public AMachineIconCaptureLevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextureRenderTarget2D*                 RenderTextureColor;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTextureAlpha;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuRacerPreview_C*                 BP_MenuRacerPreview_C_1_ExecuteUbergraph_SL_MachineIconCapture_RefProperty; // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASceneCapture2D*                        SceneCapture2D_1_ExecuteUbergraph_SL_MachineIconCapture_RefProperty; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Capture(EMachineId InMachineID, int32 InSizeX, int32 InSizeY, const class UDataTable* InCaptureDataTable);
	void CreateRenderTexture(class UTextureRenderTarget2D* InRenderTexture, int32 InSizeX, int32 InSizeY, class UTextureRenderTarget2D** OutRenderTexture);
	void ExecuteUbergraph_SL_MachineIconCapture(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SL_MachineIconCapture_C">();
	}
	static class ASL_MachineIconCapture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASL_MachineIconCapture_C>();
	}
};
static_assert(alignof(ASL_MachineIconCapture_C) == 0x000008, "Wrong alignment on ASL_MachineIconCapture_C");
static_assert(sizeof(ASL_MachineIconCapture_C) == 0x0002D0, "Wrong size on ASL_MachineIconCapture_C");
static_assert(offsetof(ASL_MachineIconCapture_C, UberGraphFrame) == 0x0002A8, "Member 'ASL_MachineIconCapture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASL_MachineIconCapture_C, RenderTextureColor) == 0x0002B0, "Member 'ASL_MachineIconCapture_C::RenderTextureColor' has a wrong offset!");
static_assert(offsetof(ASL_MachineIconCapture_C, RenderTextureAlpha) == 0x0002B8, "Member 'ASL_MachineIconCapture_C::RenderTextureAlpha' has a wrong offset!");
static_assert(offsetof(ASL_MachineIconCapture_C, BP_MenuRacerPreview_C_1_ExecuteUbergraph_SL_MachineIconCapture_RefProperty) == 0x0002C0, "Member 'ASL_MachineIconCapture_C::BP_MenuRacerPreview_C_1_ExecuteUbergraph_SL_MachineIconCapture_RefProperty' has a wrong offset!");
static_assert(offsetof(ASL_MachineIconCapture_C, SceneCapture2D_1_ExecuteUbergraph_SL_MachineIconCapture_RefProperty) == 0x0002C8, "Member 'ASL_MachineIconCapture_C::SceneCapture2D_1_ExecuteUbergraph_SL_MachineIconCapture_RefProperty' has a wrong offset!");

}

