#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Festa_PointReward_Sub_Bonus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Festa_PointReward_Sub_Bonus.WBP_Festa_PointReward_Sub_Bonus_C
// 0x0048 (0x0328 - 0x02E0)
class UWBP_Festa_PointReward_Sub_Bonus_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Bonus_Loop;                                        // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Bonus_GetPoint_02;                                 // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_BonusName;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Num_th;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      TXT_NumAddPoint;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUITextBlock*                      TXT_NumAddPoint_02;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        WaitFloat;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Festa_PointReward_Sub_Bonus(int32 EntryPoint);
	void OnSkip();
	void Open(double Wait);
	void PlayBonusGetPoint();
	void SetFestaResultRewardData(const struct FFestaResultRewardData& RewardData, int32 Ratio);
	void SetRankAndPoint(int32 Rank, int32 Point);
	void SetTeamRank(int32 TeamRank, int32 Point);
	void SetTextAndPoint(const class FText& Text, int32 Point);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Festa_PointReward_Sub_Bonus_C">();
	}
	static class UWBP_Festa_PointReward_Sub_Bonus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Festa_PointReward_Sub_Bonus_C>();
	}
};
static_assert(alignof(UWBP_Festa_PointReward_Sub_Bonus_C) == 0x000008, "Wrong alignment on UWBP_Festa_PointReward_Sub_Bonus_C");
static_assert(sizeof(UWBP_Festa_PointReward_Sub_Bonus_C) == 0x000328, "Wrong size on UWBP_Festa_PointReward_Sub_Bonus_C");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, Bonus_Loop) == 0x0002E8, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::Bonus_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, Bonus_GetPoint_02) == 0x0002F0, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::Bonus_GetPoint_02' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, TXT_BonusName) == 0x0002F8, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::TXT_BonusName' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, TXT_Num_th) == 0x000300, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::TXT_Num_th' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, TXT_NumAddPoint) == 0x000308, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::TXT_NumAddPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, TXT_NumAddPoint_02) == 0x000310, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::TXT_NumAddPoint_02' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, WidgetSwitcher_0) == 0x000318, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_Festa_PointReward_Sub_Bonus_C, WaitFloat) == 0x000320, "Member 'UWBP_Festa_PointReward_Sub_Bonus_C::WaitFloat' has a wrong offset!");

}

