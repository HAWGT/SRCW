#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_Result

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionRun_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TimeTrial_Sub_Result.WBP_TimeTrial_Sub_Result_C
// 0x01D8 (0x0560 - 0x0388)
class UWBP_TimeTrial_Sub_Result_C final : public UUnionRaceUIResultScene
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TimeTrial_Reward_StyleOnline;                      // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Reward_StyleMy;                          // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Reward_Out;                              // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Reward_In;                               // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Ghost_Out;                               // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Ghost_In;                                // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Result_Out;                              // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Result_Loop;                             // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_Result_In;                               // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DMY_Image_IconRank_L;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_Image_IconRank_S;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DSP_Border_NewGhost;                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DSP_Border_Reward;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DSP_Overlay_NextRankTime;                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Add_01;                                   // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Add_02;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Ptcl;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Ptcl_1;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Ptcl_01;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Ptcl_02;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line;                                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NextRank;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_Eff_Achievement_TimeAttack;                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_TimeTrial;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_NewGhost;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_NextRankLabel;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_NextRankTme;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_RankNext_01;                                   // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_RankNext_02;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_RankNow;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_TimeDifference;                                // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CMN_Sub_SpeedClassInfo_C*          WBP_CMN_Sub_SpeedClassInfo;                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Reward_C*                WBP_TimeTrial_Reward;                              // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_Lap_C*               WBP_TimeTrial_Sub_Lap;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_Lap_C*               WBP_TimeTrial_Sub_Lap_1;                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_Lap_C*               WBP_TimeTrial_Sub_Lap_2;                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_TargetTime_C*        WBP_TimeTrial_Sub_Time;                            // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_LapBG;                              // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_TargetTime;                         // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bPushFlag;                                         // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaceResultStats                              NowResultState;                                    // 0x04D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2[0x6];                                      // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Result_DonpaTicket_C*              DonpaTicketWidget;                                 // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemGet_Window_C*                  ItemGetWidget;                                     // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnableGhost;                                    // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserTimeTrialRaceData                 GhostRaceData;                                     // 0x04F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ETimeTrialClearRankId                         TimeTrialClearRank;                                // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalLapTime;                                      // 0x0544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeTrialRankData                     RankData;                                          // 0x0548(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	ETimeTrialClearRankId                         RankS;                                             // 0x0554(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PrevMedalCount;                                    // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NowMedalCount;                                     // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimationSEPlay();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_TimeTrial_Sub_Result(int32 EntryPoint);
	void Finished_1146A30A4206D37831ADEA9CD38945AF();
	void Finished_5F2516BC4648B96ECC32A396CB3CBD52();
	void Finished_6385D5B74A4CB561C1F6A39E2D82B072();
	void Finished_F17DA2B64E39F66B6F1146AFC1B331FF();
	void GetTextRank(ETimeTrialClearRankId InRank, class FText* RankText);
	void OnAcceptKeyPressed();
	void OnFullScreenMouseClick();
	void OnLoaded_CA088C7945633BF8179E10AB5B1C85B0(class UObject* Loaded);
	void PlayTimeTrialInAnim();
	void SequenceEvent__ENTRYPOINTWBP_TimeTrial_Sub_Result();
	void SetData();
	void SetNowMedalCount();
	void SetPrevMedalCount();
	void SetTimeTrialClearRank();
	void カスタムイベント();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TimeTrial_Sub_Result_C">();
	}
	static class UWBP_TimeTrial_Sub_Result_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TimeTrial_Sub_Result_C>();
	}
};
static_assert(alignof(UWBP_TimeTrial_Sub_Result_C) == 0x000008, "Wrong alignment on UWBP_TimeTrial_Sub_Result_C");
static_assert(sizeof(UWBP_TimeTrial_Sub_Result_C) == 0x000560, "Wrong size on UWBP_TimeTrial_Sub_Result_C");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, UberGraphFrame) == 0x000388, "Member 'UWBP_TimeTrial_Sub_Result_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Reward_StyleOnline) == 0x000390, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Reward_StyleOnline' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Reward_StyleMy) == 0x000398, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Reward_StyleMy' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Reward_Out) == 0x0003A0, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Reward_Out' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Reward_In) == 0x0003A8, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Reward_In' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Ghost_Out) == 0x0003B0, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Ghost_Out' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Ghost_In) == 0x0003B8, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Ghost_In' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Result_Out) == 0x0003C0, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Result_Out' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Result_Loop) == 0x0003C8, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Result_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrial_Result_In) == 0x0003D0, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrial_Result_In' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, DMY_Image_IconRank_L) == 0x0003D8, "Member 'UWBP_TimeTrial_Sub_Result_C::DMY_Image_IconRank_L' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, DMY_Image_IconRank_S) == 0x0003E0, "Member 'UWBP_TimeTrial_Sub_Result_C::DMY_Image_IconRank_S' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, DSP_Border_NewGhost) == 0x0003E8, "Member 'UWBP_TimeTrial_Sub_Result_C::DSP_Border_NewGhost' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, DSP_Border_Reward) == 0x0003F0, "Member 'UWBP_TimeTrial_Sub_Result_C::DSP_Border_Reward' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, DSP_Overlay_NextRankTime) == 0x0003F8, "Member 'UWBP_TimeTrial_Sub_Result_C::DSP_Overlay_NextRankTime' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Eff_Core_Add_01) == 0x000400, "Member 'UWBP_TimeTrial_Sub_Result_C::Eff_Core_Add_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Eff_Core_Add_02) == 0x000408, "Member 'UWBP_TimeTrial_Sub_Result_C::Eff_Core_Add_02' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Eff_Core_Ptcl) == 0x000410, "Member 'UWBP_TimeTrial_Sub_Result_C::Eff_Core_Ptcl' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Eff_Core_Ptcl_1) == 0x000418, "Member 'UWBP_TimeTrial_Sub_Result_C::Eff_Core_Ptcl_1' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Eff_Core_Ptcl_01) == 0x000420, "Member 'UWBP_TimeTrial_Sub_Result_C::Eff_Core_Ptcl_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Eff_Core_Ptcl_02) == 0x000428, "Member 'UWBP_TimeTrial_Sub_Result_C::Eff_Core_Ptcl_02' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Image) == 0x000430, "Member 'UWBP_TimeTrial_Sub_Result_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Line) == 0x000438, "Member 'UWBP_TimeTrial_Sub_Result_C::Line' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, Overlay_NextRank) == 0x000440, "Member 'UWBP_TimeTrial_Sub_Result_C::Overlay_NextRank' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, PAT_Eff_Achievement_TimeAttack) == 0x000448, "Member 'UWBP_TimeTrial_Sub_Result_C::PAT_Eff_Achievement_TimeAttack' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, SafeZone_TimeTrial) == 0x000450, "Member 'UWBP_TimeTrial_Sub_Result_C::SafeZone_TimeTrial' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_NewGhost) == 0x000458, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_NewGhost' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_NextRankLabel) == 0x000460, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_NextRankLabel' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_NextRankTme) == 0x000468, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_NextRankTme' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_RankNext_01) == 0x000470, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_RankNext_01' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_RankNext_02) == 0x000478, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_RankNext_02' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_RankNow) == 0x000480, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_RankNow' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TXT_TimeDifference) == 0x000488, "Member 'UWBP_TimeTrial_Sub_Result_C::TXT_TimeDifference' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WBP_CMN_Sub_SpeedClassInfo) == 0x000490, "Member 'UWBP_TimeTrial_Sub_Result_C::WBP_CMN_Sub_SpeedClassInfo' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WBP_TimeTrial_Reward) == 0x000498, "Member 'UWBP_TimeTrial_Sub_Result_C::WBP_TimeTrial_Reward' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WBP_TimeTrial_Sub_Lap) == 0x0004A0, "Member 'UWBP_TimeTrial_Sub_Result_C::WBP_TimeTrial_Sub_Lap' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WBP_TimeTrial_Sub_Lap_1) == 0x0004A8, "Member 'UWBP_TimeTrial_Sub_Result_C::WBP_TimeTrial_Sub_Lap_1' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WBP_TimeTrial_Sub_Lap_2) == 0x0004B0, "Member 'UWBP_TimeTrial_Sub_Result_C::WBP_TimeTrial_Sub_Lap_2' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WBP_TimeTrial_Sub_Time) == 0x0004B8, "Member 'UWBP_TimeTrial_Sub_Result_C::WBP_TimeTrial_Sub_Time' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WidgetSwitcher_LapBG) == 0x0004C0, "Member 'UWBP_TimeTrial_Sub_Result_C::WidgetSwitcher_LapBG' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, WidgetSwitcher_TargetTime) == 0x0004C8, "Member 'UWBP_TimeTrial_Sub_Result_C::WidgetSwitcher_TargetTime' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, bPushFlag) == 0x0004D0, "Member 'UWBP_TimeTrial_Sub_Result_C::bPushFlag' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, NowResultState) == 0x0004D1, "Member 'UWBP_TimeTrial_Sub_Result_C::NowResultState' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, DonpaTicketWidget) == 0x0004D8, "Member 'UWBP_TimeTrial_Sub_Result_C::DonpaTicketWidget' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, ItemGetWidget) == 0x0004E0, "Member 'UWBP_TimeTrial_Sub_Result_C::ItemGetWidget' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, bIsEnableGhost) == 0x0004E8, "Member 'UWBP_TimeTrial_Sub_Result_C::bIsEnableGhost' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, GhostRaceData) == 0x0004F0, "Member 'UWBP_TimeTrial_Sub_Result_C::GhostRaceData' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TimeTrialClearRank) == 0x000540, "Member 'UWBP_TimeTrial_Sub_Result_C::TimeTrialClearRank' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, TotalLapTime) == 0x000544, "Member 'UWBP_TimeTrial_Sub_Result_C::TotalLapTime' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, RankData) == 0x000548, "Member 'UWBP_TimeTrial_Sub_Result_C::RankData' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, RankS) == 0x000554, "Member 'UWBP_TimeTrial_Sub_Result_C::RankS' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, PrevMedalCount) == 0x000558, "Member 'UWBP_TimeTrial_Sub_Result_C::PrevMedalCount' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_Result_C, NowMedalCount) == 0x00055C, "Member 'UWBP_TimeTrial_Sub_Result_C::NowMedalCount' has a wrong offset!");

}

