#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuRacerLobby

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_structs.hpp"
#include "ST_RacerDataForPreview_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MenuRacerLobby.BP_MenuRacerLobby_C
// 0x0508 (0x0878 - 0x0370)
class ABP_MenuRacerLobby_C final : public AMenuRacerLobby
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMachineAuraEffectComponent*            MachineAuraEffect;                                 // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FST_RacerDataForPreview                RacerData;                                         // 0x0388(0x000D)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuRacerMachine_C*                 MachineActor;                                      // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuRacerHoverboard_C*              HoverboardActor;                                   // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuDriverPawn_C*                   DriverPawn;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RotationSpeed;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationVelocity;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          EngineSound_Front;                                 // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          EngineSound_Rear;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   DriverComponent;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Lod;                                               // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   MachineComponet;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   HoverboardComponet;                                // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJustSpawnedMachineActor;                         // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJustSpawnedHoverboardActor;                      // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      HornEffectComponent;                               // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RoomEntryAnimTimer;                                // 0x0400(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RoomEntryTimerCnt;                                 // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorDefaultLocate;                                // 0x0410(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RingComponent;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActiveActor;                                       // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         HornEffect;                                        // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          HornSE;                                            // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bHoverboard;                                       // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeMachineType;                                 // 0x0449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                StatusType;                                        // 0x044A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABP_MenuRacerLobby_C* MenuRacer)> OnAttachedEnd;             // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_ChampionCrown_C*                    CrownActor;                                        // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStickerBakerHandle*                    FrontStickerBakerHandle;                           // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStickerBakerHandle*                    RearStickerBakerHandle;                            // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDriverData                            CurrentDriverData;                                 // 0x0478(0x0390)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraComponent*                      AuraEffectComponent;                               // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDriverCrownDataTableStruct            CrownData;                                         // 0x0810(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	EMachineAuraId                                AuraId;                                            // 0x0870(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarStatusType                                CarStatusType;                                     // 0x0871(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Attach_Driver();
	void ChangeMachineColor(int32 InGroupIndex, bool InEnableEffect);
	void ChangeVisibleCrownfromRacerVisible();
	void CheckChangeParam(EDriverId Racer_Data_Driver_Id, ECarStatusType Racer_Data_Vehicle_Type, EMachineId Racer_Data_Front_Parts_Id, EMachineId Racer_Data_Rear_Parts_Id, EMachineId Racer_Data_Tire_Parts_Id, bool* ChangedDriverId, bool* ChangedVehicleType, bool* ChangedFrontPartsId, bool* ChangedRearPartsId, bool* ChangedTirePartsId);
	void DestroyCrown();
	void DestroyDriverActor();
	void DestroyMachineComponet();
	void ExecuteUbergraph_BP_MenuRacerLobby(int32 EntryPoint);
	void GetDriver(EDriverId* DriverId_0);
	void GetDriverData(EDriverId DriverId_0, struct FDriverData* DriverData, bool* bFind);
	void HiddenCrown();
	void Initialize();
	void OnCreateAuraEffect(EMachineAuraId InAuraID, ECarStatusType InType);
	void PlayDriverAnimation(int32 StateId, int32 Index_0);
	void PlayDriverStampVoice(int32 InButtonIndex);
	void PlayVoice(const EDriverVoiceId InDriverVoiceId, const ESoundPan InSoundPan);
	void Polling_Set_Sticker(class UStickerBakerHandle* StickerBakerHandle, bool* IsCompleteSetSticker);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void RoomEntryAnimEvent();
	void RoomEntryAnimLooping();
	void SetAll(EDriverId InDriverId, const struct FUserMachineCustomizeData& InCustomizeData, bool bIsSpawnCrown);
	void SetBoneSetting(bool UseBoneControl, const struct FRotator& NeckRotation, const struct FRotator& SpineRotation);
	void SetDriver(EDriverId DriverId_0);
	void SetForcedLod(int32 NewForcedLodModel);
	void SetHornData(EMachineHornType InHornType);
	void SetLODLevel(int32 Lod_0);
	void SetupMeshComps(bool bUse, int32 Lod_0);
	void SetVisibilityCrown(bool bIsVisible);
	void SpawnDriverActor();
	void SpawnHoverboard();
	void SpawnMachine();
	void SpawnOrVisibleCrown(bool bIsNotSpawn);
	void StartRotation(int32 InPlayerIndex);
	void StopRotation();

	EMachineHornType GetHornID(const struct FST_RacerDataForPreview& ST_RacerDataForPreview) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuRacerLobby_C">();
	}
	static class ABP_MenuRacerLobby_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MenuRacerLobby_C>();
	}
};
static_assert(alignof(ABP_MenuRacerLobby_C) == 0x000008, "Wrong alignment on ABP_MenuRacerLobby_C");
static_assert(sizeof(ABP_MenuRacerLobby_C) == 0x000878, "Wrong size on ABP_MenuRacerLobby_C");
static_assert(offsetof(ABP_MenuRacerLobby_C, UberGraphFrame) == 0x000370, "Member 'ABP_MenuRacerLobby_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, MachineAuraEffect) == 0x000378, "Member 'ABP_MenuRacerLobby_C::MachineAuraEffect' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, DefaultSceneRoot) == 0x000380, "Member 'ABP_MenuRacerLobby_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RacerData) == 0x000388, "Member 'ABP_MenuRacerLobby_C::RacerData' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, MachineActor) == 0x000398, "Member 'ABP_MenuRacerLobby_C::MachineActor' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, HoverboardActor) == 0x0003A0, "Member 'ABP_MenuRacerLobby_C::HoverboardActor' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, DriverPawn) == 0x0003A8, "Member 'ABP_MenuRacerLobby_C::DriverPawn' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RotationSpeed) == 0x0003B0, "Member 'ABP_MenuRacerLobby_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RotationVelocity) == 0x0003B8, "Member 'ABP_MenuRacerLobby_C::RotationVelocity' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, EngineSound_Front) == 0x0003C0, "Member 'ABP_MenuRacerLobby_C::EngineSound_Front' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, EngineSound_Rear) == 0x0003C8, "Member 'ABP_MenuRacerLobby_C::EngineSound_Rear' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, DriverComponent) == 0x0003D0, "Member 'ABP_MenuRacerLobby_C::DriverComponent' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, Lod) == 0x0003D8, "Member 'ABP_MenuRacerLobby_C::Lod' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, MachineComponet) == 0x0003E0, "Member 'ABP_MenuRacerLobby_C::MachineComponet' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, HoverboardComponet) == 0x0003E8, "Member 'ABP_MenuRacerLobby_C::HoverboardComponet' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, IsJustSpawnedMachineActor) == 0x0003F0, "Member 'ABP_MenuRacerLobby_C::IsJustSpawnedMachineActor' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, IsJustSpawnedHoverboardActor) == 0x0003F1, "Member 'ABP_MenuRacerLobby_C::IsJustSpawnedHoverboardActor' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, HornEffectComponent) == 0x0003F8, "Member 'ABP_MenuRacerLobby_C::HornEffectComponent' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RoomEntryAnimTimer) == 0x000400, "Member 'ABP_MenuRacerLobby_C::RoomEntryAnimTimer' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RoomEntryTimerCnt) == 0x000408, "Member 'ABP_MenuRacerLobby_C::RoomEntryTimerCnt' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, ActorDefaultLocate) == 0x000410, "Member 'ABP_MenuRacerLobby_C::ActorDefaultLocate' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RingComponent) == 0x000428, "Member 'ABP_MenuRacerLobby_C::RingComponent' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, ActiveActor) == 0x000430, "Member 'ABP_MenuRacerLobby_C::ActiveActor' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, HornEffect) == 0x000438, "Member 'ABP_MenuRacerLobby_C::HornEffect' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, HornSE) == 0x000440, "Member 'ABP_MenuRacerLobby_C::HornSE' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, bHoverboard) == 0x000448, "Member 'ABP_MenuRacerLobby_C::bHoverboard' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, ChangeMachineType) == 0x000449, "Member 'ABP_MenuRacerLobby_C::ChangeMachineType' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, StatusType) == 0x00044A, "Member 'ABP_MenuRacerLobby_C::StatusType' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, OnAttachedEnd) == 0x000450, "Member 'ABP_MenuRacerLobby_C::OnAttachedEnd' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, CrownActor) == 0x000460, "Member 'ABP_MenuRacerLobby_C::CrownActor' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, FrontStickerBakerHandle) == 0x000468, "Member 'ABP_MenuRacerLobby_C::FrontStickerBakerHandle' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, RearStickerBakerHandle) == 0x000470, "Member 'ABP_MenuRacerLobby_C::RearStickerBakerHandle' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, CurrentDriverData) == 0x000478, "Member 'ABP_MenuRacerLobby_C::CurrentDriverData' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, AuraEffectComponent) == 0x000808, "Member 'ABP_MenuRacerLobby_C::AuraEffectComponent' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, CrownData) == 0x000810, "Member 'ABP_MenuRacerLobby_C::CrownData' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, AuraId) == 0x000870, "Member 'ABP_MenuRacerLobby_C::AuraId' has a wrong offset!");
static_assert(offsetof(ABP_MenuRacerLobby_C, CarStatusType) == 0x000871, "Member 'ABP_MenuRacerLobby_C::CarStatusType' has a wrong offset!");

}

