#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_ListTop

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.EndDisplay
// 0x0001 (0x0001 - 0x0000)
struct WBP_Friend_ListTop_C_EndDisplay final
{
public:
	bool                                          PlayCloseSound;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_EndDisplay) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_EndDisplay");
static_assert(sizeof(WBP_Friend_ListTop_C_EndDisplay) == 0x000001, "Wrong size on WBP_Friend_ListTop_C_EndDisplay");
static_assert(offsetof(WBP_Friend_ListTop_C_EndDisplay, PlayCloseSound) == 0x000000, "Member 'WBP_Friend_ListTop_C_EndDisplay::PlayCloseSound' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.ExecuteUbergraph_WBP_Friend_ListTop
// 0x0600 (0x0600 - 0x0000)
struct WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0004(0x0004)()
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 InIconId, int32 InBgColorId, bool bInIconSelect)> K2Node_CreateDelegate_OutputDelegate_2; // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 InFairPlayPoint, bool bInBan, const class FString& InPenaltyEndTime)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFriendListPlayerInfo& InListPlayerInfo)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_7; // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInVisible_2;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayCloseSound;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InLocalUserNumber;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFriendListCategory                           K2Node_Event_InInitialCategory;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InZOrder;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInLobbySequence;                     // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInLobbyInvitationSendEnable;         // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInLobbyInvitationAcceptEnable;       // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInLobbyInvitationRejectEnable;       // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_PlayCloseSound;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FLobbyId& TargetLobbyId)> K2Node_CreateDelegate_OutputDelegate_8;    // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInEnable;                            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_TargetUserId;                   // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& TargetShortLobbyId)> K2Node_CreateDelegate_OutputDelegate_9; // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_InShortLobbyId;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInSuccess;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  K2Node_Event_Result;                               // 0x0110(0x0068)(ConstParm)
	class ULobbyJoinInfo*                         K2Node_CustomEvent_TargetLobbyJoinInfo;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLoginComplete_ReturnValue;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ULobbyJoinInfo* TargetLobbyJoinInfo)> K2Node_CreateDelegate_OutputDelegate_10; // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x0194(0x0004)()
	class FString                                 K2Node_CustomEvent_TargetShortLobbyId;             // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInSuccessful;                        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLobbyId>                       K2Node_Event_InLobbyId;                            // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	class FString                                 K2Node_Event_InOwnerUserId;                        // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ELobbyType                                    K2Node_Event_InLobbyType;                          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyId                               K2Node_CustomEvent_TargetLobbyId;                  // 0x01D8(0x0010)(ConstParm)
	int32                                         K2Node_CustomEvent_InIconId_1;                     // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InBgColorId_1;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInPlayerIconSelect;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     K2Node_CustomEvent_Button_2;                       // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PanelIndex_2;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex_2;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndPlayerIconListSelect_ReturnValue;      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     K2Node_CustomEvent_Button_1;                       // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PanelIndex_1;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex_1;                  // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0220(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& TargetUserId)> K2Node_CreateDelegate_OutputDelegate_12;      // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndPlayerIconListSelect_ReturnValue_1;    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_InIconId;                       // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InBgColorId;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInIconSelect;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInVisible_1;                         // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24F[0x1];                                      // 0x024F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool PlayCloseSound)>          K2Node_CreateDelegate_OutputDelegate_13;           // 0x0250(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InFairPlayPoint_1;              // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInBan_1;                       // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InPenaltyEndTime_1;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InFairPlayPoint;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInBan;                         // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InPenaltyEndTime;               // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0290(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x02A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInVisible;                           // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendListPlayerInfo                  K2Node_CustomEvent_InListPlayerInfo_1;             // 0x02B8(0x00E8)(ConstParm)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriendListPlayerInfo                  K2Node_CustomEvent_InListPlayerInfo;               // 0x03A8(0x00E8)()
	EBlockPlayerState                             CallFunc_GetRacerData_OutBlockType;                // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyPlayerData                       CallFunc_GetRacerData_OutRacerData;                // 0x0498(0x00F8)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_2;                  // 0x0590(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_3;                  // 0x0594(0x0004)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller;        // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppPlayerController*                   K2Node_DynamicCast_AsApp_Player_Controller_1;      // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIButtonBase*                     K2Node_CustomEvent_Button;                         // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PanelIndex;                     // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex;                    // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterMainMenu_ReturnValue;           // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x05FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_4;                  // 0x05FC(0x0004)()
};
static_assert(alignof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop");
static_assert(sizeof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop) == 0x000600, "Wrong size on WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, EntryPoint) == 0x000000, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_SoundPlay_ReturnValue) == 0x000004, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_bool_Variable) == 0x000028, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_byte_Variable) == 0x00003C, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_byte_Variable_1) == 0x00003D, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_4) == 0x000050, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_5) == 0x000060, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_6) == 0x000070, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_7) == 0x000080, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInVisible_2) == 0x000090, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInVisible_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_PlayCloseSound) == 0x0000A0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_PlayCloseSound' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InLocalUserNumber) == 0x0000B0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InLocalUserNumber' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InInitialCategory) == 0x0000B4, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InInitialCategory' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InZOrder) == 0x0000B8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InZOrder' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInLobbySequence) == 0x0000BC, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInLobbySequence' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInLobbyInvitationSendEnable) == 0x0000BD, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInLobbyInvitationSendEnable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInLobbyInvitationAcceptEnable) == 0x0000BE, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInLobbyInvitationAcceptEnable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInLobbyInvitationRejectEnable) == 0x0000BF, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInLobbyInvitationRejectEnable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_PlayCloseSound) == 0x0000C0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_PlayCloseSound' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000C4, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInEnable) == 0x0000D4, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInEnable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_TargetUserId) == 0x0000D8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_TargetUserId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000E8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InShortLobbyId) == 0x0000F8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InShortLobbyId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInSuccess) == 0x000108, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bSuccess) == 0x000109, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_Result) == 0x000110, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_Result' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_TargetLobbyJoinInfo) == 0x000178, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_TargetLobbyJoinInfo' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_CheckLoginComplete_ReturnValue) == 0x000180, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_CheckLoginComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_10) == 0x000184, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_SoundPlay_ReturnValue_1) == 0x000194, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_TargetShortLobbyId) == 0x000198, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_TargetShortLobbyId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInSuccessful) == 0x0001A8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInSuccessful' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InLobbyId) == 0x0001B0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InLobbyId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InOwnerUserId) == 0x0001C0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InOwnerUserId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_InLobbyType) == 0x0001D0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_InLobbyType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_byte_Variable_2) == 0x0001D1, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_TargetLobbyId) == 0x0001D8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_TargetLobbyId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InIconId_1) == 0x0001E8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InIconId_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InBgColorId_1) == 0x0001EC, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InBgColorId_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_bInPlayerIconSelect) == 0x0001F0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_bInPlayerIconSelect' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_byte_Variable_3) == 0x0001F1, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_Button_2) == 0x0001F8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_PanelIndex_2) == 0x000200, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_PanelIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_ButtonIndex_2) == 0x000204, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_ButtonIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_EndPlayerIconListSelect_ReturnValue) == 0x000208, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_EndPlayerIconListSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_bool_Variable_1) == 0x000209, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_Button_1) == 0x000210, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_PanelIndex_1) == 0x000218, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_PanelIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_ButtonIndex_1) == 0x00021C, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_ButtonIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_11) == 0x000220, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_12) == 0x000230, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_EndPlayerIconListSelect_ReturnValue_1) == 0x000240, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_EndPlayerIconListSelect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InIconId) == 0x000244, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InIconId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InBgColorId) == 0x000248, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InBgColorId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_bInIconSelect) == 0x00024C, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_bInIconSelect' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInVisible_1) == 0x00024D, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInVisible_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Select_Default) == 0x00024E, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_13) == 0x000250, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InFairPlayPoint_1) == 0x000260, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InFairPlayPoint_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_bInBan_1) == 0x000264, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_bInBan_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InPenaltyEndTime_1) == 0x000268, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InPenaltyEndTime_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InFairPlayPoint) == 0x000278, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InFairPlayPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_bInBan) == 0x00027C, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_bInBan' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InPenaltyEndTime) == 0x000280, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InPenaltyEndTime' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_14) == 0x000290, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CreateDelegate_OutputDelegate_15) == 0x0002A0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Event_bInVisible) == 0x0002B0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Event_bInVisible' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InListPlayerInfo_1) == 0x0002B8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InListPlayerInfo_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Select_Default_1) == 0x0003A0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_InListPlayerInfo) == 0x0003A8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_InListPlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_GetRacerData_OutBlockType) == 0x000490, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_GetRacerData_OutBlockType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_GetRacerData_OutRacerData) == 0x000498, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_GetRacerData_OutRacerData' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_SoundPlay_ReturnValue_2) == 0x000590, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_SoundPlay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_SoundPlay_ReturnValue_3) == 0x000594, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_SoundPlay_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_GetOwningPlayer_ReturnValue) == 0x000598, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x0005A0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0005A8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_byte_Variable_4) == 0x0005B0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_IsValid_ReturnValue) == 0x0005B1, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_GetPlayerController_ReturnValue) == 0x0005B8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_GetPlayerController_ReturnValue_1) == 0x0005C0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_DynamicCast_AsApp_Player_Controller) == 0x0005C8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_DynamicCast_AsApp_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_DynamicCast_bSuccess) == 0x0005D0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_DynamicCast_AsApp_Player_Controller_1) == 0x0005D8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_DynamicCast_AsApp_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_DynamicCast_bSuccess_1) == 0x0005E0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_Button) == 0x0005E8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_PanelIndex) == 0x0005F0, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_CustomEvent_ButtonIndex) == 0x0005F4, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_CustomEvent_ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_UnregisterMainMenu_ReturnValue) == 0x0005F8, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_UnregisterMainMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_byte_Variable_5) == 0x0005F9, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, Temp_bool_Variable_2) == 0x0005FA, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, K2Node_Select_Default_2) == 0x0005FB, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop, CallFunc_SoundPlay_ReturnValue_4) == 0x0005FC, "Member 'WBP_Friend_ListTop_C_ExecuteUbergraph_WBP_Friend_ListTop::CallFunc_SoundPlay_ReturnValue_4' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.Get Platform Type
// 0x0004 (0x0004 - 0x0000)
struct WBP_Friend_ListTop_C_Get_Platform_Type final
{
public:
	ECrossplayPlatform                            InCrossplayPlatform;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppSupportedPlatform                         OutPlatformType;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppSupportedPlatform                         RetPlatform;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_Get_Platform_Type) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_Get_Platform_Type");
static_assert(sizeof(WBP_Friend_ListTop_C_Get_Platform_Type) == 0x000004, "Wrong size on WBP_Friend_ListTop_C_Get_Platform_Type");
static_assert(offsetof(WBP_Friend_ListTop_C_Get_Platform_Type, InCrossplayPlatform) == 0x000000, "Member 'WBP_Friend_ListTop_C_Get_Platform_Type::InCrossplayPlatform' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Get_Platform_Type, OutPlatformType) == 0x000001, "Member 'WBP_Friend_ListTop_C_Get_Platform_Type::OutPlatformType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Get_Platform_Type, RetPlatform) == 0x000002, "Member 'WBP_Friend_ListTop_C_Get_Platform_Type::RetPlatform' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Get_Platform_Type, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WBP_Friend_ListTop_C_Get_Platform_Type::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.GetBlockType
// 0x0005 (0x0005 - 0x0000)
struct WBP_Friend_ListTop_C_GetBlockType final
{
public:
	bool                                          InIsBlock;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsPFBlock;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             OutBlockType;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             RetBlockType;                                      // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_GetBlockType) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_GetBlockType");
static_assert(sizeof(WBP_Friend_ListTop_C_GetBlockType) == 0x000005, "Wrong size on WBP_Friend_ListTop_C_GetBlockType");
static_assert(offsetof(WBP_Friend_ListTop_C_GetBlockType, InIsBlock) == 0x000000, "Member 'WBP_Friend_ListTop_C_GetBlockType::InIsBlock' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetBlockType, InIsPFBlock) == 0x000001, "Member 'WBP_Friend_ListTop_C_GetBlockType::InIsPFBlock' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetBlockType, OutBlockType) == 0x000002, "Member 'WBP_Friend_ListTop_C_GetBlockType::OutBlockType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetBlockType, RetBlockType) == 0x000003, "Member 'WBP_Friend_ListTop_C_GetBlockType::RetBlockType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetBlockType, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_Friend_ListTop_C_GetBlockType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.GetRacerData
// 0x0368 (0x0368 - 0x0000)
struct WBP_Friend_ListTop_C_GetRacerData final
{
public:
	struct FFriendListPlayerInfo                  InFriendListPlayerInfo;                            // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm)
	EBlockPlayerState                             OutBlockType;                                      // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyPlayerData                       OutRacerData;                                      // 0x00F0(0x00F8)(Parm, OutParm)
	class FString                                 RetPlayerName;                                     // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 RetArrayUsedMachineCount;                          // 0x01F8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FUsageCountChara>               RetArrayUsageCountChara;                           // 0x0208(0x0010)(Edit, BlueprintVisible)
	int32                                         RetTitleId;                                        // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppSupportedPlatform                         RetPlatform;                                       // 0x021C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     RetRank;                                           // 0x021D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlockPlayerState                             RetBlockType;                                      // 0x021E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     CallFunc_GetRank_OutRateRank;                      // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetUseMachineTypeCounts_OutUsedMachineCount; // 0x0220(0x0010)(ReferenceParm)
	TArray<struct FUsageCountChara>               CallFunc_GetUseCharacterCounts_OutUsageCountChara; // 0x0230(0x0010)(ReferenceParm)
	EBlockPlayerState                             CallFunc_GetBlockType_OutBlockType;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppSupportedPlatform                         CallFunc_Get_Platform_Type_OutPlatformType;        // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyRacerInfoData                    K2Node_MakeStruct_LobbyRacerInfoData;              // 0x0248(0x0028)()
	struct FLobbyPlayerData                       K2Node_MakeStruct_LobbyPlayerData;                 // 0x0270(0x00F8)()
};
static_assert(alignof(WBP_Friend_ListTop_C_GetRacerData) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_GetRacerData");
static_assert(sizeof(WBP_Friend_ListTop_C_GetRacerData) == 0x000368, "Wrong size on WBP_Friend_ListTop_C_GetRacerData");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, InFriendListPlayerInfo) == 0x000000, "Member 'WBP_Friend_ListTop_C_GetRacerData::InFriendListPlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, OutBlockType) == 0x0000E8, "Member 'WBP_Friend_ListTop_C_GetRacerData::OutBlockType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, OutRacerData) == 0x0000F0, "Member 'WBP_Friend_ListTop_C_GetRacerData::OutRacerData' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetPlayerName) == 0x0001E8, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetPlayerName' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetArrayUsedMachineCount) == 0x0001F8, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetArrayUsedMachineCount' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetArrayUsageCountChara) == 0x000208, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetArrayUsageCountChara' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetTitleId) == 0x000218, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetTitleId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetPlatform) == 0x00021C, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetPlatform' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetRank) == 0x00021D, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetRank' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, RetBlockType) == 0x00021E, "Member 'WBP_Friend_ListTop_C_GetRacerData::RetBlockType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, CallFunc_GetRank_OutRateRank) == 0x00021F, "Member 'WBP_Friend_ListTop_C_GetRacerData::CallFunc_GetRank_OutRateRank' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, CallFunc_GetUseMachineTypeCounts_OutUsedMachineCount) == 0x000220, "Member 'WBP_Friend_ListTop_C_GetRacerData::CallFunc_GetUseMachineTypeCounts_OutUsedMachineCount' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, CallFunc_GetUseCharacterCounts_OutUsageCountChara) == 0x000230, "Member 'WBP_Friend_ListTop_C_GetRacerData::CallFunc_GetUseCharacterCounts_OutUsageCountChara' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, CallFunc_GetBlockType_OutBlockType) == 0x000240, "Member 'WBP_Friend_ListTop_C_GetRacerData::CallFunc_GetBlockType_OutBlockType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, CallFunc_Get_Platform_Type_OutPlatformType) == 0x000241, "Member 'WBP_Friend_ListTop_C_GetRacerData::CallFunc_Get_Platform_Type_OutPlatformType' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, K2Node_MakeStruct_LobbyRacerInfoData) == 0x000248, "Member 'WBP_Friend_ListTop_C_GetRacerData::K2Node_MakeStruct_LobbyRacerInfoData' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRacerData, K2Node_MakeStruct_LobbyPlayerData) == 0x000270, "Member 'WBP_Friend_ListTop_C_GetRacerData::K2Node_MakeStruct_LobbyPlayerData' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.GetRank
// 0x0008 (0x0008 - 0x0000)
struct WBP_Friend_ListTop_C_GetRank final
{
public:
	int32                                         InRateId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     OutRateRank;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     RetRank;                                           // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERateRank                                     CallFunc_GetRateToRank_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_GetRank) == 0x000004, "Wrong alignment on WBP_Friend_ListTop_C_GetRank");
static_assert(sizeof(WBP_Friend_ListTop_C_GetRank) == 0x000008, "Wrong size on WBP_Friend_ListTop_C_GetRank");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRank, InRateId) == 0x000000, "Member 'WBP_Friend_ListTop_C_GetRank::InRateId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRank, OutRateRank) == 0x000004, "Member 'WBP_Friend_ListTop_C_GetRank::OutRateRank' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRank, RetRank) == 0x000005, "Member 'WBP_Friend_ListTop_C_GetRank::RetRank' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetRank, CallFunc_GetRateToRank_ReturnValue) == 0x000006, "Member 'WBP_Friend_ListTop_C_GetRank::CallFunc_GetRateToRank_ReturnValue' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.GetUseCharacterCounts
// 0x0060 (0x0060 - 0x0000)
struct WBP_Friend_ListTop_C_GetUseCharacterCounts final
{
public:
	TArray<struct FCommon_HistoryData_CharacterUsage> InCharacterUsage;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FUsageCountChara>               OutUsageCountChara;                                // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FUsageCountChara>               RetArrayUsageCountChara;                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCommon_HistoryData_CharacterUsage     CallFunc_Array_Get_Item;                           // 0x0038(0x000C)(NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUsageCountChara                       K2Node_MakeStruct_UsageCountChara;                 // 0x004C(0x0008)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_GetUseCharacterCounts) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_GetUseCharacterCounts");
static_assert(sizeof(WBP_Friend_ListTop_C_GetUseCharacterCounts) == 0x000060, "Wrong size on WBP_Friend_ListTop_C_GetUseCharacterCounts");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, InCharacterUsage) == 0x000000, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::InCharacterUsage' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, OutUsageCountChara) == 0x000010, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::OutUsageCountChara' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, RetArrayUsageCountChara) == 0x000020, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::RetArrayUsageCountChara' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_Conv_IntToByte_ReturnValue) == 0x000044, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_GetValidValue_ReturnValue) == 0x000045, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, K2Node_MakeStruct_UsageCountChara) == 0x00004C, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::K2Node_MakeStruct_UsageCountChara' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseCharacterCounts, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_Friend_ListTop_C_GetUseCharacterCounts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.GetUseMachineTypeCounts
// 0x0050 (0x0050 - 0x0000)
struct WBP_Friend_ListTop_C_GetUseMachineTypeCounts final
{
public:
	TArray<struct FCommon_HistoryData_MachineTypeUsage> InMachineTypeUsages;                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 OutUsedMachineCount;                               // 0x0010(0x0010)(Parm, OutParm)
	TArray<int32>                                 RetArrayUsedMachineCount;                          // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCommon_HistoryData_MachineTypeUsage   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_GetUseMachineTypeCounts");
static_assert(sizeof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts) == 0x000050, "Wrong size on WBP_Friend_ListTop_C_GetUseMachineTypeCounts");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, InMachineTypeUsages) == 0x000000, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::InMachineTypeUsages' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, OutUsedMachineCount) == 0x000010, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::OutUsedMachineCount' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, RetArrayUsedMachineCount) == 0x000020, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::RetArrayUsedMachineCount' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_GetUseMachineTypeCounts, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_Friend_ListTop_C_GetUseMachineTypeCounts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnFairPlayPointDisplayStart
// 0x0018 (0x0018 - 0x0000)
struct WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart final
{
public:
	int32                                         InFairPlayPoint;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInBan;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InPenaltyEndTime;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart");
static_assert(sizeof(WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart) == 0x000018, "Wrong size on WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart, InFairPlayPoint) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart::InFairPlayPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart, bInBan) == 0x000004, "Member 'WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart::bInBan' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart, InPenaltyEndTime) == 0x000008, "Member 'WBP_Friend_ListTop_C_OnFairPlayPointDisplayStart::InPenaltyEndTime' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnFocusReceived
// 0x01C0 (0x01C0 - 0x0000)
struct WBP_Friend_ListTop_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x00F8(0x00B8)()
	int32                                         CallFunc_GetUserIndexByFocusEvent_ReturnValue;     // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnFocusReceived");
static_assert(sizeof(WBP_Friend_ListTop_C_OnFocusReceived) == 0x0001C0, "Wrong size on WBP_Friend_ListTop_C_OnFocusReceived");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_Friend_ListTop_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_Friend_ListTop_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFocusReceived, K2Node_MakeStruct_EventReply) == 0x0000F8, "Member 'WBP_Friend_ListTop_C_OnFocusReceived::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFocusReceived, CallFunc_GetUserIndexByFocusEvent_ReturnValue) == 0x0001B0, "Member 'WBP_Friend_ListTop_C_OnFocusReceived::CallFunc_GetUserIndexByFocusEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnFocusReceived, CallFunc_GetPlayerController_ReturnValue) == 0x0001B8, "Member 'WBP_Friend_ListTop_C_OnFocusReceived::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnJoinLobbyByLobbyIdSearch
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch final
{
public:
	struct FLobbyId                               TargetLobbyId;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch");
static_assert(sizeof(WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch");
static_assert(offsetof(WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch, TargetLobbyId) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnJoinLobbyByLobbyIdSearch::TargetLobbyId' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnLobbyIdSearchComplete
// 0x0030 (0x0030 - 0x0000)
struct WBP_Friend_ListTop_C_OnLobbyIdSearchComplete final
{
public:
	bool                                          bInSuccessful;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLobbyId>                       InLobbyId;                                         // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 InOwnerUserId;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ELobbyType                                    InLobbyType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnLobbyIdSearchComplete) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnLobbyIdSearchComplete");
static_assert(sizeof(WBP_Friend_ListTop_C_OnLobbyIdSearchComplete) == 0x000030, "Wrong size on WBP_Friend_ListTop_C_OnLobbyIdSearchComplete");
static_assert(offsetof(WBP_Friend_ListTop_C_OnLobbyIdSearchComplete, bInSuccessful) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnLobbyIdSearchComplete::bInSuccessful' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnLobbyIdSearchComplete, InLobbyId) == 0x000008, "Member 'WBP_Friend_ListTop_C_OnLobbyIdSearchComplete::InLobbyId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnLobbyIdSearchComplete, InOwnerUserId) == 0x000018, "Member 'WBP_Friend_ListTop_C_OnLobbyIdSearchComplete::InOwnerUserId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnLobbyIdSearchComplete, InLobbyType) == 0x000028, "Member 'WBP_Friend_ListTop_C_OnLobbyIdSearchComplete::InLobbyType' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnLobbyInvitationComplete
// 0x0070 (0x0070 - 0x0000)
struct WBP_Friend_ListTop_C_OnLobbyInvitationComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyOperationResult                  Result;                                            // 0x0008(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnLobbyInvitationComplete) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnLobbyInvitationComplete");
static_assert(sizeof(WBP_Friend_ListTop_C_OnLobbyInvitationComplete) == 0x000070, "Wrong size on WBP_Friend_ListTop_C_OnLobbyInvitationComplete");
static_assert(offsetof(WBP_Friend_ListTop_C_OnLobbyInvitationComplete, bSuccess) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnLobbyInvitationComplete::bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnLobbyInvitationComplete, Result) == 0x000008, "Member 'WBP_Friend_ListTop_C_OnLobbyInvitationComplete::Result' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnMainWidgetDisplayEnd
// 0x0001 (0x0001 - 0x0000)
struct WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd final
{
public:
	bool                                          PlayCloseSound;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd");
static_assert(sizeof(WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd) == 0x000001, "Wrong size on WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd");
static_assert(offsetof(WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd, PlayCloseSound) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnMainWidgetDisplayEnd::PlayCloseSound' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnMainWidgetLobbyIdSearch
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch final
{
public:
	class FString                                 TargetShortLobbyId;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch");
static_assert(sizeof(WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch");
static_assert(offsetof(WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch, TargetShortLobbyId) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnMainWidgetLobbyIdSearch::TargetShortLobbyId' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnMainWidgetLobbyInvitationAccept
// 0x0008 (0x0008 - 0x0000)
struct WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept final
{
public:
	class ULobbyJoinInfo*                         TargetLobbyJoinInfo;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept");
static_assert(sizeof(WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept) == 0x000008, "Wrong size on WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept");
static_assert(offsetof(WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept, TargetLobbyJoinInfo) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationAccept::TargetLobbyJoinInfo' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnMainWidgetLobbyInvitationDecide
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide final
{
public:
	class FString                                 TargetUserId;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide");
static_assert(sizeof(WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide");
static_assert(offsetof(WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide, TargetUserId) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnMainWidgetLobbyInvitationDecide::TargetUserId' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnPlayerIconListCancel
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_OnPlayerIconListCancel final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PanelIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnPlayerIconListCancel) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnPlayerIconListCancel");
static_assert(sizeof(WBP_Friend_ListTop_C_OnPlayerIconListCancel) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_OnPlayerIconListCancel");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconListCancel, Button) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnPlayerIconListCancel::Button' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconListCancel, PanelIndex) == 0x000008, "Member 'WBP_Friend_ListTop_C_OnPlayerIconListCancel::PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconListCancel, ButtonIndex) == 0x00000C, "Member 'WBP_Friend_ListTop_C_OnPlayerIconListCancel::ButtonIndex' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnPlayerIconListDecisionDown
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PanelIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown");
static_assert(sizeof(WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown, Button) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown::Button' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown, PanelIndex) == 0x000008, "Member 'WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown::PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown, ButtonIndex) == 0x00000C, "Member 'WBP_Friend_ListTop_C_OnPlayerIconListDecisionDown::ButtonIndex' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnPlayerIconSelectStart
// 0x000C (0x000C - 0x0000)
struct WBP_Friend_ListTop_C_OnPlayerIconSelectStart final
{
public:
	int32                                         InIconId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBgColorId;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInIconSelect;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnPlayerIconSelectStart) == 0x000004, "Wrong alignment on WBP_Friend_ListTop_C_OnPlayerIconSelectStart");
static_assert(sizeof(WBP_Friend_ListTop_C_OnPlayerIconSelectStart) == 0x00000C, "Wrong size on WBP_Friend_ListTop_C_OnPlayerIconSelectStart");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconSelectStart, InIconId) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnPlayerIconSelectStart::InIconId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconSelectStart, InBgColorId) == 0x000004, "Member 'WBP_Friend_ListTop_C_OnPlayerIconSelectStart::InBgColorId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_OnPlayerIconSelectStart, bInIconSelect) == 0x000008, "Member 'WBP_Friend_ListTop_C_OnPlayerIconSelectStart::bInIconSelect' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.OnRacerInfoDisplayStart
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Friend_ListTop_C_OnRacerInfoDisplayStart final
{
public:
	struct FFriendListPlayerInfo                  InListPlayerInfo;                                  // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Friend_ListTop_C_OnRacerInfoDisplayStart) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_OnRacerInfoDisplayStart");
static_assert(sizeof(WBP_Friend_ListTop_C_OnRacerInfoDisplayStart) == 0x0000E8, "Wrong size on WBP_Friend_ListTop_C_OnRacerInfoDisplayStart");
static_assert(offsetof(WBP_Friend_ListTop_C_OnRacerInfoDisplayStart, InListPlayerInfo) == 0x000000, "Member 'WBP_Friend_ListTop_C_OnRacerInfoDisplayStart::InListPlayerInfo' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.RacerInfoEnd
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_RacerInfoEnd final
{
public:
	class UUnionUIButtonBase*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PanelIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_RacerInfoEnd) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_RacerInfoEnd");
static_assert(sizeof(WBP_Friend_ListTop_C_RacerInfoEnd) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_RacerInfoEnd");
static_assert(offsetof(WBP_Friend_ListTop_C_RacerInfoEnd, Button) == 0x000000, "Member 'WBP_Friend_ListTop_C_RacerInfoEnd::Button' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_RacerInfoEnd, PanelIndex) == 0x000008, "Member 'WBP_Friend_ListTop_C_RacerInfoEnd::PanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_RacerInfoEnd, ButtonIndex) == 0x00000C, "Member 'WBP_Friend_ListTop_C_RacerInfoEnd::ButtonIndex' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetDebugListDisplay
// 0x0001 (0x0001 - 0x0000)
struct WBP_Friend_ListTop_C_SetDebugListDisplay final
{
public:
	bool                                          bInEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetDebugListDisplay) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_SetDebugListDisplay");
static_assert(sizeof(WBP_Friend_ListTop_C_SetDebugListDisplay) == 0x000001, "Wrong size on WBP_Friend_ListTop_C_SetDebugListDisplay");
static_assert(offsetof(WBP_Friend_ListTop_C_SetDebugListDisplay, bInEnable) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetDebugListDisplay::bInEnable' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetFairPlayPointWidgetVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible");
static_assert(sizeof(WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible) == 0x000001, "Wrong size on WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible");
static_assert(offsetof(WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible, bInVisible) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetFairPlayPointWidgetVisible::bInVisible' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetPlayerIconListVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Friend_ListTop_C_SetPlayerIconListVisible final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetPlayerIconListVisible) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_SetPlayerIconListVisible");
static_assert(sizeof(WBP_Friend_ListTop_C_SetPlayerIconListVisible) == 0x000001, "Wrong size on WBP_Friend_ListTop_C_SetPlayerIconListVisible");
static_assert(offsetof(WBP_Friend_ListTop_C_SetPlayerIconListVisible, bInVisible) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetPlayerIconListVisible::bInVisible' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetRacerInfoWidgetVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible) == 0x000001, "Wrong alignment on WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible");
static_assert(sizeof(WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible) == 0x000001, "Wrong size on WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible");
static_assert(offsetof(WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible, bInVisible) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetRacerInfoWidgetVisible::bInVisible' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.Setup
// 0x0010 (0x0010 - 0x0000)
struct WBP_Friend_ListTop_C_Setup final
{
public:
	int32                                         InLocalUserNumber;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFriendListCategory                           InInitialCategory;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InZOrder;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLobbySequence;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLobbyInvitationSendEnable;                      // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLobbyInvitationAcceptEnable;                    // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLobbyInvitationRejectEnable;                    // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_Setup) == 0x000004, "Wrong alignment on WBP_Friend_ListTop_C_Setup");
static_assert(sizeof(WBP_Friend_ListTop_C_Setup) == 0x000010, "Wrong size on WBP_Friend_ListTop_C_Setup");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, InLocalUserNumber) == 0x000000, "Member 'WBP_Friend_ListTop_C_Setup::InLocalUserNumber' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, InInitialCategory) == 0x000004, "Member 'WBP_Friend_ListTop_C_Setup::InInitialCategory' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, InZOrder) == 0x000008, "Member 'WBP_Friend_ListTop_C_Setup::InZOrder' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, bInLobbySequence) == 0x00000C, "Member 'WBP_Friend_ListTop_C_Setup::bInLobbySequence' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, bInLobbyInvitationSendEnable) == 0x00000D, "Member 'WBP_Friend_ListTop_C_Setup::bInLobbyInvitationSendEnable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, bInLobbyInvitationAcceptEnable) == 0x00000E, "Member 'WBP_Friend_ListTop_C_Setup::bInLobbyInvitationAcceptEnable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_Setup, bInLobbyInvitationRejectEnable) == 0x00000F, "Member 'WBP_Friend_ListTop_C_Setup::bInLobbyInvitationRejectEnable' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetupFairPlayPointWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_Friend_ListTop_C_SetupFairPlayPointWidget final
{
public:
	int32                                         InFairPlayPoint;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInBan;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InPenaltyEndTime;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetupFairPlayPointWidget) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_SetupFairPlayPointWidget");
static_assert(sizeof(WBP_Friend_ListTop_C_SetupFairPlayPointWidget) == 0x000018, "Wrong size on WBP_Friend_ListTop_C_SetupFairPlayPointWidget");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupFairPlayPointWidget, InFairPlayPoint) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetupFairPlayPointWidget::InFairPlayPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupFairPlayPointWidget, bInBan) == 0x000004, "Member 'WBP_Friend_ListTop_C_SetupFairPlayPointWidget::bInBan' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupFairPlayPointWidget, InPenaltyEndTime) == 0x000008, "Member 'WBP_Friend_ListTop_C_SetupFairPlayPointWidget::InPenaltyEndTime' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetupPlayerIconList
// 0x000C (0x000C - 0x0000)
struct WBP_Friend_ListTop_C_SetupPlayerIconList final
{
public:
	int32                                         InIconId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBgColorId;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInPlayerIconSelect;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetupPlayerIconList) == 0x000004, "Wrong alignment on WBP_Friend_ListTop_C_SetupPlayerIconList");
static_assert(sizeof(WBP_Friend_ListTop_C_SetupPlayerIconList) == 0x00000C, "Wrong size on WBP_Friend_ListTop_C_SetupPlayerIconList");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupPlayerIconList, InIconId) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetupPlayerIconList::InIconId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupPlayerIconList, InBgColorId) == 0x000004, "Member 'WBP_Friend_ListTop_C_SetupPlayerIconList::InBgColorId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupPlayerIconList, bInPlayerIconSelect) == 0x000008, "Member 'WBP_Friend_ListTop_C_SetupPlayerIconList::bInPlayerIconSelect' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.SetupRacerInfoWidget
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Friend_ListTop_C_SetupRacerInfoWidget final
{
public:
	struct FFriendListPlayerInfo                  InListPlayerInfo;                                  // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Friend_ListTop_C_SetupRacerInfoWidget) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_SetupRacerInfoWidget");
static_assert(sizeof(WBP_Friend_ListTop_C_SetupRacerInfoWidget) == 0x0000E8, "Wrong size on WBP_Friend_ListTop_C_SetupRacerInfoWidget");
static_assert(offsetof(WBP_Friend_ListTop_C_SetupRacerInfoWidget, InListPlayerInfo) == 0x000000, "Member 'WBP_Friend_ListTop_C_SetupRacerInfoWidget::InListPlayerInfo' has a wrong offset!");

// Function WBP_Friend_ListTop.WBP_Friend_ListTop_C.UpdateLobbyIdDisplay
// 0x0018 (0x0018 - 0x0000)
struct WBP_Friend_ListTop_C_UpdateLobbyIdDisplay final
{
public:
	class FString                                 InShortLobbyId;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bInSuccess;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_ListTop_C_UpdateLobbyIdDisplay) == 0x000008, "Wrong alignment on WBP_Friend_ListTop_C_UpdateLobbyIdDisplay");
static_assert(sizeof(WBP_Friend_ListTop_C_UpdateLobbyIdDisplay) == 0x000018, "Wrong size on WBP_Friend_ListTop_C_UpdateLobbyIdDisplay");
static_assert(offsetof(WBP_Friend_ListTop_C_UpdateLobbyIdDisplay, InShortLobbyId) == 0x000000, "Member 'WBP_Friend_ListTop_C_UpdateLobbyIdDisplay::InShortLobbyId' has a wrong offset!");
static_assert(offsetof(WBP_Friend_ListTop_C_UpdateLobbyIdDisplay, bInSuccess) == 0x000010, "Member 'WBP_Friend_ListTop_C_UpdateLobbyIdDisplay::bInSuccess' has a wrong offset!");

}

