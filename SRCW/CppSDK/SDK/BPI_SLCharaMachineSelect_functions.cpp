#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SLCharaMachineSelect

#include "Basic.hpp"

#include "BPI_SLCharaMachineSelect_classes.hpp"
#include "BPI_SLCharaMachineSelect_parameters.hpp"


namespace SDK
{

// Function BPI_SLCharaMachineSelect.BPI_SLCharaMachineSelect_C.GetCameraActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          CameraActor                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_SLCharaMachineSelect_C::GetCameraActor(class AActor** CameraActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SLCharaMachineSelect_C", "GetCameraActor");

	Params::BPI_SLCharaMachineSelect_C_GetCameraActor Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (CameraActor != nullptr)
		*CameraActor = Parms.CameraActor;
}


// Function BPI_SLCharaMachineSelect.BPI_SLCharaMachineSelect_C.GetRacerTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCharaSelect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOption                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform*                      Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SLCharaMachineSelect_C::GetRacerTransform(int32 PlayerIndex, int32 PlayerCount, bool bCharaSelect, bool bOption, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SLCharaMachineSelect_C", "GetRacerTransform");

	Params::BPI_SLCharaMachineSelect_C_GetRacerTransform Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.PlayerCount = PlayerCount;
	Parms.bCharaSelect = bCharaSelect;
	Parms.bOption = bOption;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BPI_SLCharaMachineSelect.BPI_SLCharaMachineSelect_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SLCharaMachineSelect_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SLCharaMachineSelect_C", "Setup");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SLCharaMachineSelect.BPI_SLCharaMachineSelect_C.StartMoveCameraTransformAndParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCharaSelect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNoLerp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SLCharaMachineSelect_C::StartMoveCameraTransformAndParam(bool bCharaSelect, bool bNoLerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SLCharaMachineSelect_C", "StartMoveCameraTransformAndParam");

	Params::BPI_SLCharaMachineSelect_C_StartMoveCameraTransformAndParam Parms{};

	Parms.bCharaSelect = bCharaSelect;
	Parms.bNoLerp = bNoLerp;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

