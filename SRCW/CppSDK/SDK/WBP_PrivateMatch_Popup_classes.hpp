#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PrivateMatch_Popup

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PrivateMatch_Popup.WBP_PrivateMatch_Popup_C
// 0x0060 (0x0480 - 0x0420)
class UWBP_PrivateMatch_Popup_C final : public UPrivateMatchPopup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Popup_Out;                                         // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Popup_Loop;                                        // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Popup_In;                                          // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Line_01;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Line_02;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOutOfContentButton*                    OutOfContentButton;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel;                                             // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PrivateMatch_Popup_Sub_Info_C*     WBP_PrivateMatch_Popup_Sub_Info;                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButtonsPanel*                   SelectLobbyButtonsPanel;                           // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUnionUIButtonsPanel*                   SelectRuleButtonsPanel;                            // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ClearButtonsNavigation();
	void Destruct();
	void ExecuteUbergraph_WBP_PrivateMatch_Popup(int32 EntryPoint);
	void FinishButtonControlDelay();
	void FinishPanelCancelAnimation();
	void FinishPanelDecisionAnimation();
	class UUnionUIButtonBase* GetActiveWidgetButton(int32 ButtonIndex);
	class UUnionUIButtonBase* GetButton(int32 SwitcherIndex, int32 ButtonIndex);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnAcceptKeyReleased();
	void OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnAnimationInFinished();
	void OnAnimationOutFinished();
	void OnBackKeyPressed();
	void OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyReleased();
	void OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyPressed();
	void OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyReleased();
	void OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftPressed();
	void OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftReleased();
	void OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopPressed();
	void OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopReleased();
	void OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnLeftKeyPressed();
	void OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyReleased();
	void OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderPressed();
	void OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderReleased();
	void OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickAxis(const struct FVector2D& Value);
	void OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnLeftStickButtonPressed();
	void OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickButtonReleased();
	void OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnPanelCancel_Impl(class UUnionUIButtonBase* Button, int32 ButtonIndex);
	void OnPanelDecision_Impl(class UUnionUIButtonBase* Button, int32 ButtonIndex);
	void OnRightKeyPressed();
	void OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyReleased();
	void OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderPressed();
	void OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderReleased();
	void OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickAxis(const struct FVector2D& Value);
	void OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnRightStickButtonPressed();
	void OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickButtonReleased();
	void OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialPressed();
	void OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialReleased();
	void OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyPressed();
	void OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyReleased();
	void OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void PanelDicision();
	void PlayPopupAnim(bool bInAnim, bool bGetOutAnimCallback);
	void PlayPopupInAnim();
	void PlayPopupInfoAnim(bool bInAnim);
	void PlayPopupOutAnim(bool bGetOutAnimCallback);
	void SetButtonFocusType(EButtonFocusType ButtonFocusType);
	void SetButtonsInteractableState(class UUnionUIButtonsPanel* Buttons, bool bIsInteractable);
	void SettingGrayOutButton(int32 SwitcherIndex, int32 ButtonIndex);
	void Setup(int32 SwitcherIndex);
	void SetupButtonsPanels();
	void SetupCompletedWindow(bool bJoin);
	void SetupWaitingWindow(bool bJoin);
	void SilentFocusReady(bool bOnce);
	void StartButtonControlDelay();
	void SwitchPopupInfo(int32 SwitcherIndex);
	void UnbindButtonsPanelEvent(class UUnionUIButtonsPanel* ButtonsPanel);
	void UnbindButtonsPanelEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PrivateMatch_Popup_C">();
	}
	static class UWBP_PrivateMatch_Popup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PrivateMatch_Popup_C>();
	}
};
static_assert(alignof(UWBP_PrivateMatch_Popup_C) == 0x000008, "Wrong alignment on UWBP_PrivateMatch_Popup_C");
static_assert(sizeof(UWBP_PrivateMatch_Popup_C) == 0x000480, "Wrong size on UWBP_PrivateMatch_Popup_C");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, UberGraphFrame) == 0x000420, "Member 'UWBP_PrivateMatch_Popup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, Popup_Out) == 0x000428, "Member 'UWBP_PrivateMatch_Popup_C::Popup_Out' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, Popup_Loop) == 0x000430, "Member 'UWBP_PrivateMatch_Popup_C::Popup_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, Popup_In) == 0x000438, "Member 'UWBP_PrivateMatch_Popup_C::Popup_In' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, base) == 0x000440, "Member 'UWBP_PrivateMatch_Popup_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, Base_Line_01) == 0x000448, "Member 'UWBP_PrivateMatch_Popup_C::Base_Line_01' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, Base_Line_02) == 0x000450, "Member 'UWBP_PrivateMatch_Popup_C::Base_Line_02' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, OutOfContentButton) == 0x000458, "Member 'UWBP_PrivateMatch_Popup_C::OutOfContentButton' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, Panel) == 0x000460, "Member 'UWBP_PrivateMatch_Popup_C::Panel' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, WBP_PrivateMatch_Popup_Sub_Info) == 0x000468, "Member 'UWBP_PrivateMatch_Popup_C::WBP_PrivateMatch_Popup_Sub_Info' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, SelectLobbyButtonsPanel) == 0x000470, "Member 'UWBP_PrivateMatch_Popup_C::SelectLobbyButtonsPanel' has a wrong offset!");
static_assert(offsetof(UWBP_PrivateMatch_Popup_C, SelectRuleButtonsPanel) == 0x000478, "Member 'UWBP_PrivateMatch_Popup_C::SelectRuleButtonsPanel' has a wrong offset!");

}

